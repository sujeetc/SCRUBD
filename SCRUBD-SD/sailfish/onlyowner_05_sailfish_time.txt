[INFO] | 2024-09-29 04:09:15 AM | analyzer.onlyowner_05 | Analysis started at: 2024-09-29 04:09:15 AM
[INFO] | 2024-09-29 04:09:15 AM | analyzer.onlyowner_05 | Version constraints: ['^0.5.0']
[INFO] | 2024-09-29 04:09:15 AM | analyzer.onlyowner_05 | solc version: v0.5.0
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Callgraph generation started!
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Callgraph generation finished!
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Interprocedural CFG generation started!
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Interprocedural CFG generation finished!
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Storage dependency graph generation started!
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Storage dependency graph generation finished!
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Value Range Analysis started
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Generating return summary for constructor
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Return summary generated for constructor
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Range graph generated
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Processed function constructor
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Generating return summary for withdraw_not_only_owner
[INFO] | 2024-09-29 04:09:16 AM | analyzer.onlyowner_05 | Return summary generated for withdraw_not_only_owner
Traceback (most recent call last):
  File "contractlint.py", line 100, in analyze_contracts
    generated_vrg = VRG(slither_obj, callgraph, sdg_objects, target_contracts, graph_dir, dump_graph, log)
  File "/root/sailfish/code/static_analysis/analysis/range_graph.py", line 74, in __init__
    self.setup()
  File "/root/sailfish/code/static_analysis/analysis/range_graph.py", line 160, in setup
    self.process_leaf_functions(cfg_obj)
  File "/root/sailfish/code/static_analysis/analysis/range_graph.py", line 246, in process_leaf_functions
    self.generate_range_graph(cfg_obj, parameters, return_values)
  File "/root/sailfish/code/static_analysis/analysis/range_graph.py", line 324, in generate_range_graph
    self.process_statevar_assignment(cfg_obj, parameters, return_values)
  File "/root/sailfish/code/static_analysis/analysis/range_graph.py", line 607, in process_statevar_assignment
    self.collect_conditional_pre_dominators(container_bb, cfg_obj, graph[0], graph[1], parameters)
  File "/root/sailfish/code/static_analysis/analysis/range_graph.py", line 444, in collect_conditional_pre_dominators
    range_node = RangeNode(s_lvar, parent, 'true', '==')
  File "/root/sailfish/code/static_analysis/analysis/range_node.py", line 31, in __init__
    self.setup()
  File "/root/sailfish/code/static_analysis/analysis/range_node.py", line 80, in setup
    left_expression = self.process_value_expressions(self._variable)
  File "/root/sailfish/code/static_analysis/analysis/range_node.py", line 295, in process_value_expressions
    assert real_count_or == right_count_or, "ORed count does not match, debug!"
AssertionError: ORed count does not match, debug!

real	0m1.821s
user	0m4.191s
sys	0m4.151s
