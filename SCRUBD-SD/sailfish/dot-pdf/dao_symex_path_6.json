{
    "file": "dot-pdf.sol",
    "global_structs": [
        {
            "name": "Holder",
            "fields": {
                "unlockTime": [
                    "integer"
                ],
                "balance": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0x6b"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0x6c"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0x6d"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "Acc",
            "type": [
                "array",
                "integer",
                "Holder"
            ],
            "init": []
        },
        {
            "name": "x",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "a",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "b",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "c",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "SimpleDAO",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0x22",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x23",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x24",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x2f",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x30",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x31",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x3c",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x3d",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x3e",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x4a",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x4b",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x4c",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x5b",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x5c",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x5d",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x6b",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x6c",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x6d",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "x",
            "addrs": [
                "0x2",
                "0x3",
                "0x7",
                "0xd",
                "0x14",
                "0x1a",
                "0x21"
            ]
        },
        {
            "name": "b",
            "addrs": [
                "0x2",
                "0x4",
                "0x5",
                "0x8",
                "0x9",
                "0xb",
                "0x11",
                "0x15",
                "0x16",
                "0x1e"
            ]
        },
        {
            "name": "a",
            "addrs": [
                "0x2",
                "0xe",
                "0xf",
                "0x1b",
                "0x1c"
            ]
        },
        {
            "name": "c",
            "addrs": [
                "0x2",
                "0x18"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3",
            "instructions": [
                "TMP_91 = x + 10",
                "x = TMP_91"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x5",
            "instructions": [
                "TMP_93 = b + 1",
                "b = TMP_93"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x7",
            "instructions": [
                "RTMP_95 = b < 10",
                "CONDITION RTMP_95 0x6 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x6",
            "instructions": [
                "TMP_94 = x + 10",
                "x = TMP_94"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb",
            "instructions": [
                "RTMP_99 = b < 10",
                "CONDITION RTMP_99 0xc 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xc",
            "instructions": [
                "RTMP_100 = 1 == 1",
                "CONDITION RTMP_100 0xa 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa",
            "instructions": [
                "TMP_98 = b - 1",
                "b = TMP_98"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xd",
            "instructions": [
                "TMP_101 = x + 10",
                "x = TMP_101"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xf",
            "instructions": [
                "TMP_103 = a + 1",
                "a = TMP_103"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11",
            "instructions": [
                "RTMP_105 = a < 10",
                "CONDITION RTMP_105 0x12 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12",
            "instructions": [
                "TMP_106 = a + b",
                "RTMP_107 = TMP_106 < 10",
                "CONDITION RTMP_107 0x13 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13",
            "instructions": [
                "RTMP_108 = 1 == 1",
                "CONDITION RTMP_108 0x10 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x10",
            "instructions": [
                "TMP_104 = b - 1",
                "b = TMP_104"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14",
            "instructions": [
                "TMP_109 = x + 10",
                "x = TMP_109"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16",
            "instructions": [
                "TMP_111 = b + 1",
                "b = TMP_111"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x18",
            "instructions": [
                "RTMP_113 = b < 10",
                "CONDITION RTMP_113 0x19 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x19",
            "instructions": [
                "RTMP_114 = 1 == 1",
                "CONDITION RTMP_114 0x17 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x17",
            "instructions": [
                "TMP_112 = c - 1",
                "c = TMP_112"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1a",
            "instructions": [
                "TMP_115 = x + 10",
                "x = TMP_115"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1c",
            "instructions": [
                "TMP_117 = a + 1",
                "a = TMP_117"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1e",
            "instructions": [
                "RTMP_119 = a < 10",
                "CONDITION RTMP_119 0x1f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1f",
            "instructions": [
                "TMP_120 = a + b",
                "RTMP_121 = TMP_120 < 10",
                "CONDITION RTMP_121 0x20 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x20",
            "instructions": [
                "RTMP_122 = 1 == 1",
                "CONDITION RTMP_122 0x1d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1d",
            "instructions": [
                "TMP_118 = b - 1",
                "b = TMP_118"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x21",
            "instructions": [
                "TMP_123 = x + 10",
                "x = TMP_123"
            ]
        }
    ],
    "root_addr": "0x6e",
    "dest_addrs": [
        "0x7a"
    ],
    "normal_blocks": [
        {
            "scope": "simple",
            "addr": "0x6e",
            "instructions": [
                "NOP",
                "acc = NEW_VAL Holder",
                "JUMP 0x6f"
            ]
        },
        {
            "scope": "simple",
            "addr": "0x6f",
            "instructions": [
                "CLR_0 = msg.sender",
                "CLR_1 = Acc[CLR_0]",
                "REF_0 = CLR_1",
                "acc = REF_0",
                "CLR_2 = acc.balance",
                "REF_3 = CLR_2",
                "ATTACK",
                "TMP_1 = NEW_VAL boolean",
                "JUMP 0x70"
            ]
        },
        {
            "scope": "non_buggy_multi_call_if_2",
            "addr": "0x70",
            "instructions": [
                "NOP",
                "JUMP 0x71"
            ]
        },
        {
            "scope": "non_buggy_multi_call_if_2",
            "addr": "0x71",
            "instructions": [
                "CLR_3 = this.balance",
                "WRP_0 = CLR_3 - a",
                "this.balance = WRP_0",
                "TMP_49 = NEW_VAL boolean",
                "JUMP 0x72"
            ]
        },
        {
            "scope": "non_buggy_multi_call_if_2",
            "addr": "0x72",
            "instructions": [
                "TMP_50 = b",
                "b = b + 1",
                "TMP_51 = TMP_50 < 10",
                "TMP_52 = TMP_49 && TMP_51",
                "TMP_53 = b",
                "b = b + 1",
                "CLR_4 = this.balance",
                "WRP_1 = CLR_4 - TMP_53",
                "this.balance = WRP_1",
                "TMP_55 = NEW_VAL boolean",
                "JUMP 0x73"
            ]
        },
        {
            "scope": "non_buggy_multi_call_if_2",
            "addr": "0x73",
            "instructions": [
                "TMP_56 = TMP_52 && TMP_55",
                "TMP_57 = 1 == 1",
                "TMP_58 = TMP_56 && TMP_57",
                "CONDITION TMP_58 0x74 0x75"
            ]
        },
        {
            "scope": "non_buggy_multi_call_if_2",
            "addr": "0x74",
            "instructions": [
                "TMP_59 = c",
                "c = c - 1",
                "TMP_60 = TMP_59 < 10",
                "JUMP 0x76"
            ]
        },
        {
            "scope": "non_buggy_multi_call_if_2",
            "addr": "0x75",
            "instructions": [
                "TMP_61 = 0 < 10",
                "JUMP 0x76"
            ]
        },
        {
            "scope": "non_buggy_multi_call_if_2",
            "addr": "0x76",
            "instructions": [
                "NOP",
                "JUMP 0x77"
            ]
        },
        {
            "scope": "non_buggy_multi_call_if_2",
            "addr": "0x77",
            "instructions": [
                "TMP_47 = x + 10",
                "x = TMP_47",
                "JUMP 0x78"
            ]
        },
        {
            "scope": "non_buggy_multi_call_if_2",
            "addr": "0x78",
            "instructions": [
                "NOP",
                "JUMP 0x79"
            ]
        },
        {
            "scope": "simple",
            "addr": "0x79",
            "instructions": [
                "CLR_5 = acc.balance",
                "REF_4 = CLR_5",
                "TMP_2 = REF_4",
                "WRP_2 = REF_4 + 1",
                "acc.balance = WRP_2",
                "TMP_3 = TMP_2 + x",
                "TMP_4 = TMP_3 < 10",
                "TMP_5 = TMP_1 && TMP_4",
                "CONDITION TMP_5 0x7a 0x7b"
            ]
        },
        {
            "scope": "simple",
            "addr": "0x7a",
            "instructions": [
                "TMP_6 = x + 10",
                "x = TMP_6"
            ]
        },
        {
            "scope": "trap",
            "addr": "0x7b",
            "instructions": [
                "NOP"
            ]
        }
    ]
}