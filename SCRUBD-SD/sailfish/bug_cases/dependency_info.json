{
    "bug_cases.sol": [
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 275\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 276\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_if",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "check_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 280\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 280\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 282\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 283\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 39\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 39\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 87\nFunction: slither_31\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_98\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "check_dd_local"
            ],
            "from_function": "check_dd_local",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 165\nFunction: check_dd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_186(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_184 \"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 169\nFunction: check_cd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_193(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_191 \"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 175\nFunction: update_var\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_203\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_1",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "require_wbc_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 286\nFunction: require_wbc_2\nNode: \nEXPRESSION z = z - 10\nIRS: \nz := TMP_20\"",
                        "\"BlockID: 20\nFunction: require_wbc_2\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "z"
                },
                {
                    "path": [
                        "\"BlockID: 289\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 289\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 291\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 292\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 291\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 292\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 293\nFunction: require_wbc_2\nNode: \nEXPRESSION temp = temp - 10\nIRS: \ntemp := TMP_27\"",
                        "\"BlockID: 27\nFunction: require_wbc_2\nNode: \nIF temp < 10\nIRS: \nCONDITION TMP_28\""
                    ],
                    "state_variable": "temp"
                },
                {
                    "path": [
                        "\"BlockID: 295\nFunction: require_wbc_2\nNode: \nIF temp < 10\nIRS: \nCONDITION TMP_28\"",
                        "\"BlockID: 25\nFunction: require_wbc_2\nNode: \nEXPRESSION temp = temp - 10\nIRS: \ntemp := TMP_27\""
                    ],
                    "state_variable": "temp"
                },
                {
                    "path": [
                        "\"BlockID: 296\nFunction: require_wbc_2\nNode: \nEXPRESSION x = x - 10\nIRS: \nx := TMP_29\"",
                        "\"BlockID: 30\nFunction: require_wbc_2\nNode: \nEXPRESSION require(bool)(x < 10)\nIRS: \nTMP_31 = SOLIDITY_CALL require(bool)(TMP_30)\""
                    ],
                    "state_variable": "x"
                },
                {
                    "path": [
                        "\"BlockID: 298\nFunction: require_wbc_2\nNode: \nEXPRESSION require(bool)(x < 10)\nIRS: \nTMP_31 = SOLIDITY_CALL require(bool)(TMP_30)\"",
                        "\"BlockID: 28\nFunction: require_wbc_2\nNode: \nEXPRESSION x = x - 10\nIRS: \nx := TMP_29\""
                    ],
                    "state_variable": "x"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 39\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 39\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 87\nFunction: slither_31\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_98\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 122\nFunction: for_case_1\nNode: \nEXPRESSION z = 0\nIRS: \nz := 0\"",
                        "\"BlockID: 20\nFunction: require_wbc_2\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "z"
                },
                {
                    "path": [
                        "\"BlockID: 126\nFunction: for_case_1\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\"",
                        "\"BlockID: 20\nFunction: require_wbc_2\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "z"
                },
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 129\nFunction: for_case_2\nNode: \nEXPRESSION z = 0\nIRS: \nz := 0\"",
                        "\"BlockID: 20\nFunction: require_wbc_2\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "z"
                },
                {
                    "path": [
                        "\"BlockID: 134\nFunction: for_case_2\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\"",
                        "\"BlockID: 20\nFunction: require_wbc_2\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "z"
                },
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "check_dd_local"
            ],
            "from_function": "check_dd_local",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 165\nFunction: check_dd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_186(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_184 \"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 169\nFunction: check_cd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_193(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_191 \"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 175\nFunction: update_var\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_203\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 194\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\"",
                        "\"BlockID: 20\nFunction: require_wbc_2\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "z"
                },
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 209\nFunction: check_writes_within_call_node\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\"",
                        "\"BlockID: 20\nFunction: require_wbc_2\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "z"
                },
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_2",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "require_wbc_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 300\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 300\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 300\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 303\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 305\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 39\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 39\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 39\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 87\nFunction: slither_31\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_98\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "check_dd_local"
            ],
            "from_function": "check_dd_local",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 165\nFunction: check_dd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_186(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_184 \"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 169\nFunction: check_cd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_193(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_191 \"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 175\nFunction: update_var\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_203\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_3",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "require_wbc_3",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 307\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 307\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 307\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 307\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 310\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 312\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 313\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 313\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 87\nFunction: slither_31\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_98\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "check_dd_local"
            ],
            "from_function": "check_dd_local",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 165\nFunction: check_dd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_186(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_184 \"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 165\nFunction: check_dd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_186(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_184 \"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 169\nFunction: check_cd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_193(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_191 \"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 169\nFunction: check_cd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_193(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_191 \"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 175\nFunction: update_var\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_203\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "require_wbc_4",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "require_wbc_4",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 315\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_2",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 328\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 327\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 247\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_260\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buggy_Collect_2",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "buggy_Collect_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 331\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_222",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "Collect_222",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 353\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 352\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 247\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_260\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_23",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "Collect_23",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 366\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 367\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 247\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_260\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_12",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "Collect_12",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 371\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 372\nFunction: slither_31\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_98\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 372\nFunction: slither_31\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_98\"",
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 175\nFunction: update_var\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_203\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 175\nFunction: update_var\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_203\"",
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_31",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "slither_31",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 378\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "indirect_control_dep_1",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "indirect_control_dep_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 385\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "slither_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 388\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "slither_dd_if",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "slither_dd_if",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 394\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 393\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 395\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 247\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_260\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "test_call",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 400\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 399\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 401\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 247\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_260\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "test_call2",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "test_call2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 20\nFunction: require_wbc_2\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_23\"",
                        "\"BlockID: 126\nFunction: for_case_1\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 416\nFunction: for_case_1\nNode: \nIF_LOOP z < 10\nIRS: \nCONDITION TMP_134\"",
                        "\"BlockID: 126\nFunction: for_case_1\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 132\nFunction: for_case_2\nNode: \nIF_LOOP z < 10\nIRS: \nCONDITION TMP_140\"",
                        "\"BlockID: 126\nFunction: for_case_1\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 239\nFunction: checkWrites_safe\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_255\"",
                        "\"BlockID: 126\nFunction: for_case_1\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_1",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "for_case_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 20\nFunction: require_wbc_2\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_23\"",
                        "\"BlockID: 134\nFunction: for_case_2\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 123\nFunction: for_case_1\nNode: \nIF_LOOP z < 10\nIRS: \nCONDITION TMP_134\"",
                        "\"BlockID: 134\nFunction: for_case_2\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 421\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 426\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 425\nFunction: for_case_2\nNode: \nIF_LOOP z < 10\nIRS: \nCONDITION TMP_140\"",
                        "\"BlockID: 134\nFunction: for_case_2\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 239\nFunction: checkWrites_safe\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_255\"",
                        "\"BlockID: 134\nFunction: for_case_2\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "for_case_2",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "for_case_2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 39\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 39\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 430\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 430\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 429\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 431\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 432\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "check_dd_local"
            ],
            "from_function": "check_dd_local",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 165\nFunction: check_dd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_186(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_184 \"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 169\nFunction: check_cd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_193(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_191 \"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fun_1",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "fun_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "dd_wac_1",
                "dd_wac_1"
            ],
            "from_function": "dd_wac_1",
            "to_function": "dd_wac_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 441\nFunction: dd_wac_1\nNode: \nEXPRESSION msg.sender.call.value(balances_re_ent8[msg.sender])()\nIRS: \nTMP_167(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:REF_91 \"",
                        "\"BlockID: 149\nFunction: dd_wac_1\nNode: \nEXPRESSION balances_re_ent8[msg.sender] = 0\nIRS: \nREF_92 := 0\""
                    ],
                    "state_variable": "balances_re_ent8"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 445\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 447\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 446\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 446\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 247\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_260\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_21_updated",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "Collect_21_updated",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 452\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 451\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 453\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 247\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_260\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Collect_khichdi",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "Collect_khichdi",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 455\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "check_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_dd_local",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "check_dd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 39\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "check_dd_local"
            ],
            "from_function": "check_dd_local",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 463\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 464\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 465\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 465\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_cd_local",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "check_cd_local",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 469\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 471\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "update_var",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 475\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 476\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "update_var2",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "update_var2",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 20\nFunction: require_wbc_2\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_23\"",
                        "\"BlockID: 194\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 123\nFunction: for_case_1\nNode: \nIF_LOOP z < 10\nIRS: \nCONDITION TMP_134\"",
                        "\"BlockID: 194\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 132\nFunction: for_case_2\nNode: \nIF_LOOP z < 10\nIRS: \nCONDITION TMP_140\"",
                        "\"BlockID: 194\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 486\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 482\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 487\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 239\nFunction: checkWrites_safe\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_255\"",
                        "\"BlockID: 194\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 247\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_260\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node_require",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "check_writes_within_call_node_require",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 490\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 489\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 491\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 247\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_260\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_af_call_node",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "check_writes_af_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 20\nFunction: require_wbc_2\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_23\"",
                        "\"BlockID: 209\nFunction: check_writes_within_call_node\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 123\nFunction: for_case_1\nNode: \nIF_LOOP z < 10\nIRS: \nCONDITION TMP_134\"",
                        "\"BlockID: 209\nFunction: check_writes_within_call_node\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 132\nFunction: for_case_2\nNode: \nIF_LOOP z < 10\nIRS: \nCONDITION TMP_140\"",
                        "\"BlockID: 209\nFunction: check_writes_within_call_node\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 498\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 495\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 499\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 239\nFunction: checkWrites_safe\nNode: \nIF z < 10\nIRS: \nCONDITION TMP_255\"",
                        "\"BlockID: 209\nFunction: check_writes_within_call_node\nNode: \nEXPRESSION z ++\nIRS: \nz = z + 1\""
                    ],
                    "state_variable": "z"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 247\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_260\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_writes_within_call_node",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "check_writes_within_call_node",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 503\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 504\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "analyze",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "analyze",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 510\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_unsafe",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "check_control_dep_unsafe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 516\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "check_control_dep_safe",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "check_control_dep_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 522\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 523\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_unsafe_1",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "checkWrites_unsafe_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 39\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 87\nFunction: slither_31\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_98\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "check_dd_local"
            ],
            "from_function": "check_dd_local",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 165\nFunction: check_dd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_186(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_184 \"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 169\nFunction: check_cd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_193(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_191 \"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 175\nFunction: update_var\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_203\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 529\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 535\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 531\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 533\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 533\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 529\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 531\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 535\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "checkWrites_safe",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "checkWrites_safe",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 60\nFunction: buggy_Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_65\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 75\nFunction: Collect_23\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_82\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 81\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 115\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \na = a + 1\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 152\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: Collect_21_updated\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 163\nFunction: check_dd\nNode: \nEXPRESSION a -= _am\nIRS: \na = a - _am\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 199\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 538\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_260\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unsafe_process_require_assert_wbc",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "unsafe_process_require_assert_wbc",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 5\nFunction: check_if\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_3\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 2\nFunction: check_if\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_0\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 12\nFunction: require_wbc_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_12\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 21\nFunction: require_wbc_2\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_24\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 32\nFunction: require_wbc_3\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_32\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: require_wbc_3\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_35\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 39\nFunction: require_wbc_4\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_40\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: require_wbc_4\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_43\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 48\nFunction: Collect_2\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Collect_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_51\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: Collect_2\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_54\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Collect_222\nNode: \nEXPRESSION b ++\nIRS: \nb = b + 1\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: Collect_222\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 69\nFunction: Collect_222\nNode: \nEXPRESSION a = a + 1\nIRS: \na := TMP_71\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 83\nFunction: Collect_12\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_96\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 87\nFunction: slither_31\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_98\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 94\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_105\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_107(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: indirect_control_dep_1\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_109\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "slither_dd"
            ],
            "from_function": "slither_dd",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 101\nFunction: slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_112\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: slither_dd\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_111(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "slither_dd_if"
            ],
            "from_function": "slither_dd_if",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 105\nFunction: slither_dd_if\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_115\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 103\nFunction: slither_dd_if\nNode: \nIF msg.sender.call.value(b)()\nIRS: \nTMP_114(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 111\nFunction: test_call\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_121\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 117\nFunction: test_call2\nNode: \nEXPRESSION b = b + 1\nIRS: \nb := TMP_127\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 125\nFunction: for_case_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_138\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 131\nFunction: for_case_2\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_144\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: for_case_2\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_139\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 137\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nb = b - 1\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 138\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 157\nFunction: Collect_khichdi\nNode: \nEXPRESSION b = b + 10\nIRS: \nb := TMP_175\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \na = a + 1\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "check_dd_local"
            ],
            "from_function": "check_dd_local",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 175\nFunction: update_var\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_203\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 192\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_218(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \na = a - 1\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 201\nFunction: check_writes_af_call_node\nNode: \nEXPRESSION b -= _am\nIRS: \nb = b - _am\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 205\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nTMP_231(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 207\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \na = a + 1\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 216\nFunction: analyze\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_239\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 212\nFunction: analyze\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 220\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_241\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 222\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_243(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: check_control_dep_unsafe\nNode: \nEXPRESSION a = a + 10\nIRS: \na := TMP_244\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 226\nFunction: check_control_dep_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_246\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 235\nFunction: checkWrites_unsafe_1\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_253\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: checkWrites_unsafe_1\nNode: \nIF b < 10\nIRS: \nCONDITION TMP_250\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 248\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_262(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 549\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 257\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 547\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 548\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_275\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 261\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 262\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_1",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "non_buggy_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "b"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "check_if"
            ],
            "from_function": "check_if",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 3\nFunction: check_if\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_2(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: require_wbc_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 33\nFunction: require_wbc_3\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_34(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: require_wbc_4\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_42(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "Collect_2"
            ],
            "from_function": "Collect_2",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 47\nFunction: Collect_2\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_49\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "buggy_Collect_2"
            ],
            "from_function": "buggy_Collect_2",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 59\nFunction: buggy_Collect_2\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_64\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "Collect_222"
            ],
            "from_function": "Collect_222",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Collect_222\nNode: \nIF a < 10\nIRS: \nCONDITION TMP_66\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "Collect_23"
            ],
            "from_function": "Collect_23",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 74\nFunction: Collect_23\nNode: \nIF a < 10 && msg.sender.call.value(_am)()\nIRS: \nCONDITION TMP_81\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "Collect_12"
            ],
            "from_function": "Collect_12",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 82\nFunction: Collect_12\nNode: \nIF a < 10 && msg.sender.call.value(_am)() && a ++ < 10\nIRS: \nCONDITION TMP_95\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 86\nFunction: slither_31\nNode: \nIF a > 50\nIRS: \nCONDITION TMP_97\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 87\nFunction: slither_31\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_98\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "indirect_control_dep_1"
            ],
            "from_function": "indirect_control_dep_1",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 93\nFunction: indirect_control_dep_1\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_104\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "test_call"
            ],
            "from_function": "test_call",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 108\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_117(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 110\nFunction: test_call\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "test_call2"
            ],
            "from_function": "test_call2",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 114\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nTMP_123(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: test_call2\nNode: \nIF msg.sender.call.value(a)() && a ++ < 10\nIRS: \nCONDITION TMP_126\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "for_case_1"
            ],
            "from_function": "for_case_1",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 124\nFunction: for_case_1\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_136(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "for_case_2"
            ],
            "from_function": "for_case_2",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 133\nFunction: for_case_2\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_142(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 136\nFunction: fun_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && b -- < 10\nIRS: \nTMP_147(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "Collect_21_updated"
            ],
            "from_function": "Collect_21_updated",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 153\nFunction: Collect_21_updated\nNode: \nIF a >= MinSum && msg.sender.call.value(_am)() && a ++ >= 20\nIRS: \nCONDITION TMP_174\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "Collect_khichdi"
            ],
            "from_function": "Collect_khichdi",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 158\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_177(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: Collect_khichdi\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_180\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "check_dd"
            ],
            "from_function": "check_dd",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 162\nFunction: check_dd\nNode: \nEXPRESSION msg.sender.call.value(a)()\nIRS: \nTMP_182(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 175\nFunction: update_var\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_203\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "check_writes_within_call_node_require"
            ],
            "from_function": "check_writes_within_call_node_require",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 191\nFunction: check_writes_within_call_node_require\nNode: \nIF a > 20\nIRS: \nCONDITION TMP_216\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: check_writes_within_call_node_require\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)() && a -- >= 5)\nIRS: \nTMP_222 = SOLIDITY_CALL require(bool)(TMP_221)\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "check_writes_af_call_node"
            ],
            "from_function": "check_writes_af_call_node",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 198\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nTMP_225(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: check_writes_af_call_node\nNode: \nIF msg.sender.call.value(a)() && a ++ >= 20\nIRS: \nCONDITION TMP_228\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "check_writes_within_call_node"
            ],
            "from_function": "check_writes_within_call_node",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 204\nFunction: check_writes_within_call_node\nNode: \nIF a >= 20\nIRS: \nCONDITION TMP_229\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: check_writes_within_call_node\nNode: \nIF msg.sender.call.value(b)() && a ++ >= 5\nIRS: \nCONDITION TMP_234\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "analyze"
            ],
            "from_function": "analyze",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 213\nFunction: analyze\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_238(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "check_control_dep_unsafe"
            ],
            "from_function": "check_control_dep_unsafe",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 219\nFunction: check_control_dep_unsafe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 225\nFunction: check_control_dep_safe\nNode: \nIF a > 10\nIRS: \nCONDITION TMP_245\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "checkWrites_unsafe_1"
            ],
            "from_function": "checkWrites_unsafe_1",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: checkWrites_unsafe_1\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_252(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "unsafe_process_require_assert_wbc"
            ],
            "from_function": "unsafe_process_require_assert_wbc",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 249\nFunction: unsafe_process_require_assert_wbc\nNode: \nEXPRESSION require(bool)(a > 50)\nIRS: \nTMP_264 = SOLIDITY_CALL require(bool)(TMP_263)\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: non_buggy_1\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_274(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 552\nFunction: call_within_if_dd\nNode: \nIF b < 10 && msg.sender.call.value(a)()\nIRS: \nTMP_278(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "call_within_if_dd",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "call_within_if_dd",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 266\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nTMP_282(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "a"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "require_wbc_1"
            ],
            "from_function": "require_wbc_1",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 14\nFunction: require_wbc_1\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_15\"",
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: require_wbc_1\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_16\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "require_wbc_2"
            ],
            "from_function": "require_wbc_2",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 23\nFunction: require_wbc_2\nNode: \nEXPRESSION c = b + 5\nIRS: \nc := TMP_25\"",
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: require_wbc_2\nNode: \nIF c < 10\nIRS: \nCONDITION TMP_26\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "require_wbc_3"
            ],
            "from_function": "require_wbc_3",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 35\nFunction: require_wbc_3\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_36\"",
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: require_wbc_3\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_39 = SOLIDITY_CALL require(bool)(TMP_38)\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "require_wbc_4"
            ],
            "from_function": "require_wbc_4",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 42\nFunction: require_wbc_4\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_44\"",
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: require_wbc_4\nNode: \nEXPRESSION c = b - 10\nIRS: \nc := TMP_46\"",
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: require_wbc_4\nNode: \nEXPRESSION require(bool)(clocal < 10)\nIRS: \nTMP_48 = SOLIDITY_CALL require(bool)(TMP_47)\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "slither_31"
            ],
            "from_function": "slither_31",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 87\nFunction: slither_31\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_98\"",
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: slither_31\nNode: \nEXPRESSION msg.sender.call.value(b)()\nIRS: \nTMP_100(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 90\nFunction: slither_31\nNode: \nEXPRESSION a = a + 50\nIRS: \na := TMP_101\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: slither_31\nNode: \nEXPRESSION require(bool)(c > 10)\nIRS: \nTMP_103 = SOLIDITY_CALL require(bool)(TMP_102)\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "fun_1"
            ],
            "from_function": "fun_1",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 139\nFunction: fun_1\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_152\"",
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "check_dd_local"
            ],
            "from_function": "check_dd_local",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 165\nFunction: check_dd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_186(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_184 \"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: check_dd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_187\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: check_dd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_189\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "check_cd_local"
            ],
            "from_function": "check_cd_local",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 169\nFunction: check_cd_local\nNode: \nEXPRESSION msg.sender.call.value(alocal + blocal + c)()\nIRS: \nTMP_193(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_191 \"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: check_cd_local\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_194\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: check_cd_local\nNode: \nEXPRESSION b = alocal + blocal\nIRS: \nb := TMP_196\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: check_cd_local\nNode: \nIF alocal < 10\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "update_var"
            ],
            "from_function": "update_var",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 175\nFunction: update_var\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_203\"",
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: update_var\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_205 = SOLIDITY_CALL require(bool)(TMP_204)\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "update_var2"
            ],
            "from_function": "update_var2",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 182\nFunction: update_var2\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_209\"",
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: update_var2\nNode: \nEXPRESSION b = c + 10\nIRS: \nb := TMP_208\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: update_var2\nNode: \nEXPRESSION require(bool)(b == c)\nIRS: \nTMP_211 = SOLIDITY_CALL require(bool)(TMP_210)\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: mod_slither_dd\nNode: \nEXPRESSION require(bool)(msg.sender.call.value(b)())\nIRS: \nTMP_288(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:b \"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: mod_slither_dd\nNode: \nEXPRESSION b = b + 50\nIRS: \nb := TMP_290\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "check_control_dep_safe"
            ],
            "from_function": "check_control_dep_safe",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 228\nFunction: check_control_dep_safe\nNode: \nEXPRESSION msg.sender.call.value(c)()\nIRS: \nTMP_248(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:c \"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: check_control_dep_safe\nNode: \nEXPRESSION a = a - 10\nIRS: \na := TMP_249\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "checkWrites_safe"
            ],
            "from_function": "checkWrites_safe",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 238\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = b + 10\nIRS: \nc := TMP_254\"",
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: checkWrites_safe\nNode: \nEXPRESSION c = c - 10\nIRS: \nc := TMP_258\"",
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 240\nFunction: checkWrites_safe\nNode: \nIF msg.sender.call.value(a)()\nIRS: \nTMP_257(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:a \"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: checkWrites_safe\nNode: \nEXPRESSION b = b - 10\nIRS: \nb := TMP_259\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "non_buggy_1"
            ],
            "from_function": "non_buggy_1",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 258\nFunction: non_buggy_1\nNode: \nEXPRESSION b = c\nIRS: \nb := c\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "call_within_if_dd"
            ],
            "from_function": "call_within_if_dd",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 263\nFunction: call_within_if_dd\nNode: \nEXPRESSION a = c\nIRS: \na := c\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "non_buggy_call_within_if_1",
                "non_buggy_call_within_if_1"
            ],
            "from_function": "non_buggy_call_within_if_1",
            "to_function": "non_buggy_call_within_if_1",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 559\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\"",
                        "\"BlockID: 267\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\""
                    ],
                    "state_variable": "c"
                },
                {
                    "path": [
                        "\"BlockID: 558\nFunction: non_buggy_call_within_if_1\nNode: \nIF b < 10 && msg.sender.call.value(a)() && c < 10\nIRS: \nCONDITION TMP_285\"",
                        "\"BlockID: 268\nFunction: non_buggy_call_within_if_1\nNode: \nEXPRESSION c = c + 10\nIRS: \nc := TMP_286\""
                    ],
                    "state_variable": "c"
                }
            ]
        }
    ]
}