./bug_cases.sol:6:1: Compiler version 0.4.24 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./bug_cases.sol:9:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:10:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:11:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:12:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:13:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:14:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:15:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:16:5: Function order is incorrect, struct definition can not go after state variable declaration (line 15) [Warning/ordering]
./bug_cases.sol:18:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:19:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:21:5: Main key parameter in mapping Acc is not named [Warning/named-parameters-mapping]
./bug_cases.sol:21:5: Value parameter in mapping Acc is not named [Warning/named-parameters-mapping]
./bug_cases.sol:21:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./bug_cases.sol:22:5: Main key parameter in mapping Bcc is not named [Warning/named-parameters-mapping]
./bug_cases.sol:22:5: Value parameter in mapping Bcc is not named [Warning/named-parameters-mapping]
./bug_cases.sol:22:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./bug_cases.sol:24:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:24:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:24:5: Function check_if() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:27:17: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:27:17: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:31:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:31:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:31:5: Function indirect_control_dep_ref() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:37:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:37:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:38:9: GC: For [ acc ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:41:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:41:1: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:41:1: Function indirect_control_dep_ref2() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:47:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:47:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:48:9: GC: For [ acc ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:51:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:51:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:51:5: Function require_wbc_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:53:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:53:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./bug_cases.sol:55:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:55:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:59:9: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:62:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:62:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:62:5: Function require_wbc_2() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:67:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:67:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:75:9: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:78:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:78:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:78:5: Function require_wbc_3() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:80:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:82:13: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:82:13: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:86:13: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:89:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:89:9: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:89:9: Function require_wbc_4() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:90:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:93:13: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:93:13: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:98:13: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:101:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:101:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:101:5: Function Collect_2() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:101:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:105:13: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:107:13: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:107:13: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:108:9: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:113:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:113:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:113:5: Function buggy_Collect_2_new() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:113:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:116:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:116:36: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:116:36: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:116:68: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:119:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:119:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:119:5: Function buggy_Collect_2() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:119:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:123:20: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:123:20: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:124:13: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:131:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:131:1: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:131:1: Function Collect_222() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:131:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:136:13: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:138:13: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:138:13: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:139:9: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:140:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:140:37: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:140:37: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:140:69: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:145:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:145:1: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:145:1: Function Collect_23() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:145:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:149:24: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:149:24: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:150:17: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:151:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:151:41: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:151:41: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:151:73: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:155:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:155:9: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:155:9: Function Collect_12() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:155:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:158:24: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:158:24: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:158:56: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:159:17: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:162:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:162:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:162:5: Function slither_31() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:169:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:169:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:171:9: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:174:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:174:9: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:174:9: Function indirect_control_dep_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:179:11: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:179:19: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:179:19: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:183:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:183:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:183:5: Function slither_dd() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:184:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:184:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:188:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:188:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:188:5: Function slither_dd_if() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:189:13: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:189:13: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:193:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:193:9: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:193:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:193:28: Variable "_am" is unused [Warning/no-unused-vars]
./bug_cases.sol:196:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:196:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:196:46: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:197:17: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:203:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:203:9: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:203:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:207:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:207:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:207:46: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:208:17: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:209:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:209:41: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:209:41: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:209:73: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:215:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:215:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:215:5: Function for_case_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:217:27: GC: For [ z ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:218:17: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:218:17: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:222:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:222:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:222:5: Function for_case_2() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:225:27: GC: For [ z ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:226:17: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:226:17: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:230:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:230:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:230:5: Function fun_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:231:21: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:231:21: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:231:51: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:236:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:236:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./bug_cases.sol:238:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:238:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:238:5: Function Collect_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:238:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:241:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:241:36: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:241:36: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:241:76: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./bug_cases.sol:245:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:245:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:245:5: Function Collect_21() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:245:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:249:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:249:37: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:249:37: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:249:69: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:249:69: GC: For [ acc ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:253:5: Main key parameter in mapping balances_re_ent8 is not named [Warning/named-parameters-mapping]
./bug_cases.sol:253:5: Value parameter in mapping balances_re_ent8 is not named [Warning/named-parameters-mapping]
./bug_cases.sol:253:5: Explicitly mark visibility of state [Warning/state-visibility]
./bug_cases.sol:253:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:253:5: 'balances_re_ent8' should start with _ [Warning/private-vars-leading-underscore]
./bug_cases.sol:253:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./bug_cases.sol:254:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:254:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:254:5: Function dd_wac_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:257:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:257:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:260:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:260:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:260:5: Function Collect_21_updated() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:260:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:263:9: Variable "acc" is unused [Warning/no-unused-vars]
./bug_cases.sol:264:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:264:27: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:264:27: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:264:59: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:264:59: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:268:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:268:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:268:5: Function Collect_khichdi() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:268:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:273:12: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:273:12: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:273:42: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:273:42: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:277:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:277:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:277:5: Function check_dd() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:277:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:279:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:279:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:283:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:283:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:283:5: Function check_dd_local() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:283:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:283:29: Variable "_am" is unused [Warning/no-unused-vars]
./bug_cases.sol:285:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:286:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:287:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:287:9: Variable "clocal" is unused [Warning/no-unused-vars]
./bug_cases.sol:288:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:288:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:296:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:296:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:296:5: Function check_cd_local() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:296:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:296:29: Variable "_am" is unused [Warning/no-unused-vars]
./bug_cases.sol:298:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:299:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:300:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:301:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:301:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:313:5: Modifier name must be in mixedCase [Warning/modifier-name-mixedcase]
./bug_cases.sol:315:9: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:315:17: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:315:17: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:319:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:319:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:319:5: Function update_var() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:322:6: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:325:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:325:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:325:5: Function update_var2() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:328:2: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:331:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:332:9: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:335:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:335:2: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:335:2: Function check_writes_within_call_node_require() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:335:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:335:49: Variable "_am" is unused [Warning/no-unused-vars]
./bug_cases.sol:338:2: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:338:10: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:338:10: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:338:40: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:338:40: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:339:2: GC: For [ z ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:342:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:342:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:342:5: Function check_writes_af_call_node() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:342:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:345:12: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:345:12: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:345:42: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:345:42: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:349:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:349:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:349:5: Function check_writes_within_call_node() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:349:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:349:44: Variable "_am" is unused [Warning/no-unused-vars]
./bug_cases.sol:352:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:353:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:353:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:353:46: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:353:46: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:355:17: GC: For [ z ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:358:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:358:5: Function analyze() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:362:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:362:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:366:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:366:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:366:5: Function check_control_dep_unsafe() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:370:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:370:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:374:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:374:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:374:5: Function check_control_dep_safe() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:377:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:377:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:381:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:381:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:381:5: Function checkWrites_unsafe_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:383:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:383:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:387:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:387:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:387:5: Function checkWrites_safe() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:390:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:390:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:395:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:395:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:395:5: Function unsafe_process_require_assert_wbc() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:395:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:398:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:398:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:399:9: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:403:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:403:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:403:5: Function CollectReal() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:403:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:408:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:408:37: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:408:59: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./bug_cases.sol:411:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:411:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:418:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:418:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:418:5: Function non_buggy_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:419:20: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:419:20: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:425:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:425:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:425:5: Function call_within_if_dd() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:426:20: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:426:20: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:432:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:432:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:432:5: Function non_buggy_call_within_if_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:433:20: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:433:20: Avoid to use ".call.value()()" [Warning/avoid-call-value]

349 problem/s (1 error/s, 348 warning/s)
./bug_cases.sol:6:1: Compiler version 0.4.24 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./bug_cases.sol:9:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:10:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:11:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:12:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:13:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:14:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:15:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:16:5: Function order is incorrect, struct definition can not go after state variable declaration (line 15) [Warning/ordering]
./bug_cases.sol:18:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:19:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:21:5: Main key parameter in mapping Acc is not named [Warning/named-parameters-mapping]
./bug_cases.sol:21:5: Value parameter in mapping Acc is not named [Warning/named-parameters-mapping]
./bug_cases.sol:21:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./bug_cases.sol:22:5: Main key parameter in mapping Bcc is not named [Warning/named-parameters-mapping]
./bug_cases.sol:22:5: Value parameter in mapping Bcc is not named [Warning/named-parameters-mapping]
./bug_cases.sol:22:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./bug_cases.sol:24:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:24:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:24:5: Function check_if() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:27:17: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:27:17: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:31:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:31:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:31:5: Function indirect_control_dep_ref() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:37:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:37:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:38:9: GC: For [ acc ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:41:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:41:1: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:41:1: Function indirect_control_dep_ref2() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:47:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:47:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:48:9: GC: For [ acc ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:51:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:51:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:51:5: Function require_wbc_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:53:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:53:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./bug_cases.sol:55:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:55:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:59:9: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:62:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:62:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:62:5: Function require_wbc_2() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:67:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:67:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:75:9: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:78:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:78:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:78:5: Function require_wbc_3() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:80:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:82:13: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:82:13: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:86:13: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:89:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:89:9: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:89:9: Function require_wbc_4() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:90:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:93:13: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:93:13: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:98:13: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:101:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:101:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:101:5: Function Collect_2() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:101:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:105:13: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:107:13: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:107:13: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:108:9: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:113:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:113:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:113:5: Function buggy_Collect_2_new() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:113:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:116:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:116:36: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:116:36: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:116:68: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:119:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:119:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:119:5: Function buggy_Collect_2() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:119:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:123:20: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:123:20: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:124:13: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:131:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:131:1: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:131:1: Function Collect_222() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:131:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:136:13: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:138:13: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:138:13: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:139:9: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:140:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:140:37: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:140:37: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:140:69: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:145:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:145:1: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:145:1: Function Collect_23() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:145:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:149:24: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:149:24: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:150:17: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:151:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:151:41: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:151:41: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:151:73: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:155:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:155:9: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:155:9: Function Collect_12() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:155:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:158:24: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:158:24: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:158:56: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:159:17: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:162:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:162:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:162:5: Function slither_31() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:169:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:169:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:171:9: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:174:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:174:9: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:174:9: Function indirect_control_dep_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:179:11: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:179:19: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:179:19: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:183:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:183:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:183:5: Function slither_dd() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:184:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:184:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:188:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:188:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:188:5: Function slither_dd_if() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:189:13: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:189:13: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:193:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:193:9: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:193:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:193:28: Variable "_am" is unused [Warning/no-unused-vars]
./bug_cases.sol:196:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:196:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:196:46: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:197:17: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:203:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:203:9: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:203:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:207:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:207:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:207:46: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:208:17: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:209:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:209:41: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:209:41: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:209:73: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:215:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:215:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:215:5: Function for_case_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:217:27: GC: For [ z ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:218:17: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:218:17: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:222:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:222:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:222:5: Function for_case_2() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:225:27: GC: For [ z ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:226:17: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:226:17: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:230:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:230:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:230:5: Function fun_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:231:21: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:231:21: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:231:51: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:236:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:236:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./bug_cases.sol:238:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:238:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:238:5: Function Collect_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:238:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:241:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:241:36: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:241:36: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:241:76: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./bug_cases.sol:245:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:245:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:245:5: Function Collect_21() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:245:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:249:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:249:37: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:249:37: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:249:69: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:249:69: GC: For [ acc ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:253:5: Main key parameter in mapping balances_re_ent8 is not named [Warning/named-parameters-mapping]
./bug_cases.sol:253:5: Value parameter in mapping balances_re_ent8 is not named [Warning/named-parameters-mapping]
./bug_cases.sol:253:5: Explicitly mark visibility of state [Warning/state-visibility]
./bug_cases.sol:253:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:253:5: 'balances_re_ent8' should start with _ [Warning/private-vars-leading-underscore]
./bug_cases.sol:253:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./bug_cases.sol:254:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:254:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:254:5: Function dd_wac_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:257:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:257:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:260:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:260:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:260:5: Function Collect_21_updated() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:260:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:263:9: Variable "acc" is unused [Warning/no-unused-vars]
./bug_cases.sol:264:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:264:27: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:264:27: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:264:59: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:264:59: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:268:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:268:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:268:5: Function Collect_khichdi() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:268:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:273:12: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:273:12: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:273:42: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:273:42: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:277:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:277:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:277:5: Function check_dd() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:277:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:279:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:279:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:283:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:283:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:283:5: Function check_dd_local() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:283:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:283:29: Variable "_am" is unused [Warning/no-unused-vars]
./bug_cases.sol:285:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:286:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:287:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:287:9: Variable "clocal" is unused [Warning/no-unused-vars]
./bug_cases.sol:288:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:288:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:296:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:296:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:296:5: Function check_cd_local() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:296:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:296:29: Variable "_am" is unused [Warning/no-unused-vars]
./bug_cases.sol:298:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:299:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:300:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:301:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:301:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:313:5: Modifier name must be in mixedCase [Warning/modifier-name-mixedcase]
./bug_cases.sol:315:9: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:315:17: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:315:17: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:319:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:319:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:319:5: Function update_var() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:322:6: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:325:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:325:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:325:5: Function update_var2() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:328:2: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:331:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:332:9: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:335:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:335:2: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:335:2: Function check_writes_within_call_node_require() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:335:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:335:49: Variable "_am" is unused [Warning/no-unused-vars]
./bug_cases.sol:338:2: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:338:10: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:338:10: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:338:40: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:338:40: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:339:2: GC: For [ z ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:342:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:342:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:342:5: Function check_writes_af_call_node() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:342:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:345:12: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:345:12: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:345:42: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:345:42: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:349:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:349:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:349:5: Function check_writes_within_call_node() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:349:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:349:44: Variable "_am" is unused [Warning/no-unused-vars]
./bug_cases.sol:352:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:353:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:353:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:353:46: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:353:46: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:355:17: GC: For [ z ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./bug_cases.sol:358:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:358:5: Function analyze() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:362:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:362:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:366:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:366:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:366:5: Function check_control_dep_unsafe() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:370:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:370:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:374:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:374:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:374:5: Function check_control_dep_safe() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:377:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:377:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:381:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:381:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:381:5: Function checkWrites_unsafe_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:383:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:383:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:387:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:387:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:387:5: Function checkWrites_safe() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:390:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:390:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:395:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:395:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:395:5: Function unsafe_process_require_assert_wbc() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:395:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:398:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:398:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:399:9: Provide an error message for require [Warning/reason-string]
./bug_cases.sol:403:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:403:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:403:5: Function CollectReal() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:403:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./bug_cases.sol:408:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:408:37: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./bug_cases.sol:408:59: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./bug_cases.sol:411:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:411:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:418:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:418:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:418:5: Function non_buggy_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:419:20: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:419:20: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:425:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:425:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:425:5: Function call_within_if_dd() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:426:20: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:426:20: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./bug_cases.sol:432:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./bug_cases.sol:432:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./bug_cases.sol:432:5: Function non_buggy_call_within_if_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./bug_cases.sol:433:20: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./bug_cases.sol:433:20: Avoid to use ".call.value()()" [Warning/avoid-call-value]

349 problem/s (1 error/s, 348 warning/s)
