'solc --version' running
'solc ./dot-pdf.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/manual_dataset' running
Compilation warnings/errors on ./dot-pdf.sol:
./dot-pdf.sol:17:5: Warning: Use of the "var" keyword is deprecated.
    var acc = Acc[msg.sender];
    ^-----^
./dot-pdf.sol:56:9: Warning: Use of the "var" keyword is deprecated.
        var acc = Acc[msg.sender];
        ^-----^


SimpleDAO.non_buggy_multi_call_if_1() (dot-pdf.sol#22-26) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() (dot-pdf.sol#24)
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() (dot-pdf.sol#24)
SimpleDAO.buggy_multi_call_if_2() (dot-pdf.sol#28-32) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() && 1 == 1 (dot-pdf.sol#30)
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() && 1 == 1 (dot-pdf.sol#30)
SimpleDAO.buggy_multi_call_if_3() (dot-pdf.sol#34-38) sends eth to arbitrary user
	Dangerous calls:
	- a ++ < 10 && msg.sender.call.value(b)() && a ++ + b < 10 && 1 == 1 (dot-pdf.sol#36)
SimpleDAO.non_buggy_multi_call_if_2() (dot-pdf.sol#40-44) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() && 1 == 1 (dot-pdf.sol#42)
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() && 1 == 1 (dot-pdf.sol#42)
SimpleDAO.non_buggy_multi_call_if_3() (dot-pdf.sol#46-50) sends eth to arbitrary user
	Dangerous calls:
	- a ++ < 10 && msg.sender.call.value(c)() && a ++ + b < 10 && 1 == 1 (dot-pdf.sol#48)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Reentrancy in SimpleDAO.buggy_multi_call_if_2() (dot-pdf.sol#28-32):
	External calls:
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() && 1 == 1 (dot-pdf.sol#30)
	State variables written after the call(s):
	- b -- < 10 (dot-pdf.sol#30)
	SimpleDAO.b (dot-pdf.sol#12) can be used in cross function reentrancies:
	- SimpleDAO.b (dot-pdf.sol#12)
	- SimpleDAO.buggy_multi_call_if_2() (dot-pdf.sol#28-32)
	- SimpleDAO.buggy_multi_call_if_3() (dot-pdf.sol#34-38)
	- SimpleDAO.non_buggy_multi_call_if_1() (dot-pdf.sol#22-26)
	- SimpleDAO.non_buggy_multi_call_if_2() (dot-pdf.sol#40-44)
	- SimpleDAO.non_buggy_multi_call_if_3() (dot-pdf.sol#46-50)
Reentrancy in SimpleDAO.buggy_multi_call_if_3() (dot-pdf.sol#34-38):
	External calls:
	- a ++ < 10 && msg.sender.call.value(b)() && a ++ + b < 10 && 1 == 1 (dot-pdf.sol#36)
	State variables written after the call(s):
	- b -- < 10 (dot-pdf.sol#36)
	SimpleDAO.b (dot-pdf.sol#12) can be used in cross function reentrancies:
	- SimpleDAO.b (dot-pdf.sol#12)
	- SimpleDAO.buggy_multi_call_if_2() (dot-pdf.sol#28-32)
	- SimpleDAO.buggy_multi_call_if_3() (dot-pdf.sol#34-38)
	- SimpleDAO.non_buggy_multi_call_if_1() (dot-pdf.sol#22-26)
	- SimpleDAO.non_buggy_multi_call_if_2() (dot-pdf.sol#40-44)
	- SimpleDAO.non_buggy_multi_call_if_3() (dot-pdf.sol#46-50)
Reentrancy in SimpleDAO.non_buggy_multi_call_if_3() (dot-pdf.sol#46-50):
	External calls:
	- a ++ < 10 && msg.sender.call.value(c)() && a ++ + b < 10 && 1 == 1 (dot-pdf.sol#48)
	State variables written after the call(s):
	- b -- < 10 (dot-pdf.sol#48)
	SimpleDAO.b (dot-pdf.sol#12) can be used in cross function reentrancies:
	- SimpleDAO.b (dot-pdf.sol#12)
	- SimpleDAO.buggy_multi_call_if_2() (dot-pdf.sol#28-32)
	- SimpleDAO.buggy_multi_call_if_3() (dot-pdf.sol#34-38)
	- SimpleDAO.non_buggy_multi_call_if_1() (dot-pdf.sol#22-26)
	- SimpleDAO.non_buggy_multi_call_if_2() (dot-pdf.sol#40-44)
	- SimpleDAO.non_buggy_multi_call_if_3() (dot-pdf.sol#46-50)
Reentrancy in SimpleDAO.simple() (dot-pdf.sol#15-20):
	External calls:
	- msg.sender.call.value(acc.balance)() && acc.balance ++ + x < 10 (dot-pdf.sol#18)
	State variables written after the call(s):
	- x = x + 10 (dot-pdf.sol#19)
	SimpleDAO.x (dot-pdf.sol#10) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_call_if_2() (dot-pdf.sol#28-32)
	- SimpleDAO.buggy_multi_call_if_3() (dot-pdf.sol#34-38)
	- SimpleDAO.buggy_simple_require() (dot-pdf.sol#53-58)
	- SimpleDAO.non_buggy_multi_call_if_1() (dot-pdf.sol#22-26)
	- SimpleDAO.non_buggy_multi_call_if_2() (dot-pdf.sol#40-44)
	- SimpleDAO.non_buggy_multi_call_if_3() (dot-pdf.sol#46-50)
	- SimpleDAO.simple() (dot-pdf.sol#15-20)
	- SimpleDAO.x (dot-pdf.sol#10)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

SimpleDAO.buggy_multi_call_if_2() (dot-pdf.sol#28-32) compares a variable to itself:
	msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() && 1 == 1 (dot-pdf.sol#30)
SimpleDAO.non_buggy_multi_call_if_3() (dot-pdf.sol#46-50) compares a variable to itself:
	a ++ < 10 && msg.sender.call.value(c)() && a ++ + b < 10 && 1 == 1 (dot-pdf.sol#48)
SimpleDAO.non_buggy_multi_call_if_2() (dot-pdf.sol#40-44) compares a variable to itself:
	msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() && 1 == 1 (dot-pdf.sol#42)
SimpleDAO.buggy_multi_call_if_3() (dot-pdf.sol#34-38) compares a variable to itself:
	a ++ < 10 && msg.sender.call.value(b)() && a ++ + b < 10 && 1 == 1 (dot-pdf.sol#36)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautological-compare

Reentrancy in SimpleDAO.buggy_multi_call_if_2() (dot-pdf.sol#28-32):
	External calls:
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() && 1 == 1 (dot-pdf.sol#30)
	State variables written after the call(s):
	- x = x + 10 (dot-pdf.sol#31)
Reentrancy in SimpleDAO.buggy_multi_call_if_3() (dot-pdf.sol#34-38):
	External calls:
	- a ++ < 10 && msg.sender.call.value(b)() && a ++ + b < 10 && 1 == 1 (dot-pdf.sol#36)
	State variables written after the call(s):
	- x = x + 10 (dot-pdf.sol#37)
Reentrancy in SimpleDAO.non_buggy_multi_call_if_1() (dot-pdf.sol#22-26):
	External calls:
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() (dot-pdf.sol#24)
	State variables written after the call(s):
	- x = x + 10 (dot-pdf.sol#25)
Reentrancy in SimpleDAO.non_buggy_multi_call_if_2() (dot-pdf.sol#40-44):
	External calls:
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() && 1 == 1 (dot-pdf.sol#42)
	State variables written after the call(s):
	- c -- < 10 (dot-pdf.sol#42)
	- x = x + 10 (dot-pdf.sol#43)
Reentrancy in SimpleDAO.non_buggy_multi_call_if_3() (dot-pdf.sol#46-50):
	External calls:
	- a ++ < 10 && msg.sender.call.value(c)() && a ++ + b < 10 && 1 == 1 (dot-pdf.sol#48)
	State variables written after the call(s):
	- x = x + 10 (dot-pdf.sol#49)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Version constraint 0.4.24 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData.
It is used by:
	- 0.4.24 (dot-pdf.sol#1)
solc-0.4.24 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in SimpleDAO.simple() (dot-pdf.sol#15-20):
	- msg.sender.call.value(acc.balance)() && acc.balance ++ + x < 10 (dot-pdf.sol#18)
Low level call in SimpleDAO.non_buggy_multi_call_if_1() (dot-pdf.sol#22-26):
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() (dot-pdf.sol#24)
Low level call in SimpleDAO.buggy_multi_call_if_2() (dot-pdf.sol#28-32):
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() && 1 == 1 (dot-pdf.sol#30)
Low level call in SimpleDAO.buggy_multi_call_if_3() (dot-pdf.sol#34-38):
	- a ++ < 10 && msg.sender.call.value(b)() && a ++ + b < 10 && 1 == 1 (dot-pdf.sol#36)
Low level call in SimpleDAO.non_buggy_multi_call_if_2() (dot-pdf.sol#40-44):
	- msg.sender.call.value(a)() && b ++ < 10 && msg.sender.call.value(b ++)() && 1 == 1 (dot-pdf.sol#42)
Low level call in SimpleDAO.non_buggy_multi_call_if_3() (dot-pdf.sol#46-50):
	- a ++ < 10 && msg.sender.call.value(c)() && a ++ + b < 10 && 1 == 1 (dot-pdf.sol#48)
Low level call in SimpleDAO.buggy_simple_require() (dot-pdf.sol#53-58):
	- require(bool)(msg.sender.call.value(acc.balance ++)() && acc.balance + x > 10) (dot-pdf.sol#57)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function SimpleDAO.non_buggy_multi_call_if_1() (dot-pdf.sol#22-26) is not in mixedCase
Function SimpleDAO.buggy_multi_call_if_2() (dot-pdf.sol#28-32) is not in mixedCase
Function SimpleDAO.buggy_multi_call_if_3() (dot-pdf.sol#34-38) is not in mixedCase
Function SimpleDAO.non_buggy_multi_call_if_2() (dot-pdf.sol#40-44) is not in mixedCase
Function SimpleDAO.non_buggy_multi_call_if_3() (dot-pdf.sol#46-50) is not in mixedCase
Function SimpleDAO.buggy_simple_require() (dot-pdf.sol#53-58) is not in mixedCase
Variable SimpleDAO.Acc (dot-pdf.sol#9) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
./dot-pdf.sol analyzed (1 contracts with 94 detectors), 34 result(s) found

real	0m2.159s
user	0m1.998s
sys	0m0.164s
