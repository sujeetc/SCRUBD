./onlyowner.sol:6:5: Main key parameter in mapping balances is not named [Warning/named-parameters-mapping]
./onlyowner.sol:6:5: Value parameter in mapping balances is not named [Warning/named-parameters-mapping]
./onlyowner.sol:9:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./onlyowner.sol:13:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./onlyowner.sol:18:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./onlyowner.sol:18:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./onlyowner.sol:18:5: Function withdraw_onlyowner() must match Foundry test naming convention [Warning/foundry-test-functions]
./onlyowner.sol:19:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./onlyowner.sol:19:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./onlyowner.sol:23:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./onlyowner.sol:30:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./onlyowner.sol:30:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./onlyowner.sol:30:5: Function withdraw_not_only_owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./onlyowner.sol:31:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./onlyowner.sol:31:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./onlyowner.sol:35:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./onlyowner.sol:43:5: Function order is incorrect, fallback function can not go after public  function (line 30) [Warning/ordering]
./onlyowner.sol:43:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./onlyowner.sol:44:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]

19 problem/s (19 warning/s)
