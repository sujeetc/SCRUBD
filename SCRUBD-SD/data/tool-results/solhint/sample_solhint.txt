./sample.sol:6:1: Compiler version 0.4.24 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./sample.sol:8:1: Contract has 19 states declarations but allowed no more than 15 [Warning/max-states-count]
./sample.sol:9:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:10:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:11:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:12:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:13:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:14:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:15:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:16:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:18:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:19:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:21:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:22:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:23:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:24:3: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./sample.sol:25:3: Explicitly mark visibility of state [Warning/state-visibility]
./sample.sol:25:3: 'intitalized' should start with _ [Warning/private-vars-leading-underscore]
./sample.sol:42:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:42:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:42:5: Function withdraw_balances_re_ent8() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:45:26: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:45:26: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:50:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:50:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:50:5: Function slither_fn_2() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:54:12: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:54:12: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:54:42: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:58:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:58:5: Function slither() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:60:12: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:60:22: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:60:22: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:64:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:64:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:64:5: Function slither_2() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:66:12: GC: For [ a ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:67:10: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:67:10: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:73:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:73:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:73:5: Function slithera_13() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:79:13: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:79:13: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:85:5: Function order is incorrect, struct definition can not go after public  function (line 73) [Warning/ordering]
./sample.sol:87:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:88:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:90:5: Main key parameter in mapping Acc is not named [Warning/named-parameters-mapping]
./sample.sol:90:5: Value parameter in mapping Acc is not named [Warning/named-parameters-mapping]
./sample.sol:90:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./sample.sol:91:5: Main key parameter in mapping Bcc is not named [Warning/named-parameters-mapping]
./sample.sol:91:5: Value parameter in mapping Bcc is not named [Warning/named-parameters-mapping]
./sample.sol:91:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./sample.sol:93:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:93:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./sample.sol:94:5: Main key parameter in mapping balances_re_ent8 is not named [Warning/named-parameters-mapping]
./sample.sol:94:5: Value parameter in mapping balances_re_ent8 is not named [Warning/named-parameters-mapping]
./sample.sol:94:5: Explicitly mark visibility of state [Warning/state-visibility]
./sample.sol:94:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:94:5: 'balances_re_ent8' should start with _ [Warning/private-vars-leading-underscore]
./sample.sol:94:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./sample.sol:96:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:96:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:96:5: Function Test() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:96:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:96:19: Variable "_am" is unused [Warning/no-unused-vars]
./sample.sol:99:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:99:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:102:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:102:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:102:5: Function Collect_DD_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:102:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:106:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:106:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:112:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:112:9: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:112:9: Function Collect_DDz() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:112:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:116:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:116:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:117:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:117:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:118:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./sample.sol:118:35: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:118:35: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:118:75: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./sample.sol:122:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:122:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:122:5: Function Collect_local_var() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:122:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:122:32: Variable "_am" is unused [Warning/no-unused-vars]
./sample.sol:124:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:125:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:125:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:129:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:129:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:129:5: Function Collect_uoiu() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:129:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:129:27: Variable "_am" is unused [Warning/no-unused-vars]
./sample.sol:138:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:138:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:142:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:142:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:142:5: Function Collect_uoiuz() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:142:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:150:9: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:150:9: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:154:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:154:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:154:5: Function Collect_1() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:154:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:159:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./sample.sol:159:37: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:159:37: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:159:77: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./sample.sol:163:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:163:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:163:5: Function Collect_2() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:163:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:167:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./sample.sol:167:37: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:167:37: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:167:69: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./sample.sol:171:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:171:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:171:5: Function Collect_21() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:171:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:175:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./sample.sol:175:37: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:175:37: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:175:69: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./sample.sol:175:69: GC: For [ acc ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:179:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:179:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:179:5: Function Collect_khichdi() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:179:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:185:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./sample.sol:185:37: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:185:37: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:185:77: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./sample.sol:185:77: GC: For [ acc ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:189:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:189:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:189:5: Function CollectReal() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:189:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./sample.sol:194:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./sample.sol:194:37: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./sample.sol:194:59: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./sample.sol:197:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:197:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:204:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:204:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:209:12: GC: For [ c ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:209:24: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:209:24: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:209:46: GC: For [ d ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:209:56: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:210:13: GC: For [ d ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:213:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:213:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:218:12: GC: For [ c ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:218:24: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:218:24: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:218:46: GC: For [ d ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:218:56: GC: For [ b ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:219:13: GC: For [ d ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:221:16: Provide an error message for revert [Warning/reason-string]
./sample.sol:224:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:224:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:224:5: Function no_eth() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:227:20: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:228:17: Provide an error message for revert [Warning/reason-string]
./sample.sol:233:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:233:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:233:5: Function withdraw_dd() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:236:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./sample.sol:239:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:239:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:239:5: Function slither_fP_3() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:241:12: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:241:12: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:245:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:245:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:245:5: Function slither_fP_3z() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:247:12: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:247:12: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:252:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:252:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:252:5: Function slither_fn_4() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:254:12: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:254:12: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:254:43: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:254:43: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:259:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:259:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:259:5: Function slither_fn_4z() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:261:12: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:261:12: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:261:43: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:261:43: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:267:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:267:5: Function slitherfun1() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:269:12: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:269:12: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:272:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:272:5: Function slitherfun2() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:274:12: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:274:12: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:279:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:279:5: Function slitherfun3() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:283:12: GC: For [ c ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./sample.sol:283:24: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:283:24: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:287:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:287:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:287:5: Function slither_fn_5() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:290:22: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:290:22: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:293:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:293:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./sample.sol:293:5: Function slither_fn_6() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:295:12: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:295:12: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./sample.sol:298:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./sample.sol:298:5: Function analyze() must match Foundry test naming convention [Warning/foundry-test-functions]
./sample.sol:302:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./sample.sol:302:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]

228 problem/s (1 error/s, 227 warning/s)
