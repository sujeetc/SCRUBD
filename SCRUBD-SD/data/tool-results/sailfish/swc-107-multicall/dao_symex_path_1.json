{
    "file": "swc-107-multicall.sol",
    "global_structs": [
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0x18"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0x19"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0x1a"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "a",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "b",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "c",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "d",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "e",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "z",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "m",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "n",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "y",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "x",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "w",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "SimpleDAO",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0x18",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x19",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x1a",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "a",
            "addrs": [
                "0x2",
                "0x3",
                "0x5",
                "0x6",
                "0x8",
                "0x10",
                "0x12",
                "0x14"
            ]
        },
        {
            "name": "c",
            "addrs": [
                "0x2",
                "0xa",
                "0xc"
            ]
        },
        {
            "name": "b",
            "addrs": [
                "0x2",
                "0xe",
                "0x15",
                "0x17"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x5",
            "instructions": [
                "RTMP_60 = a > 10",
                "CONDITION RTMP_60 0x4 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4",
            "instructions": [
                "TMP_59 = a + 1",
                "a = TMP_59"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x8",
            "instructions": [
                "RTMP_62 = a > 10",
                "CONDITION RTMP_62 0x7 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x7",
            "instructions": [
                "TMP_61 = a + 1",
                "a = TMP_61"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa",
            "instructions": [
                "RTMP_64 = b > 10",
                "CONDITION RTMP_64 0x9 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9",
            "instructions": [
                "TMP_63 = c - 10",
                "c = TMP_63"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xc",
            "instructions": [
                "RTMP_66 = b > 10",
                "CONDITION RTMP_66 0xb 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb",
            "instructions": [
                "TMP_65 = c - 10",
                "c = TMP_65"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xe",
            "instructions": [
                "RTMP_68 = b > 10",
                "CONDITION RTMP_68 0xd 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xd",
            "instructions": [
                "TMP_67 = b - 10",
                "b = TMP_67"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x10",
            "instructions": [
                "RTMP_70 = b > 10",
                "CONDITION RTMP_70 0xf 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xf",
            "instructions": [
                "TMP_69 = a - 10",
                "a = TMP_69"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12",
            "instructions": [
                "RTMP_72 = b > 10",
                "CONDITION RTMP_72 0x11 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11",
            "instructions": [
                "TMP_71 = a - 10",
                "a = TMP_71"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14",
            "instructions": [
                "RTMP_74 = a > 10",
                "CONDITION RTMP_74 0x13 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13",
            "instructions": [
                "TMP_73 = b - 10",
                "a = TMP_73"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x17",
            "instructions": [
                "RTMP_76 = b > 10",
                "CONDITION RTMP_76 0x16 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16",
            "instructions": [
                "TMP_75 = b + 1",
                "b = TMP_75"
            ]
        }
    ],
    "root_addr": "0x1b",
    "dest_addrs": [
        "0x2d"
    ],
    "normal_blocks": [
        {
            "scope": "withdraw_for_loop",
            "addr": "0x1b",
            "instructions": [
                "NOP",
                "addr = NEW_COL integer",
                "JUMP 0x1c"
            ]
        },
        {
            "scope": "withdraw_for_loop",
            "addr": "0x1c",
            "instructions": [
                "a = 0",
                "JUMP 0x1d"
            ]
        },
        {
            "scope": "withdraw_for_loop",
            "addr": "0x1d",
            "instructions": [
                "NOP",
                "TMP_6 = a > 10",
                "CONDITION TMP_6 0x1e 0x1f"
            ]
        },
        {
            "scope": "withdraw_for_loop",
            "addr": "0x1e",
            "instructions": [
                "CLR_0 = addr[a]",
                "REF_4 = CLR_0",
                "ATTACK",
                "TMP_8 = NEW_VAL boolean",
                "JUMP 0x20"
            ]
        },
        {
            "scope": "withdraw_for_loop",
            "addr": "0x21",
            "instructions": [
                "CONDITION TMP_8 0x21_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_for_loop",
            "addr": "0x21_r0",
            "instructions": [
                "JUMP 0x22"
            ]
        },
        {
            "scope": "withdraw_for_loop",
            "addr": "0x22",
            "instructions": [
                "TMP_10 = a",
                "a = a + 1",
                "JUMP 0x1d"
            ]
        },
        {
            "scope": "withdraw_for_loop_1",
            "addr": "0x20",
            "instructions": [
                "NOP",
                "a2 = NEW_VAL integer",
                "addr = NEW_COL integer",
                "JUMP 0x23"
            ]
        },
        {
            "scope": "withdraw_for_loop_1",
            "addr": "0x23",
            "instructions": [
                "a = 0",
                "JUMP 0x24"
            ]
        },
        {
            "scope": "withdraw_for_loop_1",
            "addr": "0x24",
            "instructions": [
                "NOP",
                "TMP_11 = a > 10",
                "CONDITION TMP_11 0x25 0x26"
            ]
        },
        {
            "scope": "withdraw_for_loop_1",
            "addr": "0x25",
            "instructions": [
                "CLR_1 = addr[a]",
                "REF_7 = CLR_1",
                "CLR_2 = this.balance",
                "WRP_0 = CLR_2 - c",
                "this.balance = WRP_0",
                "TMP_13 = NEW_VAL boolean",
                "JUMP 0x27"
            ]
        },
        {
            "scope": "withdraw_for_loop_1",
            "addr": "0x26",
            "instructions": [
                "NOP",
                "JUMP 0x28"
            ]
        },
        {
            "scope": "withdraw_for_loop_1",
            "addr": "0x28",
            "instructions": [
                "CLR_3 = this.balance",
                "WRP_1 = CLR_3 - c",
                "this.balance = WRP_1",
                "TMP_17 = NEW_VAL boolean",
                "JUMP 0x29"
            ]
        },
        {
            "scope": "withdraw_for_loop_1",
            "addr": "0x29",
            "instructions": [
                "CONDITION TMP_17 0x29_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_for_loop_1",
            "addr": "0x29_r0",
            "instructions": [
                "JUMP 0x2a"
            ]
        },
        {
            "scope": "withdraw_for_loop_1",
            "addr": "0x27",
            "instructions": [
                "CONDITION TMP_13 0x27_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_for_loop_1",
            "addr": "0x27_r0",
            "instructions": [
                "JUMP 0x2b"
            ]
        },
        {
            "scope": "withdraw_for_loop_1",
            "addr": "0x2b",
            "instructions": [
                "TMP_15 = a",
                "a = a + 1",
                "JUMP 0x24"
            ]
        },
        {
            "scope": "withdraw_for_loop",
            "addr": "0x2c",
            "instructions": [
                "NOP",
                "TMP_6 = a > 10",
                "CONDITION TMP_6 0x2d 0x1f"
            ]
        },
        {
            "scope": "withdraw_for_loop",
            "addr": "0x2a",
            "instructions": [
                "CONDITION TMP_8 0x2a_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_for_loop",
            "addr": "0x2a_r0",
            "instructions": [
                "JUMP 0x2e"
            ]
        },
        {
            "scope": "withdraw_for_loop",
            "addr": "0x2e",
            "instructions": [
                "TMP_10 = a",
                "a = a + 1",
                "JUMP 0x2c"
            ]
        },
        {
            "scope": "withdraw_for_loop",
            "addr": "0x2d",
            "instructions": [
                "CLR_4 = addr[a]",
                "REF_4 = CLR_4",
                "CLR_5 = this.balance",
                "WRP_2 = CLR_5 - c",
                "this.balance = WRP_2",
                "TMP_8 = NEW_VAL boolean"
            ]
        },
        {
            "scope": "trap",
            "addr": "0x1f",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}