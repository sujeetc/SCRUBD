{
    "file": "test_inc.sol",
    "global_structs": [
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0x19"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0x1a"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0x1b"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "a",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "b",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tool_fail",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0xd",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xe",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xf",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x19",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x1a",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x1b",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "a",
            "addrs": [
                "0x2",
                "0x3",
                "0x4",
                "0x5",
                "0x6",
                "0x7"
            ]
        },
        {
            "name": "b",
            "addrs": [
                "0x2",
                "0x8",
                "0x9",
                "0xa",
                "0xb",
                "0xc"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3",
            "instructions": [
                "TMP_61 = a + 1",
                "a = TMP_61"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4",
            "instructions": [
                "TMP_62 = a + 1",
                "a = TMP_62"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x5",
            "instructions": [
                "TMP_63 = a + 1",
                "a = TMP_63"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x7",
            "instructions": [
                "TMP_65 = a + 1",
                "a = TMP_65"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x8",
            "instructions": [
                "TMP_66 = b - 1",
                "b = TMP_66"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9",
            "instructions": [
                "TMP_67 = b + 1",
                "b = TMP_67"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa",
            "instructions": [
                "TMP_68 = b - 10",
                "b = TMP_68"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb",
            "instructions": [
                "TMP_69 = b - 10",
                "b = TMP_69"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xc",
            "instructions": [
                "TMP_70 = b - 1",
                "b = TMP_70"
            ]
        }
    ],
    "root_addr": "0x1c",
    "dest_addrs": [
        "0x23"
    ],
    "normal_blocks": [
        {
            "scope": "buggy_require",
            "addr": "0x1c",
            "instructions": [
                "NOP",
                "JUMP 0x1d"
            ]
        },
        {
            "scope": "buggy_require",
            "addr": "0x1d",
            "instructions": [
                "TMP_15 = a",
                "a = a + 1",
                "ATTACK",
                "TMP_17 = NEW_VAL boolean",
                "JUMP 0x1e"
            ]
        },
        {
            "scope": "non_buggy_local",
            "addr": "0x1e",
            "instructions": [
                "NOP",
                "JUMP 0x1f"
            ]
        },
        {
            "scope": "non_buggy_local",
            "addr": "0x1f",
            "instructions": [
                "NOP",
                "TMP_0 = a + 10",
                "local = TMP_0",
                "TMP_1 = a",
                "a = a + 1",
                "CLR_0 = this.balance",
                "WRP_0 = CLR_0 - TMP_1",
                "this.balance = WRP_0",
                "TMP_3 = NEW_VAL boolean",
                "JUMP 0x20"
            ]
        },
        {
            "scope": "non_buggy_local",
            "addr": "0x20",
            "instructions": [
                "CONDITION TMP_3 0x20_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "non_buggy_local",
            "addr": "0x20_r0",
            "instructions": [
                "JUMP 0x21"
            ]
        },
        {
            "scope": "buggy_require",
            "addr": "0x21",
            "instructions": [
                "CONDITION TMP_17 0x21_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "buggy_require",
            "addr": "0x21_r0",
            "instructions": [
                "JUMP 0x22"
            ]
        },
        {
            "scope": "buggy_require",
            "addr": "0x22",
            "instructions": [
                "TMP_19 = a + 1",
                "a = TMP_19",
                "TMP_20 = a > 10",
                "CONDITION TMP_20 0x22_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "buggy_require",
            "addr": "0x22_r0",
            "instructions": [
                "JUMP 0x23"
            ]
        },
        {
            "scope": "buggy_require",
            "addr": "0x23",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "trap",
            "addr": "0x24",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}