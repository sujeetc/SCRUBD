{
    "file_name": "dao_symex_path_9.json",
    "from_function": "slithermine_1",
    "to_function": "buggy_require_1",
    "bug_type": "dao",
    "src_node": "\"BlockID: 238\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 256\nCall context: \nTrue\nTMP_4 = c + 4\nc := TMP_4\""
    ],
    "executable_instructions": 81,
    "state_variable": "c",
    "error": "",
    "result": "UNSAT",
    "execution_details": "# using file \/ethereum-security\/manual_dataset\/sailfish\/require_slither_plus_cases\/dao_symex_path_9.json\n# attack type: range\n# solver type: z3\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x19@__GLOBAL__\n    > adding global block: 0x1a@__GLOBAL__\n    > adding global block: 0x1b@__GLOBAL__\n    > adding global block: 0x1c@__GLOBAL__\n    > adding global block: 0x28@__GLOBAL__\n    > adding global block: 0x29@__GLOBAL__\n    > adding global block: 0x2a@__GLOBAL__\n    > adding global block: 0x39@__GLOBAL__\n    > adding global block: 0x3a@__GLOBAL__\n    > adding global block: 0x3b@__GLOBAL__\n    > adding global block: 0x47@__GLOBAL__\n    > adding global block: 0x48@__GLOBAL__\n    > adding global block: 0x49@__GLOBAL__\n    > adding global block: 0x55@__GLOBAL__\n    > adding global block: 0x56@__GLOBAL__\n    > adding global block: 0x57@__GLOBAL__\n    > adding global block: 0x66@__GLOBAL__\n    > adding global block: 0x67@__GLOBAL__\n    > adding global block: 0x68@__GLOBAL__\n    > adding global block: 0x74@__GLOBAL__\n    > adding global block: 0x75@__GLOBAL__\n    > adding global block: 0x76@__GLOBAL__\n    > adding global block: 0x85@__GLOBAL__\n    > adding global block: 0x86@__GLOBAL__\n    > adding global block: 0x87@__GLOBAL__\n    > adding global block: 0x99@__GLOBAL__\n    > adding global block: 0x9a@__GLOBAL__\n    > adding global block: 0x9b@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: a\n    > initializing global variable: a\n    > declaring global variable: b\n    > initializing global variable: b\n    > declaring global variable: c\n    > initializing global variable: c\n    > declaring global variable: e\n    > initializing global variable: e\n    > declaring global variable: z\n    > initializing global variable: z\n    > declaring global variable: m\n    > initializing global variable: m\n    > declaring global variable: n\n    > initializing global variable: n\n    > declaring global variable: f\n    > initializing global variable: f\n    > declaring global variable: k\n    > initializing global variable: k\n    > declaring global variable: y\n    > initializing global variable: y\n    > declaring global variable: x\n    > initializing global variable: x\n    > declaring global variable: w\n    > initializing global variable: w\n    > declaring global variable: not_called\n    > initializing global variable: not_called\n    > declaring global variable: intitalized\n    > initializing global variable: intitalized\n    > declaring global variable: d\n    > initializing global variable: d\n\n    > declaring global variable: SimpleDAO\n    > initializing global variable: SimpleDAO\n# building ranges\n  > start adding range variables\n    > adding: a -> (0x2@__RANGE__ 0x3@__RANGE__ 0x6@__RANGE__ 0xc@__RANGE__ 0x13@__RANGE__ 0x18@__RANGE__)\n    > adding: c -> (0x2@__RANGE__ 0x5@__RANGE__ 0x8@__RANGE__ 0xe@__RANGE__ 0x11@__RANGE__ 0x15@__RANGE__)\n    > adding: d -> (0x2@__RANGE__ 0xa@__RANGE__)\n  > range entry addresses: (0x8@__RANGE__ 0x2@__RANGE__ 0x6@__RANGE__ 0x3@__RANGE__ 0x5@__RANGE__ 0x13@__RANGE__ 0x15@__RANGE__ 0xa@__RANGE__ 0xe@__RANGE__ 0x18@__RANGE__ 0x11@__RANGE__ 0xc@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0x3@__RANGE__\n    > adding range block: 0x5@__RANGE__\n    > adding range block: 0x4@__RANGE__\n    > adding range block: 0x6@__RANGE__\n    > adding range block: 0x8@__RANGE__\n    > adding range block: 0x9@__RANGE__\n    > adding range block: 0x7@__RANGE__\n    > adding range block: 0xa@__RANGE__\n    > adding range block: 0xc@__RANGE__\n    > adding range block: 0xb@__RANGE__\n    > adding range block: 0xe@__RANGE__\n    > adding range block: 0xf@__RANGE__\n    > adding range block: 0xd@__RANGE__\n    > adding range block: 0x11@__RANGE__\n    > adding range block: 0x10@__RANGE__\n    > adding range block: 0x13@__RANGE__\n    > adding range block: 0x12@__RANGE__\n    > adding range block: 0x15@__RANGE__\n    > adding range block: 0x16@__RANGE__\n    > adding range block: 0x14@__RANGE__\n    > adding range block: 0x18@__RANGE__\n    > adding range block: 0x17@__RANGE__\n# building normal scopes\n  > root addr: 0x9e\n  > dest addrs: (0xa9)\n  > loading normal blocks\n    > adding normal block: 0x9c\n    > adding normal block: 0x9e\n    > adding normal block: 0x9d\n    > adding normal block: 0x9f\n    > adding normal block: 0xa0\n    > adding normal block: 0xa1\n    > adding normal block: 0xa3\n    > adding normal block: 0xa4\n    > adding normal block: 0xa4_r0\n    > adding normal block: 0xa5\n    > adding normal block: 0xa6\n    > adding normal block: 0xa7\n    > adding normal block: 0xa9\n    > adding normal block: 0xa8\n    > adding normal block: 0xa2\n    > adding normal block: 0xRequireTrap\n# start interpretation of normal blocks...\n\n# asserts size: 2\n# using solver: #<z3>\n# result: #f\n"
}