{
    "file": "sample.sol",
    "global_structs": [
        {
            "name": "Holder",
            "fields": {
                "unlockTime": [
                    "integer"
                ],
                "balance": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0x3b"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0x3c"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0x3d"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "a",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "b",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "c",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "e",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "z",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "m",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "n",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "f",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "k",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "y",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "x",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "w",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "not_called",
            "type": [
                "boolean"
            ],
            "init": []
        },
        {
            "name": "intitalized",
            "type": [
                "boolean"
            ],
            "init": []
        },
        {
            "name": "Acc",
            "type": [
                "array",
                "integer",
                "Holder"
            ],
            "init": []
        },
        {
            "name": "Bcc",
            "type": [
                "array",
                "integer",
                "Holder"
            ],
            "init": []
        },
        {
            "name": "MinSum",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "balances_re_ent8",
            "type": [
                "array",
                "integer",
                "integer"
            ],
            "init": []
        },
        {
            "name": "d",
            "type": [
                "integer"
            ],
            "init": [
                "0x3a"
            ]
        },
        {
            "name": "SimpleDAO",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0x3a",
            "instructions": [
                "d = 0"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x3b",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x3c",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x3d",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "balances_re_ent8",
            "addrs": [
                "0x2",
                "0x3"
            ]
        },
        {
            "name": "a",
            "addrs": [
                "0x2",
                "0x4",
                "0x7",
                "0xb",
                "0xe",
                "0x10",
                "0x11",
                "0x22",
                "0x32"
            ]
        },
        {
            "name": "b",
            "addrs": [
                "0x2",
                "0x6",
                "0x9",
                "0xd",
                "0x14",
                "0x1a",
                "0x20",
                "0x24",
                "0x26",
                "0x28",
                "0x2a",
                "0x2d",
                "0x2f",
                "0x35",
                "0x37",
                "0x39"
            ]
        },
        {
            "name": "Acc",
            "addrs": [
                "0x2",
                "0x12",
                "0x13"
            ]
        },
        {
            "name": "c",
            "addrs": [
                "0x2",
                "0x15",
                "0x1b",
                "0x27",
                "0x2b",
                "0x30"
            ]
        },
        {
            "name": "d",
            "addrs": [
                "0x2",
                "0x16",
                "0x18",
                "0x1c",
                "0x1e"
            ]
        },
        {
            "name": "not_called",
            "addrs": [
                "0x2",
                "0x21"
            ]
        },
        {
            "name": "z",
            "addrs": [
                "0x2",
                "0x29"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3",
            "instructions": [
                "CLR_0 = msg.sender",
                "CLR_1 = balances_re_ent8[CLR_0]",
                "REF_104 = CLR_1",
                "CLR_2 = msg.sender",
                "balances_re_ent8[CLR_2] = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4",
            "instructions": [
                "TMP_179 = a + 1",
                "a = TMP_179"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x6",
            "instructions": [
                "RTMP_180 = a < 10",
                "CONDITION RTMP_180 0x5 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x5",
            "instructions": [
                "b = c"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x7",
            "instructions": [
                "TMP_181 = a + 1",
                "a = TMP_181"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9",
            "instructions": [
                "RTMP_183 = a < 10",
                "CONDITION RTMP_183 0xa 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa",
            "instructions": [
                "RTMP_184 = a < 10",
                "CONDITION RTMP_184 0x8 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x8",
            "instructions": [
                "TMP_182 = b + 10",
                "b = TMP_182"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb",
            "instructions": [
                "TMP_185 = a + 1",
                "a = TMP_185"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xd",
            "instructions": [
                "RTMP_187 = a < 10",
                "CONDITION RTMP_187 0xc 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xc",
            "instructions": [
                "TMP_186 = b + 10",
                "b = TMP_186"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x10",
            "instructions": [
                "RTMP_190 = a > 50",
                "CONDITION RTMP_190 0xf 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xf",
            "instructions": [
                "TMP_189 = a + 10",
                "a = TMP_189"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11",
            "instructions": [
                "TMP_191 = a - 10",
                "a = TMP_191"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12",
            "instructions": [
                "CLR_3 = msg.sender",
                "CLR_4 = Acc[CLR_3]",
                "REF_105 = CLR_4",
                "CLR_5 = REF_105.balance",
                "REF_106 = CLR_5",
                "REF_105.balance = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13",
            "instructions": [
                "CLR_6 = msg.sender",
                "CLR_7 = Acc[CLR_6]",
                "REF_107 = CLR_7",
                "CLR_8 = REF_107.balance",
                "REF_108 = CLR_8",
                "REF_107.balance = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14",
            "instructions": [
                "TMP_192 = b + 10",
                "b = TMP_192"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x15",
            "instructions": [
                "TMP_193 = c + 1",
                "c = TMP_193"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x18",
            "instructions": [
                "RTMP_197 = c < 10",
                "CONDITION RTMP_197 0x19 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x19",
            "instructions": [
                "RTMP_198 = b < 10",
                "CONDITION RTMP_198 0x17 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x17",
            "instructions": [
                "TMP_196 = d + 1",
                "d = TMP_196"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1a",
            "instructions": [
                "TMP_195 = b + 1",
                "b = TMP_195"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1b",
            "instructions": [
                "TMP_199 = c + 1",
                "c = TMP_199"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1e",
            "instructions": [
                "RTMP_203 = c < 10",
                "CONDITION RTMP_203 0x1f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1f",
            "instructions": [
                "RTMP_204 = b < 10",
                "CONDITION RTMP_204 0x1d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1d",
            "instructions": [
                "TMP_202 = d + 1",
                "d = TMP_202"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x20",
            "instructions": [
                "TMP_201 = b + 1",
                "b = TMP_201"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x21",
            "instructions": [
                "not_called = false"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x22",
            "instructions": [
                "TMP_205 = a - 10",
                "a = TMP_205"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x24",
            "instructions": [
                "RTMP_207 = b < 10",
                "CONDITION RTMP_207 0x23 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x23",
            "instructions": [
                "TMP_206 = b + 10",
                "b = TMP_206"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x26",
            "instructions": [
                "RTMP_209 = b < 10",
                "CONDITION RTMP_209 0x25 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x25",
            "instructions": [
                "TMP_208 = b + 10",
                "b = TMP_208"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x27",
            "instructions": [
                "c = a"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x28",
            "instructions": [
                "TMP_210 = b + 10",
                "b = TMP_210"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x29",
            "instructions": [
                "TMP_211 = z + 10",
                "z = TMP_211"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2a",
            "instructions": [
                "TMP_212 = b + 10",
                "b = TMP_212"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2b",
            "instructions": [
                "c = a"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2d",
            "instructions": [
                "RTMP_214 = b < 10",
                "CONDITION RTMP_214 0x2c 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2c",
            "instructions": [
                "TMP_213 = b - 10",
                "b = TMP_213"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2f",
            "instructions": [
                "RTMP_216 = b < 10",
                "CONDITION RTMP_216 0x2e 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2e",
            "instructions": [
                "TMP_215 = b - 10",
                "b = TMP_215"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x30",
            "instructions": [
                "TMP_217 = c + 1",
                "c = TMP_217"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x32",
            "instructions": [
                "RTMP_219 = c > 10",
                "CONDITION RTMP_219 0x33 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x33",
            "instructions": [
                "RTMP_220 = b < 10",
                "CONDITION RTMP_220 0x31 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x31",
            "instructions": [
                "TMP_218 = a - 10",
                "a = TMP_218"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x35",
            "instructions": [
                "RTMP_222 = b < 10",
                "CONDITION RTMP_222 0x34 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x34",
            "instructions": [
                "TMP_221 = b + 10",
                "b = TMP_221"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x37",
            "instructions": [
                "RTMP_224 = b < 10",
                "CONDITION RTMP_224 0x36 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x36",
            "instructions": [
                "TMP_223 = b + 10",
                "b = TMP_223"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x39",
            "instructions": [
                "RTMP_226 = b < 10",
                "CONDITION RTMP_226 0x38 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x38",
            "instructions": [
                "TMP_225 = b - 10",
                "b = TMP_225"
            ]
        }
    ],
    "root_addr": "0x3e",
    "dest_addrs": [
        "0x47"
    ],
    "normal_blocks": [
        {
            "scope": "withdraw_balances_re_ent8_v1",
            "addr": "0x3e",
            "instructions": [
                "NOP",
                "success = NEW_VAL boolean",
                "JUMP 0x3f"
            ]
        },
        {
            "scope": "withdraw_balances_re_ent8_v1",
            "addr": "0x3f",
            "instructions": [
                "CLR_9 = msg.sender",
                "CLR_10 = balances_re_ent8[CLR_9]",
                "REF_2 = CLR_10",
                "ATTACK",
                "TMP_1 = NEW_VAL boolean",
                "JUMP 0x40"
            ]
        },
        {
            "scope": "withdraw_balances_re_ent8_v2",
            "addr": "0x40",
            "instructions": [
                "NOP",
                "success = NEW_VAL boolean",
                "JUMP 0x41"
            ]
        },
        {
            "scope": "withdraw_balances_re_ent8_v2",
            "addr": "0x41",
            "instructions": [
                "CLR_11 = msg.sender",
                "CLR_12 = balances_re_ent8[CLR_11]",
                "REF_2 = CLR_12",
                "CLR_13 = this.balance",
                "WRP_0 = CLR_13 - REF_2",
                "this.balance = WRP_0",
                "TMP_1 = NEW_VAL boolean",
                "JUMP 0x42"
            ]
        },
        {
            "scope": "withdraw_balances_re_ent8_v2",
            "addr": "0x42",
            "instructions": [
                "success = TMP_1",
                "CONDITION success 0x43 0x44"
            ]
        },
        {
            "scope": "withdraw_balances_re_ent8_v2",
            "addr": "0x43",
            "instructions": [
                "CLR_14 = msg.sender",
                "CLR_15 = balances_re_ent8[CLR_14]",
                "REF_3 = CLR_15",
                "CLR_16 = msg.sender",
                "balances_re_ent8[CLR_16] = 0",
                "JUMP 0x45"
            ]
        },
        {
            "scope": "withdraw_balances_re_ent8_v2",
            "addr": "0x45",
            "instructions": [
                "NOP",
                "JUMP 0x46"
            ]
        },
        {
            "scope": "withdraw_balances_re_ent8_v1",
            "addr": "0x47",
            "instructions": [
                "CLR_17 = msg.sender",
                "CLR_18 = balances_re_ent8[CLR_17]",
                "REF_3 = CLR_18",
                "CLR_19 = msg.sender",
                "balances_re_ent8[CLR_19] = 0"
            ]
        },
        {
            "scope": "withdraw_balances_re_ent8_v1",
            "addr": "0x46",
            "instructions": [
                "success = TMP_1",
                "CONDITION success 0x47 0x44"
            ]
        },
        {
            "scope": "trap",
            "addr": "0x44",
            "instructions": [
                "NOP"
            ]
        }
    ]
}