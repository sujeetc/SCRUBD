'solc --version' running
'solc ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:
Warning: Unused local variable.
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1525:8:
     |
1525 |       (bool sent, bytes memory data) = payable(destination).call{value: (address(this).balance/100)}("");
     |        ^^^^^^^^^

Warning: Unused local variable.
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1525:19:
     |
1525 |       (bool sent, bytes memory data) = payable(destination).call{value: (address(this).balance/100)}("");
     |                   ^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1528:32:
     |
1528 |     function onERC721Received( address operator, address from, uint256 tokenId, bytes calldata data ) public override returns (bytes4) {
     |                                ^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1528:50:
     |
1528 |     function onERC721Received( address operator, address from, uint256 tokenId, bytes calldata data ) public override returns (bytes4) {
     |                                                  ^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1528:64:
     |
1528 |     function onERC721Received( address operator, address from, uint256 tokenId, bytes calldata data ) public override returns (bytes4) {
     |                                                                ^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1528:81:
     |
1528 |     function onERC721Received( address operator, address from, uint256 tokenId, bytes calldata data ) public override returns (bytes4) {
     |                                                                                 ^^^^^^^^^^^^^^^^^^^

Warning: Unused local variable.
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1588:8:
     |
1588 |       (bool sent, bytes memory data) = payable(msg.sender).call{value: loanValue}("");
     |        ^^^^^^^^^

Warning: Unused local variable.
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1588:19:
     |
1588 |       (bool sent, bytes memory data) = payable(msg.sender).call{value: loanValue}("");
     |                   ^^^^^^^^^^^^^^^^^

Warning: Unused local variable.
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1621:8:
     |
1621 |       (bool sent, bytes memory data) = payable(msg.sender).call{value: price}("");
     |        ^^^^^^^^^

Warning: Unused local variable.
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1621:19:
     |
1621 |       (bool sent, bytes memory data) = payable(msg.sender).call{value: price}("");
     |                   ^^^^^^^^^^^^^^^^^

Warning: Unused local variable.
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1668:12:
     |
1668 |           (bool sent, bytes memory data) = payable(_a1).call{value: (address(this).balance/5)}("");
     |            ^^^^^^^^^

Warning: Unused local variable.
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1668:23:
     |
1668 |           (bool sent, bytes memory data) = payable(_a1).call{value: (address(this).balance/5)}("");
     |                       ^^^^^^^^^^^^^^^^^

Warning: Function state mutability can be restricted to view
    --> ./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol:1528:5:
     |
1528 |     function onERC721Received( address operator, address from, uint256 tokenId, bytes calldata data ) public override returns (bytes4) {
     |     ^ (Relevant source part starts here and spans across multiple lines).



Reentrancy in DERPNATION.takeLoan(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1571-1592):
	External calls:
	- safeTransferFrom(msg.sender,address(this),tokenId) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1577)
		- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1202-1212)
	- (sent,data) = address(msg.sender).call{value: loanValue}() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1588)
	External calls sending eth:
	- (sent,data) = address(msg.sender).call{value: loanValue}() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1588)
	State variables written after the call(s):
	- vStats.loanId = vStats.loanId + 1 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1591)
	DERPNATION.vStats (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1484) can be used in cross function reentrancies:
	- DERPNATION.constructor() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1486-1506)
	- DERPNATION.vStats (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1484)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

DERPNATION.takeLoan(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1571-1592) performs a multiplication on the result of a division:
	- loanValue = getUserSellPrice() / 4 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1574)
	- interest = loanValue * 3 * _loanTerm / 1000 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1575)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

Reentrancy in DERPNATION.buyToken(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1627-1640):
	External calls:
	- derpContract.safeTransferFrom(address(this),msg.sender,tokenId) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1637)
	State variables written after the call(s):
	- vStats.txId = vStats.txId + 1 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1639)
	DERPNATION.vStats (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1484) can be used in cross function reentrancies:
	- DERPNATION.constructor() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1486-1506)
	- DERPNATION.vStats (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1484)
Reentrancy in DERPNATION.mint(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1646-1670):
	External calls:
	- super._safeMint(msg.sender,_tokenIds.current()) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1654)
		- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1202-1212)
	State variables written after the call(s):
	- super._mint(address(this),_tokenIds.current()) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1658)
		- _balances[to] += 1 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1093)
	ERC721._balances (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#840) can be used in cross function reentrancies:
	- ERC721._mint(address,uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1087-1099)
	- ERC721._transfer(address,address,uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1138-1158)
	- ERC721.balanceOf(address) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#869-872)
	- super._mint(_pixelPawnAddress,_tokenIds.current()) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1663)
		- _balances[to] += 1 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1093)
	ERC721._balances (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#840) can be used in cross function reentrancies:
	- ERC721._mint(address,uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1087-1099)
	- ERC721._transfer(address,address,uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1138-1158)
	- ERC721.balanceOf(address) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#869-872)
	- super._mint(address(this),_tokenIds.current()) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1658)
		- _owners[tokenId] = to (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1094)
	ERC721._owners (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#837) can be used in cross function reentrancies:
	- ERC721._exists(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1028-1030)
	- ERC721._mint(address,uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1087-1099)
	- ERC721._transfer(address,address,uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1138-1158)
	- ERC721.ownerOf(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#877-881)
	- super._mint(_pixelPawnAddress,_tokenIds.current()) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1663)
		- _owners[tokenId] = to (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1094)
	ERC721._owners (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#837) can be used in cross function reentrancies:
	- ERC721._exists(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1028-1030)
	- ERC721._mint(address,uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1087-1099)
	- ERC721._transfer(address,address,uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1138-1158)
	- ERC721.ownerOf(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#877-881)
Reentrancy in DERPNATION.payLoan(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1594-1611):
	External calls:
	- derpContract.safeTransferFrom(address(this),msg.sender,tokenId) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1602)
	State variables written after the call(s):
	- _currentLoans[tokenId].total = 0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1605)
	DERPNATION._currentLoans (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1467) can be used in cross function reentrancies:
	- DERPNATION._currentLoans (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1467)
	- _currentLoans[tokenId].debtor = address(0) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1606)
	DERPNATION._currentLoans (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1467) can be used in cross function reentrancies:
	- DERPNATION._currentLoans (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1467)
	- _currentLoans[tokenId].startBlock = 0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1607)
	DERPNATION._currentLoans (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1467) can be used in cross function reentrancies:
	- DERPNATION._currentLoans (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1467)
	- _currentLoans[tokenId].interest = 0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1608)
	DERPNATION._currentLoans (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1467) can be used in cross function reentrancies:
	- DERPNATION._currentLoans (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1467)
	- _currentLoans[tokenId].loanId = 0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1610)
	DERPNATION._currentLoans (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1467) can be used in cross function reentrancies:
	- DERPNATION._currentLoans (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1467)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

DERPNATION.takeLoan(uint256).currentLoan (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1579) is a local variable never initialized
DERPNATION.tokenData(uint256).currentTokenData (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1709) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

DERPNATION.endowment(address).destination (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1521) lacks a zero-check on :
		- (sent,data) = address(destination).call{value: (address(this).balance / 100)}() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1525)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

ERC721._checkOnERC721Received(address,address,uint256,bytes) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1195-1216) has external calls inside a loop: retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1202-1212)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Reentrancy in DERPNATION.payLoan(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1594-1611):
	External calls:
	- derpContract.safeTransferFrom(address(this),msg.sender,tokenId) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1602)
	State variables written after the call(s):
	- vStats.paidLoanPrinciple = vStats.paidLoanPrinciple + _currentLoans[tokenId].total - _currentLoans[tokenId].interest (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1603)
	- vStats.paidLoanInterest = vStats.paidLoanInterest + _currentLoans[tokenId].interest (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1604)
Reentrancy in DERPNATION.sellToken(uint256,uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1613-1625):
	External calls:
	- safeTransferFrom(msg.sender,address(this),tokenId) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1620)
		- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1202-1212)
	- (sent,data) = address(msg.sender).call{value: price}() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1621)
	External calls sending eth:
	- (sent,data) = address(msg.sender).call{value: price}() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1621)
	State variables written after the call(s):
	- vStats.totalVaultBuyVolume = vStats.totalVaultBuyVolume + price (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1622)
	- vStats.txId = vStats.txId + 1 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1624)
Reentrancy in DERPNATION.takeLoan(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1571-1592):
	External calls:
	- safeTransferFrom(msg.sender,address(this),tokenId) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1577)
		- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1202-1212)
	State variables written after the call(s):
	- vStats.totalLoanPrinciple = vStats.totalLoanPrinciple + loanValue (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1585)
	- vStats.totalLoanInterest = vStats.totalLoanInterest + interest (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1586)
Reentrancy in DERPNATION.takeLoan(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1571-1592):
	External calls:
	- safeTransferFrom(msg.sender,address(this),tokenId) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1577)
		- retval = IERC721Receiver(to).onERC721Received(_msgSender(),from,tokenId,_data) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1202-1212)
	- (sent,data) = address(msg.sender).call{value: loanValue}() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1588)
	External calls sending eth:
	- (sent,data) = address(msg.sender).call{value: loanValue}() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1588)
	State variables written after the call(s):
	- _currentLoans[tokenId] = currentLoan (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1589)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Address.verifyCallResult(bool,bytes,string) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#490-510) uses assembly
	- INLINE ASM (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#502-505)
ERC721._checkOnERC721Received(address,address,uint256,bytes) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1195-1216) uses assembly
	- INLINE ASM (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1208-1210)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

3 different versions of Solidity are used:
	- Version constraint ^0.8.0 is used by:
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#6)
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#52)
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#118)
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#188)
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#215)
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#518)
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#548)
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#576)
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#607)
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#752)
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#783)
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#812)
		-^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1261)
	- Version constraint ^0.8.1 is used by:
		-^0.8.1 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#293)
	- Version constraint 0.8.7 is used by:
		-0.8.7 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1424)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used

Context._msgData() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#205-207) is never used and should be removed
ERC721._burn(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1111-1125) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#6)
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#52)
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#118)
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#188)
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#215)
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#518)
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#548)
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#576)
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#607)
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#752)
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#783)
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#812)
	- ^0.8.0 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1261)
Version constraint ^0.8.1 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.1 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#293)
Version constraint 0.8.7 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables.
It is used by:
	- 0.8.7 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1424)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#349-354):
	- (success,None) = recipient.call{value: amount}() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#352)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#417-428):
	- (success,returndata) = target.call{value: value}(data) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#426)
Low level call in Address.functionStaticCall(address,bytes,string) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#446-455):
	- (success,returndata) = target.staticcall(data) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#453)
Low level call in Address.functionDelegateCall(address,bytes,string) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#473-482):
	- (success,returndata) = target.delegatecall(data) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#480)
Low level call in DERPNATION.endowment(address) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1521-1526):
	- (sent,data) = address(destination).call{value: (address(this).balance / 100)}() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1525)
Low level call in DERPNATION.takeLoan(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1571-1592):
	- (sent,data) = address(msg.sender).call{value: loanValue}() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1588)
Low level call in DERPNATION.sellToken(uint256,uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1613-1625):
	- (sent,data) = address(msg.sender).call{value: price}() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1621)
Low level call in DERPNATION.mint(uint256) (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1646-1670):
	- (sent,data) = address(_a1).call{value: (address(this).balance / 5)}() (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1668)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter ERC721.safeTransferFrom(address,address,uint256,bytes)._data (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#986) is not in mixedCase
Variable DERPNATION._currentLoans (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1467) is not in mixedCase
Variable DERPNATION._lastEndowment (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1472) is not in mixedCase
Variable DERPNATION._loanTerm (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1473) is not in mixedCase
Variable DERPNATION._mintPrice (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1474) is not in mixedCase
Variable DERPNATION._mintRaise (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1475) is not in mixedCase
Variable DERPNATION._loanTermBlocks (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1477) is not in mixedCase
Variable DERPNATION._traitNumbers (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1478) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

DERPNATION._a1 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1479) should be constant 
DERPNATION._a2 (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1480) should be constant 
DERPNATION._ar (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1481) should be constant 
DERPNATION._loanTerm (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1473) should be constant 
DERPNATION._loanTermBlocks (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1477) should be constant 
DERPNATION._maxSupply (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1471) should be constant 
DERPNATION._mintPrice (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1474) should be constant 
DERPNATION._pixelPawnAddress (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1482) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

DERPNATION._mintRaise (0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol#1475) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x06a07a3911dab4507dd44cd97e30c3267d4a9c63.sol analyzed (15 contracts with 94 detectors), 46 result(s) found

real	0m3.573s
user	0m3.283s
sys	0m0.292s
