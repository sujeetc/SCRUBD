'solc --version' running
'solc ./0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol:
./0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol:6:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
./0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol:40:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TokenERC20(uint256 initialSupply, string tokenName, string tokenSymbol) public {
    ^ (Relevant source part starts here and spans across multiple lines).
./0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol:122:2: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
	function EncryptedToken() TokenERC20(INITIAL_SUPPLY, 'BitAlly Token', 'BITT') payable public {}
	^---------------------------------------------------------------------------------------------^
./0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol:20:28: Warning: Functions in interfaces should be declared external.
interface tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData) public; }
                           ^-----------------------------------------------------------------------------------------------^
./0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol:99:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
./0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol:110:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(_from, _value);
        ^-----------------^
./0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol:144:9: Warning: Invoking events without "emit" prefix is deprecated.
        FrozenFunds(target, freeze);
        ^-------------------------^
./0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol:157:7: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    		owner.send(msg.value);//
    		^-------------------^


EncryptedToken (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#115-166) has incorrect ERC20 function interface:TokenERC20.transfer(address,uint256) (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#67-69)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

EncryptedToken.fallback() (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#156-160) ignores return value by owner.send(msg.value) (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#157)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

owned.transferOwnership(address) (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#15-17) should emit an event for: 
	- owner = newOwner (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#16) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

owned.transferOwnership(address).newOwner (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#15) lacks a zero-check on :
		- owner = newOwner (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

TokenERC20._transfer(address,address,uint256) (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#48-65) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Version constraint ^0.4.25 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x.
It is used by:
	- ^0.4.25 (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#1)
solc-0.4.25 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract owned (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#3-18) is not in CapWords
Contract tokenRecipient (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#20) is not in CapWords
Parameter TokenERC20.transfer(address,uint256)._to (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#67) is not in mixedCase
Parameter TokenERC20.transfer(address,uint256)._value (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#67) is not in mixedCase
Parameter TokenERC20.transferFrom(address,address,uint256)._from (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#71) is not in mixedCase
Parameter TokenERC20.transferFrom(address,address,uint256)._to (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#71) is not in mixedCase
Parameter TokenERC20.transferFrom(address,address,uint256)._value (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#71) is not in mixedCase
Parameter TokenERC20.approve(address,uint256)._spender (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#78) is not in mixedCase
Parameter TokenERC20.approve(address,uint256)._value (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#78) is not in mixedCase
Parameter TokenERC20.approveAndCall(address,uint256,bytes)._spender (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#85) is not in mixedCase
Parameter TokenERC20.approveAndCall(address,uint256,bytes)._value (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#85) is not in mixedCase
Parameter TokenERC20.approveAndCall(address,uint256,bytes)._extraData (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#85) is not in mixedCase
Parameter TokenERC20.burn(uint256)._value (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#95) is not in mixedCase
Parameter TokenERC20.burnFrom(address,uint256)._from (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#104) is not in mixedCase
Parameter TokenERC20.burnFrom(address,uint256)._value (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#104) is not in mixedCase
Variable EncryptedToken.INITIAL_SUPPLY (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#116) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in EncryptedToken.fallback() (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#156-160):
	External calls:
	- owner.send(msg.value) (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#157)
	State variables written after the call(s):
	- _transfer(owner,msg.sender,amount) (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#159)
		- balanceOf[_from] -= _value (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#130)
		- balanceOf[_to] += _value (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#131)
	Event emitted after the call(s):
	- Transfer(_from,_to,_value) (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#132)
		- _transfer(owner,msg.sender,amount) (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#159)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

EncryptedToken.slitherConstructorVariables() (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#115-166) uses literals with too many digits:
	- INITIAL_SUPPLY = 10000000000 (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#116)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

EncryptedToken.INITIAL_SUPPLY (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#116) should be constant 
TokenERC20.decimals (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#25) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

receiveApproval(address,uint256,address,bytes) should be declared external:
	- tokenRecipient.receiveApproval(address,uint256,address,bytes) (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#20)
approveAndCall(address,uint256,bytes) should be declared external:
	- TokenERC20.approveAndCall(address,uint256,bytes) (0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol#85-93)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
./0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4.sol analyzed (4 contracts with 94 detectors), 29 result(s) found

real	0m1.739s
user	0m1.530s
sys	0m0.211s
