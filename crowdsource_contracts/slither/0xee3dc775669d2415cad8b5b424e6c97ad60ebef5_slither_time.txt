'solc --version' running
'solc ./0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol:
./0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol:229:7: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    		owner.send(num);
    		^-------------^


EncryptedToken.getEth(uint256) (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#228-230) sends eth to arbitrary user
	Dangerous calls:
	- owner.send(num) (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#229)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

EncryptedToken.selfdestructs() (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#223-225) allows anyone to destruct the contract
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#suicidal

EncryptedToken (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#159-237) has incorrect ERC20 function interface:TokenERC20.transfer(address,uint256) (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#81-83)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

EncryptedToken.getEth(uint256) (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#228-230) ignores return value by owner.send(num) (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#229)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

owned.transferOwnership(address) (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#15-17) should emit an event for: 
	- owner = newOwner (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#16) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

owned.transferOwnership(address).newOwner (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#15) lacks a zero-check on :
		- owner = newOwner (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

TokenERC20._transfer(address,address,uint256) (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#54-72) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Version constraint ^0.4.16 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector.
It is used by:
	- ^0.4.16 (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#1)
solc-0.4.16 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract owned (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#3-18) is not in CapWords
Contract tokenRecipient (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#20) is not in CapWords
Parameter TokenERC20.transfer(address,uint256)._to (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#81) is not in mixedCase
Parameter TokenERC20.transfer(address,uint256)._value (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#81) is not in mixedCase
Parameter TokenERC20.transferFrom(address,address,uint256)._from (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#91) is not in mixedCase
Parameter TokenERC20.transferFrom(address,address,uint256)._to (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#91) is not in mixedCase
Parameter TokenERC20.transferFrom(address,address,uint256)._value (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#91) is not in mixedCase
Parameter TokenERC20.approve(address,uint256)._spender (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#106) is not in mixedCase
Parameter TokenERC20.approve(address,uint256)._value (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#106) is not in mixedCase
Parameter TokenERC20.approveAndCall(address,uint256,bytes)._spender (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#119) is not in mixedCase
Parameter TokenERC20.approveAndCall(address,uint256,bytes)._value (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#119) is not in mixedCase
Parameter TokenERC20.approveAndCall(address,uint256,bytes)._extraData (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#119) is not in mixedCase
Parameter TokenERC20.burn(uint256)._value (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#132) is not in mixedCase
Parameter TokenERC20.burnFrom(address,uint256)._from (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#148) is not in mixedCase
Parameter TokenERC20.burnFrom(address,uint256)._value (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#148) is not in mixedCase
Parameter EncryptedToken.balanceOfa(address)._owner (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#233) is not in mixedCase
Variable EncryptedToken.INITIAL_SUPPLY (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#160) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

EncryptedToken.slitherConstructorVariables() (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#159-237) uses literals with too many digits:
	- INITIAL_SUPPLY = 500000000 (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#160)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

EncryptedToken.INITIAL_SUPPLY (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#160) should be constant 
TokenERC20.decimals (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#25) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

receiveApproval(address,uint256,address,bytes) should be declared external:
	- tokenRecipient.receiveApproval(address,uint256,address,bytes) (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#20)
approveAndCall(address,uint256,bytes) should be declared external:
	- TokenERC20.approveAndCall(address,uint256,bytes) (0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol#119-127)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
./0xee3dc775669d2415cad8b5b424e6c97ad60ebef5.sol analyzed (4 contracts with 94 detectors), 31 result(s) found

real	0m1.553s
user	0m1.366s
sys	0m0.190s
