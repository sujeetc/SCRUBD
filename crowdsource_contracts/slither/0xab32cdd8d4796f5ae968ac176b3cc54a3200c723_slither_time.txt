'solc --version' running
'solc ./0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

ICO.isContract(address) (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#100-104) is declared view but contains assembly code
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#constant-functions-using-assembly-code

ERC20 (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#20-23) has incorrect ERC20 function interface:ERC20.transfer(address,uint256) (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#21)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

owned.changeOwner(address) (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#15) should emit an event for: 
	- owner = newown (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#15) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

ICO.setStart(uint256) (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#55) should emit an event for: 
	- start = newstart (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#55) 
ICO.setDuration(uint256) (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#56) should emit an event for: 
	- duration = dur (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#56) 
ICO.setRate(uint256) (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#57) should emit an event for: 
	- tokpereth = rate (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#57) 
ICO.setMinimum(uint256) (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#58) should emit an event for: 
	- minfinney = newmin (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#58) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

owned.changeOwner(address).newown (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#15) lacks a zero-check on :
		- owner = newown (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#15)
ICO.setTreasury(address).treas (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#54) lacks a zero-check on :
		- treasury = treas (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#54)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

ICO.fallback() (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#60-83) uses timestamp for comparisons
	Dangerous comparisons:
	- now < start || now > (start + duration) (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#62)
ICO.claimUnsold() (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#86-90) uses timestamp for comparisons
	Dangerous comparisons:
	- now < (start + duration) (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#87)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

ICO.isContract(address) (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#100-104) uses assembly
	- INLINE ASM (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#102-103)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Version constraint ^0.4.21 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData
	- NestedArrayFunctionCallDecoder.
It is used by:
	- ^0.4.21 (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#4)
solc-0.4.21 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract owned (0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol#6-17) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
./0xab32cdd8d4796f5ae968ac176b3cc54a3200c723.sol analyzed (3 contracts with 94 detectors), 15 result(s) found

real	0m1.388s
user	0m1.189s
sys	0m0.202s
