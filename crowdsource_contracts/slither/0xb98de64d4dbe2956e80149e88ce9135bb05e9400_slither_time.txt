'solc --version' running
'solc ./0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

Bounty.getTokens(address) (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#73-82) ignores return value by token.transfer(beneficiary,BountyAmount) (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#77)
RealEstateCryptoFundBounty.drainRemainingTokens() (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#99-101) ignores return value by token.transfer(owner,token.balanceOf(this)) (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#100)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

Contract locking ether found:
	Contract RealEstateCryptoFundBounty (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#92-103) has payable functions:
	 - Bounty.fallback() (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#63-65)
	 - Bounty.getTokens(address) (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#73-82)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether

Reentrancy in Bounty.getTokens(address) (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#73-82):
	External calls:
	- token.transfer(beneficiary,BountyAmount) (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#77)
	State variables written after the call(s):
	- participated[beneficiary] = true (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#81)
	Bounty.participated (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#53) can be used in cross function reentrancies:
	- Bounty.getTokens(address) (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#73-82)
	- Bounty.participated (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#53)
	- Bounty.validPurchase(address) (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#85-88)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Reentrancy in Bounty.getTokens(address) (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#73-82):
	External calls:
	- token.transfer(beneficiary,BountyAmount) (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#77)
	Event emitted after the call(s):
	- TokenBounty(beneficiary,BountyAmount) (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#79)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Version constraint ^0.4.21 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData
	- NestedArrayFunctionCallDecoder.
It is used by:
	- ^0.4.21 (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#1)
solc-0.4.21 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter Bounty.setBountyAmount(uint256)._BountyAmount (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#67) is not in mixedCase
Variable Bounty.BountyAmount (0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol#49) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
./0xb98de64d4dbe2956e80149e88ce9135bb05e9400.sol analyzed (4 contracts with 94 detectors), 9 result(s) found

real	0m1.563s
user	0m1.341s
sys	0m0.225s
