'solc --version' running
'solc ./0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol:
./0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol:258:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function tokenFallback(address from, uint value, bytes memory data) public pure {
	                       ^----------^
./0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol:258:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function tokenFallback(address from, uint value, bytes memory data) public pure {
	                                     ^--------^
./0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol:258:51: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function tokenFallback(address from, uint value, bytes memory data) public pure {
	                                                 ^---------------^
./0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol:1108:25: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function tokenFallback(address from, uint value, bytes memory data) public pure{
	                       ^----------^
./0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol:1108:39: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function tokenFallback(address from, uint value, bytes memory data) public pure{
	                                     ^--------^
./0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol:1108:51: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
	function tokenFallback(address from, uint value, bytes memory data) public pure{
	                                                 ^---------------^


Reentrancy in HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929):
	External calls:
	- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#866)
	- refHandler.buyTokensFromBalance(NULL_ADDRESS,eth) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#871)
	- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#882)
	- refHandler.sendETH(address(this),eth - address(this).balance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#886)
	- refHandler.buyTokens.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- refHandler.buyTokens.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- refHandler.buyTokens.value(eth)(address(this)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	External calls sending eth:
	- address(refHandler).transfer(tmp) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#868)
	- refHandler.buyTokens.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- refHandler.buyTokens.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- refHandler.buyTokens.value(eth)(address(this)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	State variables written after the call(s):
	- balances[creator] += createdTokens (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#908)
	HourglassX.balances (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#341) can be used in cross function reentrancies:
	- HourglassX.acquireGauntlet(uint256,uint8,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#485-524)
	- HourglassX.actualTransfer(address,address,uint256,bytes,string,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1035-1077)
	- HourglassX.balanceOf(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#708-710)
	- HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929)
	- HourglassX.destroyTokens(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#932-967)
	- HourglassX.dividendsOf(address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#728-734)
	- HourglassX.exit() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#633-642)
	- HourglassX.myBalance() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#713-715)
	- HourglassX.updateUsableBalanceOf(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#794-809)
	- HourglassX.usableBalanceOf(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#694-700)
	- savedReferral[creator] = referrer (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#926)
	HourglassX.savedReferral (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#329) can be used in cross function reentrancies:
	- HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929)
	- HourglassX.savedReferral (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#329)
	- HourglassX.setReferrer(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#645-647)
	- HourglassX.setReferrer(string) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#650-652)
Reentrancy in HourglassX.reinvestPartial(uint256,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#572-603):
	External calls:
	- tokensCreated = createTokens(accountHolder,ethToReinvest,NULL_ADDRESS,true) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#597)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#866)
		- refHandler.buyTokensFromBalance(NULL_ADDRESS,eth) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#871)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#882)
		- refHandler.sendETH(address(this),eth - address(this).balance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#886)
		- refHandler.buyTokens.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
		- refHandler.buyTokens.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- refHandler.buyTokens.value(eth)(address(this)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
		- hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- refHandler.sendETH(to,amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#976)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#980)
		- refHandler.sendETH(to,childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#985)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#987)
	External calls sending eth:
	- tokensCreated = createTokens(accountHolder,ethToReinvest,NULL_ADDRESS,true) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#597)
		- address(refHandler).transfer(tmp) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#868)
		- refHandler.buyTokens.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
		- refHandler.buyTokens.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- refHandler.buyTokens.value(eth)(address(this)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
		- hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- to.transfer(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#982)
		- to.transfer(amount - childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#989)
	State variables written after the call(s):
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- bonuses[accountHolder] = 0 (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1018)
		- bonuses[bonuser] += bonus (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1004)
	HourglassX.bonuses (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#328) can be used in cross function reentrancies:
	- HourglassX.clearDividends(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1013-1022)
	- HourglassX.distributeDividends(uint256,address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#996-1010)
	- HourglassX.dividendsOf(address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#728-734)
	- HourglassX.myRefBonus() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#757-759)
	- HourglassX.refBonusOf(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#752-754)
	- HourglassX.reinvestPartial(uint256,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#572-603)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- lastTotalBalance += delta (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1007)
		- lastTotalBalance = lastTotalBalance.sub(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#992)
	HourglassX.lastTotalBalance (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#313) can be used in cross function reentrancies:
	- HourglassX.buy(string) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#546-555)
	- HourglassX.buy(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#532-541)
	- HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929)
	- HourglassX.destroyTokens(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#932-967)
	- HourglassX.distributeDividends(uint256,address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#996-1010)
	- HourglassX.fallback() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#469-481)
	- HourglassX.lastTotalBalance (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#313)
	- HourglassX.sendETH(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#970-993)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- payouts[accountHolder] += int256(payout * ROUNDING_MAGNITUDE) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1017)
	HourglassX.payouts (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#327) can be used in cross function reentrancies:
	- HourglassX.actualTransfer(address,address,uint256,bytes,string,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1035-1077)
	- HourglassX.clearDividends(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1013-1022)
	- HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929)
	- HourglassX.destroyTokens(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#932-967)
	- HourglassX.dividendsOf(address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#728-734)
	- HourglassX.reinvestPartial(uint256,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#572-603)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- profitPerShare = profitPerShare.add(((delta - bonus) * ROUNDING_MAGNITUDE) / totalSupply) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1006)
	HourglassX.profitPerShare (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#312) can be used in cross function reentrancies:
	- HourglassX.actualTransfer(address,address,uint256,bytes,string,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1035-1077)
	- HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929)
	- HourglassX.destroyTokens(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#932-967)
	- HourglassX.distributeDividends(uint256,address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#996-1010)
	- HourglassX.dividendsOf(address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#728-734)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

HourglassXReferralHandler.takeShitcoin(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#263-267) ignores return value by s.transfer(msg.sender,s.balanceOf(address(this))) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#266)
HourglassX.takeShitcoin(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1113-1118) ignores return value by s.transfer(msg.sender,s.balanceOf(address(this))) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1117)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

Reentrancy in HourglassX.destroyTokens(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#932-967):
	External calls:
	- hourglass.sell(bags) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#944)
	- hourglass.sell(tokenBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#948)
	- refHandler.sellTokens(bags - tokenBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#950)
	State variables written after the call(s):
	- balances[weakHand] -= bags (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#958)
	HourglassX.balances (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#341) can be used in cross function reentrancies:
	- HourglassX.acquireGauntlet(uint256,uint8,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#485-524)
	- HourglassX.actualTransfer(address,address,uint256,bytes,string,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1035-1077)
	- HourglassX.balanceOf(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#708-710)
	- HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929)
	- HourglassX.destroyTokens(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#932-967)
	- HourglassX.dividendsOf(address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#728-734)
	- HourglassX.exit() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#633-642)
	- HourglassX.myBalance() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#713-715)
	- HourglassX.updateUsableBalanceOf(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#794-809)
	- HourglassX.usableBalanceOf(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#694-700)
	- totalSupply -= bags (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#959)
	HourglassX.totalSupply (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#346) can be used in cross function reentrancies:
	- HourglassX.constructor(address,address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#286-306)
	- HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929)
	- HourglassX.destroyTokens(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#932-967)
	- HourglassX.distributeDividends(uint256,address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#996-1010)
	- HourglassX.totalSupply (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#346)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

HourglassXReferralHandler.buyTokens(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#220-222) ignores return value by hourglass.buy.value(msg.value)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#221)
HourglassXReferralHandler.buyTokensFromBalance(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#225-230) ignores return value by hourglass.buy.value(amount)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#229)
HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929) ignores return value by hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929) ignores return value by hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929) ignores return value by hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

HourglassX.createTokens(address,uint256,address,bool).tmp (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#826) is written in both
	tmp = hourglass.balanceOf(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#877)
	tmp = 0 (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#900)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#write-after-write

HourglassX.transferFrom(address,address,uint256).allowance (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#460) shadows:
	- HourglassX.allowance(address,address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#718-720) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

HourglassX.acceptNewOwner() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#399-402) should emit an event for: 
	- owner = msg.sender (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#401) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

HourglassX.setReferralRequirement(uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#411-413) should emit an event for: 
	- referralRequirement = r (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#412) 
HourglassX.fallback() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#469-481) should emit an event for: 
	- lastTotalBalance += msg.value (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#475) 
	- lastTotalBalance -= msg.value (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#477) 
HourglassX.buy(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#532-541) should emit an event for: 
	- lastTotalBalance += msg.value (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#536) 
	- lastTotalBalance -= msg.value (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#538) 
HourglassX.buy(string) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#546-555) should emit an event for: 
	- lastTotalBalance += msg.value (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#550) 
	- lastTotalBalance -= msg.value (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#552) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

HourglassXReferralHandler.sendETH(address,uint256).to (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#245) lacks a zero-check on :
		- to.transfer(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#249)
HourglassX.setNewOwner(address).o (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#395) lacks a zero-check on :
		- newOwner = o (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#396)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929):
	External calls:
	- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#866)
	- refHandler.buyTokensFromBalance(NULL_ADDRESS,eth) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#871)
	- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#882)
	- refHandler.sendETH(address(this),eth - address(this).balance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#886)
	- refHandler.buyTokens.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- refHandler.buyTokens.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- refHandler.buyTokens.value(eth)(address(this)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	External calls sending eth:
	- address(refHandler).transfer(tmp) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#868)
	- refHandler.buyTokens.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- refHandler.buyTokens.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- refHandler.buyTokens.value(eth)(address(this)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	State variables written after the call(s):
	- distributeDividends(0,referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#923)
		- bonuses[bonuser] += bonus (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1004)
	- distributeDividends(referralBonus,referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#923)
		- bonuses[bonuser] += bonus (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1004)
	- lastTotalBalance = lastTotalBalance.sub(eth) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#921)
	- distributeDividends(0,referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#923)
		- lastTotalBalance += delta (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1007)
	- distributeDividends(referralBonus,referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#923)
		- lastTotalBalance += delta (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1007)
	- payouts[creator] += int256(profitPerShare * createdTokens) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#916)
	- distributeDividends(0,referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#923)
		- profitPerShare = profitPerShare.add(((delta - bonus) * ROUNDING_MAGNITUDE) / totalSupply) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1006)
	- distributeDividends(referralBonus,referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#923)
		- profitPerShare = profitPerShare.add(((delta - bonus) * ROUNDING_MAGNITUDE) / totalSupply) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1006)
	- totalSupply += createdTokens (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#894)
	- totalSupply += bonusTokens (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#909)
Reentrancy in HourglassX.destroyTokens(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#932-967):
	External calls:
	- hourglass.sell(bags) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#944)
	- hourglass.sell(tokenBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#948)
	- refHandler.sellTokens(bags - tokenBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#950)
	State variables written after the call(s):
	- payouts[weakHand] = payouts[weakHand].sub(updatedPayouts) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#955)
Reentrancy in HourglassX.sendETH(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#970-993):
	External calls:
	- refHandler.sendETH(to,amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#976)
	- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#980)
	- refHandler.sendETH(to,childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#985)
	- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#987)
	External calls sending eth:
	- to.transfer(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#982)
	- to.transfer(amount - childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#989)
	State variables written after the call(s):
	- lastTotalBalance = lastTotalBalance.sub(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#992)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in HourglassX.acquireGauntlet(uint256,uint8,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#485-524):
	External calls:
	- require(bool,string)(ExternalGauntletInterface(address(end)).gauntletRequirement(msg.sender,0,amount),External gauntlet check failed) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#508)
	Event emitted after the call(s):
	- onExternalGauntletAcquired(msg.sender,amount,address(end)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#509)
Reentrancy in HourglassX.acquireGauntlet(uint256,uint8,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#485-524):
	External calls:
	- require(bool,string)(ExternalGauntletInterface(address(end)).gauntletRequirement(msg.sender,oldGauntletBalance,amount),External gauntlet check failed) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#516)
	Event emitted after the call(s):
	- onExternalGauntletAcquired(msg.sender,amount,address(end)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#517)
Reentrancy in HourglassX.actualTransfer(address,address,uint256,bytes,string,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1035-1077):
	External calls:
	- destroyTokens(from,value) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1047)
		- hourglass.sell(bags) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#944)
		- hourglass.sell(tokenBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#948)
		- refHandler.sellTokens(bags - tokenBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#950)
	- withdrawDividends(from) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1049)
		- refHandler.sendETH(to,amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#976)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#980)
		- refHandler.sendETH(to,childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#985)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#987)
	External calls sending eth:
	- withdrawDividends(from) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1049)
		- to.transfer(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#982)
		- to.transfer(amount - childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#989)
	Event emitted after the call(s):
	- onWithdraw(accountHolder,payout,bonusPayout,false) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1030)
		- withdrawDividends(from) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1049)
Reentrancy in HourglassX.actualTransfer(address,address,uint256,bytes,string,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1035-1077):
	External calls:
	- receiver.tokenFallback(from,value,data) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1066)
	- (success,returnData) = to.call.value(0)(abi.encodeWithSignature(func,from,value,data)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1070)
	External calls sending eth:
	- (success,returnData) = to.call.value(0)(abi.encodeWithSignature(func,from,value,data)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1070)
	Event emitted after the call(s):
	- Transfer(from,to,value,data) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1074)
	- Transfer(from,to,value) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1075)
Reentrancy in HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929):
	External calls:
	- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#866)
	- refHandler.buyTokensFromBalance(NULL_ADDRESS,eth) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#871)
	- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#882)
	- refHandler.sendETH(address(this),eth - address(this).balance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#886)
	- refHandler.buyTokens.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- refHandler.buyTokens.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- refHandler.buyTokens.value(eth)(address(this)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	External calls sending eth:
	- address(refHandler).transfer(tmp) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#868)
	- refHandler.buyTokens.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- refHandler.buyTokens.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- refHandler.buyTokens.value(eth)(address(this)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	Event emitted after the call(s):
	- Transfer(address(this),creator,createdTokens,) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#912)
	- Transfer(address(this),creator,createdTokens) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#913)
	- onTokenPurchase(creator,eth,createdTokens,bonusTokens,referrer,uint8(tmp)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#905)
Reentrancy in HourglassX.destroyTokens(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#932-967):
	External calls:
	- hourglass.sell(bags) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#944)
	- hourglass.sell(tokenBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#948)
	- refHandler.sellTokens(bags - tokenBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#950)
	Event emitted after the call(s):
	- Transfer(weakHand,address(this),bags,) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#964)
	- Transfer(weakHand,address(this),bags) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#965)
	- onTokenSell(weakHand,bags,ethReceived) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#961)
Reentrancy in HourglassX.exit() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#633-642):
	External calls:
	- destroyTokens(accountHolder,balance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#637)
		- hourglass.sell(bags) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#944)
		- hourglass.sell(tokenBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#948)
		- refHandler.sellTokens(bags - tokenBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#950)
	- withdrawDividends(accountHolder) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#640)
		- refHandler.sendETH(to,amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#976)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#980)
		- refHandler.sendETH(to,childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#985)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#987)
	External calls sending eth:
	- withdrawDividends(accountHolder) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#640)
		- to.transfer(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#982)
		- to.transfer(amount - childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#989)
	Event emitted after the call(s):
	- onWithdraw(accountHolder,payout,bonusPayout,false) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1030)
		- withdrawDividends(accountHolder) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#640)
Reentrancy in HourglassX.reinvestPartial(uint256,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#572-603):
	External calls:
	- tokensCreated = createTokens(accountHolder,ethToReinvest,NULL_ADDRESS,true) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#597)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#866)
		- refHandler.buyTokensFromBalance(NULL_ADDRESS,eth) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#871)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#882)
		- refHandler.sendETH(address(this),eth - address(this).balance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#886)
		- refHandler.buyTokens.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
		- refHandler.buyTokens.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- refHandler.buyTokens.value(eth)(address(this)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
		- hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- refHandler.sendETH(to,amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#976)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#980)
		- refHandler.sendETH(to,childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#985)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#987)
	External calls sending eth:
	- tokensCreated = createTokens(accountHolder,ethToReinvest,NULL_ADDRESS,true) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#597)
		- address(refHandler).transfer(tmp) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#868)
		- refHandler.buyTokens.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
		- refHandler.buyTokens.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- refHandler.buyTokens.value(eth)(address(this)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
		- hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- to.transfer(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#982)
		- to.transfer(amount - childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#989)
	Event emitted after the call(s):
	- onWithdraw(accountHolder,payout,bonusPayout,false) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1030)
		- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
Reentrancy in HourglassX.sell(uint256,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#611-618):
	External calls:
	- sellAmount = destroyTokens(msg.sender,amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#613)
		- hourglass.sell(bags) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#944)
		- hourglass.sell(tokenBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#948)
		- refHandler.sellTokens(bags - tokenBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#950)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#615)
		- refHandler.sendETH(to,amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#976)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#980)
		- refHandler.sendETH(to,childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#985)
		- hourglass.withdraw() (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#987)
	External calls sending eth:
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#615)
		- to.transfer(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#982)
		- to.transfer(amount - childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#989)
	Event emitted after the call(s):
	- onWithdraw(accountHolder,payout,bonusPayout,false) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1030)
		- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#615)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

HourglassX.acquireGauntlet(uint256,uint8,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#485-524) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(end >= (block.timestamp + 97200),Gauntlet time must be >= 4 weeks) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#500)
HourglassX.isGauntletExpired(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#780-791) uses timestamp for comparisons
	Dangerous comparisons:
	- (block.timestamp >= gauntletEnd[holder]) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#783)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

HourglassX.isContract(address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1098-1105) uses assembly
	- INLINE ASM (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1100-1104)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929) has a high cyclomatic complexity (23).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

Version constraint ^0.5.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor
	- IncorrectEventSignatureInLibraries
	- ABIEncoderV2PackedStorage.
It is used by:
	- ^0.5.0 (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1)
solc-0.5.0 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in HourglassX.actualTransfer(address,address,uint256,bytes,string,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1035-1077):
	- (success,returnData) = to.call.value(0)(abi.encodeWithSignature(func,from,value,data)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1070)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

HourglassXReferralHandler (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#197-268) should inherit from ERC223Handler (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#75-77)
HourglassX (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#270-1119) should inherit from ERC20interface (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#57-64)
HourglassX (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#270-1119) should inherit from ERC223interface (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#66-72)
HourglassX (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#270-1119) should inherit from ERC223Handler (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#75-77)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance

Event HourglassX.onTokenPurchase(address,uint256,uint256,uint256,address,uint8) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#357-365) is not in CapWords
Event HourglassX.onTokenSell(address,uint256,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#366-370) is not in CapWords
Event HourglassX.onWithdraw(address,uint256,uint256,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#371-376) is not in CapWords
Event HourglassX.onDonatedDividends(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#377-380) is not in CapWords
Event HourglassX.onGauntletAcquired(address,uint256,uint8,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#381-386) is not in CapWords
Event HourglassX.onExternalGauntletAcquired(address,uint256,address) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#387-391) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in HourglassX.createTokens(address,uint256,address,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#812-929):
	External calls:
	- address(refHandler).transfer(tmp) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#868)
	External calls sending eth:
	- address(refHandler).transfer(tmp) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#868)
	- refHandler.buyTokens.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- refHandler.buyTokens.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- refHandler.buyTokens.value(eth)(address(this)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
	- hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	State variables written after the call(s):
	- balances[creator] += createdTokens (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#908)
	- distributeDividends(0,referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#923)
		- bonuses[bonuser] += bonus (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1004)
	- distributeDividends(referralBonus,referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#923)
		- bonuses[bonuser] += bonus (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1004)
	- lastTotalBalance = lastTotalBalance.sub(eth) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#921)
	- distributeDividends(0,referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#923)
		- lastTotalBalance += delta (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1007)
	- distributeDividends(referralBonus,referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#923)
		- lastTotalBalance += delta (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1007)
	- payouts[creator] += int256(profitPerShare * createdTokens) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#916)
	- distributeDividends(0,referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#923)
		- profitPerShare = profitPerShare.add(((delta - bonus) * ROUNDING_MAGNITUDE) / totalSupply) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1006)
	- distributeDividends(referralBonus,referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#923)
		- profitPerShare = profitPerShare.add(((delta - bonus) * ROUNDING_MAGNITUDE) / totalSupply) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1006)
	- savedReferral[creator] = referrer (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#926)
	- totalSupply += createdTokens (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#894)
	- totalSupply += bonusTokens (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#909)
	Event emitted after the call(s):
	- Transfer(address(this),creator,createdTokens,) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#912)
	- Transfer(address(this),creator,createdTokens) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#913)
	- onTokenPurchase(creator,eth,createdTokens,bonusTokens,referrer,uint8(tmp)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#905)
Reentrancy in HourglassX.reinvestPartial(uint256,bool) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#572-603):
	External calls:
	- tokensCreated = createTokens(accountHolder,ethToReinvest,NULL_ADDRESS,true) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#597)
		- address(refHandler).transfer(tmp) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#868)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- to.transfer(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#982)
		- to.transfer(amount - childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#989)
	External calls sending eth:
	- tokensCreated = createTokens(accountHolder,ethToReinvest,NULL_ADDRESS,true) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#597)
		- address(refHandler).transfer(tmp) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#868)
		- refHandler.buyTokens.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- hourglass.buy.value(eth)(NULL_ADDRESS) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
		- refHandler.buyTokens.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- refHandler.buyTokens.value(eth)(address(this)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#875)
		- hourglass.buy.value(eth)(referrer) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
		- hourglass.buy.value(eth)(address(refHandler)) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#889)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- to.transfer(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#982)
		- to.transfer(amount - childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#989)
	State variables written after the call(s):
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- bonuses[accountHolder] = 0 (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1018)
		- bonuses[bonuser] += bonus (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1004)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- lastTotalBalance += delta (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1007)
		- lastTotalBalance = lastTotalBalance.sub(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#992)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- payouts[accountHolder] += int256(payout * ROUNDING_MAGNITUDE) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1017)
	- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
		- profitPerShare = profitPerShare.add(((delta - bonus) * ROUNDING_MAGNITUDE) / totalSupply) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1006)
	Event emitted after the call(s):
	- onWithdraw(accountHolder,payout,bonusPayout,false) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1030)
		- withdrawDividends(msg.sender) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#600)
Reentrancy in HourglassX.sendETH(address,uint256) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#970-993):
	External calls:
	- to.transfer(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#982)
	- to.transfer(amount - childTotalBalance) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#989)
	State variables written after the call(s):
	- lastTotalBalance = lastTotalBalance.sub(amount) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#992)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

tokenFallback(address,uint256,bytes) should be declared external:
	- HourglassXReferralHandler.tokenFallback(address,uint256,bytes) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#258-260)
Moreover, the following function parameters should change its data location:
data location should be calldata
rebrand(string,string) should be declared external:
	- HourglassX.rebrand(string,string) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#405-408)
Moreover, the following function parameters should change its data location:
n location should be calldata
s location should be calldata
transfer(address,uint256,bytes,string) should be declared external:
	- HourglassX.transfer(address,uint256,bytes,string) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#433-436)
Moreover, the following function parameters should change its data location:
data location should be calldata
func location should be calldata
transfer(address,uint256,bytes) should be declared external:
	- HourglassX.transfer(address,uint256,bytes) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#439-442)
Moreover, the following function parameters should change its data location:
data location should be calldata
buy(string) should be declared external:
	- HourglassX.buy(string) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#546-555)
Moreover, the following function parameters should change its data location:
referrerName location should be calldata
setReferrer(string) should be declared external:
	- HourglassX.setReferrer(string) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#650-652)
Moreover, the following function parameters should change its data location:
refName location should be calldata
tokenFallback(address,uint256,bytes) should be declared external:
	- HourglassX.tokenFallback(address,uint256,bytes) (0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol#1108-1110)
Moreover, the following function parameters should change its data location:
data location should be calldata
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
./0x058a144951e062fc14f310057d2fd9ef0cf5095b.sol analyzed (9 contracts with 94 detectors), 58 result(s) found

real	0m7.106s
user	0m6.717s
sys	0m0.386s
