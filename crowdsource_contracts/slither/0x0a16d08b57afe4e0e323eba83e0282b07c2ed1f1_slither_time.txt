'solc --version' running
'solc ./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

Reentrancy in Spitz.Launch(uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#645-661):
	External calls:
	- _addLp(_lpSupply,msg.value) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#653)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#665-672)
	- _transfer(address(this),owner(),_leftover) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#656)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#831-837)
		- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	External calls sending eth:
	- _addLp(_lpSupply,msg.value) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#653)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#665-672)
	- _transfer(address(this),owner(),_leftover) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#656)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
		- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	State variables written after the call(s):
	- _launchBlock = block.number (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#660)
	Spitz._launchBlock (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#576) can be used in cross function reentrancies:
	- Spitz.Launch(uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#645-661)
	- Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822)
	- _launchTime = block.timestamp (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#659)
	Spitz._launchTime (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#575) can be used in cross function reentrancies:
	- Spitz.Launch(uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#645-661)
	- tradingActive = true (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#658)
	Spitz.tradingActive (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#585) can be used in cross function reentrancies:
	- Spitz.Launch(uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#645-661)
	- Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822)
	- Spitz.tradingActive (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#585)
Reentrancy in Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822):
	External calls:
	- swapBack() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#798)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#831-837)
		- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	External calls sending eth:
	- swapBack() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#798)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
		- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	State variables written after the call(s):
	- super._transfer(from,address(this),fees) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#814)
		- _balances[from] = fromBalance - amount (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#140)
		- _balances[to] += amount (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#142)
	ERC20._balances (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#48) can be used in cross function reentrancies:
	- ERC20._mint(address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#149-159)
	- ERC20._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#127-147)
	- ERC20.balanceOf(address) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#79-81)
	- super._transfer(from,to,amount) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#820)
		- _balances[from] = fromBalance - amount (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#140)
		- _balances[to] += amount (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#142)
	ERC20._balances (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#48) can be used in cross function reentrancies:
	- ERC20._mint(address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#149-159)
	- ERC20._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#127-147)
	- ERC20.balanceOf(address) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#79-81)
	- _swapping = false (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#799)
	Spitz._swapping (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#574) can be used in cross function reentrancies:
	- Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822)
	- _tokensForLiquidity += fees * _liquidityFee / totalFees (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#811)
	Spitz._tokensForLiquidity (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#596) can be used in cross function reentrancies:
	- Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822)
	- Spitz.swapBack() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#853-883)
	- _tokensForMarketing += fees * _marketingFee / totalFees (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#812)
	Spitz._tokensForMarketing (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#595) can be used in cross function reentrancies:
	- Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822)
	- Spitz.swapBack() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#853-883)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Spitz._isBlacklisted (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#573) is never initialized. It is used in:
	- Spitz.isSniper(address) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#730-732)
	- Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables

Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822) performs a multiplication on the result of a division:
	- fees = amount.mul(totalFees).div(100) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#810)
	- _tokensForLiquidity += fees * _liquidityFee / totalFees (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#811)
Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822) performs a multiplication on the result of a division:
	- fees = amount.mul(totalFees).div(100) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#810)
	- _tokensForMarketing += fees * _marketingFee / totalFees (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#812)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

Reentrancy in Spitz.swapBack() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#853-883):
	External calls:
	- _swapTokensForEth(amountToSwapForETH) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#866)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#831-837)
	State variables written after the call(s):
	- _tokensForLiquidity = 0 (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#873)
	Spitz._tokensForLiquidity (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#596) can be used in cross function reentrancies:
	- Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822)
	- Spitz.swapBack() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#853-883)
	- _tokensForMarketing = 0 (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#874)
	Spitz._tokensForMarketing (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#595) can be used in cross function reentrancies:
	- Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822)
	- Spitz.swapBack() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#853-883)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822) uses tx.origin for authorization: require(bool,string)(_holderLastTransferTimestamp[tx.origin] < block.number,_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#767)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-usage-of-txorigin

Spitz._addLp(uint256,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#663-673) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#665-672)
Spitz._addLiquidity(uint256,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#840-851) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

Spitz.swapBack().success (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876) is written in both
	(success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	success = false (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#877)
Spitz.forceSwap().success (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#890) is written in both
	(success,None) = address(feeWallet).call{value: address(this).balance}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#890)
	success = false (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#891)
Spitz.forceSend().success (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#895) is written in both
	(success,None) = address(feeWallet).call{value: address(this).balance}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#895)
	success = false (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#896)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#write-after-write

Spitz.constructor().totalSupply (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#622) shadows:
	- ERC20.totalSupply() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#75-77) (function)
	- IERC20.totalSupply() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#11) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

Spitz.updateSwapTokensAtAmount(uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#685-690) should emit an event for: 
	- swapTokensAtAmount = newAmount (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#688) 
Spitz.modifyFees(uint256,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#696-701) should emit an event for: 
	- _marketingFee = marketingFee (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#697) 
	- _liquidityFee = liquidityFee (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#698) 
	- totalFees = _marketingFee + _liquidityFee (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#699) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Spitz.updateFeeWallet(address).newWallet (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#721) lacks a zero-check on :
		- feeWallet = newWallet (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#723)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in Spitz.Launch(uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#645-661):
	External calls:
	- _addLp(_lpSupply,msg.value) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#653)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#665-672)
	- _transfer(address(this),owner(),_leftover) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#656)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#831-837)
		- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	External calls sending eth:
	- _addLp(_lpSupply,msg.value) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#653)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#665-672)
	- _transfer(address(this),owner(),_leftover) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#656)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
		- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	State variables written after the call(s):
	- _transfer(address(this),owner(),_leftover) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#656)
		- _allowances[owner][spender] = amount (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#186)
Reentrancy in Spitz.swapBack() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#853-883):
	External calls:
	- _swapTokensForEth(amountToSwapForETH) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#866)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#831-837)
	- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	- _addLiquidity(liquidityTokens,ethForLiquidity) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#880)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
	External calls sending eth:
	- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	- _addLiquidity(liquidityTokens,ethForLiquidity) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#880)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
	State variables written after the call(s):
	- _addLiquidity(liquidityTokens,ethForLiquidity) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#880)
		- _allowances[owner][spender] = amount (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#186)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in Spitz.Launch(uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#645-661):
	External calls:
	- _addLp(_lpSupply,msg.value) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#653)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#665-672)
	- _transfer(address(this),owner(),_leftover) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#656)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#831-837)
		- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	External calls sending eth:
	- _addLp(_lpSupply,msg.value) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#653)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#665-672)
	- _transfer(address(this),owner(),_leftover) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#656)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
		- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#187)
		- _transfer(address(this),owner(),_leftover) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#656)
	- SwapAndLiquify(amountToSwapForETH,ethForLiquidity,_tokensForLiquidity) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#881)
		- _transfer(address(this),owner(),_leftover) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#656)
	- Transfer(from,to,amount) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#144)
		- _transfer(address(this),owner(),_leftover) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#656)
Reentrancy in Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822):
	External calls:
	- swapBack() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#798)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#831-837)
		- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	External calls sending eth:
	- swapBack() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#798)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
		- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	Event emitted after the call(s):
	- Transfer(from,to,amount) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#144)
		- super._transfer(from,to,amount) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#820)
	- Transfer(from,to,amount) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#144)
		- super._transfer(from,address(this),fees) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#814)
Reentrancy in Spitz.swapBack() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#853-883):
	External calls:
	- _swapTokensForEth(amountToSwapForETH) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#866)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#831-837)
	- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	- _addLiquidity(liquidityTokens,ethForLiquidity) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#880)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
	External calls sending eth:
	- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
	- _addLiquidity(liquidityTokens,ethForLiquidity) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#880)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#843-850)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#187)
		- _addLiquidity(liquidityTokens,ethForLiquidity) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#880)
	- SwapAndLiquify(amountToSwapForETH,ethForLiquidity,_tokensForLiquidity) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#881)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Spitz.Launch(uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#645-661) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_launchTime == 0,already launched) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#647)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Spitz._transfer(address,address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#734-822) has a high cyclomatic complexity (15).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

Context._msgData() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#42-44) is never used and should be removed
ERC20._burn(address,uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#161-176) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Version constraint ^0.8.17 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess.
It is used by:
	- ^0.8.17 (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#3)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Spitz.swapBack() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#853-883):
	- (success,None) = address(feeWallet).call{value: ethForMarketing}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#876)
Low level call in Spitz.forceSwap() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#887-892):
	- (success,None) = address(feeWallet).call{value: address(this).balance}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#890)
Low level call in Spitz.forceSend() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#894-897):
	- (success,None) = address(feeWallet).call{value: address(this).balance}() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#895)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IUniswapV2Pair.DOMAIN_SEPARATOR() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#360) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#361) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#378) is not in mixedCase
Function IUniswapV2Router01.WETH() (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#399) is not in mixedCase
Event Spitz.feeWalletUpdated(address,address) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#606) is not in CapWords
Function Spitz.Launch(uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#645-661) is not in mixedCase
Parameter Spitz.Launch(uint256)._percent (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#645) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Spitz.updateSwapTokensAtAmount(uint256) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#685-690) uses literals with too many digits:
	- require(bool,string)(newAmount >= totalSupply() * 1 / 100000,Swap amount cannot be lower than 0.001% total supply.) (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#686)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Spitz.maxTransactionAmount (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#580) should be immutable 
Spitz.maxWallet (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#582) should be immutable 
Spitz.uniswapV2Pair (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#571) should be immutable 
Spitz.uniswapV2Router (0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol#570) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol analyzed (12 contracts with 94 detectors), 41 result(s) found

real	0m3.751s
user	0m3.450s
sys	0m0.304s
