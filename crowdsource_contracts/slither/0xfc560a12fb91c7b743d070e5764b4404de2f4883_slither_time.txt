'solc --version' running
'solc ./0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol:
./0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol:119:16: Warning: Function declared as view, but this expression (potentially) modifies the state and thus requires non-payable (the default) or payable.
        return tokenReward.balanceOf(address(this));
               ^----------------------------------^


Reentrancy in Crowdsale.safeWithdrawal() (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#128-161):
	External calls:
	- totalTokens = tokenReward.balanceOf(address(this)) (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#139)
	- tokenReward.transfer(buyerId,amount) (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#148)
	External calls sending eth:
	- beneficiary.send(amountRaised) (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#134)
	State variables written after the call(s):
	- balanceOf[buyerId] = 0 (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#152)
	Crowdsale.balanceOf (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#27) can be used in cross function reentrancies:
	- Crowdsale.balanceOf (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#27)
	- Crowdsale.fallback() (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#65-95)
	- Crowdsale.safeWithdrawal() (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#128-161)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

ligoToken (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#9-12) has incorrect ERC20 function interface:ligoToken.transfer(address,uint256) (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#10)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

Crowdsale.constructor(address,uint256,uint256,uint256,address).ifSuccessfulSendTo (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#46) lacks a zero-check on :
		- beneficiary = ifSuccessfulSendTo (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#52)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier Crowdsale.afterDeadline() (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#97) does not always execute _; or revert
Modifier Crowdsale.afterWithdrawalDeadline() (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#98) does not always execute _; or revert
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Crowdsale.safeWithdrawal() (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#128-161) has external calls inside a loop: tokenReward.transfer(buyerId,amount) (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#148)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Crowdsale.fallback() (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#65-95) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(! (now <= startTime)) (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#67)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Version constraint ^0.4.23 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData.
It is used by:
	- ^0.4.23 (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#1)
solc-0.4.23 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract ligoToken (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#9-12) is not in CapWords
Constant Crowdsale.minContribution (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#33) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Crowdsale.maxContribution (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#34) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Crowdsale.fundsOnHoldAfterDeadline (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#35) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in Crowdsale.safeWithdrawal() (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#128-161):
	External calls:
	- beneficiary.send(amountRaised) (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#134)
	State variables written after the call(s):
	- balanceOf[buyerId] = 0 (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#152)
	Event emitted after the call(s):
	- FundTransfer(beneficiary,amountRaised,false) (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#135)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

Crowdsale.slitherConstructorConstantVariables() (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#14-163) uses literals with too many digits:
	- minContribution = 20000000000000000 (0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol#33)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
./0xfc560a12fb91c7b743d070e5764b4404de2f4883.sol analyzed (2 contracts with 94 detectors), 15 result(s) found

real	0m1.491s
user	0m1.341s
sys	0m0.152s
