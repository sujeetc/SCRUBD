'solc --version' running
'solc ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:
Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:941:31:
    |
941 |     function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external override returns (bytes4) {
    |                               ^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:941:49:
    |
941 |     function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external override returns (bytes4) {
    |                                                 ^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:941:63:
    |
941 |     function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external override returns (bytes4) {
    |                                                               ^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:941:80:
    |
941 |     function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external override returns (bytes4) {
    |                                                                                ^^^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:944:32:
    |
944 |     function onERC1155Received(address operator, address from, uint256 id, uint256 value, bytes calldata data) external override returns (bytes4) {
    |                                ^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:944:50:
    |
944 |     function onERC1155Received(address operator, address from, uint256 id, uint256 value, bytes calldata data) external override returns (bytes4) {
    |                                                  ^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:944:64:
    |
944 |     function onERC1155Received(address operator, address from, uint256 id, uint256 value, bytes calldata data) external override returns (bytes4) {
    |                                                                ^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:944:76:
    |
944 |     function onERC1155Received(address operator, address from, uint256 id, uint256 value, bytes calldata data) external override returns (bytes4) {
    |                                                                            ^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:944:91:
    |
944 |     function onERC1155Received(address operator, address from, uint256 id, uint256 value, bytes calldata data) external override returns (bytes4) {
    |                                                                                           ^^^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:947:37:
    |
947 |  ...    function onERC1155BatchReceived(address operator, address from, uint256[] calldata  ...
    |                                         ^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:947:55:
    |
947 |  ... 155BatchReceived(address operator, address from, uint256[] calldata id, uint256[]  ...
    |                                         ^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:947:69:
    |
947 |  ... ed(address operator, address from, uint256[] calldata id, uint256[] calldata value, bytes c ...
    |                                         ^^^^^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:947:92:
    |
947 |  ... dress from, uint256[] calldata id, uint256[] calldata value, bytes calldata data) external ove ...
    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^

Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:947:118:
    |
947 |  ... data id, uint256[] calldata value, bytes calldata data) external override returns (bytes4 ...
    |                                         ^^^^^^^^^^^^^^^^^^^

Warning: Function state mutability can be restricted to pure
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:941:5:
    |
941 |     function onERC721Received(address operator, address from, uint256 tokenId, bytes calldata data) external override returns (bytes4) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Function state mutability can be restricted to pure
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:944:5:
    |
944 |     function onERC1155Received(address operator, address from, uint256 id, uint256 value, bytes calldata data) external override returns (bytes4) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Function state mutability can be restricted to pure
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:947:5:
    |
947 |     function onERC1155BatchReceived(add ... xternal override returns (bytes4) {
    |     ^ (Relevant source part starts here and spans across multiple lines).

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> ./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol:636:1:
    |
636 | contract BatchSwap is Ownable, Pausable, ReentrancyGuard, IERC721Receiver, IERC1155Receiver {
    | ^ (Relevant source part starts here and spans across multiple lines).



BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832) uses arbitrary from in transferFrom: ERC20Interface(nftsTwo[_swapId][i].dapp).transferFrom(swapList[_swapCreator][swapMatch[_swapId]].addressTwo,swapList[_swapCreator][swapMatch[_swapId]].addressOne,nftsTwo[_swapId][i].blc[0]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#816)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom

BatchSwap.createSwapIntent(BatchSwap.swapIntent,BatchSwap.swapStruct[],BatchSwap.swapStruct[]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#714-764) uses a weak PRNG: "swapEvent(msg.sender,(block.timestamp - (block.timestamp % secs)),_swapIntent.status,_swapIntent.id,_swapIntent.addressTwo) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#762)" 
BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832) uses a weak PRNG: "swapEvent(msg.sender,(block.timestamp - (block.timestamp % secs)),swapStatus.Closed,_swapId,_swapCreator) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#831)" 
BatchSwap.cancelSwapIntent(uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#835-865) uses a weak PRNG: "swapEvent(msg.sender,(block.timestamp - (block.timestamp % secs)),swapStatus.Cancelled,_swapId,address(0)) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#864)" 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#weak-PRNG

Reentrancy in BatchSwap.cancelSwapIntent(uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#835-865):
	External calls:
	- ERC20Interface(nftsOne[_swapId][i].dapp).transfer(swapList[msg.sender][swapMatch[_swapId]].addressOne,nftsOne[_swapId][i].blc[0]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#846)
	- ERC721Interface(nftsOne[_swapId][i].dapp).safeTransferFrom(address(this),swapList[msg.sender][swapMatch[_swapId]].addressOne,nftsOne[_swapId][i].tokenId[0],nftsOne[_swapId][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#849)
	- ERC1155Interface(nftsOne[_swapId][i].dapp).safeBatchTransferFrom(address(this),swapList[msg.sender][swapMatch[_swapId]].addressOne,nftsOne[_swapId][i].tokenId,nftsOne[_swapId][i].blc,nftsOne[_swapId][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#852)
	- customInterface(dappRelations[nftsOne[_swapId][i].dapp]).bridgeSafeTransferFrom(nftsOne[_swapId][i].dapp,dappRelations[nftsOne[_swapId][i].dapp],swapList[msg.sender][swapMatch[_swapId]].addressOne,nftsOne[_swapId][i].tokenId,nftsOne[_swapId][i].blc,nftsOne[_swapId][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#855)
	External calls sending eth:
	- address(msg.sender).transfer(swapList[msg.sender][swapMatch[_swapId]].swapFee) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#842)
	- swapList[msg.sender][swapMatch[_swapId]].addressOne.transfer(swapList[msg.sender][swapMatch[_swapId]].valueOne) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#860)
	State variables written after the call(s):
	- swapList[msg.sender][swapMatch[_swapId]].swapEnd = block.timestamp (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#862)
	BatchSwap.swapList (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#694) can be used in cross function reentrancies:
	- BatchSwap.editCounterPart(uint256,address) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#891-896)
	- BatchSwap.getSwapIntentByAddress(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#920-922)
	- swapList[msg.sender][swapMatch[_swapId]].status = swapStatus.Cancelled (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#863)
	BatchSwap.swapList (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#694) can be used in cross function reentrancies:
	- BatchSwap.editCounterPart(uint256,address) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#891-896)
	- BatchSwap.getSwapIntentByAddress(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#920-922)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

ERC20Interface (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#618-621) has incorrect ERC20 function interface:ERC20Interface.transferFrom(address,address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#619)
ERC20Interface (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#618-621) has incorrect ERC20 function interface:ERC20Interface.transfer(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#620)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832) uses a dangerous strict equality:
	- ERC721Interface(TRADESQUAD).balanceOf(msg.sender) == 0 (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#773)
BatchSwap.createSwapIntent(BatchSwap.swapIntent,BatchSwap.swapStruct[],BatchSwap.swapStruct[]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#714-764) uses a dangerous strict equality:
	- ERC721Interface(TRADESQUAD).balanceOf(msg.sender) == 0 (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#716)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

BatchSwap.setWhitelist(address[],bool)._status (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#883) shadows:
	- ReentrancyGuard._status (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#588) (state variable)
BatchSwap.setPayment(bool,uint256)._status (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#899) shadows:
	- ReentrancyGuard._status (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#588) (state variable)
BatchSwap.pauseContract(bool)._paused (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#905) shadows:
	- Pausable._paused (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#164) (state variable)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

BatchSwap.setTradeSquadAddress(address)._tradeSquad (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#868) lacks a zero-check on :
		- TRADESQUAD = _tradeSquad (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#869)
BatchSwap.setVaultAddress(address)._vault (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#873) lacks a zero-check on :
		- VAULT = _vault (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#874)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

BatchSwap.createSwapIntent(BatchSwap.swapIntent,BatchSwap.swapStruct[],BatchSwap.swapStruct[]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#714-764) has external calls inside a loop: ERC20Interface(nftsOne[_swapIntent.id][i].dapp).transferFrom(_swapIntent.addressOne,address(this),nftsOne[_swapIntent.id][i].blc[0]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#749)
BatchSwap.createSwapIntent(BatchSwap.swapIntent,BatchSwap.swapStruct[],BatchSwap.swapStruct[]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#714-764) has external calls inside a loop: ERC721Interface(nftsOne[_swapIntent.id][i].dapp).safeTransferFrom(_swapIntent.addressOne,address(this),nftsOne[_swapIntent.id][i].tokenId[0],nftsOne[_swapIntent.id][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#752)
BatchSwap.createSwapIntent(BatchSwap.swapIntent,BatchSwap.swapStruct[],BatchSwap.swapStruct[]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#714-764) has external calls inside a loop: ERC1155Interface(nftsOne[_swapIntent.id][i].dapp).safeBatchTransferFrom(_swapIntent.addressOne,address(this),nftsOne[_swapIntent.id][i].tokenId,nftsOne[_swapIntent.id][i].blc,nftsOne[_swapIntent.id][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#755)
BatchSwap.createSwapIntent(BatchSwap.swapIntent,BatchSwap.swapStruct[],BatchSwap.swapStruct[]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#714-764) has external calls inside a loop: customInterface(dappRelations[nftsOne[_swapIntent.id][i].dapp]).bridgeSafeTransferFrom(nftsOne[_swapIntent.id][i].dapp,_swapIntent.addressOne,dappRelations[nftsOne[_swapIntent.id][i].dapp],nftsOne[_swapIntent.id][i].tokenId,nftsOne[_swapIntent.id][i].blc,nftsOne[_swapIntent.id][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#758)
BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832) has external calls inside a loop: ERC20Interface(nftsOne[_swapId][i].dapp).transfer(swapList[_swapCreator][swapMatch[_swapId]].addressTwo,nftsOne[_swapId][i].blc[0]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#797)
BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832) has external calls inside a loop: ERC721Interface(nftsOne[_swapId][i].dapp).safeTransferFrom(address(this),swapList[_swapCreator][swapMatch[_swapId]].addressTwo,nftsOne[_swapId][i].tokenId[0],nftsOne[_swapId][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#800)
BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832) has external calls inside a loop: ERC1155Interface(nftsOne[_swapId][i].dapp).safeBatchTransferFrom(address(this),swapList[_swapCreator][swapMatch[_swapId]].addressTwo,nftsOne[_swapId][i].tokenId,nftsOne[_swapId][i].blc,nftsOne[_swapId][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#803)
BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832) has external calls inside a loop: customInterface(dappRelations[nftsOne[_swapId][i].dapp]).bridgeSafeTransferFrom(nftsOne[_swapId][i].dapp,dappRelations[nftsOne[_swapId][i].dapp],swapList[_swapCreator][swapMatch[_swapId]].addressTwo,nftsOne[_swapId][i].tokenId,nftsOne[_swapId][i].blc,nftsOne[_swapId][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#806)
BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832) has external calls inside a loop: ERC20Interface(nftsTwo[_swapId][i].dapp).transferFrom(swapList[_swapCreator][swapMatch[_swapId]].addressTwo,swapList[_swapCreator][swapMatch[_swapId]].addressOne,nftsTwo[_swapId][i].blc[0]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#816)
BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832) has external calls inside a loop: ERC721Interface(nftsTwo[_swapId][i].dapp).safeTransferFrom(swapList[_swapCreator][swapMatch[_swapId]].addressTwo,swapList[_swapCreator][swapMatch[_swapId]].addressOne,nftsTwo[_swapId][i].tokenId[0],nftsTwo[_swapId][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#819)
BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832) has external calls inside a loop: ERC1155Interface(nftsTwo[_swapId][i].dapp).safeBatchTransferFrom(swapList[_swapCreator][swapMatch[_swapId]].addressTwo,swapList[_swapCreator][swapMatch[_swapId]].addressOne,nftsTwo[_swapId][i].tokenId,nftsTwo[_swapId][i].blc,nftsTwo[_swapId][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#822)
BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832) has external calls inside a loop: customInterface(dappRelations[nftsTwo[_swapId][i].dapp]).bridgeSafeTransferFrom(nftsTwo[_swapId][i].dapp,swapList[_swapCreator][swapMatch[_swapId]].addressTwo,swapList[_swapCreator][swapMatch[_swapId]].addressOne,nftsTwo[_swapId][i].tokenId,nftsTwo[_swapId][i].blc,nftsTwo[_swapId][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#825)
BatchSwap.cancelSwapIntent(uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#835-865) has external calls inside a loop: ERC20Interface(nftsOne[_swapId][i].dapp).transfer(swapList[msg.sender][swapMatch[_swapId]].addressOne,nftsOne[_swapId][i].blc[0]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#846)
BatchSwap.cancelSwapIntent(uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#835-865) has external calls inside a loop: ERC721Interface(nftsOne[_swapId][i].dapp).safeTransferFrom(address(this),swapList[msg.sender][swapMatch[_swapId]].addressOne,nftsOne[_swapId][i].tokenId[0],nftsOne[_swapId][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#849)
BatchSwap.cancelSwapIntent(uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#835-865) has external calls inside a loop: ERC1155Interface(nftsOne[_swapId][i].dapp).safeBatchTransferFrom(address(this),swapList[msg.sender][swapMatch[_swapId]].addressOne,nftsOne[_swapId][i].tokenId,nftsOne[_swapId][i].blc,nftsOne[_swapId][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#852)
BatchSwap.cancelSwapIntent(uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#835-865) has external calls inside a loop: customInterface(dappRelations[nftsOne[_swapId][i].dapp]).bridgeSafeTransferFrom(nftsOne[_swapId][i].dapp,dappRelations[nftsOne[_swapId][i].dapp],swapList[msg.sender][swapMatch[_swapId]].addressOne,nftsOne[_swapId][i].tokenId,nftsOne[_swapId][i].blc,nftsOne[_swapId][i].data) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#855)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

BatchSwap.createSwapIntent(BatchSwap.swapIntent,BatchSwap.swapStruct[],BatchSwap.swapStruct[]) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#714-764) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(msg.value >= payment.value.add(_swapIntent.valueOne),Not enought WEI for handle the transaction) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#717)
	- require(bool,string)(msg.value >= _swapIntent.valueOne,Not enought WEI for handle the transaction) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#721)
	- require(bool,string)(msg.value >= _swapIntent.valueOne,Not enought WEI for handle the transaction) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#726)
	- require(bool,string)(whiteList[nftsOne[_swapIntent.id][i].dapp],A DAPP is not handled by the system) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#747)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832) has a high cyclomatic complexity (15).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

Context._msgData() (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#24-26) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.0 (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#3)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract customInterface (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#632-634) is not in CapWords
Struct BatchSwap.swapStruct (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#659-665) is not in CapWords
Struct BatchSwap.swapIntent (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#671-681) is not in CapWords
Struct BatchSwap.paymentStruct (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#688-691) is not in CapWords
Event BatchSwap.swapEvent(address,uint256,BatchSwap.swapStatus,uint256,address) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#706) is not in CapWords
Event BatchSwap.paymentReceived(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#707) is not in CapWords
Parameter BatchSwap.createSwapIntent(BatchSwap.swapIntent,BatchSwap.swapStruct[],BatchSwap.swapStruct[])._swapIntent (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#714) is not in mixedCase
Parameter BatchSwap.createSwapIntent(BatchSwap.swapIntent,BatchSwap.swapStruct[],BatchSwap.swapStruct[])._nftsOne (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#714) is not in mixedCase
Parameter BatchSwap.createSwapIntent(BatchSwap.swapIntent,BatchSwap.swapStruct[],BatchSwap.swapStruct[])._nftsTwo (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#714) is not in mixedCase
Parameter BatchSwap.closeSwapIntent(address,uint256)._swapCreator (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767) is not in mixedCase
Parameter BatchSwap.closeSwapIntent(address,uint256)._swapId (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767) is not in mixedCase
Parameter BatchSwap.cancelSwapIntent(uint256)._swapId (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#835) is not in mixedCase
Parameter BatchSwap.setTradeSquadAddress(address)._tradeSquad (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#868) is not in mixedCase
Parameter BatchSwap.setVaultAddress(address)._vault (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#873) is not in mixedCase
Parameter BatchSwap.setDappRelation(address,address)._dapp (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#878) is not in mixedCase
Parameter BatchSwap.setDappRelation(address,address)._customInterface (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#878) is not in mixedCase
Parameter BatchSwap.setWhitelist(address[],bool)._dapp (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#883) is not in mixedCase
Parameter BatchSwap.setWhitelist(address[],bool)._status (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#883) is not in mixedCase
Parameter BatchSwap.editCounterPart(uint256,address)._swapId (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#891) is not in mixedCase
Parameter BatchSwap.editCounterPart(uint256,address)._counterPart (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#891) is not in mixedCase
Parameter BatchSwap.setPayment(bool,uint256)._status (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#899) is not in mixedCase
Parameter BatchSwap.setPayment(bool,uint256)._value (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#899) is not in mixedCase
Parameter BatchSwap.pauseContract(bool)._paused (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#905) is not in mixedCase
Parameter BatchSwap.getWhiteList(address)._address (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#910) is not in mixedCase
Parameter BatchSwap.getSwapIntentByAddress(address,uint256)._creator (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#920) is not in mixedCase
Parameter BatchSwap.getSwapIntentByAddress(address,uint256)._swapId (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#920) is not in mixedCase
Parameter BatchSwap.getSwapStructSize(uint256,bool)._swapId (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#925) is not in mixedCase
Parameter BatchSwap.getSwapStructSize(uint256,bool)._nfts (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#925) is not in mixedCase
Parameter BatchSwap.getSwapStruct(uint256,bool,uint256)._swapId (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#933) is not in mixedCase
Parameter BatchSwap.getSwapStruct(uint256,bool,uint256)._nfts (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#933) is not in mixedCase
Parameter BatchSwap.getSwapStruct(uint256,bool,uint256)._index (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#933) is not in mixedCase
Variable BatchSwap.TRADESQUAD (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#641) is not in mixedCase
Variable BatchSwap.VAULT (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#642) is not in mixedCase
Constant BatchSwap.secs (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#651) is not in UPPER_CASE_WITH_UNDERSCORES
Enum BatchSwap.swapStatus (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#668) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in BatchSwap.cancelSwapIntent(uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#835-865):
	External calls:
	- address(msg.sender).transfer(swapList[msg.sender][swapMatch[_swapId]].swapFee) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#842)
	- swapList[msg.sender][swapMatch[_swapId]].addressOne.transfer(swapList[msg.sender][swapMatch[_swapId]].valueOne) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#860)
	State variables written after the call(s):
	- swapList[msg.sender][swapMatch[_swapId]].swapEnd = block.timestamp (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#862)
	- swapList[msg.sender][swapMatch[_swapId]].status = swapStatus.Cancelled (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#863)
	Event emitted after the call(s):
	- swapEvent(msg.sender,(block.timestamp - (block.timestamp % secs)),swapStatus.Cancelled,_swapId,address(0)) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#864)
Reentrancy in BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832):
	External calls:
	- VAULT.transfer(payment.value.add(swapList[_swapCreator][swapMatch[_swapId]].swapFee)) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#777)
	- VAULT.transfer(swapList[_swapCreator][swapMatch[_swapId]].swapFee) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#782)
	State variables written after the call(s):
	- swapList[_swapCreator][swapMatch[_swapId]].addressTwo = address(msg.sender) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#788)
	- swapList[_swapCreator][swapMatch[_swapId]].swapEnd = block.timestamp (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#789)
	- swapList[_swapCreator][swapMatch[_swapId]].status = swapStatus.Closed (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#790)
Reentrancy in BatchSwap.closeSwapIntent(address,uint256) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#767-832):
	External calls:
	- VAULT.transfer(payment.value.add(swapList[_swapCreator][swapMatch[_swapId]].swapFee)) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#777)
	- VAULT.transfer(swapList[_swapCreator][swapMatch[_swapId]].swapFee) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#782)
	- swapList[_swapCreator][swapMatch[_swapId]].addressTwo.transfer(swapList[_swapCreator][swapMatch[_swapId]].valueOne) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#810)
	- swapList[_swapCreator][swapMatch[_swapId]].addressOne.transfer(swapList[_swapCreator][swapMatch[_swapId]].valueTwo) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#829)
	Event emitted after the call(s):
	- swapEvent(msg.sender,(block.timestamp - (block.timestamp % secs)),swapStatus.Closed,_swapId,_swapCreator) (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#831)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

BatchSwap.swapFlag (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#656) is never used in BatchSwap (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#636-954)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

BatchSwap.swapFlag (0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol#656) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
./0x13d8faf4a690f5ae52e2d2c52938d1167057b9af.sol analyzed (14 contracts with 94 detectors), 74 result(s) found

real	0m3.190s
user	0m2.903s
sys	0m0.289s
