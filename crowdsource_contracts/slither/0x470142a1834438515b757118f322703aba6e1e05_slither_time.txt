'solc --version' running
'solc ./0x470142a1834438515b757118f322703aba6e1e05.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x470142a1834438515b757118f322703aba6e1e05.sol:
./0x470142a1834438515b757118f322703aba6e1e05.sol:291:3: Warning: Function is marked pure. Be careful, pureness is not enforced yet.
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
  ^
Spanning multiple lines.
./0x470142a1834438515b757118f322703aba6e1e05.sol:303:3: Warning: Function is marked pure. Be careful, pureness is not enforced yet.
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
  ^
Spanning multiple lines.
./0x470142a1834438515b757118f322703aba6e1e05.sol:313:3: Warning: Function is marked pure. Be careful, pureness is not enforced yet.
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
  ^
Spanning multiple lines.
./0x470142a1834438515b757118f322703aba6e1e05.sol:321:3: Warning: Function is marked pure. Be careful, pureness is not enforced yet.
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
  ^
Spanning multiple lines.


PolicyPalNetworkToken.emergencyERC20Drain(ERC20,uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#660-664) ignores return value by _token.transfer(owner,_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#663)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

Reentrancy in PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162):
	External calls:
	- assert(bool)(token.transfer(recipient,amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#152)
	- validBalanceMultiple(_recipients,_amounts) (0x470142a1834438515b757118f322703aba6e1e05.sol#143)
		- balance = token.balanceOf(this) (0x470142a1834438515b757118f322703aba6e1e05.sol#75)
	State variables written after the call(s):
	- airdrops[recipient] = true (0x470142a1834438515b757118f322703aba6e1e05.sol#154)
	PolicyPalNetworkAirdrop.airdrops (0x470142a1834438515b757118f322703aba6e1e05.sol#14) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.airdrops (0x470142a1834438515b757118f322703aba6e1e05.sol#14)
	- dropAmount = dropAmount.add(amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#157)
	PolicyPalNetworkAirdrop.dropAmount (0x470142a1834438515b757118f322703aba6e1e05.sol#18) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.dropAmount (0x470142a1834438515b757118f322703aba6e1e05.sol#18)
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
	- numDrops = numDrops.add(1) (0x470142a1834438515b757118f322703aba6e1e05.sol#156)
	PolicyPalNetworkAirdrop.numDrops (0x470142a1834438515b757118f322703aba6e1e05.sol#17) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.numDrops (0x470142a1834438515b757118f322703aba6e1e05.sol#17)
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
Reentrancy in PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134):
	External calls:
	- assert(bool)(token.transfer(recipient,_amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#124)
	- validBalance(_recipients,_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#116)
		- balance = token.balanceOf(this) (0x470142a1834438515b757118f322703aba6e1e05.sol#57)
	State variables written after the call(s):
	- airdrops[recipient] = true (0x470142a1834438515b757118f322703aba6e1e05.sol#126)
	PolicyPalNetworkAirdrop.airdrops (0x470142a1834438515b757118f322703aba6e1e05.sol#14) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.airdrops (0x470142a1834438515b757118f322703aba6e1e05.sol#14)
	- dropAmount = dropAmount.add(_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#129)
	PolicyPalNetworkAirdrop.dropAmount (0x470142a1834438515b757118f322703aba6e1e05.sol#18) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.dropAmount (0x470142a1834438515b757118f322703aba6e1e05.sol#18)
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
	- numDrops = numDrops.add(1) (0x470142a1834438515b757118f322703aba6e1e05.sol#128)
	PolicyPalNetworkAirdrop.numDrops (0x470142a1834438515b757118f322703aba6e1e05.sol#17) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.numDrops (0x470142a1834438515b757118f322703aba6e1e05.sol#17)
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
Reentrancy in PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272):
	External calls:
	- assert(bool)(token.transfer(recipient,amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#262)
	- validBalanceMultiple(_recipients,_amounts) (0x470142a1834438515b757118f322703aba6e1e05.sol#253)
		- balance = token.balanceOf(this) (0x470142a1834438515b757118f322703aba6e1e05.sol#75)
	State variables written after the call(s):
	- dropAmount = dropAmount.add(amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#267)
	PolicyPalNetworkAirdrop.dropAmount (0x470142a1834438515b757118f322703aba6e1e05.sol#18) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.dropAmount (0x470142a1834438515b757118f322703aba6e1e05.sol#18)
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
	- numDrops = numDrops.add(1) (0x470142a1834438515b757118f322703aba6e1e05.sol#266)
	PolicyPalNetworkAirdrop.numDrops (0x470142a1834438515b757118f322703aba6e1e05.sol#17) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.numDrops (0x470142a1834438515b757118f322703aba6e1e05.sol#17)
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
	- signaturedrops[recipient] = true (0x470142a1834438515b757118f322703aba6e1e05.sol#264)
	PolicyPalNetworkAirdrop.signaturedrops (0x470142a1834438515b757118f322703aba6e1e05.sol#16) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.signaturedrops (0x470142a1834438515b757118f322703aba6e1e05.sol#16)
Reentrancy in PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244):
	External calls:
	- assert(bool)(token.transfer(recipient,_amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#234)
	- validBalance(_recipients,_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#226)
		- balance = token.balanceOf(this) (0x470142a1834438515b757118f322703aba6e1e05.sol#57)
	State variables written after the call(s):
	- dropAmount = dropAmount.add(_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#239)
	PolicyPalNetworkAirdrop.dropAmount (0x470142a1834438515b757118f322703aba6e1e05.sol#18) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.dropAmount (0x470142a1834438515b757118f322703aba6e1e05.sol#18)
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
	- numDrops = numDrops.add(1) (0x470142a1834438515b757118f322703aba6e1e05.sol#238)
	PolicyPalNetworkAirdrop.numDrops (0x470142a1834438515b757118f322703aba6e1e05.sol#17) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.numDrops (0x470142a1834438515b757118f322703aba6e1e05.sol#17)
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
	- signaturedrops[recipient] = true (0x470142a1834438515b757118f322703aba6e1e05.sol#236)
	PolicyPalNetworkAirdrop.signaturedrops (0x470142a1834438515b757118f322703aba6e1e05.sol#16) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.signaturedrops (0x470142a1834438515b757118f322703aba6e1e05.sol#16)
Reentrancy in PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217):
	External calls:
	- assert(bool)(token.transfer(recipient,amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#207)
	- validBalanceMultiple(_recipients,_amounts) (0x470142a1834438515b757118f322703aba6e1e05.sol#198)
		- balance = token.balanceOf(this) (0x470142a1834438515b757118f322703aba6e1e05.sol#75)
	State variables written after the call(s):
	- dropAmount = dropAmount.add(amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#212)
	PolicyPalNetworkAirdrop.dropAmount (0x470142a1834438515b757118f322703aba6e1e05.sol#18) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.dropAmount (0x470142a1834438515b757118f322703aba6e1e05.sol#18)
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
	- numDrops = numDrops.add(1) (0x470142a1834438515b757118f322703aba6e1e05.sol#211)
	PolicyPalNetworkAirdrop.numDrops (0x470142a1834438515b757118f322703aba6e1e05.sol#17) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.numDrops (0x470142a1834438515b757118f322703aba6e1e05.sol#17)
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
	- twitterdrops[recipient] = true (0x470142a1834438515b757118f322703aba6e1e05.sol#209)
	PolicyPalNetworkAirdrop.twitterdrops (0x470142a1834438515b757118f322703aba6e1e05.sol#15) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
	- PolicyPalNetworkAirdrop.twitterdrops (0x470142a1834438515b757118f322703aba6e1e05.sol#15)
Reentrancy in PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189):
	External calls:
	- assert(bool)(token.transfer(recipient,_amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#179)
	- validBalance(_recipients,_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#171)
		- balance = token.balanceOf(this) (0x470142a1834438515b757118f322703aba6e1e05.sol#57)
	State variables written after the call(s):
	- dropAmount = dropAmount.add(_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#184)
	PolicyPalNetworkAirdrop.dropAmount (0x470142a1834438515b757118f322703aba6e1e05.sol#18) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.dropAmount (0x470142a1834438515b757118f322703aba6e1e05.sol#18)
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
	- numDrops = numDrops.add(1) (0x470142a1834438515b757118f322703aba6e1e05.sol#183)
	PolicyPalNetworkAirdrop.numDrops (0x470142a1834438515b757118f322703aba6e1e05.sol#17) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162)
	- PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134)
	- PolicyPalNetworkAirdrop.numDrops (0x470142a1834438515b757118f322703aba6e1e05.sol#17)
	- PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272)
	- PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244)
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
	- twitterdrops[recipient] = true (0x470142a1834438515b757118f322703aba6e1e05.sol#181)
	PolicyPalNetworkAirdrop.twitterdrops (0x470142a1834438515b757118f322703aba6e1e05.sol#15) can be used in cross function reentrancies:
	- PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217)
	- PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189)
	- PolicyPalNetworkAirdrop.twitterdrops (0x470142a1834438515b757118f322703aba6e1e05.sol#15)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134) has external calls inside a loop: assert(bool)(token.transfer(recipient,_amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#124)
PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162) has external calls inside a loop: assert(bool)(token.transfer(recipient,amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#152)
PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189) has external calls inside a loop: assert(bool)(token.transfer(recipient,_amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#179)
PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217) has external calls inside a loop: assert(bool)(token.transfer(recipient,amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#207)
PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244) has external calls inside a loop: assert(bool)(token.transfer(recipient,_amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#234)
PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272) has external calls inside a loop: assert(bool)(token.transfer(recipient,amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#262)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Reentrancy in PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162):
	External calls:
	- assert(bool)(token.transfer(recipient,amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#152)
	- validBalanceMultiple(_recipients,_amounts) (0x470142a1834438515b757118f322703aba6e1e05.sol#143)
		- balance = token.balanceOf(this) (0x470142a1834438515b757118f322703aba6e1e05.sol#75)
	Event emitted after the call(s):
	- TokenDrop(recipient,amount,AIRDROP) (0x470142a1834438515b757118f322703aba6e1e05.sol#159)
Reentrancy in PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134):
	External calls:
	- assert(bool)(token.transfer(recipient,_amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#124)
	- validBalance(_recipients,_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#116)
		- balance = token.balanceOf(this) (0x470142a1834438515b757118f322703aba6e1e05.sol#57)
	Event emitted after the call(s):
	- TokenDrop(recipient,_amount,AIRDROP) (0x470142a1834438515b757118f322703aba6e1e05.sol#131)
Reentrancy in PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272):
	External calls:
	- assert(bool)(token.transfer(recipient,amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#262)
	- validBalanceMultiple(_recipients,_amounts) (0x470142a1834438515b757118f322703aba6e1e05.sol#253)
		- balance = token.balanceOf(this) (0x470142a1834438515b757118f322703aba6e1e05.sol#75)
	Event emitted after the call(s):
	- TokenDrop(recipient,amount,SIGNATURE) (0x470142a1834438515b757118f322703aba6e1e05.sol#269)
Reentrancy in PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244):
	External calls:
	- assert(bool)(token.transfer(recipient,_amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#234)
	- validBalance(_recipients,_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#226)
		- balance = token.balanceOf(this) (0x470142a1834438515b757118f322703aba6e1e05.sol#57)
	Event emitted after the call(s):
	- TokenDrop(recipient,_amount,SIGNATURE) (0x470142a1834438515b757118f322703aba6e1e05.sol#241)
Reentrancy in PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217):
	External calls:
	- assert(bool)(token.transfer(recipient,amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#207)
	- validBalanceMultiple(_recipients,_amounts) (0x470142a1834438515b757118f322703aba6e1e05.sol#198)
		- balance = token.balanceOf(this) (0x470142a1834438515b757118f322703aba6e1e05.sol#75)
	Event emitted after the call(s):
	- TokenDrop(recipient,amount,TWITTER) (0x470142a1834438515b757118f322703aba6e1e05.sol#214)
Reentrancy in PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189):
	External calls:
	- assert(bool)(token.transfer(recipient,_amount)) (0x470142a1834438515b757118f322703aba6e1e05.sol#179)
	- validBalance(_recipients,_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#171)
		- balance = token.balanceOf(this) (0x470142a1834438515b757118f322703aba6e1e05.sol#57)
	Event emitted after the call(s):
	- TokenDrop(recipient,_amount,TWITTER) (0x470142a1834438515b757118f322703aba6e1e05.sol#186)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134) has costly operations inside a loop:
	- numDrops = numDrops.add(1) (0x470142a1834438515b757118f322703aba6e1e05.sol#128)
PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#114-134) has costly operations inside a loop:
	- dropAmount = dropAmount.add(_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#129)
PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162) has costly operations inside a loop:
	- numDrops = numDrops.add(1) (0x470142a1834438515b757118f322703aba6e1e05.sol#156)
PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#141-162) has costly operations inside a loop:
	- dropAmount = dropAmount.add(amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#157)
PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189) has costly operations inside a loop:
	- numDrops = numDrops.add(1) (0x470142a1834438515b757118f322703aba6e1e05.sol#183)
PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#169-189) has costly operations inside a loop:
	- dropAmount = dropAmount.add(_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#184)
PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217) has costly operations inside a loop:
	- numDrops = numDrops.add(1) (0x470142a1834438515b757118f322703aba6e1e05.sol#211)
PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#196-217) has costly operations inside a loop:
	- dropAmount = dropAmount.add(amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#212)
PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244) has costly operations inside a loop:
	- numDrops = numDrops.add(1) (0x470142a1834438515b757118f322703aba6e1e05.sol#238)
PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256) (0x470142a1834438515b757118f322703aba6e1e05.sol#224-244) has costly operations inside a loop:
	- dropAmount = dropAmount.add(_amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#239)
PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272) has costly operations inside a loop:
	- numDrops = numDrops.add(1) (0x470142a1834438515b757118f322703aba6e1e05.sol#266)
PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[]) (0x470142a1834438515b757118f322703aba6e1e05.sol#251-272) has costly operations inside a loop:
	- dropAmount = dropAmount.add(amount) (0x470142a1834438515b757118f322703aba6e1e05.sol#267)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop

Version constraint ^0.4.13 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput.
It is used by:
	- ^0.4.13 (0x470142a1834438515b757118f322703aba6e1e05.sol#1)
solc-0.4.16 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256)._recipients (0x470142a1834438515b757118f322703aba6e1e05.sol#114) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.airDropSingleAmount(address[],uint256)._amount (0x470142a1834438515b757118f322703aba6e1e05.sol#114) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[])._recipients (0x470142a1834438515b757118f322703aba6e1e05.sol#141) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.airDropMultipleAmount(address[],uint256[])._amounts (0x470142a1834438515b757118f322703aba6e1e05.sol#141) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256)._recipients (0x470142a1834438515b757118f322703aba6e1e05.sol#169) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.twitterDropSingleAmount(address[],uint256)._amount (0x470142a1834438515b757118f322703aba6e1e05.sol#169) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[])._recipients (0x470142a1834438515b757118f322703aba6e1e05.sol#196) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.twitterDropMultipleAmount(address[],uint256[])._amounts (0x470142a1834438515b757118f322703aba6e1e05.sol#196) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256)._recipients (0x470142a1834438515b757118f322703aba6e1e05.sol#224) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.signatureDropSingleAmount(address[],uint256)._amount (0x470142a1834438515b757118f322703aba6e1e05.sol#224) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[])._recipients (0x470142a1834438515b757118f322703aba6e1e05.sol#251) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.signatureDropMultipleAmount(address[],uint256[])._amounts (0x470142a1834438515b757118f322703aba6e1e05.sol#251) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.emergencyDrain(address,uint256)._recipient (0x470142a1834438515b757118f322703aba6e1e05.sol#279) is not in mixedCase
Parameter PolicyPalNetworkAirdrop.emergencyDrain(address,uint256)._amount (0x470142a1834438515b757118f322703aba6e1e05.sol#279) is not in mixedCase
Parameter BasicToken.transfer(address,uint256)._to (0x470142a1834438515b757118f322703aba6e1e05.sol#389) is not in mixedCase
Parameter BasicToken.transfer(address,uint256)._value (0x470142a1834438515b757118f322703aba6e1e05.sol#389) is not in mixedCase
Parameter BasicToken.balanceOf(address)._owner (0x470142a1834438515b757118f322703aba6e1e05.sol#405) is not in mixedCase
Parameter BurnableToken.burn(uint256)._value (0x470142a1834438515b757118f322703aba6e1e05.sol#419) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (0x470142a1834438515b757118f322703aba6e1e05.sol#449) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (0x470142a1834438515b757118f322703aba6e1e05.sol#449) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (0x470142a1834438515b757118f322703aba6e1e05.sol#449) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (0x470142a1834438515b757118f322703aba6e1e05.sol#471) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (0x470142a1834438515b757118f322703aba6e1e05.sol#471) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (0x470142a1834438515b757118f322703aba6e1e05.sol#483) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (0x470142a1834438515b757118f322703aba6e1e05.sol#483) is not in mixedCase
Parameter StandardToken.increaseApproval(address,uint256)._spender (0x470142a1834438515b757118f322703aba6e1e05.sol#497) is not in mixedCase
Parameter StandardToken.increaseApproval(address,uint256)._addedValue (0x470142a1834438515b757118f322703aba6e1e05.sol#497) is not in mixedCase
Parameter StandardToken.decreaseApproval(address,uint256)._spender (0x470142a1834438515b757118f322703aba6e1e05.sol#513) is not in mixedCase
Parameter StandardToken.decreaseApproval(address,uint256)._subtractedValue (0x470142a1834438515b757118f322703aba6e1e05.sol#513) is not in mixedCase
Parameter PolicyPalNetworkToken.toggleTransferable(bool)._toggle (0x470142a1834438515b757118f322703aba6e1e05.sol#573) is not in mixedCase
Parameter PolicyPalNetworkToken.transfer(address,uint256)._to (0x470142a1834438515b757118f322703aba6e1e05.sol#614) is not in mixedCase
Parameter PolicyPalNetworkToken.transfer(address,uint256)._value (0x470142a1834438515b757118f322703aba6e1e05.sol#614) is not in mixedCase
Parameter PolicyPalNetworkToken.transferFrom(address,address,uint256)._from (0x470142a1834438515b757118f322703aba6e1e05.sol#635) is not in mixedCase
Parameter PolicyPalNetworkToken.transferFrom(address,address,uint256)._to (0x470142a1834438515b757118f322703aba6e1e05.sol#635) is not in mixedCase
Parameter PolicyPalNetworkToken.transferFrom(address,address,uint256)._value (0x470142a1834438515b757118f322703aba6e1e05.sol#635) is not in mixedCase
Parameter PolicyPalNetworkToken.burn(uint256)._value (0x470142a1834438515b757118f322703aba6e1e05.sol#648) is not in mixedCase
Parameter PolicyPalNetworkToken.emergencyERC20Drain(ERC20,uint256)._token (0x470142a1834438515b757118f322703aba6e1e05.sol#660) is not in mixedCase
Parameter PolicyPalNetworkToken.emergencyERC20Drain(ERC20,uint256)._amount (0x470142a1834438515b757118f322703aba6e1e05.sol#660) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
./0x470142a1834438515b757118f322703aba6e1e05.sol analyzed (9 contracts with 94 detectors), 71 result(s) found

real	0m2.471s
user	0m2.231s
sys	0m0.242s
