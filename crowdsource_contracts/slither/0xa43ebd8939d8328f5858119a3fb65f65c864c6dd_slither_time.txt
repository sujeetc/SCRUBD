'solc --version' running
'solc ./0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol:
./0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol:15:13: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
            b.send(0);
            ^-------^
./0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol:20:24: Warning: Unused local variable
    function asm_clean(uint s, uint i)
                       ^----^
./0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol:20:32: Warning: Unused local variable
    function asm_clean(uint s, uint i)
                               ^----^


Sweeper.sol_clean(uint256,uint256) (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#9-18) sends eth to arbitrary user
	Dangerous calls:
	- b.send(0) (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#15)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Sweeper.sol_clean(uint256,uint256) (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#9-18) ignores return value by b.send(0) (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#15)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

Sweeper.sol_clean(uint256,uint256).b (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#11) lacks a zero-check on :
		- b.send(0) (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#15)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Sweeper.sol_clean(uint256,uint256) (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#9-18) has external calls inside a loop: b.send(0) (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#15)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Sweeper.asm_clean(uint256,uint256) (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#20-34) uses assembly
	- INLINE ASM (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#23-34)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Version constraint ^0.4.4 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput
	- SkipEmptyStringLiteral
	- ConstantOptimizerSubtraction
	- IdentityPrecompileReturnIgnored.
It is used by:
	- ^0.4.4 (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#1)
solc-0.4.11 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Function Sweeper.sol_clean(uint256,uint256) (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#9-18) is not in mixedCase
Function Sweeper.asm_clean(uint256,uint256) (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#20-34) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Sweeper.sol_clean(uint256,uint256) (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#9-18) uses literals with too many digits:
	- b = address(x / 0x1000000000000000000000000) (0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol#14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
./0xa43ebd8939d8328f5858119a3fb65f65c864c6dd.sol analyzed (1 contracts with 94 detectors), 10 result(s) found

real	0m1.487s
user	0m1.250s
sys	0m0.239s
