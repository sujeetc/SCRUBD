'solc --version' running
'solc ./0x030d087bfb025268f129a1979bda8ed3a6191a02.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

Reentrancy in Andy._transfer(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#321-352):
	External calls:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- address(marketingWallet).sendValue(ethAmount - ethFromLiquidity) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#409)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	External calls sending eth:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	State variables written after the call(s):
	- _tOwned[from] -= amount (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#334)
	Andy._tOwned (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#113) can be used in cross function reentrancies:
	- Andy._getTaxValues(uint256,address,bool) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#297-319)
	- Andy._transfer(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#321-352)
	- Andy.balanceOf(address) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#196-198)
	- Andy.constructor() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#159-177)
	- transferAmount = _getTaxValues(amount,from,to == pair) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#338)
		- _tOwned[address(this)] += totalTaxedTokens (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#314)
	Andy._tOwned (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#113) can be used in cross function reentrancies:
	- Andy._getTaxValues(uint256,address,bool) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#297-319)
	- Andy._transfer(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#321-352)
	- Andy.balanceOf(address) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#196-198)
	- Andy.constructor() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#159-177)
	- transferAmount = _getTaxValues(amount,from,to == pair) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#338)
		- totalTokensFromTax.marketingTokens += tokensForMarketing (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#307)
		- totalTokensFromTax.lpTokens += tokensForLP (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#310)
	Andy.totalTokensFromTax (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#143) can be used in cross function reentrancies:
	- Andy._getTaxValues(uint256,address,bool) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#297-319)
	- Andy.owner_rescueTokens() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#278-285)
	- Andy.swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#354-376)
	- Andy.totalTokensFromTax (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#143)
Reentrancy in Andy._transfer(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#321-352):
	External calls:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- address(marketingWallet).sendValue(ethAmount - ethFromLiquidity) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#409)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	External calls sending eth:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	State variables written after the call(s):
	- _tOwned[to] += transferAmount (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#350)
	Andy._tOwned (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#113) can be used in cross function reentrancies:
	- Andy._getTaxValues(uint256,address,bool) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#297-319)
	- Andy._transfer(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#321-352)
	- Andy.balanceOf(address) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#196-198)
	- Andy.constructor() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#159-177)
Reentrancy in Andy.swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#354-376):
	External calls:
	- ethSwapped = swapTokensForETH(totalTokensFromTax.marketingTokens) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#357)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	External calls sending eth:
	- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	State variables written after the call(s):
	- totalTokensFromTax.marketingTokens = 0 (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#360)
	Andy.totalTokensFromTax (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#143) can be used in cross function reentrancies:
	- Andy._getTaxValues(uint256,address,bool) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#297-319)
	- Andy.owner_rescueTokens() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#278-285)
	- Andy.swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#354-376)
	- Andy.totalTokensFromTax (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#143)
Reentrancy in Andy.swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#354-376):
	External calls:
	- ethSwapped = swapTokensForETH(totalTokensFromTax.marketingTokens) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#357)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	- balAutoLP = swapTokensForETH(half) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#367)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	- addLiquidity(otherHalf,balAutoLP) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#369)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- address(marketingWallet).sendValue(ethAmount - ethFromLiquidity) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#409)
	External calls sending eth:
	- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	- addLiquidity(otherHalf,balAutoLP) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#369)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
	State variables written after the call(s):
	- totalTokensFromTax.lpTokens = 0 (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#370)
	Andy.totalTokensFromTax (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#143) can be used in cross function reentrancies:
	- Andy._getTaxValues(uint256,address,bool) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#297-319)
	- Andy.owner_rescueTokens() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#278-285)
	- Andy.swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#354-376)
	- Andy.totalTokensFromTax (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#143)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Andy.addLiquidity(uint256,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#396-410) ignores return value by (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

Andy.allowance(address,address).owner (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#205) shadows:
	- Ownable.owner() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#44-46) (function)
Andy._approve(address,address,uint256).owner (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#230) shadows:
	- Ownable.owner() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#44-46) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

Andy.owner_setTransferMaxes(uint256,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#266-271) should emit an event for: 
	- maxTxAmount = maxTX_EXACT * (10 ** _decimals) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#269) 
	- maxWallet = maxWallet_EXACT * (10 ** _decimals) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#270) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Reentrancy in Andy._transfer(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#321-352):
	External calls:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- address(marketingWallet).sendValue(ethAmount - ethFromLiquidity) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#409)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	External calls sending eth:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	State variables written after the call(s):
	- _caughtDogs ++ (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#341)
	- _dogSellTime[to] = block.timestamp + _dogSellTimeOffset (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#342)
Reentrancy in Andy.swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#354-376):
	External calls:
	- ethSwapped = swapTokensForETH(totalTokensFromTax.marketingTokens) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#357)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	- balAutoLP = swapTokensForETH(half) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#367)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	External calls sending eth:
	- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	State variables written after the call(s):
	- balAutoLP = swapTokensForETH(half) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#367)
		- _allowances[owner][spender] = amount (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#233)
Reentrancy in Andy.swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#354-376):
	External calls:
	- ethSwapped = swapTokensForETH(totalTokensFromTax.marketingTokens) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#357)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	- balAutoLP = swapTokensForETH(half) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#367)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	- addLiquidity(otherHalf,balAutoLP) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#369)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- address(marketingWallet).sendValue(ethAmount - ethFromLiquidity) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#409)
	External calls sending eth:
	- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	- addLiquidity(otherHalf,balAutoLP) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#369)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
	State variables written after the call(s):
	- addLiquidity(otherHalf,balAutoLP) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#369)
		- _allowances[owner][spender] = amount (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#233)
	- _lastSwap = block.timestamp (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#375)
Reentrancy in Andy.transferFrom(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#214-218):
	External calls:
	- _transfer(sender,recipient,amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#215)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- address(marketingWallet).sendValue(ethAmount - ethFromLiquidity) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#409)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#215)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#216)
		- _allowances[owner][spender] = amount (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#233)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in Andy._transfer(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#321-352):
	External calls:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- address(marketingWallet).sendValue(ethAmount - ethFromLiquidity) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#409)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	External calls sending eth:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	Event emitted after the call(s):
	- Transfer(from,address(this),totalTaxedTokens) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#316)
		- transferAmount = _getTaxValues(amount,from,to == pair) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#338)
Reentrancy in Andy._transfer(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#321-352):
	External calls:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- address(marketingWallet).sendValue(ethAmount - ethFromLiquidity) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#409)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	External calls sending eth:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	Event emitted after the call(s):
	- Transfer(from,to,transferAmount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#351)
Reentrancy in Andy.swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#354-376):
	External calls:
	- ethSwapped = swapTokensForETH(totalTokensFromTax.marketingTokens) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#357)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	- balAutoLP = swapTokensForETH(half) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#367)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	External calls sending eth:
	- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#234)
		- balAutoLP = swapTokensForETH(half) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#367)
Reentrancy in Andy.swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#354-376):
	External calls:
	- ethSwapped = swapTokensForETH(totalTokensFromTax.marketingTokens) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#357)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	- balAutoLP = swapTokensForETH(half) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#367)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	- addLiquidity(otherHalf,balAutoLP) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#369)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- address(marketingWallet).sendValue(ethAmount - ethFromLiquidity) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#409)
	External calls sending eth:
	- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	- addLiquidity(otherHalf,balAutoLP) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#369)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#234)
		- addLiquidity(otherHalf,balAutoLP) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#369)
	- SwapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#373)
Reentrancy in Andy.transferFrom(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#214-218):
	External calls:
	- _transfer(sender,recipient,amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#215)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- address(marketingWallet).sendValue(ethAmount - ethFromLiquidity) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#409)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#386-392)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#215)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#234)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#216)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Andy._transfer(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#321-352) uses timestamp for comparisons
	Dangerous comparisons:
	- balanceOf(address(this)) >= swapThreshold && block.timestamp >= (_lastSwap + _swapCooldown) && ! swapping && from != pair && from != owner() && to != owner() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#331)
	- require(bool)(block.timestamp < _dogSellTime[from]) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#346)
Andy.addLiquidity(uint256,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#396-410) uses timestamp for comparisons
	Dangerous comparisons:
	- ethAmount - ethFromLiquidity > 0 (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#408)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Context._msgData() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#29-32) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Version constraint ^0.8.17 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess.
It is used by:
	- ^0.8.17 (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#13)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#16-21):
	- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IRouter.WETH() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#89) is not in mixedCase
Function Andy.owner_setBlacklisted(address,bool) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#242-244) is not in mixedCase
Function Andy.owner_setBulkIsBlacklisted(address[],bool) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#246-250) is not in mixedCase
Function Andy.owner_setBuyTaxes(uint8,uint8) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#252-257) is not in mixedCase
Function Andy.owner_setSellTaxes(uint8,uint8) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#259-264) is not in mixedCase
Function Andy.owner_setTransferMaxes(uint256,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#266-271) is not in mixedCase
Parameter Andy.owner_setTransferMaxes(uint256,uint256).maxTX_EXACT (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#266) is not in mixedCase
Parameter Andy.owner_setTransferMaxes(uint256,uint256).maxWallet_EXACT (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#266) is not in mixedCase
Function Andy.owner_rescueETH(uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#273-276) is not in mixedCase
Function Andy.owner_rescueTokens() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#278-285) is not in mixedCase
Function Andy.owner_setWatchDogg(bool) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#287-289) is not in mixedCase
Function Andy.owner_setDogSellTimeForAddress(address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#291-293) is not in mixedCase
Variable Andy._isExcludedFromFee (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#116) is not in mixedCase
Variable Andy._isExcludedFromMaxBalance (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#117) is not in mixedCase
Variable Andy._isBlacklisted (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#118) is not in mixedCase
Variable Andy._dogSellTime (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#119) is not in mixedCase
Variable Andy._caughtDogs (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#123) is not in mixedCase
Constant Andy._decimals (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#125) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Andy._name (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#131) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Andy._symbol (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#132) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#30)" inContext (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#24-33)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

Reentrancy in Andy._transfer(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#321-352):
	External calls:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	External calls sending eth:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	State variables written after the call(s):
	- _caughtDogs ++ (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#341)
	- _dogSellTime[to] = block.timestamp + _dogSellTimeOffset (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#342)
	- _tOwned[from] -= amount (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#334)
	- transferAmount = _getTaxValues(amount,from,to == pair) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#338)
		- _tOwned[address(this)] += totalTaxedTokens (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#314)
	- transferAmount = _getTaxValues(amount,from,to == pair) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#338)
		- totalTokensFromTax.marketingTokens += tokensForMarketing (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#307)
		- totalTokensFromTax.lpTokens += tokensForLP (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#310)
	Event emitted after the call(s):
	- Transfer(from,address(this),totalTaxedTokens) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#316)
		- transferAmount = _getTaxValues(amount,from,to == pair) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#338)
Reentrancy in Andy._transfer(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#321-352):
	External calls:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	External calls sending eth:
	- swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#332)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	State variables written after the call(s):
	- _tOwned[to] += transferAmount (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#350)
	Event emitted after the call(s):
	- Transfer(from,to,transferAmount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#351)
Reentrancy in Andy.swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#354-376):
	External calls:
	- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	State variables written after the call(s):
	- balAutoLP = swapTokensForETH(half) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#367)
		- _allowances[owner][spender] = amount (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#233)
	- totalTokensFromTax.marketingTokens = 0 (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#360)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#234)
		- balAutoLP = swapTokensForETH(half) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#367)
Reentrancy in Andy.swapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#354-376):
	External calls:
	- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	External calls sending eth:
	- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	- addLiquidity(otherHalf,balAutoLP) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#369)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
	State variables written after the call(s):
	- addLiquidity(otherHalf,balAutoLP) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#369)
		- _allowances[owner][spender] = amount (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#233)
	- _lastSwap = block.timestamp (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#375)
	- totalTokensFromTax.lpTokens = 0 (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#370)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#234)
		- addLiquidity(otherHalf,balAutoLP) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#369)
	- SwapAndLiquify() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#373)
Reentrancy in Andy.transferFrom(address,address,uint256) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#214-218):
	External calls:
	- _transfer(sender,recipient,amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#215)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#215)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#399-406)
		- (success,None) = recipient.call{value: amount}() (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#19)
		- address(marketingWallet).transfer(ethSwapped) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#359)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#216)
		- _allowances[owner][spender] = amount (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#233)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#234)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount) (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#216)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

Andy._dogSellTimeOffset (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#121) should be constant 
Andy._swapCooldown (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#151) should be constant 
Andy._tTotal (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#126) should be constant 
Andy.marketingWallet (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#148) should be constant 
Andy.swapThreshold (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#127) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

Andy.pair (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#111) should be immutable 
Andy.router (0x030d087bfb025268f129a1979bda8ed3a6191a02.sol#110) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x030d087bfb025268f129a1979bda8ed3a6191a02.sol analyzed (7 contracts with 94 detectors), 55 result(s) found

real	0m3.030s
user	0m2.813s
sys	0m0.219s
