'solc --version' running
'solc ./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

Reentrancy in Xlabs._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#865-942):
	External calls:
	- swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#896)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,_to,block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#999-1005)
	External calls sending eth:
	- swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#896)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
	State variables written after the call(s):
	- super._transfer(from,address(this),devShare) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#910)
		- _balances[sender] = senderBalance - amount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#255)
		- _balances[recipient] += amount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#257)
	ERC20._balances (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#118) can be used in cross function reentrancies:
	- ERC20._createTotalSupply(address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#267-277)
	- ERC20._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#242-262)
	- ERC20.balanceOf(address) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#168-170)
	- super._transfer(from,address(this),liquidityShare) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#916)
		- _balances[sender] = senderBalance - amount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#255)
		- _balances[recipient] += amount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#257)
	ERC20._balances (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#118) can be used in cross function reentrancies:
	- ERC20._createTotalSupply(address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#267-277)
	- ERC20._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#242-262)
	- ERC20.balanceOf(address) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#168-170)
	- super._transfer(from,address(this),devShare) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#926)
		- _balances[sender] = senderBalance - amount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#255)
		- _balances[recipient] += amount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#257)
	ERC20._balances (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#118) can be used in cross function reentrancies:
	- ERC20._createTotalSupply(address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#267-277)
	- ERC20._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#242-262)
	- ERC20.balanceOf(address) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#168-170)
	- super._transfer(from,deadWallet,burnShare) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#931)
		- _balances[sender] = senderBalance - amount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#255)
		- _balances[recipient] += amount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#257)
	ERC20._balances (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#118) can be used in cross function reentrancies:
	- ERC20._createTotalSupply(address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#267-277)
	- ERC20._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#242-262)
	- ERC20.balanceOf(address) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#168-170)
	- super._transfer(from,to,amount) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#940)
		- _balances[sender] = senderBalance - amount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#255)
		- _balances[recipient] += amount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#257)
	ERC20._balances (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#118) can be used in cross function reentrancies:
	- ERC20._createTotalSupply(address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#267-277)
	- ERC20._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#242-262)
	- ERC20.balanceOf(address) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#168-170)
	- devTokens += devShare (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#909)
	Xlabs.devTokens (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#806) can be used in cross function reentrancies:
	- Xlabs._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#865-942)
	- Xlabs.devTokens (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#806)
	- Xlabs.swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#944-971)
	- devTokens += devShare (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#925)
	Xlabs.devTokens (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#806) can be used in cross function reentrancies:
	- Xlabs._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#865-942)
	- Xlabs.devTokens (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#806)
	- Xlabs.swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#944-971)
	- liquidityTokens += liquidityShare (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#915)
	Xlabs.liquidityTokens (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#805) can be used in cross function reentrancies:
	- Xlabs._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#865-942)
	- Xlabs.liquidityTokens (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#805)
	- Xlabs.swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#944-971)
Reentrancy in Xlabs.swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#944-971):
	External calls:
	- swapTokensForEth(half,address(this)) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#955)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,_to,block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#999-1005)
	- addLiquidity(otherHalf,newBalance) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#961)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
	External calls sending eth:
	- addLiquidity(otherHalf,newBalance) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#961)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
	State variables written after the call(s):
	- liquidityTokens -= swapTokensAtAmount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#963)
	Xlabs.liquidityTokens (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#805) can be used in cross function reentrancies:
	- Xlabs._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#865-942)
	- Xlabs.liquidityTokens (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#805)
	- Xlabs.swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#944-971)
Reentrancy in Xlabs.swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#944-971):
	External calls:
	- swapTokensForEth(half,address(this)) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#955)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,_to,block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#999-1005)
	- addLiquidity(otherHalf,newBalance) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#961)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
	- swapTokensForEth(swapTokensAtAmount,devWallet) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#967)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,_to,block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#999-1005)
	External calls sending eth:
	- addLiquidity(otherHalf,newBalance) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#961)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
	State variables written after the call(s):
	- swapTokensForEth(swapTokensAtAmount,devWallet) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#967)
		- _allowances[owner][spender] = amount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#292)
	ERC20._allowances (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#120) can be used in cross function reentrancies:
	- ERC20._approve(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#284-294)
	- ERC20.allowance(address,address) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#184-186)
	- ERC20.decreaseAllowance(address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#228-236)
	- ERC20.increaseAllowance(address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#219-222)
	- ERC20.transferFrom(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#199-213)
	- devTokens -= swapTokensAtAmount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#968)
	Xlabs.devTokens (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#806) can be used in cross function reentrancies:
	- Xlabs._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#865-942)
	- Xlabs.devTokens (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#806)
	- Xlabs.swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#944-971)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Xlabs._transfer(address,address,uint256).liquidityShare (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#902) is a local variable never initialized
Xlabs._transfer(address,address,uint256).devShare (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#901) is a local variable never initialized
Xlabs._transfer(address,address,uint256).burnShare (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#903) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

Xlabs.addLiquidity(uint256,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#973-986) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

Xlabs.removeBuyFee(uint256,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1009-1013) should emit an event for: 
	- liquidityBuyFee = _liqFee (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1011) 
	- devBuyFee = _devFee (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1012) 
Xlabs.removeSellFee(uint256,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1015-1019) should emit an event for: 
	- devSellFee = _devFee (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1017) 
	- burnSellFee = _burnFee (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1018) 
Xlabs.setMaxBuyTransactionAmount(uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1025-1028) should emit an event for: 
	- maxBuyTransactionAmount = _maxTxAmount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1026) 
Xlabs.setMaxSellTransactionAmount(uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1030-1033) should emit an event for: 
	- maxSellTransactionAmount = _maxTxAmount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1031) 
Xlabs.SetSwapTokensAtAmount(uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1042-1044) should emit an event for: 
	- swapTokensAtAmount = newLimit (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1043) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Xlabs.updateDevWallet(address)._devWallet (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1021) lacks a zero-check on :
		- devWallet = _devWallet (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1022)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in Xlabs._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#865-942):
	External calls:
	- swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#896)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,_to,block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#999-1005)
	External calls sending eth:
	- swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#896)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
	Event emitted after the call(s):
	- Transfer(sender,recipient,amount) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#259)
		- super._transfer(from,deadWallet,burnShare) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#931)
	- Transfer(sender,recipient,amount) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#259)
		- super._transfer(from,to,amount) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#940)
	- Transfer(sender,recipient,amount) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#259)
		- super._transfer(from,address(this),devShare) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#910)
	- Transfer(sender,recipient,amount) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#259)
		- super._transfer(from,address(this),devShare) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#926)
	- Transfer(sender,recipient,amount) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#259)
		- super._transfer(from,address(this),liquidityShare) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#916)
Reentrancy in Xlabs.swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#944-971):
	External calls:
	- swapTokensForEth(half,address(this)) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#955)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,_to,block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#999-1005)
	- addLiquidity(otherHalf,newBalance) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#961)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
	External calls sending eth:
	- addLiquidity(otherHalf,newBalance) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#961)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#293)
		- addLiquidity(otherHalf,newBalance) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#961)
	- SwapAndLiquify(half,newBalance,otherHalf) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#962)
Reentrancy in Xlabs.swapAndLiquify() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#944-971):
	External calls:
	- swapTokensForEth(half,address(this)) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#955)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,_to,block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#999-1005)
	- addLiquidity(otherHalf,newBalance) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#961)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
	- swapTokensForEth(swapTokensAtAmount,devWallet) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#967)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,_to,block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#999-1005)
	External calls sending eth:
	- addLiquidity(otherHalf,newBalance) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#961)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#978-985)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#293)
		- swapTokensForEth(swapTokensAtAmount,devWallet) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#967)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Xlabs._transfer(address,address,uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#865-942) has a high cyclomatic complexity (12).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

Context._msgData() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#51-53) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Version constraint 0.8.17 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess.
It is used by:
	- 0.8.17 (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#3)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Function IUniswapV2Router01.WETH() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#320) is not in mixedCase
Parameter Xlabs.swapTokensForEth(uint256,address)._to (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#988) is not in mixedCase
Parameter Xlabs.removeBuyFee(uint256,uint256)._liqFee (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1009) is not in mixedCase
Parameter Xlabs.removeBuyFee(uint256,uint256)._devFee (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1009) is not in mixedCase
Parameter Xlabs.removeSellFee(uint256,uint256)._devFee (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1015) is not in mixedCase
Parameter Xlabs.removeSellFee(uint256,uint256)._burnFee (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1015) is not in mixedCase
Parameter Xlabs.updateDevWallet(address)._devWallet (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1021) is not in mixedCase
Parameter Xlabs.setMaxBuyTransactionAmount(uint256)._maxTxAmount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1025) is not in mixedCase
Parameter Xlabs.setMaxSellTransactionAmount(uint256)._maxTxAmount (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1030) is not in mixedCase
Function Xlabs.SetSwapTokensAtAmount(uint256) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1042-1044) is not in mixedCase
Parameter Xlabs.setSwapAndLiquifyEnabled(bool)._enabled (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1050) is not in mixedCase
Parameter Xlabs.setMaxWalletToken(uint256)._newValue (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#1055) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Xlabs.constructor() (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#843-863) uses literals with too many digits:
	- _createTotalSupply(owner(),21000000 * (10 ** 18)) (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#862)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Xlabs.deadWallet (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#817) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

Xlabs.uniswapV2Router (0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol#802) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol analyzed (12 contracts with 94 detectors), 34 result(s) found

real	0m2.868s
user	0m2.613s
sys	0m0.256s
