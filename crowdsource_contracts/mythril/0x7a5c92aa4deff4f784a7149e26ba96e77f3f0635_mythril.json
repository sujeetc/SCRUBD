{"error": null, "issues": [{"address": 433, "code": "owner.send(feecounter)", "contract": "Contagion", "description": "The return value of a message call is not checked.\nExternal calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.", "filename": "./0x7a5c92aa4deff4f784a7149e26ba96e77f3f0635.sol", "function": "fallback", "lineno": 38, "max_gas_used": 143008, "min_gas_used": 27877, "severity": "Medium", "sourceMap": "752:22", "swc-id": "104", "title": "Unchecked return value from external call.", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x202010c0000000000", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x800003041f800001", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061048a806100616000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633327d22f146100775780634bca893d146100eb57806361bc221a14610122575b662386f26fc10000341015151561006d57600080fd5b61007561014d565b005b34801561008357600080fd5b506100a26004803603810190808035906020019092919050505061026c565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156100f757600080fd5b5061012060048036038101908080359060200190929190803590602001909291905050506102bf565b005b34801561012e57600080fd5b506101376103d8565b6040518082815260200191505060405180910390f35b60008060053481151561015c57fe5b049150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505050600091506000805490509050600080549050600181905550600080548091906001016101e391906103de565b50336000828154811015156101f457fe5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460008281548110151561025357fe5b9060005260206000209060020201600101819055505050565b60008181548110151561027b57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103d4575b808211156103d357600060015481548110151561032f57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60216103e8600060015481548110151561039057fe5b9060005260206000209060020201600101548115156103ab57fe5b04029081150290604051600060405180830381858888f1935050505050600182039150610316565b5b5050565b60015481565b81548183558181111561040b5760020281600202836000526020600020918201910161040a9190610410565b5b505050565b61045b91905b8082111561045757600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550600201610416565b5090565b905600a165627a7a72305820708016bfdc5f193834f122c2f2d0f646060748bffc9aef24c293d6441331f34f0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00000000", "input": "0x00000000", "name": "blockHashAddendsInexpansible(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x2386f26fc10000"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00000000", "input": "0x00000000", "name": "blockHashAddendsInexpansible(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x2386f26fc10000"}]}}, {"address": 634, "code": "_Tx[] public Tx", "contract": "Contagion", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x7a5c92aa4deff4f784a7149e26ba96e77f3f0635.sol", "function": "Tx(uint256)", "lineno": 13, "max_gas_used": 1109, "min_gas_used": 1014, "severity": "Medium", "sourceMap": "331:15:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061048a806100616000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633327d22f146100775780634bca893d146100eb57806361bc221a14610122575b662386f26fc10000341015151561006d57600080fd5b61007561014d565b005b34801561008357600080fd5b506100a26004803603810190808035906020019092919050505061026c565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156100f757600080fd5b5061012060048036038101908080359060200190929190803590602001909291905050506102bf565b005b34801561012e57600080fd5b506101376103d8565b6040518082815260200191505060405180910390f35b60008060053481151561015c57fe5b049150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505050600091506000805490509050600080549050600181905550600080548091906001016101e391906103de565b50336000828154811015156101f457fe5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460008281548110151561025357fe5b9060005260206000209060020201600101819055505050565b60008181548110151561027b57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103d4575b808211156103d357600060015481548110151561032f57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60216103e8600060015481548110151561039057fe5b9060005260206000209060020201600101548115156103ab57fe5b04029081150290604051600060405180830381858888f1935050505050600182039150610316565b5b5050565b60015481565b81548183558181111561040b5760020281600202836000526020600020918201910161040a9190610410565b5b505050565b61045b91905b8082111561045757600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550600201610416565b5090565b905600a165627a7a72305820708016bfdc5f193834f122c2f2d0f646060748bffc9aef24c293d6441331f34f0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x3327d22f", "input": "0x3327d22f", "name": "Tx(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 814, "code": "function Count(uint end, uint start) public onlyowner {\r\n        while (end>start) {\r\n            Tx[counter].txuser.send((Tx[counter].txvalue/1000)*33);\r\n            end-=1;\r\n        }\r\n    }", "contract": "Contagion", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x7a5c92aa4deff4f784a7149e26ba96e77f3f0635.sol", "function": "Count(uint256,uint256)", "lineno": 47, "max_gas_used": 3186, "min_gas_used": 2761, "severity": "Medium", "sourceMap": "958:192:0", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061048a806100616000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633327d22f146100775780634bca893d146100eb57806361bc221a14610122575b662386f26fc10000341015151561006d57600080fd5b61007561014d565b005b34801561008357600080fd5b506100a26004803603810190808035906020019092919050505061026c565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156100f757600080fd5b5061012060048036038101908080359060200190929190803590602001909291905050506102bf565b005b34801561012e57600080fd5b506101376103d8565b6040518082815260200191505060405180910390f35b60008060053481151561015c57fe5b049150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505050600091506000805490509050600080549050600181905550600080548091906001016101e391906103de565b50336000828154811015156101f457fe5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460008281548110151561025357fe5b9060005260206000209060020201600101819055505050565b60008181548110151561027b57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103d4575b808211156103d357600060015481548110151561032f57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60216103e8600060015481548110151561039057fe5b9060005260206000209060020201600101548115156103ab57fe5b04029081150290604051600060405180830381858888f1935050505050600182039150610316565b5b5050565b60015481565b81548183558181111561040b5760020281600202836000526020600020918201910161040a9190610410565b5b505050565b61045b91905b8082111561045757600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550600201610416565b5090565b905600a165627a7a72305820708016bfdc5f193834f122c2f2d0f646060748bffc9aef24c293d6441331f34f0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x4bca893d01", "input": "0x4bca893d01", "name": "Count(uint256,uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}, {"address": 962, "code": "Tx[counter].txuser.send((Tx[counter].txvalue/1000)*33)", "contract": "Contagion", "description": "Multiple calls are executed in the same transaction.\nThis call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\u2019re part of your own codebase).", "filename": "./0x7a5c92aa4deff4f784a7149e26ba96e77f3f0635.sol", "function": "Count(uint256,uint256)", "lineno": 49, "max_gas_used": 82808, "min_gas_used": 12971, "severity": "Low", "sourceMap": "1056:54", "swc-id": "113", "title": "Multiple Calls in a Single Transaction", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x3f9a40048d3a262", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061048a806100616000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633327d22f146100775780634bca893d146100eb57806361bc221a14610122575b662386f26fc10000341015151561006d57600080fd5b61007561014d565b005b34801561008357600080fd5b506100a26004803603810190808035906020019092919050505061026c565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156100f757600080fd5b5061012060048036038101908080359060200190929190803590602001909291905050506102bf565b005b34801561012e57600080fd5b506101376103d8565b6040518082815260200191505060405180910390f35b60008060053481151561015c57fe5b049150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505050600091506000805490509050600080549050600181905550600080548091906001016101e391906103de565b50336000828154811015156101f457fe5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460008281548110151561025357fe5b9060005260206000209060020201600101819055505050565b60008181548110151561027b57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103d4575b808211156103d357600060015481548110151561032f57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60216103e8600060015481548110151561039057fe5b9060005260206000209060020201600101548115156103ab57fe5b04029081150290604051600060405180830381858888f1935050505050600182039150610316565b5b5050565b60015481565b81548183558181111561040b5760020281600202836000526020600020918201910161040a9190610410565b5b505050565b61045b91905b8082111561045757600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550600201610416565b5090565b905600a165627a7a72305820708016bfdc5f193834f122c2f2d0f646060748bffc9aef24c293d6441331f34f0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00000000", "input": "0x00000000", "name": "blockHashAddendsInexpansible(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x2386f26fc10000"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x4bca893d0000000000000000000000000000000000000000000000000000000000000002", "input": "0x4bca893d0000000000000000000000000000000000000000000000000000000000000002", "name": "Count(uint256,uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}, {"address": 962, "code": "Tx[counter].txuser.send((Tx[counter].txvalue/1000)*33)", "contract": "Contagion", "description": "The return value of a message call is not checked.\nExternal calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.", "filename": "./0x7a5c92aa4deff4f784a7149e26ba96e77f3f0635.sol", "function": "Count(uint256,uint256)", "lineno": 49, "max_gas_used": 82808, "min_gas_used": 12971, "severity": "Medium", "sourceMap": "1056:54", "swc-id": "104", "title": "Unchecked return value from external call.", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x20040c64028403", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x608060405234801561001057600080fd5b5033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061048a806100616000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633327d22f146100775780634bca893d146100eb57806361bc221a14610122575b662386f26fc10000341015151561006d57600080fd5b61007561014d565b005b34801561008357600080fd5b506100a26004803603810190808035906020019092919050505061026c565b604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019250505060405180910390f35b3480156100f757600080fd5b5061012060048036038101908080359060200190929190803590602001909291905050506102bf565b005b34801561012e57600080fd5b506101376103d8565b6040518082815260200191505060405180910390f35b60008060053481151561015c57fe5b049150600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505050600091506000805490509050600080549050600181905550600080548091906001016101e391906103de565b50336000828154811015156101f457fe5b906000526020600020906002020160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503460008281548110151561025357fe5b9060005260206000209060020201600101819055505050565b60008181548110151561027b57fe5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154905082565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156103d4575b808211156103d357600060015481548110151561032f57fe5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc60216103e8600060015481548110151561039057fe5b9060005260206000209060020201600101548115156103ab57fe5b04029081150290604051600060405180830381858888f1935050505050600182039150610316565b5b5050565b60015481565b81548183558181111561040b5760020281600202836000526020600020918201910161040a9190610410565b5b505050565b61045b91905b8082111561045757600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600182016000905550600201610416565b5090565b905600a165627a7a72305820708016bfdc5f193834f122c2f2d0f646060748bffc9aef24c293d6441331f34f0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00000000", "input": "0x00000000", "name": "blockHashAddendsInexpansible(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x2386f26fc10000"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x4bca893d0000000000000000000000000000000000000000000000000000000000000002", "input": "0x4bca893d0000000000000000000000000000000000000000000000000000000000000002", "name": "Count(uint256,uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}], "success": true}
