{
    "file_name": "dao_symex_path_1.json",
    "from_function": "rtbPaymentsProcessing",
    "to_function": "changeTokenAddress",
    "bug_type": "dao",
    "src_node": "\"BlockID: 579\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 651\nCall context: \nNone\n_forPBudgets := TMP_127\nTMP_128 = CONVERT tokenAddress to ABChainRTBtoken\nTMP_129(bool) = HIGH_LEVEL_CALL, dest:TMP_128(ABChainRTBtoken), function:transfer, arguments:['ABChainPBudgetsAddress', '_forPBudgets']  \""
    ],
    "executable_instructions": 194,
    "state_variable": "tokenAddress",
    "error": "",
    "result": "UNSAT",
    "execution_details": "# using file \/ethereum-security\/empirical-study\/data\/extracted_solc_codes\/crowdsource_contracts\/sailfish\/0x575d8909d7fef2561ef8c2114d80b736fb77cbb6\/dao_symex_path_1.json\n# attack type: range\n# solver type: z3\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x14@__GLOBAL__\n    > adding global block: 0x21@__GLOBAL__\n    > adding global block: 0x22@__GLOBAL__\n    > adding global block: 0x23@__GLOBAL__\n    > adding global block: 0x24@__GLOBAL__\n    > adding global block: 0x25@__GLOBAL__\n    > adding global block: 0x26@__GLOBAL__\n    > adding global block: 0x27@__GLOBAL__\n    > adding global block: 0x28@__GLOBAL__\n    > adding global block: 0x29@__GLOBAL__\n    > adding global block: 0x2a@__GLOBAL__\n    > adding global block: 0x2b@__GLOBAL__\n    > adding global block: 0x7a@__GLOBAL__\n    > adding global block: 0x7b@__GLOBAL__\n    > adding global block: 0x7c@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: totalSupply\n    > initializing global variable: totalSupply\n    > declaring global variable: balances\n    > initializing global variable: balances\n    > declaring global variable: allowed\n    > initializing global variable: allowed\n    > declaring global variable: name\n    > initializing global variable: name\n    > declaring global variable: symbol\n    > initializing global variable: symbol\n    > declaring global variable: decimals\n    > initializing global variable: decimals\n    > declaring global variable: INITIAL_SUPPLY\n    > initializing global variable: INITIAL_SUPPLY\n    > declaring global variable: burnedCount\n    > initializing global variable: burnedCount\n    > declaring global variable: burnedAfterSaleCount\n    > initializing global variable: burnedAfterSaleCount\n    > declaring global variable: migrationAgent\n    > initializing global variable: migrationAgent\n    > declaring global variable: tokenAddress\n    > initializing global variable: tokenAddress\n\n    > declaring global variable: ABChainRevenueAddress\n    > initializing global variable: ABChainRevenueAddress\n\n    > declaring global variable: ABChainPBudgetsAddress\n    > initializing global variable: ABChainPBudgetsAddress\n\n    > declaring global variable: tokenBurningPercentage\n    > initializing global variable: tokenBurningPercentage\n\n    > declaring global variable: revenuePercentage\n    > initializing global variable: revenuePercentage\n\n    > declaring global variable: processedRTBs\n    > initializing global variable: processedRTBs\n\n    > declaring global variable: burnedRTBs\n    > initializing global variable: burnedRTBs\n\n    > declaring global variable: netRevenueRTBs\n    > initializing global variable: netRevenueRTBs\n\n    > declaring global variable: publrsBudgRTBs\n    > initializing global variable: publrsBudgRTBs\n\n    > declaring global variable: processingCallsCount\n    > initializing global variable: processingCallsCount\n\n    > declaring global variable: contractOwner\n    > initializing global variable: contractOwner\n\n\n    > declaring global variable: ERC20Basic\n    > initializing global variable: ERC20Basic\n    > declaring global variable: SafeMath\n    > initializing global variable: SafeMath\n    > declaring global variable: BasicToken\n    > initializing global variable: BasicToken\n    > declaring global variable: ERC20\n    > initializing global variable: ERC20\n    > declaring global variable: StandardToken\n    > initializing global variable: StandardToken\n    > declaring global variable: MigrationAgent\n    > initializing global variable: MigrationAgent\n    > declaring global variable: ABChainRTBtoken\n    > initializing global variable: ABChainRTBtoken\n    > declaring global variable: ABChainNetContract_v5\n    > initializing global variable: ABChainNetContract_v5\n# building ranges\n  > start adding range variables\n    > adding: contractOwner -> (0x2@__RANGE__ 0x16@__RANGE__)\n    > adding: tokenAddress -> (0x2@__RANGE__ 0x18@__RANGE__)\n    > adding: ABChainRevenueAddress -> (0x2@__RANGE__ 0x1a@__RANGE__)\n    > adding: ABChainPBudgetsAddress -> (0x2@__RANGE__ 0x1c@__RANGE__)\n    > adding: tokenBurningPercentage -> (0x2@__RANGE__ 0x1e@__RANGE__)\n    > adding: revenuePercentage -> (0x2@__RANGE__ 0x20@__RANGE__)\n    > adding: balances -> (0x2@__RANGE__ 0x59@__RANGE__ 0x5a@__RANGE__ 0x5b@__RANGE__ 0x5c@__RANGE__ 0x5e@__RANGE__)\n    > adding: totalSupply -> (0x2@__RANGE__ 0x61@__RANGE__)\n    > adding: burnedCount -> (0x2@__RANGE__ 0x64@__RANGE__)\n    > adding: processingCallsCount -> (0x2@__RANGE__ 0x66@__RANGE__)\n    > adding: processedRTBs -> (0x2@__RANGE__ 0x67@__RANGE__)\n    > adding: burnedRTBs -> (0x2@__RANGE__ 0x68@__RANGE__)\n    > adding: publrsBudgRTBs -> (0x2@__RANGE__ 0x69@__RANGE__)\n    > adding: netRevenueRTBs -> (0x2@__RANGE__ 0x6a@__RANGE__)\n  > range entry addresses: (0x2@__RANGE__ 0x68@__RANGE__ 0x61@__RANGE__ 0x69@__RANGE__ 0x16@__RANGE__ 0x64@__RANGE__ 0x66@__RANGE__ 0x20@__RANGE__ 0x5c@__RANGE__ 0x5e@__RANGE__ 0x67@__RANGE__ 0x59@__RANGE__ 0x18@__RANGE__ 0x6a@__RANGE__ 0x5a@__RANGE__ 0x1c@__RANGE__ 0x1e@__RANGE__ 0x5b@__RANGE__ 0x1a@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0x16@__RANGE__\n    > adding range block: 0x15@__RANGE__\n    > adding range block: 0x18@__RANGE__\n    > adding range block: 0x17@__RANGE__\n    > adding range block: 0x1a@__RANGE__\n    > adding range block: 0x19@__RANGE__\n    > adding range block: 0x1c@__RANGE__\n    > adding range block: 0x1b@__RANGE__\n    > adding range block: 0x1e@__RANGE__\n    > adding range block: 0x1d@__RANGE__\n    > adding range block: 0x20@__RANGE__\n    > adding range block: 0x1f@__RANGE__\n    > adding range block: 0x5a@__RANGE__\n    > adding range block: 0x5c@__RANGE__\n    > adding range block: 0x5e@__RANGE__\n    > adding range block: 0x5f@__RANGE__\n    > adding range block: 0x5d@__RANGE__\n    > adding range block: 0x61@__RANGE__\n    > adding range block: 0x62@__RANGE__\n    > adding range block: 0x60@__RANGE__\n    > adding range block: 0x64@__RANGE__\n    > adding range block: 0x65@__RANGE__\n    > adding range block: 0x63@__RANGE__\n    > adding range block: 0x66@__RANGE__\n    > adding range block: 0x67@__RANGE__\n    > adding range block: 0x68@__RANGE__\n    > adding range block: 0x69@__RANGE__\n    > adding range block: 0x6a@__RANGE__\n# building normal scopes\n  > root addr: 0x7d\n  > dest addrs: (0x84)\n  > loading normal blocks\n    > adding normal block: 0x7d\n    > adding normal block: 0x7e\n    > adding normal block: 0x7f\n    > adding normal block: 0x80\n    > adding normal block: 0x80_r0\n    > adding normal block: 0x81\n    > adding normal block: 0x82\n    > adding normal block: 0x82_r0\n    > adding normal block: 0x84\n    > adding normal block: 0x85\n    > adding normal block: 0x86\n    > adding normal block: 0x86_r0\n    > adding normal block: 0x87\n    > adding normal block: 0x83\n    > adding normal block: 0x88\n    > adding normal block: 0x8a\n    > adding normal block: 0x8b\n    > adding normal block: 0x89\n    > adding normal block: 0x8c\n    > adding normal block: 0x8e\n    > adding normal block: 0x8f\n    > adding normal block: 0x90\n    > adding normal block: 0x91\n    > adding normal block: 0x93\n    > adding normal block: 0x93_r0\n    > adding normal block: 0x94\n    > adding normal block: 0x8d\n    > adding normal block: 0x92\n    > adding normal block: 0x96\n    > adding normal block: 0x97\n    > adding normal block: 0x95\n    > adding normal block: 0x98\n    > adding normal block: 0x9a\n    > adding normal block: 0x9b\n    > adding normal block: 0x9c\n    > adding normal block: 0x9d\n    > adding normal block: 0x9f\n    > adding normal block: 0x9f_r0\n    > adding normal block: 0xa0\n    > adding normal block: 0x99\n    > adding normal block: 0x9e\n    > adding normal block: 0xa2\n    > adding normal block: 0xa3\n    > adding normal block: 0xa3_r0\n    > adding normal block: 0xa4\n    > adding normal block: 0xa1\n    > adding normal block: 0xa5\n    > adding normal block: 0xa7\n    > adding normal block: 0xa8\n    > adding normal block: 0xa8_r0\n    > adding normal block: 0xa9\n    > adding normal block: 0xa6\n    > adding normal block: 0xaa\n    > adding normal block: 0xab\n    > adding normal block: 0xRequireTrap\n# start interpretation of normal blocks...\n\n# asserts size: 8\n# using solver: #<z3>\n# result: #f\n"
}