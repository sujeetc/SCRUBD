{
    "0x0e82b29a77a53880dd4ee8326cfea9b4c68db638.sol": [
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 42\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_12 := true\"",
                        "\"BlockID: 75\nFunction: buy\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_59\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_12 := true\"",
                        "\"BlockID: 83\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: buy\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_41\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 51\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 51\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 54\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 54\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 58\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 58\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 62\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 62\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 54\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 58\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 58\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 42\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_12 := true\"",
                        "\"BlockID: 75\nFunction: buy\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_59\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_12 := true\"",
                        "\"BlockID: 83\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: buy\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_41\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 51\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 51\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 54\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 54\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 58\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 58\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 62\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 62\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 54\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 59\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 58\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 58\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 337\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\"",
                        "\"BlockID: 75\nFunction: buy\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_59\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 337\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\"",
                        "\"BlockID: 83\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 336\nFunction: buy\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_59\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 344\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 340\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 347\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 352\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 347\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 352\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 347\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 352\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 347\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 352\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 347\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 352\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 347\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 352\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 343\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 343\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 346\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 346\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 349\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 349\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 350\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 350\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 353\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 353\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 357\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 357\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 349\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 350\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 354\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 354\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 350\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 353\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 353\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 350\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 371\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\"",
                        "\"BlockID: 75\nFunction: buy\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_59\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 371\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\"",
                        "\"BlockID: 83\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 370\nFunction: buy\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_59\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 378\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 374\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 381\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 386\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 381\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 386\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 381\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 386\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 381\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 386\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 381\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 386\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 381\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 386\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 377\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 377\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 380\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 380\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 383\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 383\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 384\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 384\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 387\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 387\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 391\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 391\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 383\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 384\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 388\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 388\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 384\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 387\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 387\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 384\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 106\nFunction: fallback\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_20 := true\"",
                        "\"BlockID: 75\nFunction: buy\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_59\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 106\nFunction: fallback\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_20 := true\"",
                        "\"BlockID: 83\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 105\nFunction: fallback\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 113\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 109\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 112\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 112\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 115\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 115\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 118\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 118\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 126\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 126\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 118\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 123\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 123\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 106\nFunction: fallback\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_20 := true\"",
                        "\"BlockID: 75\nFunction: buy\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_59\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 106\nFunction: fallback\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_20 := true\"",
                        "\"BlockID: 83\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 105\nFunction: fallback\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_68\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 113\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 109\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 112\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 112\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 115\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 115\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 118\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 118\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 126\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 126\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 118\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 123\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 123\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "reinvest"
            ],
            "from_function": "reinvest",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 134\nFunction: reinvest\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_77 = SOLIDITY_CALL require(bool)(TMP_76)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 146\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 137\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 145\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 145\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 148\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 148\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 151\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 151\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 151\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_25 = REF_25 + TMP_80\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_31 := 0\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_31 := 0\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_25 = REF_25 + TMP_80\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_25 = REF_25 + TMP_80\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "reinvest"
            ],
            "from_function": "reinvest",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 134\nFunction: reinvest\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_77 = SOLIDITY_CALL require(bool)(TMP_76)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 146\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 137\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 145\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 145\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 148\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 148\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 151\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 151\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 151\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_25 = REF_25 + TMP_80\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_31 := 0\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_31 := 0\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_25 = REF_25 + TMP_80\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_25 = REF_25 + TMP_80\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "exit"
            ],
            "from_function": "exit",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 169\nFunction: exit\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_89 = SOLIDITY_CALL require(bool)(TMP_88)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 177\nFunction: sell\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_139 = SOLIDITY_CALL require(bool)(TMP_138)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 192\nFunction: withdraw\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_98 = SOLIDITY_CALL require(bool)(TMP_97)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 173\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: sell\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: sell\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 179\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,_collates)\nIRS: \nREF_109 := TMP_146\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: exit\nNode: \nIF _tokens > 0\nIRS: \nCONDITION TMP_90\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: sell\nNode: \nEXPRESSION require(bool)(_amountOfCollate <= balanceLedger[_customerAddress][contractAddress].tokenBalance)\nIRS: \nTMP_141 = SOLIDITY_CALL require(bool)(TMP_140)\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 193\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 194\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_47 := 0\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 194\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_47 := 0\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 193\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 193\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "exit"
            ],
            "from_function": "exit",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 169\nFunction: exit\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_89 = SOLIDITY_CALL require(bool)(TMP_88)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 177\nFunction: sell\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_139 = SOLIDITY_CALL require(bool)(TMP_138)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 192\nFunction: withdraw\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_98 = SOLIDITY_CALL require(bool)(TMP_97)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 173\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: sell\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: sell\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 179\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,_collates)\nIRS: \nREF_109 := TMP_146\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: exit\nNode: \nIF _tokens > 0\nIRS: \nCONDITION TMP_90\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: sell\nNode: \nEXPRESSION require(bool)(_amountOfCollate <= balanceLedger[_customerAddress][contractAddress].tokenBalance)\nIRS: \nTMP_141 = SOLIDITY_CALL require(bool)(TMP_140)\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 193\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 194\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_47 := 0\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 194\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_47 := 0\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 193\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 193\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "withdraw"
            ],
            "from_function": "withdraw",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 209\nFunction: withdraw\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_98 = SOLIDITY_CALL require(bool)(TMP_97)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 218\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 210\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 211\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_47 := 0\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 211\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_47 := 0\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 210\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 210\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "withdraw"
            ],
            "from_function": "withdraw",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 209\nFunction: withdraw\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_98 = SOLIDITY_CALL require(bool)(TMP_97)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 218\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 210\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 211\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_47 := 0\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 211\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_47 := 0\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 210\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 210\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "transfer"
            ],
            "from_function": "transfer",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 231\nFunction: transfer\nNode: \nEXPRESSION walletAddressRecord[toAddress] = true\nIRS: \nREF_56 := true\"",
                        "\"BlockID: 75\nFunction: buy\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_59\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: transfer\nNode: \nEXPRESSION walletAddressRecord[toAddress] = true\nIRS: \nREF_56 := true\"",
                        "\"BlockID: 83\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: transfer\nNode: \nEXPRESSION require(bool)(walletAddressRecord[_customerAddress] == true)\nIRS: \nTMP_115 = SOLIDITY_CALL require(bool)(TMP_114)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 230\nFunction: transfer\nNode: \nIF walletAddressRecord[toAddress] == false\nIRS: \nCONDITION TMP_118\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 243\nFunction: withdraw\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_98 = SOLIDITY_CALL require(bool)(TMP_97)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 251\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: transfer\nNode: \nEXPRESSION require(bool)(amountOfCollate <= balanceLedger[_customerAddress][contractAddress].tokenBalance)\nIRS: \nTMP_117 = SOLIDITY_CALL require(bool)(TMP_116)\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 233\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 247\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 233\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 247\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 245\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_47 := 0\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 245\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_47 := 0\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 233\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 247\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 233\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 247\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "transfer"
            ],
            "from_function": "transfer",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 231\nFunction: transfer\nNode: \nEXPRESSION walletAddressRecord[toAddress] = true\nIRS: \nREF_56 := true\"",
                        "\"BlockID: 75\nFunction: buy\nNode: \nIF walletAddressRecord[msg.sender] == false\nIRS: \nCONDITION TMP_59\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: transfer\nNode: \nEXPRESSION walletAddressRecord[toAddress] = true\nIRS: \nREF_56 := true\"",
                        "\"BlockID: 83\nFunction: purchaseCollate\nNode: \nIF _referredBy != address(0) && _referredBy != _customerAddress && walletAddressRecord[_referredBy] == true\nIRS: \nCONDITION TMP_232\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 228\nFunction: transfer\nNode: \nEXPRESSION require(bool)(walletAddressRecord[_customerAddress] == true)\nIRS: \nTMP_115 = SOLIDITY_CALL require(bool)(TMP_114)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 230\nFunction: transfer\nNode: \nIF walletAddressRecord[toAddress] == false\nIRS: \nCONDITION TMP_118\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 243\nFunction: withdraw\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_98 = SOLIDITY_CALL require(bool)(TMP_97)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 251\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 80\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: transfer\nNode: \nEXPRESSION require(bool)(amountOfCollate <= balanceLedger[_customerAddress][contractAddress].tokenBalance)\nIRS: \nTMP_117 = SOLIDITY_CALL require(bool)(TMP_116)\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 233\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 247\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 233\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 247\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 245\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_47 := 0\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 245\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].referralBalance = 0\nIRS: \nREF_47 := 0\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 233\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 247\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 93\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\""
                    ],
                    "state_variable": "balanceLedger.referralBalance"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 233\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 244\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 247\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 248\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "sell"
            ],
            "from_function": "sell",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 272\nFunction: sell\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_139 = SOLIDITY_CALL require(bool)(TMP_138)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 275\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 275\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 276\nFunction: sell\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 276\nFunction: sell\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 274\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,_collates)\nIRS: \nREF_109 := TMP_146\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 273\nFunction: sell\nNode: \nEXPRESSION require(bool)(_amountOfCollate <= balanceLedger[_customerAddress][contractAddress].tokenBalance)\nIRS: \nTMP_141 = SOLIDITY_CALL require(bool)(TMP_140)\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 275\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 275\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "sell"
            ],
            "from_function": "sell",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 272\nFunction: sell\nNode: \nEXPRESSION require(bool)(walletAddressRecord[msg.sender] == true)\nIRS: \nTMP_139 = SOLIDITY_CALL require(bool)(TMP_138)\"",
                        "\"BlockID: 76\nFunction: buy\nNode: \nEXPRESSION walletAddressRecord[msg.sender] = true\nIRS: \nREF_17 := true\""
                    ],
                    "state_variable": "walletAddressRecord"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 275\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 275\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 276\nFunction: sell\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 276\nFunction: sell\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 274\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,_collates)\nIRS: \nREF_109 := TMP_146\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 273\nFunction: sell\nNode: \nEXPRESSION require(bool)(_amountOfCollate <= balanceLedger[_customerAddress][contractAddress].tokenBalance)\nIRS: \nTMP_141 = SOLIDITY_CALL require(bool)(TMP_140)\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 275\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 275\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "buyPrice"
            ],
            "from_function": "buyPrice",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 288\nFunction: buyPrice\nNode: \nIF tokenLedger[contractAddress].supply == 0\nIRS: \nCONDITION TMP_158\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 288\nFunction: buyPrice\nNode: \nIF tokenLedger[contractAddress].supply == 0\nIRS: \nCONDITION TMP_158\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "buyPrice"
            ],
            "from_function": "buyPrice",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 288\nFunction: buyPrice\nNode: \nIF tokenLedger[contractAddress].supply == 0\nIRS: \nCONDITION TMP_158\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 288\nFunction: buyPrice\nNode: \nIF tokenLedger[contractAddress].supply == 0\nIRS: \nCONDITION TMP_158\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "sellPrice"
            ],
            "from_function": "sellPrice",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 293\nFunction: sellPrice\nNode: \nIF tokenLedger[contractAddress].supply == 0\nIRS: \nCONDITION TMP_165\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 293\nFunction: sellPrice\nNode: \nIF tokenLedger[contractAddress].supply == 0\nIRS: \nCONDITION TMP_165\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "sellPrice"
            ],
            "from_function": "sellPrice",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 293\nFunction: sellPrice\nNode: \nIF tokenLedger[contractAddress].supply == 0\nIRS: \nCONDITION TMP_165\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 293\nFunction: sellPrice\nNode: \nIF tokenLedger[contractAddress].supply == 0\nIRS: \nCONDITION TMP_165\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "calculateCollateReceived"
            ],
            "from_function": "calculateCollateReceived",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 299\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 299\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "calculateCollateReceived"
            ],
            "from_function": "calculateCollateReceived",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 299\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 299\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "calculateTokenReceived"
            ],
            "from_function": "calculateTokenReceived",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 303\nFunction: calculateTokenReceived\nNode: \nEXPRESSION require(bool)(_collateToSell <= tokenLedger[contractAddress].supply)\nIRS: \nTMP_212 = SOLIDITY_CALL require(bool)(TMP_211)\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 303\nFunction: calculateTokenReceived\nNode: \nEXPRESSION require(bool)(_collateToSell <= tokenLedger[contractAddress].supply)\nIRS: \nTMP_212 = SOLIDITY_CALL require(bool)(TMP_211)\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "buy",
                "calculateTokenReceived"
            ],
            "from_function": "calculateTokenReceived",
            "to_function": "buy",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 303\nFunction: calculateTokenReceived\nNode: \nEXPRESSION require(bool)(_collateToSell <= tokenLedger[contractAddress].supply)\nIRS: \nTMP_212 = SOLIDITY_CALL require(bool)(TMP_211)\"",
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 303\nFunction: calculateTokenReceived\nNode: \nEXPRESSION require(bool)(_collateToSell <= tokenLedger[contractAddress].supply)\nIRS: \nTMP_212 = SOLIDITY_CALL require(bool)(TMP_211)\"",
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exit",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "exit",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 45\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 174\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 201\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exit",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "exit",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 79\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 174\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 79\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 201\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exit",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "exit",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 174\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 109\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 201\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exit",
                "reinvest"
            ],
            "from_function": "reinvest",
            "to_function": "exit",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 137\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 174\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 137\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 201\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exit",
                "exit"
            ],
            "from_function": "exit",
            "to_function": "exit",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 403\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 174\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 403\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 201\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 430\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 174\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 430\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 201\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exit",
                "withdraw"
            ],
            "from_function": "withdraw",
            "to_function": "exit",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 218\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 174\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 218\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 201\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exit",
                "transfer"
            ],
            "from_function": "transfer",
            "to_function": "exit",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 251\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 174\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 251\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 201\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdraw",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "withdraw",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 45\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 219\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdraw",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "withdraw",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 79\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 219\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdraw",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "withdraw",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 219\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdraw",
                "reinvest"
            ],
            "from_function": "reinvest",
            "to_function": "withdraw",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 137\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 219\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdraw",
                "exit"
            ],
            "from_function": "exit",
            "to_function": "withdraw",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 173\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 219\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 219\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdraw",
                "withdraw"
            ],
            "from_function": "withdraw",
            "to_function": "withdraw",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 448\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 219\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdraw",
                "transfer"
            ],
            "from_function": "transfer",
            "to_function": "withdraw",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 251\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 219\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "transfer",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "transfer",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 54\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 58\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 58\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 51\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 54\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 58\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 62\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 252\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "transfer",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "transfer",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 86\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 82\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 85\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 88\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 89\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 92\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 79\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 252\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "transfer",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "transfer",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 118\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 112\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 115\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 118\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 119\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 126\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 109\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 252\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "transfer",
                "reinvest"
            ],
            "from_function": "reinvest",
            "to_function": "transfer",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 151\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_25 = REF_25 + TMP_80\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_25 = REF_25 + TMP_80\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_referredBy][contractAddress].referralBalance = SafeMath.add(balanceLedger[_referredBy][contractAddress].referralBalance,_referralBonus)\nIRS: \nREF_180 := TMP_233\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: reinvest\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_25 = REF_25 + TMP_80\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = _amountOfCollate\nIRS: \nREF_200 := _amountOfCollate\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.add(tokenLedger[contractAddress].supply,_amountOfCollate)\nIRS: \nREF_189 := TMP_237\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 145\nFunction: purchaseCollate\nNode: \nEXPRESSION require(bool)(_amountOfCollate > 0 && (SafeMath.add(_amountOfCollate,tokenLedger[contractAddress].supply) > tokenLedger[contractAddress].supply))\nIRS: \nTMP_226 = SOLIDITY_CALL require(bool)(TMP_225)\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 148\nFunction: purchaseCollate\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_236\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 151\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[_customerAddress][contractAddress].tokenBalance,_amountOfCollate)\nIRS: \nREF_203 := TMP_245\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 152\nFunction: purchaseCollate\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += _updatedPayouts\nIRS: \nREF_212 = REF_212 + _updatedPayouts\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: purchaseCollate\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend += (_dividends * magnitude \/ (tokenLedger[contractAddress].supply))\nIRS: \nREF_194 = REF_194 + TMP_239\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 159\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 137\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 252\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "transfer",
                "exit"
            ],
            "from_function": "exit",
            "to_function": "transfer",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 179\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,_collates)\nIRS: \nREF_109 := TMP_146\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: exit\nNode: \nIF _tokens > 0\nIRS: \nCONDITION TMP_90\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: exit\nNode: \nIF _tokens > 0\nIRS: \nCONDITION TMP_90\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: sell\nNode: \nEXPRESSION require(bool)(_amountOfCollate <= balanceLedger[_customerAddress][contractAddress].tokenBalance)\nIRS: \nTMP_141 = SOLIDITY_CALL require(bool)(TMP_140)\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: sell\nNode: \nEXPRESSION require(bool)(_amountOfCollate <= balanceLedger[_customerAddress][contractAddress].tokenBalance)\nIRS: \nTMP_141 = SOLIDITY_CALL require(bool)(TMP_140)\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 193\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 193\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 193\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 197\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: sell\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 173\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 252\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 252\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "transfer",
                "withdraw"
            ],
            "from_function": "withdraw",
            "to_function": "transfer",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 210\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 210\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 210\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 218\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 252\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "transfer",
                "transfer"
            ],
            "from_function": "transfer",
            "to_function": "transfer",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 495\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 497\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 459\nFunction: transfer\nNode: \nEXPRESSION require(bool)(amountOfCollate <= balanceLedger[_customerAddress][contractAddress].tokenBalance)\nIRS: \nTMP_117 = SOLIDITY_CALL require(bool)(TMP_116)\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 459\nFunction: transfer\nNode: \nEXPRESSION require(bool)(amountOfCollate <= balanceLedger[_customerAddress][contractAddress].tokenBalance)\nIRS: \nTMP_117 = SOLIDITY_CALL require(bool)(TMP_116)\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 463\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 463\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 465\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 465\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 474\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 474\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 477\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 477\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 463\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 463\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 477\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 477\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "balanceLedger.payOut"
                },
                {
                    "path": [
                        "\"BlockID: 465\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 465\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 463\nFunction: transfer\nNode: \nIF myDividends(contractAddress,true) > 0\nIRS: \nCONDITION TMP_120\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 474\nFunction: withdraw\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut += int256(_dividends * magnitude)\nIRS: \nREF_41 = REF_41 + TMP_101\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 477\nFunction: withdraw\nNode: \nEXPRESSION address(address(_customerAddress)).transfer(_dividends)\nIRS: \nTransfer dest:TMP_105 value:_dividends\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 478\nFunction: withdraw\nNode: \nEXPRESSION ERC20(contractAddress).transfer(_customerAddress,_dividends)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(ERC20), function:transfer, arguments:['_customerAddress', '_dividends']  \"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 498\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 499\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 493\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 465\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 481\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,ReentrancyGuard: reentrant call)\nIRS: \nTMP_284 = SOLIDITY_CALL require(bool,string)(TMP_283,ReentrancyGuard: reentrant call)\"",
                        "\"BlockID: 252\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "transfer",
                "sell"
            ],
            "from_function": "sell",
            "to_function": "transfer",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 274\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,_collates)\nIRS: \nREF_109 := TMP_146\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 273\nFunction: sell\nNode: \nEXPRESSION require(bool)(_amountOfCollate <= balanceLedger[_customerAddress][contractAddress].tokenBalance)\nIRS: \nTMP_141 = SOLIDITY_CALL require(bool)(TMP_140)\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 273\nFunction: sell\nNode: \nEXPRESSION require(bool)(_amountOfCollate <= balanceLedger[_customerAddress][contractAddress].tokenBalance)\nIRS: \nTMP_141 = SOLIDITY_CALL require(bool)(TMP_140)\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 275\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 275\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 265\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].tokenBalance = SafeMath.sub(balanceLedger[_customerAddress][contractAddress].tokenBalance,amountOfCollate)\nIRS: \nREF_66 := TMP_126\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 267\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].tokenBalance = SafeMath.add(balanceLedger[toAddress][contractAddress].tokenBalance,_taxedTokens)\nIRS: \nREF_73 := TMP_127\""
                    ],
                    "state_variable": "balanceLedger.tokenBalance"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 268\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= int256(tokenLedger[contractAddress].dividend * amountOfCollate)\nIRS: \nREF_80 = REF_80 - TMP_129\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 269\nFunction: transfer\nNode: \nEXPRESSION balanceLedger[toAddress][contractAddress].payOut += int256(tokenLedger[contractAddress].dividend * _taxedTokens)\nIRS: \nREF_85 = REF_85 + TMP_131\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 275\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.dividend"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_collates)\nIRS: \nREF_103 := TMP_145\"",
                        "\"BlockID: 235\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_89 := TMP_134\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 275\nFunction: sell\nNode: \nEXPRESSION balanceLedger[_customerAddress][contractAddress].payOut -= _updatedPayouts\nIRS: \nREF_118 = REF_118 - _updatedPayouts\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 276\nFunction: sell\nNode: \nIF tokenLedger[contractAddress].supply > 0\nIRS: \nCONDITION TMP_151\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: sell\nNode: \nEXPRESSION tokenLedger[contractAddress].dividend = SafeMath.add(tokenLedger[contractAddress].dividend,(_dividends * magnitude) \/ tokenLedger[contractAddress].supply)\nIRS: \nREF_122 := TMP_154\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "transfer",
                "buyPrice"
            ],
            "from_function": "buyPrice",
            "to_function": "transfer",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 288\nFunction: buyPrice\nNode: \nIF tokenLedger[contractAddress].supply == 0\nIRS: \nCONDITION TMP_158\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "transfer",
                "sellPrice"
            ],
            "from_function": "sellPrice",
            "to_function": "transfer",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 293\nFunction: sellPrice\nNode: \nIF tokenLedger[contractAddress].supply == 0\nIRS: \nCONDITION TMP_165\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "transfer",
                "calculateCollateReceived"
            ],
            "from_function": "calculateCollateReceived",
            "to_function": "transfer",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 299\nFunction: sqrt\nNode: \nIF_LOOP z < y\nIRS: \nCONDITION TMP_279\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "transfer",
                "calculateTokenReceived"
            ],
            "from_function": "calculateTokenReceived",
            "to_function": "transfer",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 303\nFunction: calculateTokenReceived\nNode: \nEXPRESSION require(bool)(_collateToSell <= tokenLedger[contractAddress].supply)\nIRS: \nTMP_212 = SOLIDITY_CALL require(bool)(TMP_211)\"",
                        "\"BlockID: 263\nFunction: transfer\nNode: \nEXPRESSION tokenLedger[contractAddress].supply = SafeMath.sub(tokenLedger[contractAddress].supply,_tokenFee)\nIRS: \nREF_60 := TMP_125\""
                    ],
                    "state_variable": "tokenLedger.supply"
                }
            ]
        }
    ]
}