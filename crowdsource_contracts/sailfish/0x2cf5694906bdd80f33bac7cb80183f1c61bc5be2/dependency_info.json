{
    "0x2cf5694906bdd80f33bac7cb80183f1c61bc5be2.sol": [
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawTokenRefund",
                "addOrder"
            ],
            "from_function": "addOrder",
            "to_function": "withdrawTokenRefund",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 440\nFunction: atState\nNode: \nEXPRESSION require(bool)(_state == orders[_orderId].state)\nIRS: \nTMP_577 = SOLIDITY_CALL require(bool)(TMP_576)\"",
                        "\"BlockID: 488\nFunction: transition\nNode: \nEXPRESSION orders[_orderId].state = _state\nIRS: \nREF_162 := _state\""
                    ],
                    "state_variable": "orders.state"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawTokenRefund",
                "securePay"
            ],
            "from_function": "securePay",
            "to_function": "withdrawTokenRefund",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 449\nFunction: atState\nNode: \nEXPRESSION require(bool)(_state == orders[_orderId].state)\nIRS: \nTMP_577 = SOLIDITY_CALL require(bool)(TMP_576)\"",
                        "\"BlockID: 488\nFunction: transition\nNode: \nEXPRESSION orders[_orderId].state = _state\nIRS: \nREF_162 := _state\""
                    ],
                    "state_variable": "orders.state"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawTokenRefund",
                "secureTokenPay"
            ],
            "from_function": "secureTokenPay",
            "to_function": "withdrawTokenRefund",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 456\nFunction: atState\nNode: \nEXPRESSION require(bool)(_state == orders[_orderId].state)\nIRS: \nTMP_577 = SOLIDITY_CALL require(bool)(TMP_576)\"",
                        "\"BlockID: 488\nFunction: transition\nNode: \nEXPRESSION orders[_orderId].state = _state\nIRS: \nREF_162 := _state\""
                    ],
                    "state_variable": "orders.state"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawTokenRefund",
                "cancelOrder"
            ],
            "from_function": "cancelOrder",
            "to_function": "withdrawTokenRefund",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 463\nFunction: atState\nNode: \nEXPRESSION require(bool)(_state == orders[_orderId].state)\nIRS: \nTMP_577 = SOLIDITY_CALL require(bool)(TMP_576)\"",
                        "\"BlockID: 488\nFunction: transition\nNode: \nEXPRESSION orders[_orderId].state = _state\nIRS: \nREF_162 := _state\""
                    ],
                    "state_variable": "orders.state"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawTokenRefund",
                "refundPayment"
            ],
            "from_function": "refundPayment",
            "to_function": "withdrawTokenRefund",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 472\nFunction: atState\nNode: \nEXPRESSION require(bool)(_state == orders[_orderId].state)\nIRS: \nTMP_577 = SOLIDITY_CALL require(bool)(TMP_576)\"",
                        "\"BlockID: 488\nFunction: transition\nNode: \nEXPRESSION orders[_orderId].state = _state\nIRS: \nREF_162 := _state\""
                    ],
                    "state_variable": "orders.state"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawTokenRefund",
                "withdrawRefund"
            ],
            "from_function": "withdrawRefund",
            "to_function": "withdrawTokenRefund",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 480\nFunction: atState\nNode: \nEXPRESSION require(bool)(_state == orders[_orderId].state)\nIRS: \nTMP_577 = SOLIDITY_CALL require(bool)(TMP_576)\"",
                        "\"BlockID: 488\nFunction: transition\nNode: \nEXPRESSION orders[_orderId].state = _state\nIRS: \nREF_162 := _state\""
                    ],
                    "state_variable": "orders.state"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawTokenRefund",
                "withdrawTokenRefund"
            ],
            "from_function": "withdrawTokenRefund",
            "to_function": "withdrawTokenRefund",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 566\nFunction: atState\nNode: \nEXPRESSION require(bool)(_state == orders[_orderId].state)\nIRS: \nTMP_577 = SOLIDITY_CALL require(bool)(TMP_576)\"",
                        "\"BlockID: 488\nFunction: transition\nNode: \nEXPRESSION orders[_orderId].state = _state\nIRS: \nREF_162 := _state\""
                    ],
                    "state_variable": "orders.state"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawTokenRefund",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "withdrawTokenRefund",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 506\nFunction: atState\nNode: \nEXPRESSION require(bool)(_state == orders[_orderId].state)\nIRS: \nTMP_577 = SOLIDITY_CALL require(bool)(TMP_576)\"",
                        "\"BlockID: 488\nFunction: transition\nNode: \nEXPRESSION orders[_orderId].state = _state\nIRS: \nREF_162 := _state\""
                    ],
                    "state_variable": "orders.state"
                }
            ]
        }
    ]
}