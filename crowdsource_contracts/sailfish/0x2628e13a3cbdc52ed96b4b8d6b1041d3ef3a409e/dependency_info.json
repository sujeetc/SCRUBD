{
    "0x2628e13a3cbdc52ed96b4b8d6b1041d3ef3a409e.sol": [
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 94\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 15\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 97\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 15\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 101\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 15\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 94\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 97\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 101\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 80\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 80\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 83\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 83\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 91\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 92\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 92\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 98\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 99\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 99\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 119\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 126\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 105\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 116\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 117\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 123\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 124\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 130\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 133\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 141\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 142\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 148\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 169\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 23\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 23\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 23\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 173\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 174\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 180\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 191\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 192\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 198\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 199\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 15\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 15\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 29\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 29\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 29\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 29\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 23\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 23\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 29\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 29\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addReferrer"
            ],
            "from_function": "addReferrer",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 46\nFunction: addReferrer\nNode: \nEXPRESSION referrers[_address] = true\nIRS: \nREF_7 := true\"",
                        "\"BlockID: 11\nFunction: addParticipant\nNode: \nIF _referrer != address(0) && referrers[_referrer]\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "referrers"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addReferrer"
            ],
            "from_function": "addReferrer",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 46\nFunction: addReferrer\nNode: \nEXPRESSION referrers[_address] = true\nIRS: \nREF_7 := true\"",
                        "\"BlockID: 11\nFunction: addParticipant\nNode: \nIF _referrer != address(0) && referrers[_referrer]\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "referrers"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addReferrer"
            ],
            "from_function": "addReferrer",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 46\nFunction: addReferrer\nNode: \nEXPRESSION referrers[_address] = true\nIRS: \nREF_7 := true\"",
                        "\"BlockID: 11\nFunction: addParticipant\nNode: \nIF _referrer != address(0) && referrers[_referrer]\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "referrers"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 15\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 52\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 23\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 52\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 4\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 4\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 7\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 7\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 22\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 22\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 4\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 7\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 22\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 4\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 7\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 22\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 216\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 216\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 205\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 205\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 213\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 214\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 232\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 221\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 230\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 237\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 245\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 246\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "addReferrer"
            ],
            "from_function": "addReferrer",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 46\nFunction: addReferrer\nNode: \nEXPRESSION referrers[_address] = true\nIRS: \nREF_7 := true\"",
                        "\"BlockID: 33\nFunction: addParticipant\nNode: \nIF _referrer != address(0) && referrers[_referrer]\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "referrers"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "addReferrer"
            ],
            "from_function": "addReferrer",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 46\nFunction: addReferrer\nNode: \nEXPRESSION referrers[_address] = true\nIRS: \nREF_7 := true\"",
                        "\"BlockID: 33\nFunction: addParticipant\nNode: \nIF _referrer != address(0) && referrers[_referrer]\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "referrers"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "addReferrer"
            ],
            "from_function": "addReferrer",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 46\nFunction: addReferrer\nNode: \nEXPRESSION referrers[_address] = true\nIRS: \nREF_7 := true\"",
                        "\"BlockID: 33\nFunction: addParticipant\nNode: \nIF _referrer != address(0) && referrers[_referrer]\nIRS: \nCONDITION TMP_23\""
                    ],
                    "state_variable": "referrers"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 52\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 4\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 7\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 22\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 4\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 7\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 16\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 22\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 23\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 40\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 43\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_17\"",
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 29\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 29\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_9 = SOLIDITY_CALL require(bool,string)(TMP_8,This participant is already registered)\"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 37\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 256\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\"",
                        "\"BlockID: 53\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 253\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 254\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 260\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_36(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 261\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_38(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_36 \"",
                        "\"BlockID: 55\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_13 := TMP_39\""
                    ],
                    "state_variable": "participants"
                }
            ]
        }
    ]
}