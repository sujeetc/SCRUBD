{
    "file_name": "dao_symex_path_3.json",
    "from_function": "createSwap",
    "to_function": "withdraw",
    "bug_type": "dao",
    "src_node": "\"BlockID: 173\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 195\nCall context: \nTrue\nREF_4 -> swaps[msg.sender]\nREF_5 -> REF_4[_participantAddress]\nTMP_21 = CONVERT 0 to bytes32\nTMP_22 = new Swap(_token,_participantAddress,TMP_21,_secretHash,now,_value)\nREF_5 := TMP_22\nEmit CreateSwap(now)\""
    ],
    "executable_instructions": 162,
    "state_variable": "swaps",
    "error": "",
    "result": "SAT",
    "execution_details": "# using file \/ethereum-security\/empirical-study\/data\/extracted_solc_codes\/crowdsource_contracts\/sailfish\/0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec\/dao_symex_path_3.json\n# attack type: range\n# solver type: z3\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x3@__GLOBAL__\n    > adding global block: 0x4@__GLOBAL__\n    > adding global block: 0x15@__GLOBAL__\n    > adding global block: 0x16@__GLOBAL__\n    > adding global block: 0x17@__GLOBAL__\n    > adding global block: 0x2a@__GLOBAL__\n    > adding global block: 0x2b@__GLOBAL__\n    > adding global block: 0x2c@__GLOBAL__\n    > adding global block: 0x3f@__GLOBAL__\n    > adding global block: 0x40@__GLOBAL__\n    > adding global block: 0x41@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: swaps\n    > initializing global variable: swaps\n    > declaring global variable: SafeTime\n    > initializing global variable: SafeTime\n\n    > declaring global variable: owner\n    > initializing global variable: owner\n\n    > declaring global variable: SafeMath\n    > initializing global variable: SafeMath\n    > declaring global variable: ERC20\n    > initializing global variable: ERC20\n    > declaring global variable: EthTokenToSmthSwaps\n    > initializing global variable: EthTokenToSmthSwaps\n# building ranges\n  > start adding range variables\n    > adding: swaps -> (0x2@__RANGE__ 0x6@__RANGE__ 0x9@__RANGE__ 0xc@__RANGE__ 0xf@__RANGE__ 0x12@__RANGE__ 0x14@__RANGE__)\n  > range entry addresses: (0x2@__RANGE__ 0x6@__RANGE__ 0x14@__RANGE__ 0x12@__RANGE__ 0x9@__RANGE__ 0xf@__RANGE__ 0xc@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0x6@__RANGE__\n    > adding range block: 0x7@__RANGE__\n    > adding range block: 0x5@__RANGE__\n    > adding range block: 0x9@__RANGE__\n    > adding range block: 0xa@__RANGE__\n    > adding range block: 0x8@__RANGE__\n    > adding range block: 0xc@__RANGE__\n    > adding range block: 0xd@__RANGE__\n    > adding range block: 0xb@__RANGE__\n    > adding range block: 0xf@__RANGE__\n    > adding range block: 0x10@__RANGE__\n    > adding range block: 0xe@__RANGE__\n    > adding range block: 0x12@__RANGE__\n    > adding range block: 0x11@__RANGE__\n    > adding range block: 0x14@__RANGE__\n    > adding range block: 0x13@__RANGE__\n# building normal scopes\n  > root addr: 0x42\n  > dest addrs: (0x52)\n  > loading normal blocks\n    > adding normal block: 0x42\n    > adding normal block: 0x43\n    > adding normal block: 0x43_r0\n    > adding normal block: 0x44\n    > adding normal block: 0x44_r0\n    > adding normal block: 0x45\n    > adding normal block: 0x46\n    > adding normal block: 0x47\n    > adding normal block: 0x47_r0\n    > adding normal block: 0x48\n    > adding normal block: 0x48_r0\n    > adding normal block: 0x4a\n    > adding normal block: 0x4a_r0\n    > adding normal block: 0x4b\n    > adding normal block: 0x4c\n    > adding normal block: 0x4e\n    > adding normal block: 0x4f\n    > adding normal block: 0x4f_r0\n    > adding normal block: 0x50\n    > adding normal block: 0x49\n    > adding normal block: 0x51\n    > adding normal block: 0x52\n    > adding normal block: 0x4d\n    > adding normal block: 0x4d_r0\n    > adding normal block: 0x53\n    > adding normal block: 0xRequireTrap\n# start interpretation of normal blocks...\n\n# asserts size: 66\n# using solver: #<z3>\n# result: #t\n"
}