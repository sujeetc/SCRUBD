{
    "file": "0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec.sol",
    "global_structs": [
        {
            "name": "Swap",
            "fields": {
                "token": [
                    "integer"
                ],
                "targetWallet": [
                    "integer"
                ],
                "secret": [
                    "integer"
                ],
                "secretHash": [
                    "integer"
                ],
                "createdAt": [
                    "integer"
                ],
                "balance": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0xa8"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0xa9"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0xaa"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "swaps",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "Swap"
                ]
            ],
            "init": []
        },
        {
            "name": "SafeTime",
            "type": [
                "integer"
            ],
            "init": [
                "0x4"
            ]
        },
        {
            "name": "owner",
            "type": [
                "integer"
            ],
            "init": [
                "0x3"
            ]
        },
        {
            "name": "SafeMath",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ERC20",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "EthTokenToSmthSwaps",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0x3",
            "instructions": [
                "owner = msg_sender"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x4",
            "instructions": [
                "SafeTime = 10800"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x15",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x16",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x17",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x2a",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x2b",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x2c",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x3f",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x40",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x41",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x54",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x55",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x56",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x69",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x6a",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x6b",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x7e",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x7f",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x80",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x93",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x94",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x95",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xa8",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xa9",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xaa",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "swaps",
            "addrs": [
                "0x2",
                "0x6",
                "0x9",
                "0xc",
                "0xf",
                "0x12",
                "0x14"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x6",
            "instructions": [
                "CLR_0 = swaps[U]",
                "REF_66 = CLR_0",
                "CLR_1 = msg.sender",
                "CLR_2 = REF_66[CLR_1]",
                "REF_67 = CLR_2",
                "CLR_3 = REF_67.balance",
                "REF_68 = CLR_3",
                "RTMP_84 = REF_68 > 0",
                "CONDITION RTMP_84 0x7 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x7",
            "instructions": [
                "CLR_4 = swaps[U]",
                "REF_69 = CLR_4",
                "CLR_5 = msg.sender",
                "CLR_6 = REF_69[CLR_5]",
                "REF_70 = CLR_6",
                "CLR_7 = REF_70.createdAt",
                "REF_71 = CLR_7",
                "TMP_85 = REF_71 + SafeTime",
                "RTMP_86 = TMP_85 > now",
                "CONDITION RTMP_86 0x5 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x5",
            "instructions": [
                "CLR_8 = swaps[U]",
                "REF_63 = CLR_8",
                "CLR_9 = msg.sender",
                "CLR_10 = REF_63[CLR_9]",
                "REF_64 = CLR_10",
                "CLR_11 = REF_64.balance",
                "REF_65 = CLR_11",
                "REF_64.balance = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9",
            "instructions": [
                "CLR_12 = swaps[U]",
                "REF_75 = CLR_12",
                "CLR_13 = msg.sender",
                "CLR_14 = REF_75[CLR_13]",
                "REF_76 = CLR_14",
                "CLR_15 = REF_76.balance",
                "REF_77 = CLR_15",
                "RTMP_87 = REF_77 > 0",
                "CONDITION RTMP_87 0xa 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa",
            "instructions": [
                "CLR_16 = swaps[U]",
                "REF_78 = CLR_16",
                "CLR_17 = msg.sender",
                "CLR_18 = REF_78[CLR_17]",
                "REF_79 = CLR_18",
                "CLR_19 = REF_79.createdAt",
                "REF_80 = CLR_19",
                "TMP_88 = REF_80 + SafeTime",
                "RTMP_89 = TMP_88 > now",
                "CONDITION RTMP_89 0x8 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x8",
            "instructions": [
                "CLR_20 = swaps[U]",
                "REF_72 = CLR_20",
                "CLR_21 = msg.sender",
                "CLR_22 = REF_72[CLR_21]",
                "REF_73 = CLR_22",
                "CLR_23 = REF_73.secret",
                "REF_74 = CLR_23",
                "REF_73.secret = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xc",
            "instructions": [
                "CLR_24 = msg.sender",
                "CLR_25 = swaps[CLR_24]",
                "REF_84 = CLR_25",
                "CLR_26 = REF_84[U]",
                "REF_85 = CLR_26",
                "CLR_27 = REF_85.balance",
                "REF_86 = CLR_27",
                "RTMP_90 = REF_86 > 0",
                "CONDITION RTMP_90 0xd 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xd",
            "instructions": [
                "CLR_28 = msg.sender",
                "CLR_29 = swaps[CLR_28]",
                "REF_87 = CLR_29",
                "CLR_30 = REF_87[U]",
                "REF_88 = CLR_30",
                "CLR_31 = REF_88.createdAt",
                "REF_89 = CLR_31",
                "TMP_91 = REF_89 + SafeTime",
                "RTMP_92 = TMP_91 > now",
                "CONDITION RTMP_92 0xb 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb",
            "instructions": [
                "CLR_32 = msg.sender",
                "CLR_33 = swaps[CLR_32]",
                "REF_81 = CLR_33",
                "CLR_34 = REF_81[U]",
                "REF_82 = CLR_34",
                "CLR_35 = REF_82.balance",
                "REF_83 = CLR_35",
                "REF_82.balance = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xf",
            "instructions": [
                "CLR_36 = msg.sender",
                "CLR_37 = swaps[CLR_36]",
                "REF_93 = CLR_37",
                "CLR_38 = REF_93[U]",
                "REF_94 = CLR_38",
                "CLR_39 = REF_94.balance",
                "REF_95 = CLR_39",
                "RTMP_93 = REF_95 > 0",
                "CONDITION RTMP_93 0x10 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x10",
            "instructions": [
                "CLR_40 = msg.sender",
                "CLR_41 = swaps[CLR_40]",
                "REF_96 = CLR_41",
                "CLR_42 = REF_96[U]",
                "REF_97 = CLR_42",
                "CLR_43 = REF_97.createdAt",
                "REF_98 = CLR_43",
                "TMP_94 = REF_98 + SafeTime",
                "RTMP_95 = TMP_94 > now",
                "CONDITION RTMP_95 0xe 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xe",
            "instructions": [
                "CLR_44 = msg.sender",
                "CLR_45 = swaps[CLR_44]",
                "REF_90 = CLR_45",
                "CLR_46 = REF_90[U]",
                "REF_91 = CLR_46",
                "CLR_47 = REF_91.secret",
                "REF_92 = CLR_47",
                "REF_91.secret = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12",
            "instructions": [
                "CLR_48 = msg.sender",
                "CLR_49 = swaps[CLR_48]",
                "REF_101 = CLR_49",
                "CLR_50 = REF_101[U]",
                "REF_102 = CLR_50",
                "CLR_51 = REF_102.balance",
                "REF_103 = CLR_51",
                "RTMP_96 = REF_103 == 0",
                "CONDITION RTMP_96 0x11 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11",
            "instructions": [
                "CLR_52 = msg.sender",
                "CLR_53 = swaps[CLR_52]",
                "REF_99 = CLR_53",
                "CLR_54 = REF_99[U]",
                "REF_100 = CLR_54",
                "REF_99[0] = U",
                "REF_99[1] = U",
                "REF_99[2] = U",
                "REF_99[3] = U",
                "REF_99[4] = U",
                "REF_99[5] = U",
                "REF_99[6] = U",
                "REF_99[7] = U",
                "REF_99[8] = U",
                "REF_99[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14",
            "instructions": [
                "CLR_55 = msg.sender",
                "CLR_56 = swaps[CLR_55]",
                "REF_106 = CLR_56",
                "CLR_57 = REF_106[U]",
                "REF_107 = CLR_57",
                "CLR_58 = REF_107.balance",
                "REF_108 = CLR_58",
                "RTMP_97 = REF_108 == 0",
                "CONDITION RTMP_97 0x13 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13",
            "instructions": [
                "CLR_59 = msg.sender",
                "CLR_60 = swaps[CLR_59]",
                "REF_104 = CLR_60",
                "CLR_61 = REF_104[U]",
                "REF_105 = CLR_61",
                "REF_104[0] = U",
                "REF_104[1] = U",
                "REF_104[2] = U",
                "REF_104[3] = U",
                "REF_104[4] = U",
                "REF_104[5] = U",
                "REF_104[6] = U",
                "REF_104[7] = U",
                "REF_104[8] = U",
                "REF_104[9] = U"
            ]
        }
    ],
    "root_addr": "0xab",
    "dest_addrs": [
        "0xbb"
    ],
    "normal_blocks": [
        {
            "scope": "createSwap",
            "addr": "0xab",
            "instructions": [
                "NOP",
                "_value = NEW_VAL integer",
                "_token = NEW_VAL integer",
                "_participantAddress = NEW_VAL integer",
                "_secretHash = NEW_VAL integer",
                "JUMP 0xac"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0xac",
            "instructions": [
                "TMP_13 = _value > 0",
                "CONDITION TMP_13 0xac_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0xac_r0",
            "instructions": [
                "JUMP 0xad"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0xad",
            "instructions": [
                "CLR_62 = msg.sender",
                "CLR_63 = swaps[CLR_62]",
                "REF_0 = CLR_63",
                "CLR_64 = REF_0[_participantAddress]",
                "REF_1 = CLR_64",
                "CLR_65 = REF_1.balance",
                "REF_2 = CLR_65",
                "TMP_15 = 0",
                "TMP_16 = REF_2 == TMP_15",
                "CONDITION TMP_16 0xad_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0xad_r0",
            "instructions": [
                "JUMP 0xae"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0xae",
            "instructions": [
                "TMP_18 = NEW_VAL unknown",
                "ATTACK",
                "TMP_19 = NEW_VAL boolean",
                "JUMP 0xaf"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xaf",
            "instructions": [
                "NOP",
                "b = NEW_VAL integer",
                "c = NEW_VAL integer",
                "swap = NEW_VAL Swap",
                "_secret = NEW_VAL integer",
                "a = NEW_VAL integer",
                "participantAddress = NEW_VAL integer",
                "JUMP 0xb0"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb0",
            "instructions": [
                "CLR_66 = msg.sender",
                "CLR_67 = swaps[CLR_66]",
                "REF_34 = CLR_67",
                "CLR_68 = REF_34[participantAddress]",
                "REF_35 = CLR_68",
                "swap = REF_35",
                "CLR_69 = swap.secretHash",
                "REF_36 = CLR_69",
                "TMP_47 = CALL1 ripemd160 _secret",
                "TMP_48 = REF_36 == TMP_47",
                "CONDITION TMP_48 0xb0_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb0_r0",
            "instructions": [
                "JUMP 0xb1"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb1",
            "instructions": [
                "CLR_70 = swap.balance",
                "REF_37 = CLR_70",
                "TMP_50 = 0",
                "TMP_51 = REF_37 > TMP_50",
                "CONDITION TMP_51 0xb1_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb1_r0",
            "instructions": [
                "JUMP 0xb2"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb3",
            "instructions": [
                "TMP_54 = TMP_53 > now",
                "CONDITION TMP_54 0xb3_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb3_r0",
            "instructions": [
                "JUMP 0xb4"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb4",
            "instructions": [
                "CLR_71 = swap.token",
                "REF_40 = CLR_71",
                "TMP_56 = NEW_VAL unknown",
                "CLR_72 = swap.targetWallet",
                "REF_42 = CLR_72",
                "CLR_73 = swap.balance",
                "REF_43 = CLR_73",
                "NOP",
                "JUMP 0xb5"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb5",
            "instructions": [
                "CLR_74 = msg.sender",
                "CLR_75 = swaps[CLR_74]",
                "REF_44 = CLR_75",
                "CLR_76 = REF_44[participantAddress]",
                "REF_45 = CLR_76",
                "CLR_77 = REF_45.balance",
                "REF_46 = CLR_77",
                "REF_45.balance = 0",
                "CLR_78 = msg.sender",
                "CLR_79 = swaps[CLR_78]",
                "REF_47 = CLR_79",
                "CLR_80 = REF_47[participantAddress]",
                "REF_48 = CLR_80",
                "CLR_81 = REF_48.secret",
                "REF_49 = CLR_81",
                "REF_48.secret = _secret",
                "NOP",
                "JUMP 0xb6"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb7",
            "instructions": [
                "NOP",
                "JUMP 0xb8"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb8",
            "instructions": [
                "TMP_10 = a + b",
                "c = TMP_10",
                "TMP_11 = c >= a",
                "CONDITION TMP_11 0xb8_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb8_r0",
            "instructions": [
                "JUMP 0xb9"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb9",
            "instructions": [
                "TMP_72 = c",
                "JUMP 0xba"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xb2",
            "instructions": [
                "CLR_82 = swap.createdAt",
                "REF_38 = CLR_82",
                "a = REF_38",
                "b = SafeTime",
                "JUMP 0xb7"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xba",
            "instructions": [
                "TMP_53 = TMP_72",
                "JUMP 0xb3"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0xbb",
            "instructions": [
                "CLR_83 = msg.sender",
                "CLR_84 = swaps[CLR_83]",
                "REF_4 = CLR_84",
                "CLR_85 = REF_4[_participantAddress]",
                "REF_5 = CLR_85",
                "TMP_21 = 0",
                "TMP_22 = NEW_VAL Swap",
                "REF_4[_participantAddress] = TMP_22",
                "NOP"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0xb6",
            "instructions": [
                "CONDITION TMP_19 0xb6_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0xb6_r0",
            "instructions": [
                "JUMP 0xbb"
            ]
        },
        {
            "scope": "trap",
            "addr": "0xbc",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}