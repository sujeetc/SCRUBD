[INFO] | 2024-11-10 07:41:06 AM | analyzer.0x00b6358d1ac8d3731defd6b4d593b6ba04f9b8ea | Analysis started at: 2024-11-10 07:41:06 AM
[INFO] | 2024-11-10 07:41:10 AM | analyzer.0x00b6358d1ac8d3731defd6b4d593b6ba04f9b8ea | Version constraints: ['0.6.9']
[INFO] | 2024-11-10 07:41:10 AM | analyzer.0x00b6358d1ac8d3731defd6b4d593b6ba04f9b8ea | solc version: v0.6.9
Traceback (most recent call last):
  File "contractlint.py", line 71, in analyze_contracts
    slither_obj = Slither(contract_path, solc=solc_path)
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/slither.py", line 85, in __init__
    self._analyze_contracts()
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/solc_parsing/slitherSolc.py", line 252, in _analyze_contracts
    self._analyze_third_part(contracts_to_be_analyzed, libraries)
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/solc_parsing/slitherSolc.py", line 331, in _analyze_third_part
    self._analyze_variables_modifiers_functions(contract)
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/solc_parsing/slitherSolc.py", line 371, in _analyze_variables_modifiers_functions
    contract.analyze_content_functions()
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/solc_parsing/declarations/contract.py", line 285, in analyze_content_functions
    function.analyze_content()
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/solc_parsing/declarations/function.py", line 223, in analyze_content
    if self._filter_ternary():
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/solc_parsing/declarations/function.py", line 1016, in _filter_ternary
    raise ParsingError(f'Incorrect ternary conversion {node.expression} {node.source_mapping_str}')
slither.solc_parsing.exceptions.ParsingError: Incorrect ternary conversion require(bool,string)(_amount >= users[_addr].deposit_amount && _amount <= cycles[if users[_addr].cycle > 3 then 3 else users[_addr].cycle],Bad amount) ../../../../../ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts/0x00b6358d1ac8d3731defd6b4d593b6ba04f9b8ea.sol#593

real	0m7.220s
user	0m8.815s
sys	0m3.274s
