{
    "file_name": "dao_symex_path_21.json",
    "from_function": "createSwapTarget",
    "to_function": "withdrawNoMoney",
    "bug_type": "dao",
    "src_node": "\"BlockID: 631\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 653\nCall context: \nTrue\nREF_10 -> swaps[msg.sender]\nREF_11 -> REF_10[_participantAddress]\nTMP_32 = CONVERT 0 to bytes32\nTMP_33 = new Swap(_token,_targetWallet,TMP_32,_secretHash,now,_value)\nREF_11 := TMP_33\nEmit CreateSwap(_token._participantAddress.msg.sender._value._secretHash.now)\""
    ],
    "executable_instructions": 193,
    "state_variable": "swaps",
    "error": "",
    "result": "SAT",
    "execution_details": "# using file \/ethereum-security\/empirical-study\/data\/extracted_solc_codes\/crowdsource_contracts\/sailfish\/0xd84b6aec4985e68ef5882de0b5d0b30992bb5057\/dao_symex_path_21.json\n# attack type: range\n# solver type: z3\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x3@__GLOBAL__\n    > adding global block: 0x4@__GLOBAL__\n    > adding global block: 0x1b@__GLOBAL__\n    > adding global block: 0x1c@__GLOBAL__\n    > adding global block: 0x1d@__GLOBAL__\n    > adding global block: 0x30@__GLOBAL__\n    > adding global block: 0x31@__GLOBAL__\n    > adding global block: 0x32@__GLOBAL__\n    > adding global block: 0x45@__GLOBAL__\n    > adding global block: 0x46@__GLOBAL__\n    > adding global block: 0x47@__GLOBAL__\n    > adding global block: 0x5a@__GLOBAL__\n    > adding global block: 0x5b@__GLOBAL__\n    > adding global block: 0x5c@__GLOBAL__\n    > adding global block: 0x6f@__GLOBAL__\n    > adding global block: 0x70@__GLOBAL__\n    > adding global block: 0x71@__GLOBAL__\n    > adding global block: 0x84@__GLOBAL__\n    > adding global block: 0x85@__GLOBAL__\n    > adding global block: 0x86@__GLOBAL__\n    > adding global block: 0x99@__GLOBAL__\n    > adding global block: 0x9a@__GLOBAL__\n    > adding global block: 0x9b@__GLOBAL__\n    > adding global block: 0xae@__GLOBAL__\n    > adding global block: 0xaf@__GLOBAL__\n    > adding global block: 0xb0@__GLOBAL__\n    > adding global block: 0xc3@__GLOBAL__\n    > adding global block: 0xc4@__GLOBAL__\n    > adding global block: 0xc5@__GLOBAL__\n    > adding global block: 0xd8@__GLOBAL__\n    > adding global block: 0xd9@__GLOBAL__\n    > adding global block: 0xda@__GLOBAL__\n    > adding global block: 0xed@__GLOBAL__\n    > adding global block: 0xee@__GLOBAL__\n    > adding global block: 0xef@__GLOBAL__\n    > adding global block: 0x102@__GLOBAL__\n    > adding global block: 0x103@__GLOBAL__\n    > adding global block: 0x104@__GLOBAL__\n    > adding global block: 0x117@__GLOBAL__\n    > adding global block: 0x118@__GLOBAL__\n    > adding global block: 0x119@__GLOBAL__\n    > adding global block: 0x12e@__GLOBAL__\n    > adding global block: 0x12f@__GLOBAL__\n    > adding global block: 0x130@__GLOBAL__\n    > adding global block: 0x145@__GLOBAL__\n    > adding global block: 0x146@__GLOBAL__\n    > adding global block: 0x147@__GLOBAL__\n    > adding global block: 0x15c@__GLOBAL__\n    > adding global block: 0x15d@__GLOBAL__\n    > adding global block: 0x15e@__GLOBAL__\n    > adding global block: 0x171@__GLOBAL__\n    > adding global block: 0x172@__GLOBAL__\n    > adding global block: 0x173@__GLOBAL__\n    > adding global block: 0x186@__GLOBAL__\n    > adding global block: 0x187@__GLOBAL__\n    > adding global block: 0x188@__GLOBAL__\n    > adding global block: 0x19b@__GLOBAL__\n    > adding global block: 0x19c@__GLOBAL__\n    > adding global block: 0x19d@__GLOBAL__\n    > adding global block: 0x1b0@__GLOBAL__\n    > adding global block: 0x1b1@__GLOBAL__\n    > adding global block: 0x1b2@__GLOBAL__\n    > adding global block: 0x1c5@__GLOBAL__\n    > adding global block: 0x1c6@__GLOBAL__\n    > adding global block: 0x1c7@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: swaps\n    > initializing global variable: swaps\n    > declaring global variable: SafeTime\n    > initializing global variable: SafeTime\n\n    > declaring global variable: owner\n    > initializing global variable: owner\n\n    > declaring global variable: SafeMath\n    > initializing global variable: SafeMath\n    > declaring global variable: ERC20\n    > initializing global variable: ERC20\n    > declaring global variable: EthTokenToSmthSwaps\n    > initializing global variable: EthTokenToSmthSwaps\n# building ranges\n  > start adding range variables\n    > adding: swaps -> (0x2@__RANGE__ 0x6@__RANGE__ 0x9@__RANGE__ 0xc@__RANGE__ 0xf@__RANGE__ 0x12@__RANGE__ 0x15@__RANGE__ 0x18@__RANGE__ 0x1a@__RANGE__)\n  > range entry addresses: (0x2@__RANGE__ 0x6@__RANGE__ 0x12@__RANGE__ 0x9@__RANGE__ 0x15@__RANGE__ 0xf@__RANGE__ 0x18@__RANGE__ 0xc@__RANGE__ 0x1a@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0x6@__RANGE__\n    > adding range block: 0x7@__RANGE__\n    > adding range block: 0x5@__RANGE__\n    > adding range block: 0x9@__RANGE__\n    > adding range block: 0xa@__RANGE__\n    > adding range block: 0x8@__RANGE__\n    > adding range block: 0xc@__RANGE__\n    > adding range block: 0xd@__RANGE__\n    > adding range block: 0xb@__RANGE__\n    > adding range block: 0xf@__RANGE__\n    > adding range block: 0x10@__RANGE__\n    > adding range block: 0xe@__RANGE__\n    > adding range block: 0x12@__RANGE__\n    > adding range block: 0x13@__RANGE__\n    > adding range block: 0x11@__RANGE__\n    > adding range block: 0x15@__RANGE__\n    > adding range block: 0x16@__RANGE__\n    > adding range block: 0x14@__RANGE__\n    > adding range block: 0x18@__RANGE__\n    > adding range block: 0x17@__RANGE__\n    > adding range block: 0x1a@__RANGE__\n    > adding range block: 0x19@__RANGE__\n# building normal scopes\n  > root addr: 0x1c8\n  > dest addrs: (0x1d8)\n  > loading normal blocks\n    > adding normal block: 0x1c8\n    > adding normal block: 0x1c9\n    > adding normal block: 0x1c9_r0\n    > adding normal block: 0x1ca\n    > adding normal block: 0x1ca_r0\n    > adding normal block: 0x1cb\n    > adding normal block: 0x1cc\n    > adding normal block: 0x1cd\n    > adding normal block: 0x1cd_r0\n    > adding normal block: 0x1ce\n    > adding normal block: 0x1ce_r0\n    > adding normal block: 0x1d0\n    > adding normal block: 0x1d0_r0\n    > adding normal block: 0x1d1\n    > adding normal block: 0x1d2\n    > adding normal block: 0x1d4\n    > adding normal block: 0x1d5\n    > adding normal block: 0x1d5_r0\n    > adding normal block: 0x1d6\n    > adding normal block: 0x1cf\n    > adding normal block: 0x1d7\n    > adding normal block: 0x1d3\n    > adding normal block: 0x1d3_r0\n    > adding normal block: 0x1d8\n    > adding normal block: 0x1d9\n    > adding normal block: 0xRequireTrap\n# start interpretation of normal blocks...\n\n# asserts size: 100\n# using solver: #<z3>\n# result: #t\n"
}