{
    "0x0efef0b34638addc8833ba729ae20016b5f24ffc.sol": [
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdraw",
                "withdraw"
            ],
            "from_function": "withdraw",
            "to_function": "withdraw",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 220\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_46 := i\"",
                        "\"BlockID: 145\nFunction: withdraw\nNode: \nEXPRESSION assert(bool)(nextDepositToPayout[msg.sender] == i)\nIRS: \nTMP_145 = SOLIDITY_CALL assert(bool)(TMP_144)\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 230\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_38 := i\"",
                        "\"BlockID: 145\nFunction: withdraw\nNode: \nEXPRESSION assert(bool)(nextDepositToPayout[msg.sender] == i)\nIRS: \nTMP_145 = SOLIDITY_CALL assert(bool)(TMP_144)\""
                    ],
                    "state_variable": "nextDepositToPayout"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdraw",
                "withdraw"
            ],
            "from_function": "withdraw",
            "to_function": "withdraw",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 254\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_46 := i\"",
                        "\"BlockID: 143\nFunction: withdraw\nNode: \nIF_LOOP (i < deposits.length) && (msg.gas > 148000)\nIRS: \nCONDITION TMP_125\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 264\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_38 := i\"",
                        "\"BlockID: 143\nFunction: withdraw\nNode: \nIF_LOOP (i < deposits.length) && (msg.gas > 148000)\nIRS: \nCONDITION TMP_125\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 254\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_46 := i\"",
                        "\"BlockID: 145\nFunction: withdraw\nNode: \nEXPRESSION assert(bool)(nextDepositToPayout[msg.sender] == i)\nIRS: \nTMP_145 = SOLIDITY_CALL assert(bool)(TMP_144)\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 264\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_38 := i\"",
                        "\"BlockID: 145\nFunction: withdraw\nNode: \nEXPRESSION assert(bool)(nextDepositToPayout[msg.sender] == i)\nIRS: \nTMP_145 = SOLIDITY_CALL assert(bool)(TMP_144)\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 254\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_46 := i\"",
                        "\"BlockID: 153\nFunction: withdraw\nNode: \nEXPRESSION assert(bool)(nextDepositToPayout[msg.sender] == i)\nIRS: \nTMP_135 = SOLIDITY_CALL assert(bool)(TMP_134)\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 264\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_38 := i\"",
                        "\"BlockID: 153\nFunction: withdraw\nNode: \nEXPRESSION assert(bool)(nextDepositToPayout[msg.sender] == i)\nIRS: \nTMP_135 = SOLIDITY_CALL assert(bool)(TMP_134)\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 233\nFunction: withdraw\nNode: \nEXPRESSION require(bool)(i < deposits.length)\nIRS: \nTMP_120 = SOLIDITY_CALL require(bool)(TMP_119)\"",
                        "\"BlockID: 162\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_46 := i\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 233\nFunction: withdraw\nNode: \nEXPRESSION require(bool)(i < deposits.length)\nIRS: \nTMP_120 = SOLIDITY_CALL require(bool)(TMP_119)\"",
                        "\"BlockID: 172\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_38 := i\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: withdraw\nNode: \nIF_LOOP (i < deposits.length) && (msg.gas > 148000)\nIRS: \nCONDITION TMP_125\"",
                        "\"BlockID: 162\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_46 := i\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: withdraw\nNode: \nIF_LOOP (i < deposits.length) && (msg.gas > 148000)\nIRS: \nCONDITION TMP_125\"",
                        "\"BlockID: 172\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_38 := i\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 237\nFunction: withdraw\nNode: \nEXPRESSION assert(bool)(nextDepositToPayout[msg.sender] == i)\nIRS: \nTMP_145 = SOLIDITY_CALL assert(bool)(TMP_144)\"",
                        "\"BlockID: 162\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_46 := i\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 237\nFunction: withdraw\nNode: \nEXPRESSION assert(bool)(nextDepositToPayout[msg.sender] == i)\nIRS: \nTMP_145 = SOLIDITY_CALL assert(bool)(TMP_144)\"",
                        "\"BlockID: 172\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_38 := i\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 245\nFunction: withdraw\nNode: \nEXPRESSION assert(bool)(nextDepositToPayout[msg.sender] == i)\nIRS: \nTMP_135 = SOLIDITY_CALL assert(bool)(TMP_134)\"",
                        "\"BlockID: 162\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_46 := i\""
                    ],
                    "state_variable": "nextDepositToPayout"
                },
                {
                    "path": [
                        "\"BlockID: 245\nFunction: withdraw\nNode: \nEXPRESSION assert(bool)(nextDepositToPayout[msg.sender] == i)\nIRS: \nTMP_135 = SOLIDITY_CALL assert(bool)(TMP_134)\"",
                        "\"BlockID: 172\nFunction: withdraw\nNode: \nEXPRESSION nextDepositToPayout[msg.sender] = i\nIRS: \nREF_38 := i\""
                    ],
                    "state_variable": "nextDepositToPayout"
                }
            ]
        }
    ]
}