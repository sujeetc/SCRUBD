{
    "file": "0x5f38c57b268664015de387229bc9d3822b53ec32.sol",
    "global_structs": [
        {
            "name": "Purchase",
            "fields": {
                "current": [
                    "integer"
                ],
                "count": [
                    "integer"
                ],
                "user": [
                    "integer"
                ],
                "randomness": [
                    "integer"
                ],
                "commit": [
                    "integer"
                ]
            }
        },
        {
            "name": "Batch",
            "fields": {
                "userID": [
                    "integer"
                ],
                "size": [
                    "integer"
                ]
            }
        },
        {
            "name": "StackDepthLimit",
            "fields": {
                "oldProtos": [
                    "array",
                    "integer"
                ],
                "purities": [
                    "array",
                    "integer"
                ],
                "qualities": [
                    "array",
                    "integer"
                ],
                "protos": [
                    "array",
                    "integer"
                ]
            }
        },
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0xf"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0x10"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0x11"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "canMigrate",
            "type": [
                "array",
                "integer",
                "boolean"
            ],
            "init": []
        },
        {
            "name": "v1Migrated",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "boolean"
                ]
            ],
            "init": []
        },
        {
            "name": "migration",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ebs",
            "type": [
                "array",
                "integer"
            ],
            "init": [
                "0x7"
            ]
        },
        {
            "name": "limit",
            "type": [
                "integer"
            ],
            "init": [
                "0x6"
            ]
        },
        {
            "name": "cards",
            "type": [
                "integer"
            ],
            "init": [
                "0x5"
            ]
        },
        {
            "name": "IPackFour",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "BaseMigration",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "IERC165",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "IERC721",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ICards",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "v1Migration",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "CanBeV1Migrated",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0x4",
            "instructions": [
                "CLR_0 = canMigrate[U]",
                "REF_33 = CLR_0",
                "canMigrate[0] = true",
                "canMigrate[1] = true",
                "canMigrate[2] = true",
                "canMigrate[3] = true",
                "canMigrate[4] = true",
                "canMigrate[5] = true",
                "canMigrate[6] = true",
                "canMigrate[7] = true",
                "canMigrate[8] = true",
                "canMigrate[9] = true"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x5",
            "instructions": [
                "cards = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x6",
            "instructions": [
                "limit = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x7",
            "instructions": [
                "ebs = 400",
                "ebs = 413",
                "ebs = 414",
                "ebs = 421",
                "ebs = 427",
                "ebs = 428",
                "ebs = 389",
                "ebs = 415",
                "ebs = 416",
                "ebs = 422",
                "ebs = 424",
                "ebs = 425",
                "ebs = 426",
                "ebs = 382",
                "ebs = 420",
                "ebs = 417"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xf",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x10",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x11",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "v1Migrated",
            "addrs": [
                "0x2",
                "0xa",
                "0xd"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa",
            "instructions": [
                "CLR_1 = canMigrate[U]",
                "REF_36 = CLR_1",
                "RTMP_86 = REF_36 == true",
                "CONDITION RTMP_86 0xb 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb",
            "instructions": [
                "CLR_2 = v1Migrated[U]",
                "REF_37 = CLR_2",
                "CLR_3 = REF_37[U]",
                "REF_38 = CLR_3",
                "RTMP_87 = ! REF_38",
                "CONDITION RTMP_87 0x9 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9",
            "instructions": [
                "CLR_4 = v1Migrated[U]",
                "REF_34 = CLR_4",
                "CLR_5 = REF_34[U]",
                "REF_35 = CLR_5",
                "REF_34[0] = true",
                "REF_34[1] = true",
                "REF_34[2] = true",
                "REF_34[3] = true",
                "REF_34[4] = true",
                "REF_34[5] = true",
                "REF_34[6] = true",
                "REF_34[7] = true",
                "REF_34[8] = true",
                "REF_34[9] = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xd",
            "instructions": [
                "CLR_6 = canMigrate[U]",
                "REF_36 = CLR_6",
                "RTMP_86 = REF_36 == true",
                "CONDITION RTMP_86 0xe 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xe",
            "instructions": [
                "CLR_7 = v1Migrated[U]",
                "REF_37 = CLR_7",
                "CLR_8 = REF_37[U]",
                "REF_38 = CLR_8",
                "RTMP_87 = ! REF_38",
                "CONDITION RTMP_87 0xc 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xc",
            "instructions": [
                "CLR_9 = v1Migrated[U]",
                "REF_34 = CLR_9",
                "CLR_10 = REF_34[U]",
                "REF_35 = CLR_10",
                "REF_34[0] = true",
                "REF_34[1] = true",
                "REF_34[2] = true",
                "REF_34[3] = true",
                "REF_34[4] = true",
                "REF_34[5] = true",
                "REF_34[6] = true",
                "REF_34[7] = true",
                "REF_34[8] = true",
                "REF_34[9] = true"
            ]
        }
    ],
    "root_addr": "0x12",
    "dest_addrs": [
        "0x99"
    ],
    "normal_blocks": [
        {
            "scope": "migrate",
            "addr": "0x12",
            "instructions": [
                "NOP",
                "ids = NEW_COL integer",
                "loopStart = NEW_VAL integer",
                "remaining = NEW_VAL integer",
                "x = NEW_VAL integer",
                "i = NEW_VAL integer",
                "i = NEW_VAL integer",
                "proto = NEW_VAL integer",
                "proto = NEW_VAL integer",
                "purity = NEW_VAL integer",
                "pack = NEW_VAL integer",
                "i = NEW_VAL integer",
                "sdl = NEW_VAL StackDepthLimit",
                "startID = NEW_VAL integer",
                "id = NEW_VAL integer",
                "pack = NEW_VAL integer",
                "loopEnd = NEW_VAL integer",
                "JUMP 0x13"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x13",
            "instructions": [
                "i = 0",
                "JUMP 0x14"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x14",
            "instructions": [
                "NOP",
                "REF_7 = LENGTH ids",
                "TMP_40 = i < REF_7",
                "CONDITION TMP_40 0x15 0x16"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x17",
            "instructions": [
                "TMP_42 = i",
                "i = i + 1",
                "JUMP 0x14"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x18",
            "instructions": [
                "NOP",
                "JUMP 0x19"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x19",
            "instructions": [
                "TMP_43 = NEW_VAL unknown",
                "CLR_11 = canMigrate[TMP_43]",
                "REF_9 = CLR_11",
                "CONDITION REF_9 0x19_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x19_r0",
            "instructions": [
                "JUMP 0x1a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x1a",
            "instructions": [
                "TMP_45 = NEW_VAL unknown",
                "CLR_12 = v1Migrated[TMP_45]",
                "REF_10 = CLR_12",
                "CLR_13 = REF_10[id]",
                "REF_11 = CLR_13",
                "TMP_46 = ! REF_11",
                "CONDITION TMP_46 0x1a_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x1a_r0",
            "instructions": [
                "JUMP 0x1b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x1b",
            "instructions": [
                "NOP",
                "NOP",
                "NOP",
                "NOP",
                "ATTACK",
                "TUPLE_2 = NEW_COL unknown",
                "JUMP 0x1c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x1d",
            "instructions": [
                "current = NEW_VAL unknown",
                "count = NEW_VAL unknown",
                "user = NEW_VAL unknown",
                "randomness = NEW_VAL unknown",
                "TMP_48 = randomness != 0",
                "CONDITION TMP_48 0x1d_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x1d_r0",
            "instructions": [
                "JUMP 0x1e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x1e",
            "instructions": [
                "TMP_50 = count - current",
                "TMP_51 = TMP_50 * 5",
                "remaining = TMP_51",
                "TMP_52 = remaining > 0",
                "CONDITION TMP_52 0x1e_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x1e_r0",
            "instructions": [
                "JUMP 0x1f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x1f",
            "instructions": [
                "TMP_54 = limit >= remaining",
                "CONDITION TMP_54 0x1f_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x1f_r0",
            "instructions": [
                "JUMP 0x20"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x20",
            "instructions": [
                "NOP",
                "CLR_14 = sdl.protos",
                "REF_13 = CLR_14",
                "TMP_57 = NEW_COL integer",
                "sdl.protos = TMP_57",
                "CLR_15 = sdl.qualities",
                "REF_14 = CLR_15",
                "TMP_59 = NEW_COL integer",
                "sdl.qualities = TMP_59",
                "CLR_16 = sdl.oldProtos",
                "REF_15 = CLR_16",
                "CLR_17 = sdl.purities",
                "REF_16 = CLR_17",
                "TUPLE_3 = NEW_COL unknown",
                "JUMP 0x21"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x21",
            "instructions": [
                "NCV_0 = NEW_VAL unknown",
                "sdl.oldProtos = NCV_0",
                "NCV_1 = NEW_VAL unknown",
                "sdl.purities = NCV_1",
                "TMP_60 = current * 5",
                "loopStart = TMP_60",
                "i = 0",
                "JUMP 0x22"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x22",
            "instructions": [
                "NOP",
                "TMP_61 = i < remaining",
                "CONDITION TMP_61 0x24 0x23"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x23",
            "instructions": [
                "NOP",
                "JUMP 0x25"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x25",
            "instructions": [
                "CLR_18 = sdl.protos",
                "REF_27 = CLR_18",
                "CLR_19 = sdl.qualities",
                "REF_28 = CLR_19",
                "TMP_66 = NEW_VAL integer",
                "JUMP 0x26"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x26",
            "instructions": [
                "startID = TMP_66",
                "TMP_67 = NEW_VAL unknown",
                "CLR_20 = v1Migrated[TMP_67]",
                "REF_29 = CLR_20",
                "CLR_21 = REF_29[id]",
                "REF_30 = CLR_21",
                "REF_29[id] = true",
                "TMP_68 = loopStart + remaining",
                "loopEnd = TMP_68",
                "TMP_69 = NEW_VAL unknown",
                "NOP",
                "JUMP 0x17"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x27",
            "instructions": [
                "REF_22[i] = TMP_64",
                "TMP_65 = i",
                "i = i + 1",
                "JUMP 0x22"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x28",
            "instructions": [
                "NOP",
                "JUMP 0x29"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x29",
            "instructions": [
                "TMP_22 = proto >= 1",
                "TMP_23 = proto <= 377",
                "TMP_24 = TMP_22 && TMP_23",
                "CONDITION TMP_24 0x2a 0x2b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x2a",
            "instructions": [
                "TMP_78 = proto",
                "JUMP 0x2c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x2b",
            "instructions": [
                "NOP",
                "JUMP 0x2d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x2d",
            "instructions": [
                "TMP_25 = proto == 380",
                "CONDITION TMP_25 0x2e 0x2f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x2e",
            "instructions": [
                "TMP_78 = 400",
                "JUMP 0x2c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x2f",
            "instructions": [
                "NOP",
                "JUMP 0x30"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x30",
            "instructions": [
                "TMP_26 = proto == 381",
                "CONDITION TMP_26 0x31 0x32"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x31",
            "instructions": [
                "TMP_78 = 401",
                "JUMP 0x2c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x32",
            "instructions": [
                "NOP",
                "JUMP 0x33"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x33",
            "instructions": [
                "TMP_27 = proto == 394",
                "CONDITION TMP_27 0x34 0x35"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x34",
            "instructions": [
                "TMP_78 = 402",
                "JUMP 0x2c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x35",
            "instructions": [
                "NOP",
                "JUMP 0x36"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x37",
            "instructions": [
                "found = NEW_VAL unknown",
                "index = NEW_VAL unknown",
                "CONDITION found 0x38 0x39"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x38",
            "instructions": [
                "TMP_28 = 380 + index",
                "TMP_29 = NEW_VAL unknown",
                "TMP_78 = TMP_29",
                "JUMP 0x2c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x39",
            "instructions": [
                "NOP",
                "JUMP 0x3a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x3a",
            "instructions": [
                "TMP_30 = proto == 378",
                "CONDITION TMP_30 0x3b 0x3c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x3b",
            "instructions": [
                "TMP_78 = 65000",
                "JUMP 0x2c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x3c",
            "instructions": [
                "NOP",
                "JUMP 0x3d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x3d",
            "instructions": [
                "TMP_31 = proto == 379",
                "CONDITION TMP_31 0x3e 0x3f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x3e",
            "instructions": [
                "TMP_78 = 65001",
                "JUMP 0x2c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x3f",
            "instructions": [
                "NOP",
                "JUMP 0x40"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x40",
            "instructions": [
                "TMP_32 = proto == 383",
                "CONDITION TMP_32 0x41 0x42"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x41",
            "instructions": [
                "TMP_78 = 65002",
                "JUMP 0x2c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x42",
            "instructions": [
                "NOP",
                "JUMP 0x43"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x43",
            "instructions": [
                "TMP_33 = proto == 384",
                "CONDITION TMP_33 0x44 0x45"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x44",
            "instructions": [
                "TMP_78 = 65003",
                "JUMP 0x2c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x45",
            "instructions": [
                "NOP",
                "JUMP 0x46"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x46",
            "instructions": [
                "CONDITION false 0x46_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x46_r0",
            "instructions": [
                "JUMP 0x2c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x47",
            "instructions": [
                "NOP",
                "JUMP 0x48"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x48",
            "instructions": [
                "i = 0",
                "JUMP 0x49"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x49",
            "instructions": [
                "NOP",
                "REF_2 = LENGTH ebs",
                "TMP_35 = i < REF_2",
                "CONDITION TMP_35 0x4a 0x4b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x4a",
            "instructions": [
                "CLR_22 = ebs[i]",
                "REF_3 = CLR_22",
                "TMP_36 = REF_3 == proto",
                "CONDITION TMP_36 0x4c 0x4d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x4b",
            "instructions": [
                "NOP",
                "JUMP 0x4e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x4e",
            "instructions": [
                "TMP_79 = false",
                "JUMP 0x4f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x4c",
            "instructions": [
                "TMP_79 = true",
                "JUMP 0x4f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x4d",
            "instructions": [
                "NOP",
                "JUMP 0x50"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x50",
            "instructions": [
                "TMP_37 = i",
                "i = i + 1",
                "JUMP 0x49"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x4f",
            "instructions": [
                "TMP_79 = i",
                "JUMP 0x51"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x36",
            "instructions": [
                "NOP",
                "NOP",
                "proto = proto",
                "JUMP 0x47"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x51",
            "instructions": [
                "TUPLE_1 = TMP_79",
                "JUMP 0x37"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x24",
            "instructions": [
                "TMP_62 = loopStart + i",
                "x = TMP_62",
                "CLR_23 = sdl.protos",
                "REF_18 = CLR_23",
                "CLR_24 = REF_18[i]",
                "REF_19 = CLR_24",
                "CLR_25 = sdl.oldProtos",
                "REF_20 = CLR_25",
                "CLR_26 = REF_20[x]",
                "REF_21 = CLR_26",
                "proto = REF_21",
                "JUMP 0x28"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x2c",
            "instructions": [
                "TMP_63 = TMP_78",
                "JUMP 0x52"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x53",
            "instructions": [
                "NOP",
                "JUMP 0x54"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x54",
            "instructions": [
                "TMP_19 = purity \/ 1000",
                "TMP_20 = 4 - TMP_19",
                "TMP_21 = NEW_VAL unknown",
                "TMP_77 = TMP_21",
                "JUMP 0x55"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x52",
            "instructions": [
                "REF_18[i] = TMP_63",
                "CLR_27 = sdl.qualities",
                "REF_22 = CLR_27",
                "CLR_28 = REF_22[i]",
                "REF_23 = CLR_28",
                "CLR_29 = sdl.purities",
                "REF_24 = CLR_29",
                "CLR_30 = REF_24[x]",
                "REF_25 = CLR_30",
                "purity = REF_25",
                "JUMP 0x53"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x55",
            "instructions": [
                "TMP_64 = TMP_77",
                "JUMP 0x27"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x15",
            "instructions": [
                "CLR_31 = ids[i]",
                "REF_8 = CLR_31",
                "pack = pack",
                "id = REF_8",
                "JUMP 0x18"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x1c",
            "instructions": [
                "NOP",
                "loopStart = NEW_VAL integer",
                "remaining = NEW_VAL integer",
                "x = NEW_VAL integer",
                "i = NEW_VAL integer",
                "proto = NEW_VAL integer",
                "proto = NEW_VAL integer",
                "purity = NEW_VAL integer",
                "pack = NEW_VAL integer",
                "i = NEW_VAL integer",
                "sdl = NEW_VAL StackDepthLimit",
                "startID = NEW_VAL integer",
                "id = NEW_VAL integer",
                "loopEnd = NEW_VAL integer",
                "JUMP 0x56"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x56",
            "instructions": [
                "TMP_43 = NEW_VAL unknown",
                "CLR_32 = canMigrate[TMP_43]",
                "REF_9 = CLR_32",
                "CONDITION REF_9 0x56_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x56_r0",
            "instructions": [
                "JUMP 0x57"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x57",
            "instructions": [
                "TMP_45 = NEW_VAL unknown",
                "CLR_33 = v1Migrated[TMP_45]",
                "REF_10 = CLR_33",
                "CLR_34 = REF_10[id]",
                "REF_11 = CLR_34",
                "TMP_46 = ! REF_11",
                "CONDITION TMP_46 0x57_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x57_r0",
            "instructions": [
                "JUMP 0x58"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x58",
            "instructions": [
                "NOP",
                "NOP",
                "NOP",
                "NOP",
                "TUPLE_2 = NEW_COL unknown",
                "JUMP 0x59"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x59",
            "instructions": [
                "current = NEW_VAL unknown",
                "count = NEW_VAL unknown",
                "user = NEW_VAL unknown",
                "randomness = NEW_VAL unknown",
                "TMP_48 = randomness != 0",
                "CONDITION TMP_48 0x59_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x59_r0",
            "instructions": [
                "JUMP 0x5a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x5a",
            "instructions": [
                "TMP_50 = count - current",
                "TMP_51 = TMP_50 * 5",
                "remaining = TMP_51",
                "TMP_52 = remaining > 0",
                "CONDITION TMP_52 0x5a_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x5a_r0",
            "instructions": [
                "JUMP 0x5b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x5b",
            "instructions": [
                "TMP_54 = limit >= remaining",
                "CONDITION TMP_54 0x5b_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x5b_r0",
            "instructions": [
                "JUMP 0x5c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x5c",
            "instructions": [
                "NOP",
                "CLR_35 = sdl.protos",
                "REF_13 = CLR_35",
                "TMP_57 = NEW_COL integer",
                "sdl.protos = TMP_57",
                "CLR_36 = sdl.qualities",
                "REF_14 = CLR_36",
                "TMP_59 = NEW_COL integer",
                "sdl.qualities = TMP_59",
                "CLR_37 = sdl.oldProtos",
                "REF_15 = CLR_37",
                "CLR_38 = sdl.purities",
                "REF_16 = CLR_38",
                "TUPLE_3 = NEW_COL unknown",
                "JUMP 0x5d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x5d",
            "instructions": [
                "NCV_2 = NEW_VAL unknown",
                "sdl.oldProtos = NCV_2",
                "NCV_3 = NEW_VAL unknown",
                "sdl.purities = NCV_3",
                "TMP_60 = current * 5",
                "loopStart = TMP_60",
                "i = 0",
                "JUMP 0x5e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x5e",
            "instructions": [
                "NOP",
                "TMP_61 = i < remaining",
                "CONDITION TMP_61 0x60 0x5f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x5f",
            "instructions": [
                "NOP",
                "JUMP 0x61"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x61",
            "instructions": [
                "CLR_39 = sdl.protos",
                "REF_27 = CLR_39",
                "CLR_40 = sdl.qualities",
                "REF_28 = CLR_40",
                "TMP_66 = NEW_VAL integer",
                "JUMP 0x62"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x62",
            "instructions": [
                "startID = TMP_66",
                "TMP_67 = NEW_VAL unknown",
                "CLR_41 = v1Migrated[TMP_67]",
                "REF_29 = CLR_41",
                "CLR_42 = REF_29[id]",
                "REF_30 = CLR_42",
                "REF_29[id] = true",
                "TMP_68 = loopStart + remaining",
                "loopEnd = TMP_68",
                "TMP_69 = NEW_VAL unknown",
                "NOP",
                "JUMP 0x63"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x64",
            "instructions": [
                "REF_22[i] = TMP_64",
                "TMP_65 = i",
                "i = i + 1",
                "JUMP 0x5e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x65",
            "instructions": [
                "NOP",
                "JUMP 0x66"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x66",
            "instructions": [
                "TMP_22 = proto >= 1",
                "TMP_23 = proto <= 377",
                "TMP_24 = TMP_22 && TMP_23",
                "CONDITION TMP_24 0x67 0x68"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x67",
            "instructions": [
                "TMP_78 = proto",
                "JUMP 0x69"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x68",
            "instructions": [
                "NOP",
                "JUMP 0x6a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x6a",
            "instructions": [
                "TMP_25 = proto == 380",
                "CONDITION TMP_25 0x6b 0x6c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x6b",
            "instructions": [
                "TMP_78 = 400",
                "JUMP 0x69"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x6c",
            "instructions": [
                "NOP",
                "JUMP 0x6d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x6d",
            "instructions": [
                "TMP_26 = proto == 381",
                "CONDITION TMP_26 0x6e 0x6f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x6e",
            "instructions": [
                "TMP_78 = 401",
                "JUMP 0x69"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x6f",
            "instructions": [
                "NOP",
                "JUMP 0x70"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x70",
            "instructions": [
                "TMP_27 = proto == 394",
                "CONDITION TMP_27 0x71 0x72"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x71",
            "instructions": [
                "TMP_78 = 402",
                "JUMP 0x69"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x72",
            "instructions": [
                "NOP",
                "JUMP 0x73"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x74",
            "instructions": [
                "found = NEW_VAL unknown",
                "index = NEW_VAL unknown",
                "CONDITION found 0x75 0x76"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x75",
            "instructions": [
                "TMP_28 = 380 + index",
                "TMP_29 = NEW_VAL unknown",
                "TMP_78 = TMP_29",
                "JUMP 0x69"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x76",
            "instructions": [
                "NOP",
                "JUMP 0x77"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x77",
            "instructions": [
                "TMP_30 = proto == 378",
                "CONDITION TMP_30 0x78 0x79"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x78",
            "instructions": [
                "TMP_78 = 65000",
                "JUMP 0x69"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x79",
            "instructions": [
                "NOP",
                "JUMP 0x7a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x7a",
            "instructions": [
                "TMP_31 = proto == 379",
                "CONDITION TMP_31 0x7b 0x7c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x7b",
            "instructions": [
                "TMP_78 = 65001",
                "JUMP 0x69"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x7c",
            "instructions": [
                "NOP",
                "JUMP 0x7d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x7d",
            "instructions": [
                "TMP_32 = proto == 383",
                "CONDITION TMP_32 0x7e 0x7f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x7e",
            "instructions": [
                "TMP_78 = 65002",
                "JUMP 0x69"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x7f",
            "instructions": [
                "NOP",
                "JUMP 0x80"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x80",
            "instructions": [
                "TMP_33 = proto == 384",
                "CONDITION TMP_33 0x81 0x82"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x81",
            "instructions": [
                "TMP_78 = 65003",
                "JUMP 0x69"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x82",
            "instructions": [
                "NOP",
                "JUMP 0x83"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x83",
            "instructions": [
                "CONDITION false 0x83_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x83_r0",
            "instructions": [
                "JUMP 0x69"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x84",
            "instructions": [
                "NOP",
                "JUMP 0x85"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x85",
            "instructions": [
                "i = 0",
                "JUMP 0x86"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x86",
            "instructions": [
                "NOP",
                "REF_2 = LENGTH ebs",
                "TMP_35 = i < REF_2",
                "CONDITION TMP_35 0x87 0x88"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x87",
            "instructions": [
                "CLR_43 = ebs[i]",
                "REF_3 = CLR_43",
                "TMP_36 = REF_3 == proto",
                "CONDITION TMP_36 0x89 0x8a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x88",
            "instructions": [
                "NOP",
                "JUMP 0x8b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x8b",
            "instructions": [
                "TMP_79 = false",
                "JUMP 0x8c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x89",
            "instructions": [
                "TMP_79 = true",
                "JUMP 0x8c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x8a",
            "instructions": [
                "NOP",
                "JUMP 0x8d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x8d",
            "instructions": [
                "TMP_37 = i",
                "i = i + 1",
                "JUMP 0x86"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x8c",
            "instructions": [
                "TMP_79 = i",
                "JUMP 0x8e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x73",
            "instructions": [
                "NOP",
                "NOP",
                "proto = proto",
                "JUMP 0x84"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x8e",
            "instructions": [
                "TUPLE_1 = TMP_79",
                "JUMP 0x74"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x60",
            "instructions": [
                "TMP_62 = loopStart + i",
                "x = TMP_62",
                "CLR_44 = sdl.protos",
                "REF_18 = CLR_44",
                "CLR_45 = REF_18[i]",
                "REF_19 = CLR_45",
                "CLR_46 = sdl.oldProtos",
                "REF_20 = CLR_46",
                "CLR_47 = REF_20[x]",
                "REF_21 = CLR_47",
                "proto = REF_21",
                "JUMP 0x65"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x69",
            "instructions": [
                "TMP_63 = TMP_78",
                "JUMP 0x8f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x90",
            "instructions": [
                "NOP",
                "JUMP 0x91"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x91",
            "instructions": [
                "TMP_19 = purity \/ 1000",
                "TMP_20 = 4 - TMP_19",
                "TMP_21 = NEW_VAL unknown",
                "TMP_77 = TMP_21",
                "JUMP 0x92"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x8f",
            "instructions": [
                "REF_18[i] = TMP_63",
                "CLR_48 = sdl.qualities",
                "REF_22 = CLR_48",
                "CLR_49 = REF_22[i]",
                "REF_23 = CLR_49",
                "CLR_50 = sdl.purities",
                "REF_24 = CLR_50",
                "CLR_51 = REF_24[x]",
                "REF_25 = CLR_51",
                "purity = REF_25",
                "JUMP 0x90"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x92",
            "instructions": [
                "TMP_64 = TMP_77",
                "JUMP 0x64"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x93",
            "instructions": [
                "NOP",
                "REF_7 = LENGTH ids",
                "TMP_40 = i < REF_7",
                "CONDITION TMP_40 0x94 0x16"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x95",
            "instructions": [
                "TMP_42 = i",
                "i = i + 1",
                "JUMP 0x93"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x96",
            "instructions": [
                "NOP",
                "JUMP 0x97"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x97",
            "instructions": [
                "TMP_43 = NEW_VAL unknown",
                "CLR_52 = canMigrate[TMP_43]",
                "REF_9 = CLR_52",
                "CONDITION REF_9 0x97_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x97_r0",
            "instructions": [
                "JUMP 0x98"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x98",
            "instructions": [
                "TMP_45 = NEW_VAL unknown",
                "CLR_53 = v1Migrated[TMP_45]",
                "REF_10 = CLR_53",
                "CLR_54 = REF_10[id]",
                "REF_11 = CLR_54",
                "TMP_46 = ! REF_11",
                "CONDITION TMP_46 0x98_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x98_r0",
            "instructions": [
                "JUMP 0x99"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x63",
            "instructions": [
                "current = NEW_VAL unknown",
                "count = NEW_VAL unknown",
                "user = NEW_VAL unknown",
                "randomness = NEW_VAL unknown",
                "TMP_48 = randomness != 0",
                "CONDITION TMP_48 0x63_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x63_r0",
            "instructions": [
                "JUMP 0x9a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x9a",
            "instructions": [
                "TMP_50 = count - current",
                "TMP_51 = TMP_50 * 5",
                "remaining = TMP_51",
                "TMP_52 = remaining > 0",
                "CONDITION TMP_52 0x9a_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x9a_r0",
            "instructions": [
                "JUMP 0x9b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x9b",
            "instructions": [
                "TMP_54 = limit >= remaining",
                "CONDITION TMP_54 0x9b_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x9b_r0",
            "instructions": [
                "JUMP 0x9c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x9c",
            "instructions": [
                "NOP",
                "CLR_55 = sdl.protos",
                "REF_13 = CLR_55",
                "TMP_57 = NEW_COL integer",
                "sdl.protos = TMP_57",
                "CLR_56 = sdl.qualities",
                "REF_14 = CLR_56",
                "TMP_59 = NEW_COL integer",
                "sdl.qualities = TMP_59",
                "CLR_57 = sdl.oldProtos",
                "REF_15 = CLR_57",
                "CLR_58 = sdl.purities",
                "REF_16 = CLR_58",
                "TUPLE_3 = NEW_COL unknown",
                "JUMP 0x9d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x9d",
            "instructions": [
                "NCV_4 = NEW_VAL unknown",
                "sdl.oldProtos = NCV_4",
                "NCV_5 = NEW_VAL unknown",
                "sdl.purities = NCV_5",
                "TMP_60 = current * 5",
                "loopStart = TMP_60",
                "i = 0",
                "JUMP 0x9e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x9e",
            "instructions": [
                "NOP",
                "TMP_61 = i < remaining",
                "CONDITION TMP_61 0xa0 0x9f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x9f",
            "instructions": [
                "NOP",
                "JUMP 0xa1"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xa1",
            "instructions": [
                "CLR_59 = sdl.protos",
                "REF_27 = CLR_59",
                "CLR_60 = sdl.qualities",
                "REF_28 = CLR_60",
                "TMP_66 = NEW_VAL integer",
                "JUMP 0xa2"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xa2",
            "instructions": [
                "startID = TMP_66",
                "TMP_67 = NEW_VAL unknown",
                "CLR_61 = v1Migrated[TMP_67]",
                "REF_29 = CLR_61",
                "CLR_62 = REF_29[id]",
                "REF_30 = CLR_62",
                "REF_29[id] = true",
                "TMP_68 = loopStart + remaining",
                "loopEnd = TMP_68",
                "TMP_69 = NEW_VAL unknown",
                "NOP",
                "JUMP 0x95"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xa3",
            "instructions": [
                "REF_22[i] = TMP_64",
                "TMP_65 = i",
                "i = i + 1",
                "JUMP 0x9e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xa4",
            "instructions": [
                "NOP",
                "JUMP 0xa5"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xa5",
            "instructions": [
                "TMP_22 = proto >= 1",
                "TMP_23 = proto <= 377",
                "TMP_24 = TMP_22 && TMP_23",
                "CONDITION TMP_24 0xa6 0xa7"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xa6",
            "instructions": [
                "TMP_78 = proto",
                "JUMP 0xa8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xa7",
            "instructions": [
                "NOP",
                "JUMP 0xa9"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xa9",
            "instructions": [
                "TMP_25 = proto == 380",
                "CONDITION TMP_25 0xaa 0xab"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xaa",
            "instructions": [
                "TMP_78 = 400",
                "JUMP 0xa8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xab",
            "instructions": [
                "NOP",
                "JUMP 0xac"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xac",
            "instructions": [
                "TMP_26 = proto == 381",
                "CONDITION TMP_26 0xad 0xae"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xad",
            "instructions": [
                "TMP_78 = 401",
                "JUMP 0xa8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xae",
            "instructions": [
                "NOP",
                "JUMP 0xaf"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xaf",
            "instructions": [
                "TMP_27 = proto == 394",
                "CONDITION TMP_27 0xb0 0xb1"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xb0",
            "instructions": [
                "TMP_78 = 402",
                "JUMP 0xa8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xb1",
            "instructions": [
                "NOP",
                "JUMP 0xb2"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xb3",
            "instructions": [
                "found = NEW_VAL unknown",
                "index = NEW_VAL unknown",
                "CONDITION found 0xb4 0xb5"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xb4",
            "instructions": [
                "TMP_28 = 380 + index",
                "TMP_29 = NEW_VAL unknown",
                "TMP_78 = TMP_29",
                "JUMP 0xa8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xb5",
            "instructions": [
                "NOP",
                "JUMP 0xb6"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xb6",
            "instructions": [
                "TMP_30 = proto == 378",
                "CONDITION TMP_30 0xb7 0xb8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xb7",
            "instructions": [
                "TMP_78 = 65000",
                "JUMP 0xa8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xb8",
            "instructions": [
                "NOP",
                "JUMP 0xb9"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xb9",
            "instructions": [
                "TMP_31 = proto == 379",
                "CONDITION TMP_31 0xba 0xbb"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xba",
            "instructions": [
                "TMP_78 = 65001",
                "JUMP 0xa8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xbb",
            "instructions": [
                "NOP",
                "JUMP 0xbc"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xbc",
            "instructions": [
                "TMP_32 = proto == 383",
                "CONDITION TMP_32 0xbd 0xbe"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xbd",
            "instructions": [
                "TMP_78 = 65002",
                "JUMP 0xa8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xbe",
            "instructions": [
                "NOP",
                "JUMP 0xbf"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xbf",
            "instructions": [
                "TMP_33 = proto == 384",
                "CONDITION TMP_33 0xc0 0xc1"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xc0",
            "instructions": [
                "TMP_78 = 65003",
                "JUMP 0xa8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xc1",
            "instructions": [
                "NOP",
                "JUMP 0xc2"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xc2",
            "instructions": [
                "CONDITION false 0xc2_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xc2_r0",
            "instructions": [
                "JUMP 0xa8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xc3",
            "instructions": [
                "NOP",
                "JUMP 0xc4"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xc4",
            "instructions": [
                "i = 0",
                "JUMP 0xc5"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xc5",
            "instructions": [
                "NOP",
                "REF_2 = LENGTH ebs",
                "TMP_35 = i < REF_2",
                "CONDITION TMP_35 0xc6 0xc7"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xc6",
            "instructions": [
                "CLR_63 = ebs[i]",
                "REF_3 = CLR_63",
                "TMP_36 = REF_3 == proto",
                "CONDITION TMP_36 0xc8 0xc9"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xc7",
            "instructions": [
                "NOP",
                "JUMP 0xca"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xca",
            "instructions": [
                "TMP_79 = false",
                "JUMP 0xcb"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xc8",
            "instructions": [
                "TMP_79 = true",
                "JUMP 0xcb"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xc9",
            "instructions": [
                "NOP",
                "JUMP 0xcc"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xcc",
            "instructions": [
                "TMP_37 = i",
                "i = i + 1",
                "JUMP 0xc5"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xcb",
            "instructions": [
                "TMP_79 = i",
                "JUMP 0xcd"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xb2",
            "instructions": [
                "NOP",
                "NOP",
                "proto = proto",
                "JUMP 0xc3"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xcd",
            "instructions": [
                "TUPLE_1 = TMP_79",
                "JUMP 0xb3"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xa0",
            "instructions": [
                "TMP_62 = loopStart + i",
                "x = TMP_62",
                "CLR_64 = sdl.protos",
                "REF_18 = CLR_64",
                "CLR_65 = REF_18[i]",
                "REF_19 = CLR_65",
                "CLR_66 = sdl.oldProtos",
                "REF_20 = CLR_66",
                "CLR_67 = REF_20[x]",
                "REF_21 = CLR_67",
                "proto = REF_21",
                "JUMP 0xa4"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xa8",
            "instructions": [
                "TMP_63 = TMP_78",
                "JUMP 0xce"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xcf",
            "instructions": [
                "NOP",
                "JUMP 0xd0"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xd0",
            "instructions": [
                "TMP_19 = purity \/ 1000",
                "TMP_20 = 4 - TMP_19",
                "TMP_21 = NEW_VAL unknown",
                "TMP_77 = TMP_21",
                "JUMP 0xd1"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xce",
            "instructions": [
                "REF_18[i] = TMP_63",
                "CLR_68 = sdl.qualities",
                "REF_22 = CLR_68",
                "CLR_69 = REF_22[i]",
                "REF_23 = CLR_69",
                "CLR_70 = sdl.purities",
                "REF_24 = CLR_70",
                "CLR_71 = REF_24[x]",
                "REF_25 = CLR_71",
                "purity = REF_25",
                "JUMP 0xcf"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xd1",
            "instructions": [
                "TMP_64 = TMP_77",
                "JUMP 0xa3"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x94",
            "instructions": [
                "CLR_72 = ids[i]",
                "REF_8 = CLR_72",
                "pack = pack",
                "id = REF_8",
                "JUMP 0x96"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x99",
            "instructions": [
                "NOP",
                "NOP",
                "NOP",
                "NOP",
                "TUPLE_2 = NEW_COL unknown"
            ]
        },
        {
            "scope": "trap",
            "addr": "0x16",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}