{
    "0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407.sol": [
        {
            "attack_type": "DAO",
            "composed_functions": [
                "put",
                "put"
            ],
            "from_function": "put",
            "to_function": "put",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 62\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\"",
                        "\"BlockID: 29\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\"",
                        "\"BlockID: 29\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 61\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\"",
                        "\"BlockID: 30\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 61\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\"",
                        "\"BlockID: 31\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 65\nFunction: put\nNode: \nEXPRESSION orderBookSize += 1\nIRS: \norderBookSize = orderBookSize + 1\"",
                        "\"BlockID: 29\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\""
                    ],
                    "state_variable": "orderBookSize"
                },
                {
                    "path": [
                        "\"BlockID: 61\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\"",
                        "\"BlockID: 33\nFunction: put\nNode: \nEXPRESSION orderBookSize += 1\nIRS: \norderBookSize = orderBookSize + 1\""
                    ],
                    "state_variable": "orderBookSize"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "put",
                "put"
            ],
            "from_function": "put",
            "to_function": "put",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 72\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\"",
                        "\"BlockID: 29\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 73\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\"",
                        "\"BlockID: 29\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\"",
                        "\"BlockID: 30\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\"",
                        "\"BlockID: 31\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: put\nNode: \nEXPRESSION orderBookSize += 1\nIRS: \norderBookSize = orderBookSize + 1\"",
                        "\"BlockID: 29\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\""
                    ],
                    "state_variable": "orderBookSize"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\"",
                        "\"BlockID: 33\nFunction: put\nNode: \nEXPRESSION orderBookSize += 1\nIRS: \norderBookSize = orderBookSize + 1\""
                    ],
                    "state_variable": "orderBookSize"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "put",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "put",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 35\nFunction: buy\nNode: \nEXPRESSION require(bool)(msg.value >= orderBook[_id].price)\nIRS: \nTMP_29 = SOLIDITY_CALL require(bool)(TMP_28)\"",
                        "\"BlockID: 30\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: buy\nNode: \nEXPRESSION require(bool)(msg.value >= orderBook[_id].price)\nIRS: \nTMP_29 = SOLIDITY_CALL require(bool)(TMP_28)\"",
                        "\"BlockID: 31\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: buy\nNode: \nEXPRESSION require(bool)(msg.sender != orderBook[_id].owner)\nIRS: \nTMP_31 = SOLIDITY_CALL require(bool)(TMP_30)\"",
                        "\"BlockID: 30\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: buy\nNode: \nEXPRESSION require(bool)(msg.sender != orderBook[_id].owner)\nIRS: \nTMP_31 = SOLIDITY_CALL require(bool)(TMP_30)\"",
                        "\"BlockID: 31\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\""
                    ],
                    "state_variable": "orderBook"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "put",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "put",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 35\nFunction: buy\nNode: \nEXPRESSION require(bool)(msg.value >= orderBook[_id].price)\nIRS: \nTMP_29 = SOLIDITY_CALL require(bool)(TMP_28)\"",
                        "\"BlockID: 30\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: buy\nNode: \nEXPRESSION require(bool)(msg.value >= orderBook[_id].price)\nIRS: \nTMP_29 = SOLIDITY_CALL require(bool)(TMP_28)\"",
                        "\"BlockID: 31\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: buy\nNode: \nEXPRESSION require(bool)(msg.sender != orderBook[_id].owner)\nIRS: \nTMP_31 = SOLIDITY_CALL require(bool)(TMP_30)\"",
                        "\"BlockID: 30\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: buy\nNode: \nEXPRESSION require(bool)(msg.sender != orderBook[_id].owner)\nIRS: \nTMP_31 = SOLIDITY_CALL require(bool)(TMP_30)\"",
                        "\"BlockID: 31\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\""
                    ],
                    "state_variable": "orderBook"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "put",
                "revoke"
            ],
            "from_function": "revoke",
            "to_function": "put",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 50\nFunction: revoke\nNode: \nEXPRESSION orderBook[_id] = orderBook[orderBookSize - 1]\nIRS: \nREF_64 := REF_65\"",
                        "\"BlockID: 29\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: revoke\nNode: \nEXPRESSION require(bool)(msg.sender == orderBook[_id].owner)\nIRS: \nTMP_49 = SOLIDITY_CALL require(bool)(TMP_48)\"",
                        "\"BlockID: 30\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: revoke\nNode: \nEXPRESSION require(bool)(msg.sender == orderBook[_id].owner)\nIRS: \nTMP_49 = SOLIDITY_CALL require(bool)(TMP_48)\"",
                        "\"BlockID: 31\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: revoke\nNode: \nEXPRESSION require(bool)(orderBook[_id].endTime <= now)\nIRS: \nTMP_51 = SOLIDITY_CALL require(bool)(TMP_50)\"",
                        "\"BlockID: 30\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: revoke\nNode: \nEXPRESSION require(bool)(orderBook[_id].endTime <= now)\nIRS: \nTMP_51 = SOLIDITY_CALL require(bool)(TMP_50)\"",
                        "\"BlockID: 31\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: revoke\nNode: \nEXPRESSION issuer.transfer(msg.sender,orderBook[_id].tokenId)\nIRS: \nHIGH_LEVEL_CALL, dest:issuer(Issuer), function:transfer, arguments:['msg.sender', 'REF_63']  \"",
                        "\"BlockID: 30\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: revoke\nNode: \nEXPRESSION issuer.transfer(msg.sender,orderBook[_id].tokenId)\nIRS: \nHIGH_LEVEL_CALL, dest:issuer(Issuer), function:transfer, arguments:['msg.sender', 'REF_63']  \"",
                        "\"BlockID: 31\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 51\nFunction: revoke\nNode: \nEXPRESSION orderBookSize -= 1\nIRS: \norderBookSize = orderBookSize - 1\"",
                        "\"BlockID: 29\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\""
                    ],
                    "state_variable": "orderBookSize"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "put",
                "revoke"
            ],
            "from_function": "revoke",
            "to_function": "put",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 50\nFunction: revoke\nNode: \nEXPRESSION orderBook[_id] = orderBook[orderBookSize - 1]\nIRS: \nREF_64 := REF_65\"",
                        "\"BlockID: 29\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: revoke\nNode: \nEXPRESSION require(bool)(msg.sender == orderBook[_id].owner)\nIRS: \nTMP_49 = SOLIDITY_CALL require(bool)(TMP_48)\"",
                        "\"BlockID: 30\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: revoke\nNode: \nEXPRESSION require(bool)(msg.sender == orderBook[_id].owner)\nIRS: \nTMP_49 = SOLIDITY_CALL require(bool)(TMP_48)\"",
                        "\"BlockID: 31\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: revoke\nNode: \nEXPRESSION require(bool)(orderBook[_id].endTime <= now)\nIRS: \nTMP_51 = SOLIDITY_CALL require(bool)(TMP_50)\"",
                        "\"BlockID: 30\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 48\nFunction: revoke\nNode: \nEXPRESSION require(bool)(orderBook[_id].endTime <= now)\nIRS: \nTMP_51 = SOLIDITY_CALL require(bool)(TMP_50)\"",
                        "\"BlockID: 31\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: revoke\nNode: \nEXPRESSION issuer.transfer(msg.sender,orderBook[_id].tokenId)\nIRS: \nHIGH_LEVEL_CALL, dest:issuer(Issuer), function:transfer, arguments:['msg.sender', 'REF_63']  \"",
                        "\"BlockID: 30\nFunction: put\nNode: \nEXPRESSION orderBook.push(Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime))\nIRS: \nPUSH TMP_25 in orderBook\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: revoke\nNode: \nEXPRESSION issuer.transfer(msg.sender,orderBook[_id].tokenId)\nIRS: \nHIGH_LEVEL_CALL, dest:issuer(Issuer), function:transfer, arguments:['msg.sender', 'REF_63']  \"",
                        "\"BlockID: 31\nFunction: put\nNode: \nEXPRESSION orderBook[orderBookSize] = Order(msg.sender,msg.sender,_issuer,_tokenId,_price,_startTime,_endTime)\nIRS: \nREF_25 := TMP_27\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 51\nFunction: revoke\nNode: \nEXPRESSION orderBookSize -= 1\nIRS: \norderBookSize = orderBookSize - 1\"",
                        "\"BlockID: 29\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\""
                    ],
                    "state_variable": "orderBookSize"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "revoke",
                "put"
            ],
            "from_function": "put",
            "to_function": "revoke",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 29\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\"",
                        "\"BlockID: 50\nFunction: revoke\nNode: \nEXPRESSION orderBook[_id] = orderBook[orderBookSize - 1]\nIRS: \nREF_64 := REF_65\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 29\nFunction: put\nNode: \nIF orderBookSize == orderBook.length\nIRS: \nCONDITION TMP_24\"",
                        "\"BlockID: 51\nFunction: revoke\nNode: \nEXPRESSION orderBookSize -= 1\nIRS: \norderBookSize = orderBookSize - 1\""
                    ],
                    "state_variable": "orderBookSize"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "revoke",
                "buy"
            ],
            "from_function": "buy",
            "to_function": "revoke",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 35\nFunction: buy\nNode: \nEXPRESSION require(bool)(msg.value >= orderBook[_id].price)\nIRS: \nTMP_29 = SOLIDITY_CALL require(bool)(TMP_28)\"",
                        "\"BlockID: 50\nFunction: revoke\nNode: \nEXPRESSION orderBook[_id] = orderBook[orderBookSize - 1]\nIRS: \nREF_64 := REF_65\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: buy\nNode: \nEXPRESSION require(bool)(msg.sender != orderBook[_id].owner)\nIRS: \nTMP_31 = SOLIDITY_CALL require(bool)(TMP_30)\"",
                        "\"BlockID: 50\nFunction: revoke\nNode: \nEXPRESSION orderBook[_id] = orderBook[orderBookSize - 1]\nIRS: \nREF_64 := REF_65\""
                    ],
                    "state_variable": "orderBook"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "revoke",
                "revoke"
            ],
            "from_function": "revoke",
            "to_function": "revoke",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 77\nFunction: revoke\nNode: \nEXPRESSION require(bool)(msg.sender == orderBook[_id].owner)\nIRS: \nTMP_49 = SOLIDITY_CALL require(bool)(TMP_48)\"",
                        "\"BlockID: 50\nFunction: revoke\nNode: \nEXPRESSION orderBook[_id] = orderBook[orderBookSize - 1]\nIRS: \nREF_64 := REF_65\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 78\nFunction: revoke\nNode: \nEXPRESSION require(bool)(orderBook[_id].endTime <= now)\nIRS: \nTMP_51 = SOLIDITY_CALL require(bool)(TMP_50)\"",
                        "\"BlockID: 50\nFunction: revoke\nNode: \nEXPRESSION orderBook[_id] = orderBook[orderBookSize - 1]\nIRS: \nREF_64 := REF_65\""
                    ],
                    "state_variable": "orderBook"
                },
                {
                    "path": [
                        "\"BlockID: 79\nFunction: revoke\nNode: \nEXPRESSION issuer.transfer(msg.sender,orderBook[_id].tokenId)\nIRS: \nHIGH_LEVEL_CALL, dest:issuer(Issuer), function:transfer, arguments:['msg.sender', 'REF_63']  \"",
                        "\"BlockID: 50\nFunction: revoke\nNode: \nEXPRESSION orderBook[_id] = orderBook[orderBookSize - 1]\nIRS: \nREF_64 := REF_65\""
                    ],
                    "state_variable": "orderBook"
                }
            ]
        }
    ]
}