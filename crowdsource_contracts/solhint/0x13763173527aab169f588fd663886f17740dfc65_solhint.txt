./0x13763173527aab169f588fd663886f17740dfc65.sol:4:2: Line length must be no more than 120 but current length is 131. [Error/max-line-length]
./0x13763173527aab169f588fd663886f17740dfc65.sol:18:2: Line length must be no more than 120 but current length is 135. [Error/max-line-length]
./0x13763173527aab169f588fd663886f17740dfc65.sol:75:1: Found more than One contract per file. 2 contracts found! [Warning/one-contract-per-file]
./0x13763173527aab169f588fd663886f17740dfc65.sol:78:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:78:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:79:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:79:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:80:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:80:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:81:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:81:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:82:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:82:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:83:5: Function order is incorrect, external  function can not go after external view function (line 82) [Warning/ordering]
./0x13763173527aab169f588fd663886f17740dfc65.sol:83:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:83:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:84:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:84:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:85:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:85:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:86:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:86:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:87:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x13763173527aab169f588fd663886f17740dfc65.sol:88:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x13763173527aab169f588fd663886f17740dfc65.sol:92:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:95:2: Line length must be no more than 120 but current length is 159. [Error/max-line-length]
./0x13763173527aab169f588fd663886f17740dfc65.sol:95:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:95:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x13763173527aab169f588fd663886f17740dfc65.sol:95:80: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x13763173527aab169f588fd663886f17740dfc65.sol:95:136: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x13763173527aab169f588fd663886f17740dfc65.sol:96:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x13763173527aab169f588fd663886f17740dfc65.sol:96:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:96:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:97:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:97:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:98:2: Line length must be no more than 120 but current length is 212. [Error/max-line-length]
./0x13763173527aab169f588fd663886f17740dfc65.sol:98:5: Function order is incorrect, external payable function can not go after external pure function (line 97) [Warning/ordering]
./0x13763173527aab169f588fd663886f17740dfc65.sol:98:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:98:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x13763173527aab169f588fd663886f17740dfc65.sol:98:70: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x13763173527aab169f588fd663886f17740dfc65.sol:98:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x13763173527aab169f588fd663886f17740dfc65.sol:98:122: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x13763173527aab169f588fd663886f17740dfc65.sol:98:163: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x13763173527aab169f588fd663886f17740dfc65.sol:98:181: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x13763173527aab169f588fd663886f17740dfc65.sol:98:197: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x13763173527aab169f588fd663886f17740dfc65.sol:103:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x13763173527aab169f588fd663886f17740dfc65.sol:106:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 103) [Warning/ordering]
./0x13763173527aab169f588fd663886f17740dfc65.sol:107:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:110:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:110:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:113:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:117:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:121:5: GC: [_owner] on Event [OwnershipTransferred] could be Indexed [Warning/gas-indexed-events]
./0x13763173527aab169f588fd663886f17740dfc65.sol:124:1: Contract has 28 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x13763173527aab169f588fd663886f17740dfc65.sol:125:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x13763173527aab169f588fd663886f17740dfc65.sol:126:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x13763173527aab169f588fd663886f17740dfc65.sol:127:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x13763173527aab169f588fd663886f17740dfc65.sol:128:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x13763173527aab169f588fd663886f17740dfc65.sol:130:5: 'antiSnipeTax1' should start with _ [Warning/private-vars-leading-underscore]
./0x13763173527aab169f588fd663886f17740dfc65.sol:131:5: 'antiSnipeTax2' should start with _ [Warning/private-vars-leading-underscore]
./0x13763173527aab169f588fd663886f17740dfc65.sol:132:5: 'antiSnipeBlocks1' should start with _ [Warning/private-vars-leading-underscore]
./0x13763173527aab169f588fd663886f17740dfc65.sol:133:5: 'antiSnipeBlocks2' should start with _ [Warning/private-vars-leading-underscore]
./0x13763173527aab169f588fd663886f17740dfc65.sol:153:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x13763173527aab169f588fd663886f17740dfc65.sol:153:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x13763173527aab169f588fd663886f17740dfc65.sol:154:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x13763173527aab169f588fd663886f17740dfc65.sol:155:5: Main key parameter in mapping _noFees is not named [Warning/named-parameters-mapping]
./0x13763173527aab169f588fd663886f17740dfc65.sol:155:5: Value parameter in mapping _noFees is not named [Warning/named-parameters-mapping]
./0x13763173527aab169f588fd663886f17740dfc65.sol:156:5: Main key parameter in mapping _noLimits is not named [Warning/named-parameters-mapping]
./0x13763173527aab169f588fd663886f17740dfc65.sol:156:5: Value parameter in mapping _noLimits is not named [Warning/named-parameters-mapping]
./0x13763173527aab169f588fd663886f17740dfc65.sol:160:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x13763173527aab169f588fd663886f17740dfc65.sol:163:5: Main key parameter in mapping _isLP is not named [Warning/named-parameters-mapping]
./0x13763173527aab169f588fd663886f17740dfc65.sol:163:5: Value parameter in mapping _isLP is not named [Warning/named-parameters-mapping]
./0x13763173527aab169f588fd663886f17740dfc65.sol:174:5: Function order is incorrect, event definition can not go after modifier definition (line 168) [Warning/ordering]
./0x13763173527aab169f588fd663886f17740dfc65.sol:174:5: GC: [totalWallets] on Event [TokensAirdropped] could be Indexed [Warning/gas-indexed-events]
./0x13763173527aab169f588fd663886f17740dfc65.sol:174:5: GC: [totalTokens] on Event [TokensAirdropped] could be Indexed [Warning/gas-indexed-events]
./0x13763173527aab169f588fd663886f17740dfc65.sol:175:5: GC: [tokenAmount] on Event [TokensBurned] could be Indexed [Warning/gas-indexed-events]
./0x13763173527aab169f588fd663886f17740dfc65.sol:177:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x13763173527aab169f588fd663886f17740dfc65.sol:200:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:202:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:202:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:203:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:203:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:204:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:204:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:205:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:205:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:206:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:206:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:207:2: Line length must be no more than 120 but current length is 137. [Error/max-line-length]
./0x13763173527aab169f588fd663886f17740dfc65.sol:207:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:207:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:209:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:209:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:215:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:215:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:216:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:220:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:220:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:221:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:235:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:235:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:236:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:237:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:238:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:239:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:240:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x13763173527aab169f588fd663886f17740dfc65.sol:243:32: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./0x13763173527aab169f588fd663886f17740dfc65.sol:244:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:253:2: Line length must be no more than 120 but current length is 138. [Error/max-line-length]
./0x13763173527aab169f588fd663886f17740dfc65.sol:253:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x13763173527aab169f588fd663886f17740dfc65.sol:253:121: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x13763173527aab169f588fd663886f17740dfc65.sol:263:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:264:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:265:30: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:268:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:279:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:283:2: Line length must be no more than 120 but current length is 133. [Error/max-line-length]
./0x13763173527aab169f588fd663886f17740dfc65.sol:288:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:296:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:302:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x13763173527aab169f588fd663886f17740dfc65.sol:304:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x13763173527aab169f588fd663886f17740dfc65.sol:306:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x13763173527aab169f588fd663886f17740dfc65.sol:317:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:317:5: Function exemptFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:317:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:320:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:320:5: Function exemptFromLimits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:320:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:323:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:323:5: Function setExempt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:324:35: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:329:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:329:5: Function buyFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:329:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:332:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:332:5: Function sellFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:332:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:336:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:336:5: Function feeSplit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:336:86: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x13763173527aab169f588fd663886f17740dfc65.sol:339:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:339:5: Function setFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:340:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:340:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x13763173527aab169f588fd663886f17740dfc65.sol:344:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:344:5: Function setFeeSplit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:346:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:353:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:353:5: Function marketingWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:353:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:356:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:356:5: Function developmentWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:356:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:360:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:360:68: Function param name must be in mixedCase [Warning/func-param-name-mixedcase]
./0x13763173527aab169f588fd663886f17740dfc65.sol:360:5: Function updateWallets() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:360:68: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x13763173527aab169f588fd663886f17740dfc65.sol:361:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:374:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:374:5: Function maxWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:374:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:377:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:377:5: Function maxTransaction() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:377:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:381:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:381:5: Function swapAtMin() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:381:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:384:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:384:5: Function swapAtMax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:384:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x13763173527aab169f588fd663886f17740dfc65.sol:388:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:388:5: Function setLimits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:390:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:390:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x13763173527aab169f588fd663886f17740dfc65.sol:393:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:393:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x13763173527aab169f588fd663886f17740dfc65.sol:397:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:397:5: Function setTaxSwap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:400:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:400:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x13763173527aab169f588fd663886f17740dfc65.sol:401:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:402:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:415:14: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x13763173527aab169f588fd663886f17740dfc65.sol:416:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x13763173527aab169f588fd663886f17740dfc65.sol:442:2: Line length must be no more than 120 but current length is 128. [Error/max-line-length]
./0x13763173527aab169f588fd663886f17740dfc65.sol:442:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x13763173527aab169f588fd663886f17740dfc65.sol:442:112: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x13763173527aab169f588fd663886f17740dfc65.sol:455:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:455:5: Function manualTaxSwapAndSend() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:456:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:456:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x13763173527aab169f588fd663886f17740dfc65.sol:463:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:468:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:468:5: Function airdrop() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:469:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:469:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x13763173527aab169f588fd663886f17740dfc65.sol:470:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x13763173527aab169f588fd663886f17740dfc65.sol:470:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x13763173527aab169f588fd663886f17740dfc65.sol:470:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:473:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x13763173527aab169f588fd663886f17740dfc65.sol:473:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x13763173527aab169f588fd663886f17740dfc65.sol:473:45: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x13763173527aab169f588fd663886f17740dfc65.sol:476:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x13763173527aab169f588fd663886f17740dfc65.sol:476:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x13763173527aab169f588fd663886f17740dfc65.sol:476:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:476:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x13763173527aab169f588fd663886f17740dfc65.sol:478:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x13763173527aab169f588fd663886f17740dfc65.sol:478:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x13763173527aab169f588fd663886f17740dfc65.sol:478:45: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x13763173527aab169f588fd663886f17740dfc65.sol:487:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x13763173527aab169f588fd663886f17740dfc65.sol:487:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x13763173527aab169f588fd663886f17740dfc65.sol:489:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x13763173527aab169f588fd663886f17740dfc65.sol:489:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]

213 problem/s (9 error/s, 204 warning/s)
