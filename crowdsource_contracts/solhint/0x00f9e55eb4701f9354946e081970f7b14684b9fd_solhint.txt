./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:12:1: Found more than One contract per file. 5 contracts found! [Warning/one-contract-per-file]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:21:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:21:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:26:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:26:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:35:5: Function order is incorrect, external  function can not go after external view function (line 26) [Warning/ordering]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:35:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:35:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:44:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:44:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:49:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:49:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:54:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:54:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:66:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:72:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:84:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:84:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:89:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:89:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:94:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:94:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:101:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:105:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:114:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:114:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:116:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:126:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:134:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:134:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:142:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:142:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:149:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:149:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:156:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:156:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:163:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:163:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:175:5: Function order is incorrect, public  function can not go after public view function (line 163) [Warning/ordering]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:175:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:175:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:183:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:183:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:194:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:194:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:212:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:212:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:220:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:220:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:220:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:220:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:231:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:231:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:231:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:239:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:239:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:239:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:241:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:241:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:241:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:241:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:257:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:257:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:257:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:258:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:258:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:258:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:263:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:263:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:263:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:263:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:284:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:307:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:307:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:307:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:312:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:312:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:312:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:312:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:341:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:341:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:341:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:342:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:342:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:342:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:366:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:386:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:409:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:409:19: Code contains empty blocks [Warning/no-empty-blocks]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:415:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:415:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:422:5: Function order is incorrect, modifier definition can not go after public view function (line 415) [Warning/ordering]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:423:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:434:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:442:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:443:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:443:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:443:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:461:5: GC: [account] on Event [Paused] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:466:5: GC: [account] on Event [Unpaused] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:468:5: Function order is incorrect, state variable declaration can not go after event definition (line 466) [Warning/ordering]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:473:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:480:5: Function paused() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:480:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:492:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:504:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:534:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:534:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:535:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:535:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:537:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:537:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:538:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:538:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:539:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:539:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:540:5: Function order is incorrect, external view function can not go after external pure function (line 539) [Warning/ordering]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:540:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:540:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:540:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:541:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:541:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:541:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:542:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:542:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:542:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:544:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:544:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:544:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:545:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:545:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:545:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:546:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:546:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:546:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:548:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:548:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:548:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:549:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:549:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:549:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:550:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:550:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:550:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:552:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:552:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:552:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:554:5: GC: [amount0] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:554:5: GC: [amount1] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:554:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:554:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:555:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:555:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:555:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:555:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:556:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:556:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:556:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:556:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:558:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:559:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:560:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:561:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:564:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:564:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:566:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:566:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:566:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:566:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:567:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:567:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:568:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:568:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:569:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:569:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:570:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:571:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:571:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:571:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:572:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:572:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:572:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:573:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:573:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:573:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:575:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:575:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:576:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:576:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:576:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:577:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:577:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:577:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:578:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:579:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:581:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:585:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:585:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:585:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:587:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:587:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:588:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:588:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:590:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:591:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:591:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:592:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:592:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:592:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:594:5: Function order is incorrect, external  function can not go after external view function (line 592) [Warning/ordering]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:594:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:596:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:597:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:601:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:601:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:602:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:602:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:602:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:604:5: Function order is incorrect, external  function can not go after external pure function (line 602) [Warning/ordering]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:604:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:607:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:608:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:609:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:610:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:612:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:613:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:613:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:613:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:614:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:616:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:617:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:618:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:620:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:621:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:621:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:621:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:622:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:625:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:626:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:627:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:629:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:630:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:630:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:631:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:633:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:634:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:635:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:637:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:638:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:638:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:639:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:642:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:643:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:644:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:646:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:648:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:648:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:649:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:651:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:652:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:653:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:655:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:657:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:657:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:658:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:659:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:660:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:663:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:664:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:665:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:666:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:667:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:670:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:671:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:672:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:672:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:672:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:675:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:676:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:676:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:676:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:676:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:678:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:679:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:679:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:679:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:679:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:681:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:682:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:682:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:682:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:685:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:687:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:687:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:687:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:687:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:687:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:688:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:688:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:688:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:688:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:688:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:689:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:689:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:689:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:689:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:689:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:690:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:690:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:690:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:691:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:691:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:691:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:695:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:697:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:698:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:699:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:701:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:702:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:703:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:705:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:706:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:707:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:709:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:711:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:713:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:714:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:715:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:718:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:720:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:721:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:724:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:726:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:727:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:728:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:731:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:735:1: Contract has 21 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:739:5: 'initialSupply' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:741:5: 'denominator' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:743:5: 'swapThreshold' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:745:5: 'devTaxBuy' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:746:5: 'liquidityTaxBuy' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:749:5: 'devTaxSell' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:750:5: 'liquidityTaxSell' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:753:5: 'devTaxWallet' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:754:5: 'liquidityTaxWallet' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:759:5: Main key parameter in mapping blacklist is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:759:5: Value parameter in mapping blacklist is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:759:5: 'blacklist' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:760:5: Main key parameter in mapping excludeList is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:760:5: Value parameter in mapping excludeList is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:760:5: 'excludeList' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:763:5: Main key parameter in mapping buyTaxes is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:763:5: Value parameter in mapping buyTaxes is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:763:5: 'buyTaxes' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:764:5: Main key parameter in mapping sellTaxes is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:764:5: Value parameter in mapping sellTaxes is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:764:5: 'sellTaxes' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:765:5: Main key parameter in mapping taxWallets is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:765:5: Value parameter in mapping taxWallets is not named [Warning/named-parameters-mapping]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:765:5: 'taxWallets' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:769:5: 'uniswapV2Router02' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:770:5: 'uniswapV2Factory' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:771:5: 'uniswapV2Pair' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:773:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:773:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:792:5: Function order is incorrect, state variable declaration can not go after constructor/initializer (line 773) [Warning/ordering]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:792:5: 'devTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:793:5: 'liquidityTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:797:2: Line length must be no more than 120 but current length is 136. [Error/max-line-length]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:799:5: Function body contains 110 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:799:5: 'handleTax' should start with _ [Warning/private-vars-leading-underscore]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:799:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:799:5: Function has cyclomatic complexity 11 but allowed no more than 7 [Warning/code-complexity]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:841:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:848:21: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:853:25: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:867:21: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:873:25: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:884:20: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:889:25: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:904:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:904:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:917:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:917:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:917:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:918:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:919:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:920:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:920:32: Avoid to use tx.origin [Warning/avoid-tx-origin]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:932:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:932:5: Function triggerTax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:939:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:939:5: Function pause() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:940:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:940:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:940:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:947:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:947:5: Function unpause() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:948:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:956:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:956:5: Function setMaxWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:957:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:964:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:964:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:971:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:971:5: Function enableBlacklist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:972:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:972:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:972:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:979:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:979:5: Function disableBlacklist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:980:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:980:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:980:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:987:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:987:5: Function exclude() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:988:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:988:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:988:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:995:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:995:5: Function removeExclude() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:996:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1003:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1003:5: Function setBuyTax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1012:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1012:5: Function setSellTax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1022:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1022:5: Function setTaxWallets() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1027:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1027:5: Function claimStuckTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1041:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1041:5: Function enableTax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1042:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1049:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1049:5: Function disableTax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1050:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1057:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1057:5: Function isBlacklisted() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1057:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1064:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1064:5: Function isExcluded() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1064:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00f9e55eb4701f9354946e081970f7b14684b9fd.sol:1068:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]

444 problem/s (2 error/s, 442 warning/s)
