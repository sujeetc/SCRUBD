./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:1:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:1:1: Compiler version ^0.4.18 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:11:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:11:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:11:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:15:9: Provide an error message for require [Warning/reason-string]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:15:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:19:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:19:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:19:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:21:9: Provide an error message for require [Warning/reason-string]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:21:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:27:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:27:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:27:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:31:9: Provide an error message for require [Warning/reason-string]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:35:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:35:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:35:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:37:9: Provide an error message for require [Warning/reason-string]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:57:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:57:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:57:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:57:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:59:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:59:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:59:69: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:61:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:61:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:61:86: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:63:5: Function order is incorrect, public  function can not go after public constant function (line 61) [Warning/ordering]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:63:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:63:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:63:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:65:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:65:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:65:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:67:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:67:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:67:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:70:5: GC: [tokens] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:70:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:72:5: GC: [tokens] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:72:73: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:88:5: Constructor keyword not available before 0.4.22 (^0.4.18) [Warning/constructor-syntax]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:88:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:95:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 88) [Warning/ordering]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:97:9: Provide an error message for require [Warning/reason-string]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:126:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:126:5: '_totalSupply' should not start with _ [Warning/private-vars-leading-underscore]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:128:5: Main key parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:128:5: Value parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:128:5: Explicitly mark visibility of state [Warning/state-visibility]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:128:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:128:5: 'balances' should start with _ [Warning/private-vars-leading-underscore]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:130:5: Main key parameter in mapping allowed is not named [Warning/named-parameters-mapping]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:130:5: Explicitly mark visibility of state [Warning/state-visibility]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:130:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:130:5: 'allowed' should start with _ [Warning/private-vars-leading-underscore]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:140:5: Constructor keyword not available before 0.4.22 (^0.4.18) [Warning/constructor-syntax]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:140:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:148:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:156:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:156:5: Function freeze() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:156:33: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:160:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:160:5: Function unfreeze() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:160:35: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:171:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:171:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:171:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:171:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:185:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:185:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:185:69: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:203:5: Function order is incorrect, public  function can not go after public constant function (line 185) [Warning/ordering]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:203:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:203:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:203:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:205:9: Provide an error message for require [Warning/reason-string]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:235:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:235:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:235:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:265:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:265:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:265:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:267:9: Provide an error message for require [Warning/reason-string]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:291:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:291:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:291:86: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:300:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:300:5: Function withdraw() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:302:16: Check result of "send" call [Warning/check-send-result]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:312:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:312:5: Function transferAnyERC20Token() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xad93be20a1781d9976b87c5bda2be64b2ebc132d.sol:312:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

96 problem/s (1 error/s, 95 warning/s)
