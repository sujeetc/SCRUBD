./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:1:1: Found more than One contract per file. 7 contracts found! [Warning/one-contract-per-file]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:1:1: Compiler version ^0.4.23 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:14:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:15:5: Function addressOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:19:5: 'registry' should start with _ [Warning/private-vars-leading-underscore]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:22:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:26:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:29:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:33:5: 'addressOf' should start with _ [Warning/private-vars-leading-underscore]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:41:5: Function order is incorrect, public view function can not go after internal view function (line 33) [Warning/ordering]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:41:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:41:5: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:49:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:49:5: Function getRegistry() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:79:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:81:5: Function order is incorrect, struct definition can not go after state variable declaration (line 79) [Warning/ordering]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:82:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:86:5: Main key parameter in mapping entries is not named [Warning/named-parameters-mapping]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:86:5: Value parameter in mapping entries is not named [Warning/named-parameters-mapping]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:89:28: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:92:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:103:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:103:5: Function add() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:103:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:105:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:121:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:121:5: Function subtract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:121:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:123:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:124:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:129:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:132:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:152:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:152:5: Function size() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:155:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:161:13: GC: For [ _size ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:166:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:166:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:169:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:174:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:174:5: Function balances() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:177:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:180:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:182:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:183:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:189:13: GC: For [ _i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:215:5: Main key parameter in mapping entries is not named [Warning/named-parameters-mapping]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:215:5: Value parameter in mapping entries is not named [Warning/named-parameters-mapping]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:218:28: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:221:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:232:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:232:5: Function add() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:234:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:248:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:255:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:255:5: Function remove() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:257:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:281:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:281:5: Function size() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:284:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:290:13: GC: For [ _size ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:295:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:295:5: Function has() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:303:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:303:5: Function addresses() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:309:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:312:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:317:13: GC: For [ _i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:331:1: Function order is incorrect, interface can not go after contract definition (line 208) [Warning/ordering]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:332:5: Function issueDividend() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:332:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:333:5: Function profitsSendable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:333:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:339:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:341:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:344:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 339) [Warning/ordering]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:345:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:349:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:349:5: Function getTreasury() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:349:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:387:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:391:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:396:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:400:5: Function order is incorrect, event definition can not go after modifier definition (line 395) [Warning/ordering]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:400:5: GC: [time] on Event [BankrollAdded] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:400:5: GC: [amount] on Event [BankrollAdded] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:400:5: GC: [bankroll] on Event [BankrollAdded] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:400:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:400:64: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:400:77: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:401:5: GC: [time] on Event [BankrollRemoved] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:401:5: GC: [amount] on Event [BankrollRemoved] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:401:5: GC: [bankroll] on Event [BankrollRemoved] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:401:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:401:66: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:401:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:402:5: GC: [time] on Event [ProfitsSent] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:402:5: GC: [amount] on Event [ProfitsSent] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:402:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:402:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:403:5: GC: [time] on Event [AddedToWhitelist] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:403:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:404:5: GC: [time] on Event [RemovedFromWhitelist] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:404:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:407:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:409:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:420:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:420:5: Function addToWhitelist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:422:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:425:44: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:428:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:428:5: Function removeFromWhitelist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:430:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:433:51: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:441:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:444:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:444:5: Function addBankroll() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:448:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:451:28: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:455:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:455:5: Function removeBankroll() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:455:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:457:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:461:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:462:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:463:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:472:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:472:17: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:472:17: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:473:30: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:478:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:478:5: Function sendProfits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:480:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:482:9: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:483:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:484:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:488:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:488:17: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:488:17: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:489:26: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:498:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:498:5: Function getCollateral() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:501:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:504:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:504:5: Function getWhitelistOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:510:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:510:5: Function profits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:513:18: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:515:24: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:515:9: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:516:26: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:516:9: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:521:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:521:5: Function profitsTotal() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:524:18: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:533:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:533:5: Function bankrollAvailable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:536:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:538:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:539:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:540:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:542:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:549:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:549:5: Function bankrolledBy() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:552:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:557:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:557:5: Function bankrollerTable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:557:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:557:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:560:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:579:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:581:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:584:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 579) [Warning/ordering]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:585:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:589:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:589:5: Function getAdmin() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:634:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:635:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:636:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:637:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:657:5: Main key parameter in mapping users is not named [Warning/named-parameters-mapping]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:657:5: Value parameter in mapping users is not named [Warning/named-parameters-mapping]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:658:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:658:5: 'stats' should start with _ [Warning/private-vars-leading-underscore]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:659:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:659:5: 'settings' should start with _ [Warning/private-vars-leading-underscore]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:660:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:663:5: GC: [time] on Event [Created] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:663:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:664:5: GC: [time] on Event [SettingsChanged] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:664:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:667:5: GC: [time] on Event [RollWagered] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:667:5: GC: [bet] on Event [RollWagered] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:667:5: GC: [number] on Event [RollWagered] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:667:5: GC: [payout] on Event [RollWagered] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:667:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:667:75: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:667:99: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:668:5: GC: [time] on Event [RollRefunded] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:668:5: GC: [bet] on Event [RollRefunded] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:668:5: GC: [number] on Event [RollRefunded] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:668:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:668:69: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:669:5: GC: [time] on Event [RollFinalized] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:669:5: GC: [result] on Event [RollFinalized] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:669:5: GC: [payout] on Event [RollFinalized] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:669:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:669:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:670:5: GC: [time] on Event [PayoutError] could be Indexed [Warning/gas-indexed-events]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:670:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:672:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:675:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:689:22: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:698:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:698:5: Function changeSettings() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:708:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:708:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:709:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:709:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:710:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:710:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:711:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:711:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:712:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:712:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:718:30: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:743:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:743:5: Function roll() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:780:14: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:780:26: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:793:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:793:5: Function payoutPreviousRoll() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:801:18: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:801:30: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:806:30: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:852:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:869:26: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:871:13: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:871:21: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:871:21: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:875:14: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:875:28: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:880:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:883:9: Provide an error message for require [Warning/reason-string]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:883:17: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:883:17: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:884:14: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:884:27: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:894:5: Function order is incorrect, public view function can not go after private  function (line 880) [Warning/ordering]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:894:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:894:5: Function getCollateral() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:894:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:900:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:900:5: Function getWhitelistOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:908:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:908:5: Function curMaxBet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:908:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:910:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:910:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:915:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:915:5: Function effectiveMaxBet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:915:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:916:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:921:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:921:5: Function computePayout() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:921:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:921:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:926:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:927:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:928:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:929:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:935:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:935:5: Function computeResult() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:946:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:946:5: Function numUsers() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:946:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:949:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:949:5: Function numRolls() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:949:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:952:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:952:5: Function totalWagered() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:952:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:952:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:955:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:955:5: Function totalWon() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:955:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:955:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:961:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:961:5: Function minBet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:961:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:961:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:964:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:964:5: Function maxBet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:964:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:964:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:967:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:967:5: Function minNumber() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:967:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:970:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:970:5: Function maxNumber() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:970:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:973:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:973:5: Function feeBips() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04797c1ae852a31665d8e512ddae33e6044ef39d.sol:973:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]

304 problem/s (1 error/s, 303 warning/s)
