./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:1:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:1:1: Compiler version ^0.4.18 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:4:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:5:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:5:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:5:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:5:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:7:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:7:3: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:8:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:8:3: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:9:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:9:3: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:10:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:10:3: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:12:3: Function order is incorrect, public  function can not go after public view function (line 10) [Warning/ordering]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:12:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:12:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:12:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:13:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:13:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:13:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:14:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:14:57: Function param name must be in mixedCase [Warning/func-param-name-mixedcase]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:14:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:14:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:14:57: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:15:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:15:3: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:15:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:17:3: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:17:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:28:5: Constructor keyword not available before 0.4.22 (^0.4.18) [Warning/constructor-syntax]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:28:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:32:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 28) [Warning/ordering]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:32:28: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:36:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:36:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:37:9: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:45:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:45:5: Function acceptOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:59:29: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:61:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:61:5: Function setServerAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:69:5: Main key parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:69:5: Value parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:71:5: Main key parameter in mapping blockedBalances is not named [Warning/named-parameters-mapping]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:71:5: Value parameter in mapping blockedBalances is not named [Warning/named-parameters-mapping]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:73:5: Main key parameter in mapping walletBalances is not named [Warning/named-parameters-mapping]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:73:5: Value parameter in mapping walletBalances is not named [Warning/named-parameters-mapping]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:75:5: Main key parameter in mapping userIds is not named [Warning/named-parameters-mapping]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:75:5: Value parameter in mapping userIds is not named [Warning/named-parameters-mapping]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:80:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:80:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:80:5: 'serviceReward' should start with _ [Warning/private-vars-leading-underscore]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:82:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:82:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:82:5: 'sentBonuses' should start with _ [Warning/private-vars-leading-underscore]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:86:32: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:89:5: Function order is incorrect, event definition can not go after modifier definition (line 86) [Warning/ordering]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:89:5: GC: [_user] on Event [Withdraw] could be Indexed [Warning/gas-indexed-events]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:89:5: GC: [_amount] on Event [Withdraw] could be Indexed [Warning/gas-indexed-events]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:90:5: GC: [_user] on Event [Deposit] could be Indexed [Warning/gas-indexed-events]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:90:5: GC: [_amount] on Event [Deposit] could be Indexed [Warning/gas-indexed-events]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:92:5: Constructor keyword not available before 0.4.22 (^0.4.18) [Warning/constructor-syntax]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:92:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:96:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:96:5: Function setDispatcherAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:103:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:103:5: Function tokenFallback() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:103:60: Variable "_data" is unused [Warning/no-unused-vars]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:116:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:116:5: Function registerUserWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:117:9: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:118:9: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:130:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:130:5: Function sendTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:131:9: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:131:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:144:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:144:5: Function withdraw() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:147:13: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:147:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:149:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:153:13: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:153:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:155:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:164:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:164:5: Function systemWithdraw() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:166:9: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:166:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:169:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:177:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:177:5: Function addUserBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:184:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:184:5: Function spendUserBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:185:9: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:185:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:188:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:198:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:198:5: Function addBonus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:199:9: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:202:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:202:49: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:205:9: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:205:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:206:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:206:42: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:218:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:218:5: Function addServiceReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:218:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:225:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:225:5: Function serviceFeeWithdraw() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:226:9: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:228:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:231:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:231:5: Function viewSentBonuses() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:231:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:231:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:232:9: Provide an error message for require [Warning/reason-string]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:236:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:236:5: Function viewServiceReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:236:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:236:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x37e343f2cc245754595f1ae3656b460c35d636fb.sol:237:9: Provide an error message for require [Warning/reason-string]

125 problem/s (1 error/s, 124 warning/s)
