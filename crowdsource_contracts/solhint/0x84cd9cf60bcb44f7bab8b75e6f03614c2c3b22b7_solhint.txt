./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:1:1: Compiler version ^0.4.25 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:16:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:30:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:31:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:31:5: 'START_TIME' should start with _ [Warning/private-vars-leading-underscore]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:34:5: 'TECH' should start with _ [Warning/private-vars-leading-underscore]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:36:5: 'PROMO' should start with _ [Warning/private-vars-leading-underscore]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:38:5: 'LAST_FUND' should start with _ [Warning/private-vars-leading-underscore]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:40:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:41:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:42:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:43:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:44:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:45:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:48:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:51:5: Function order is incorrect, struct definition can not go after state variable declaration (line 48) [Warning/ordering]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:64:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:67:5: 'queue' should start with _ [Warning/private-vars-leading-underscore]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:68:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:69:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:72:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:72:5: 'startTime' should start with _ [Warning/private-vars-leading-underscore]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:73:5: Main key parameter in mapping depCount is not named [Warning/named-parameters-mapping]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:73:5: Value parameter in mapping depCount is not named [Warning/named-parameters-mapping]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:73:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:75:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:76:5: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:80:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:84:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:85:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:86:13: Provide an error message for require [Warning/reason-string]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:91:13: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:91:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:91:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:91:39: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:105:5: 'pay' should start with _ [Warning/private-vars-leading-underscore]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:107:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:113:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:113:62: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:117:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:118:17: Check result of "send" call [Warning/check-send-result]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:118:17: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:125:17: Check result of "send" call [Warning/check-send-result]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:125:17: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:130:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:134:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:137:5: 'addDeposit' should start with _ [Warning/private-vars-leading-underscore]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:137:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:138:9: Provide an error message for require [Warning/reason-string]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:146:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:147:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:147:40: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:152:9: GC: For [ depCount ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:155:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:157:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:158:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:162:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:164:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:165:9: Check result of "send" call [Warning/check-send-result]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:167:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:168:9: Check result of "send" call [Warning/check-send-result]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:168:9: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:169:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:170:9: Check result of "send" call [Warning/check-send-result]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:170:9: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:174:5: 'checkAndUpdateStage' should start with _ [Warning/private-vars-leading-underscore]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:175:9: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:177:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:177:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:177:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:184:5: 'proceedToNewStage' should start with _ [Warning/private-vars-leading-underscore]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:184:32: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:195:5: 'withdrawPrize' should start with _ [Warning/private-vars-leading-underscore]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:196:9: Provide an error message for require [Warning/reason-string]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:196:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:197:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:197:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:199:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:203:9: Check result of "send" call [Warning/check-send-result]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:209:5: 'push' should start with _ [Warning/private-vars-leading-underscore]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:209:38: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:209:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:212:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:218:9: GC: For [ currentQueueSize ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:223:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:223:5: Function getDeposit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:223:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:223:75: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:223:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:229:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:229:5: Function getDepositsCount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:229:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:229:71: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:230:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:231:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:233:17: GC: For [ c ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:239:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:239:5: Function getDeposits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:239:66: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:240:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:242:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:247:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:248:17: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:254:21: GC: For [ j ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:261:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:261:5: Function getQueueLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:261:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:261:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:265:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:265:5: Function getCurrentStageByTime() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:265:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:265:59: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:266:40: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:266:80: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:272:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:272:5: Function getStageStartTime() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:272:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:272:32: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:272:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:273:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:284:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:284:5: Function getStartTime() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:284:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:284:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

124 problem/s (2 error/s, 122 warning/s)
