./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:1:1: Compiler version ^0.4.17 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:7:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:7:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:12:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:12:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:21:5: Function order is incorrect, external  function can not go after external view function (line 12) [Warning/ordering]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:21:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:21:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:30:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:30:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:46:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:46:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:57:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:57:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:65:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:71:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:81:5: Main key parameter in mapping receivers is not named [Warning/named-parameters-mapping]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:81:5: Value parameter in mapping receivers is not named [Warning/named-parameters-mapping]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:83:5: Main key parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:83:5: Value parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:85:2: Explicitly mark visibility of state [Warning/state-visibility]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:85:2: 'amountToClaim' should start with _ [Warning/private-vars-leading-underscore]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:88:2: Explicitly mark visibility of state [Warning/state-visibility]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:89:2: Explicitly mark visibility of state [Warning/state-visibility]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:89:2: 'whoSent' should start with _ [Warning/private-vars-leading-underscore]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:90:2: Explicitly mark visibility of state [Warning/state-visibility]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:90:2: 'dappBalance' should start with _ [Warning/private-vars-leading-underscore]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:93:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:94:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:96:5: Explicitly mark visibility of state [Warning/state-visibility]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:96:5: 'currentToken' should start with _ [Warning/private-vars-leading-underscore]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:101:7: Provide an error message for require [Warning/reason-string]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:105:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:105:6: Function KlownGasDrop() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:111:2: Function order is incorrect, state variable declaration can not go after constructor/initializer (line 105) [Warning/ordering]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:111:2: Explicitly mark visibility of state [Warning/state-visibility]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:111:2: 'currentTokenAddress' should start with _ [Warning/private-vars-leading-underscore]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:115:7: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:115:7: Function deposit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:115:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:127:1: 'hasReceived' should start with _ [Warning/private-vars-leading-underscore]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:127:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:136:1: Explicitly mark visibility of state [Warning/state-visibility]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:136:1: 'temp' should start with _ [Warning/private-vars-leading-underscore]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:138:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:138:5: Function claimGasDrop() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:138:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:147:10: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:154:8: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:155:8: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:170:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:170:3: Function setCurrentToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:180:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:180:3: Function setGasClaim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:186:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:186:3: Function getGasClaimAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc7bd5dac314a67a375a0347d72797c2ea1f1a672.sol:186:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]

57 problem/s (1 error/s, 56 warning/s)
