./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:12:1: Found more than One contract per file. 7 contracts found! [Warning/one-contract-per-file]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:15:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:15:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:17:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:17:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:19:5: Function order is incorrect, external  function can not go after external view function (line 17) [Warning/ordering]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:19:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:19:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:21:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:21:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:23:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:23:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:25:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:25:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:27:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:27:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:29:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:29:69: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:33:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:37:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:38:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:48:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:52:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:52:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:56:5: Function order is incorrect, modifier definition can not go after public view function (line 52) [Warning/ordering]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:57:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:61:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:65:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:66:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:66:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:66:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:78:9: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:82:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:82:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:83:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:83:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:83:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:84:5: Function order is incorrect, external payable function can not go after external pure function (line 83) [Warning/ordering]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:84:5: Function addTreasuryETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:86:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:87:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:88:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:90:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:91:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:91:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:91:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:93:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:94:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:95:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:98:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:100:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:100:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:100:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:112:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:112:5: Function has cyclomatic complexity 8 but allowed no more than 7 [Warning/code-complexity]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:115:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:119:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:123:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:127:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:131:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:135:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:139:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:140:17: GC: For [ result ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:146:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:166:17: GC: For [ result ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:178:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:185:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:193:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:197:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:198:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:205:5: Function supportsInterface() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:205:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:216:5: Function hasRole() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:216:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:218:5: Function getRoleAdmin() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:218:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:220:5: Function order is incorrect, external  function can not go after external view function (line 218) [Warning/ordering]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:220:5: Function grantRole() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:222:5: Function revokeRole() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:224:5: Function renounceRole() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:229:5: Function supportsInterface() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:229:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:240:5: Main key parameter in mapping _roles is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:240:5: Value parameter in mapping _roles is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:250:5: Function supportsInterface() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:250:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:255:5: Function hasRole() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:255:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:278:5: Function order is incorrect, public view function can not go after internal view function (line 263) [Warning/ordering]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:278:5: Function getRoleAdmin() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:278:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:282:5: Function grantRole() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:286:5: Function revokeRole() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:290:5: Function renounceRole() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:291:9: Error message for require is too long: 47 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:291:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:291:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:321:1: Contract has 37 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:323:5: Main key parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:323:5: Value parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:324:5: Main key parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:324:5: Value parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:325:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:326:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:326:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:327:5: Main key parameter in mapping _isExcludedFromMaxTransactionLimit is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:327:5: Value parameter in mapping _isExcludedFromMaxTransactionLimit is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:328:2: Main key parameter in mapping _isExcludedFromMaxWalletLimit is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:328:2: Value parameter in mapping _isExcludedFromMaxWalletLimit is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:329:5: Main key parameter in mapping _isExcluded is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:329:5: Value parameter in mapping _isExcluded is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:330:5: Main key parameter in mapping _isBot is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:330:5: Value parameter in mapping _isBot is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:331:5: Main key parameter in mapping _isPair is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:331:5: Value parameter in mapping _isPair is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:335:5: 'swapping' should start with _ [Warning/private-vars-leading-underscore]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:340:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:341:5: 'MAX' should start with _ [Warning/private-vars-leading-underscore]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:352:5: Main key parameter in mapping _lastTrade is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:352:5: Value parameter in mapping _lastTrade is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:352:5: '_lastTrade' should not start with _ [Warning/private-vars-leading-underscore]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:358:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:358:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:358:5: 'burnAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:360:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:362:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:363:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:366:5: Main key parameter in mapping _isBlocked is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:366:5: Value parameter in mapping _isBlocked is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:372:5: Main key parameter in mapping _isAllowedToTradeWhenDisabled is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:372:5: Value parameter in mapping _isAllowedToTradeWhenDisabled is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:376:5: Main key parameter in mapping whitelisted is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:376:5: Value parameter in mapping whitelisted is not named [Warning/named-parameters-mapping]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:383:5: Function order is incorrect, struct definition can not go after state variable declaration (line 381) [Warning/ordering]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:401:5: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:415:5: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:420:5: 'splitETH' should start with _ [Warning/private-vars-leading-underscore]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:427:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:431:5: GC: [isExcluded] on Event [AllowedWhenTradingDisabledChange] could be Indexed [Warning/gas-indexed-events]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:442:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:442:38: Use double quotes for string literals [Error/quotes]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:446:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:488:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:488:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:488:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:491:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:491:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:491:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:494:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:494:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:494:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:498:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:498:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:502:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:502:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:507:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:507:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:512:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:512:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:516:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:516:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:521:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:521:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:523:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:523:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:523:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:523:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:531:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:531:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:531:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:536:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:536:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:536:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:538:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:538:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:538:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:538:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:544:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:544:5: Function isExcludedFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:544:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:548:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:548:5: Function tokenFromReflection() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:548:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:549:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:549:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:549:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:549:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:554:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:554:5: Function excludeFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:555:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:556:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:556:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:557:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:565:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:565:5: Function includeInReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:566:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:567:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:567:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:579:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:579:5: Function excludeFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:583:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:583:5: Function includeInFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:588:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:588:5: Function isExcludedFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:588:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:592:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:592:5: Function excludeFromMaxTransactionLimit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:593:2: Line length must be no more than 120 but current length is 125. [Error/max-line-length]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:593:3: Error message for require is too long: 54 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:593:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:593:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:597:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:597:5: Function isExcludedFromMaxTransactionLimit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:597:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:601:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:601:2: Function excludeFromMaxWalletLimit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:602:3: Error message for require is too long: 54 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:602:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:602:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:606:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:606:5: Function isExcludedFromMaxWalletLimit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:606:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:611:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:611:5: Function blockAccount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:612:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:613:3: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:613:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:613:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:618:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:618:2: Function unblockAccount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:619:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:620:3: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:620:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:620:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:625:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:625:5: Function activateTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:626:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:629:37: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:634:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:634:2: Function deactivateTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:635:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:639:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:639:2: Function allowTradingWhenDisabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:640:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:645:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:645:5: Function activatePresale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:646:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:650:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:650:2: Function deactivatePresale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:651:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:656:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:656:5: Function addWhiteListAddresses() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:657:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:658:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:658:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:659:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:659:49: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:665:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:665:5: Function addPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:669:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:669:5: Function removePair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:673:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:673:5: Function isPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:673:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:677:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:677:5: Function setTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:685:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:685:5: Function setSplitETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:714:79: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:716:2: Line length must be no more than 120 but current length is 187. [Error/max-line-length]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:743:2: Line length must be no more than 120 but current length is 240. [Error/max-line-length]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:766:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:771:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:771:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:774:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:774:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:785:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:785:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:785:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:786:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:786:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:786:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:792:5: Function body contains 51 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:792:5: Function has cyclomatic complexity 10 but allowed no more than 7 [Warning/code-complexity]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:793:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:793:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:793:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:794:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:794:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:794:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:795:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:796:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:796:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:797:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:800:4: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:800:4: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:800:4: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:801:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:802:4: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:804:5: Error message for require is too long: 50 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:804:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:804:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:804:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:807:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:807:5: Error message for require is too long: 63 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:807:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:807:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:807:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:813:13: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:813:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:813:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:814:13: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:814:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:814:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:815:2: Line length must be no more than 120 but current length is 134. [Error/max-line-length]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:815:13: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:815:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:815:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:815:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:820:34: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:821:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:834:28: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:841:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:842:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:878:5: 'swapTokensForETH' should start with _ [Warning/private-vars-leading-underscore]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:886:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:891:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:895:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:895:26: Use double quotes for string literals [Error/quotes]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:899:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:899:26: Use double quotes for string literals [Error/quotes]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:903:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:903:5: Function updateTreasuryWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:904:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:904:47: Use double quotes for string literals [Error/quotes]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:909:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:909:5: Function updateDevelopmentWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:910:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:910:50: Use double quotes for string literals [Error/quotes]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:915:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:915:5: Function updateStableCoin() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:916:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:917:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:917:32: Use double quotes for string literals [Error/quotes]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:921:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:921:5: Function updateMaxTxAmt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:922:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:923:9: Provide an error message for require [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:923:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:923:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:927:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:927:5: Function updateMaxWalletAmt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:928:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:929:9: Provide an error message for require [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:929:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:929:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:933:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:933:5: Function updatePresaleMaxWalletAmt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:934:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:935:9: Provide an error message for require [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:935:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:935:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:939:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:939:5: Function updateSwapTokensAtAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:940:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:941:9: Provide an error message for require [Warning/reason-string]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:941:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:945:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:945:5: Function updateCoolDownSettings() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:950:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:950:5: Function setAntibot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:951:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:951:43: Use double quotes for string literals [Error/quotes]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:955:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:955:5: Function bulkAntiBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:955:5: GC: [accounts] argument on Function [bulkAntiBot] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:956:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:956:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:957:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:957:49: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:962:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:962:5: Function updateRouterAndPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:968:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:968:5: Function isBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:968:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:972:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:972:5: Function airdropTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:972:5: GC: [recipients] argument on Function [airdropTokens] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:972:5: GC: [amounts] argument on Function [airdropTokens] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:973:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:976:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:976:45: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:986:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:986:5: Function rescueETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:987:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:987:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:993:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:993:5: Function rescueAnyERC20Tokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:993:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x081d8a340d384cffca0c2dafbf45020d760d7576.sol:997:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]

400 problem/s (14 error/s, 386 warning/s)
