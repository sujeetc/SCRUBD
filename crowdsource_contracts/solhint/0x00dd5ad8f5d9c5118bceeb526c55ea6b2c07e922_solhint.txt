./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:3:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:10:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:11:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:21:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:27:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:27:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:31:5: Function order is incorrect, modifier definition can not go after public view function (line 27) [Warning/ordering]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:32:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:36:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:41:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:42:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:42:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:42:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:49:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:49:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:50:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:50:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:51:5: Function order is incorrect, external  function can not go after external view function (line 50) [Warning/ordering]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:51:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:51:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:52:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:52:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:53:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:53:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:54:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:54:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:60:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:61:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:65:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:76:5: Function order is incorrect, internal  function can not go after internal view function (line 65) [Warning/ordering]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:77:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:77:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:81:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:81:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:81:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:84:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:88:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:88:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:92:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:93:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:96:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:96:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:97:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:97:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:97:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:97:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:101:2: Line length must be no more than 120 but current length is 149. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:101:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:102:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:126:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:126:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:126:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:128:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:128:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:129:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:129:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:131:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:132:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:132:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:133:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:133:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:133:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:135:5: Function order is incorrect, external  function can not go after external view function (line 133) [Warning/ordering]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:135:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:137:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:138:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:142:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:142:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:143:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:143:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:145:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:145:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:146:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:146:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:147:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:147:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:148:5: Function order is incorrect, external view function can not go after external pure function (line 147) [Warning/ordering]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:148:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:148:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:148:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:149:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:149:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:149:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:150:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:150:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:150:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:152:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:152:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:152:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:153:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:153:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:153:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:154:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:154:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:154:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:156:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:156:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:156:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:157:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:157:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:157:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:158:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:158:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:158:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:160:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:160:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:160:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:162:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:162:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:162:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:162:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:163:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:163:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:163:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:163:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:165:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:166:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:167:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:168:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:171:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:171:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:173:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:173:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:173:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:173:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:174:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:174:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:175:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:175:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:176:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:176:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:177:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:178:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:178:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:178:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:179:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:179:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:179:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:180:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:180:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:180:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:182:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:182:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:182:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:183:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:183:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:183:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:184:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:185:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:187:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:191:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:191:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:192:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:192:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:192:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:194:5: Function order is incorrect, external  function can not go after external pure function (line 192) [Warning/ordering]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:194:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:197:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:198:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:199:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:200:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:202:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:203:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:203:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:203:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:204:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:206:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:207:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:208:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:210:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:211:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:211:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:211:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:212:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:215:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:216:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:217:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:219:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:220:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:220:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:221:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:223:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:224:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:225:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:227:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:228:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:228:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:229:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:232:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:233:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:234:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:236:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:238:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:238:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:239:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:241:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:242:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:243:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:245:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:247:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:247:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:248:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:249:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:250:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:253:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:254:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:255:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:256:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:257:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:260:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:261:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:262:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:262:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:262:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:265:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:266:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:266:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:266:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:266:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:268:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:269:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:269:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:269:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:269:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:271:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:272:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:272:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:272:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:275:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:277:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:277:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:277:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:277:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:277:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:278:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:278:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:278:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:278:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:278:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:279:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:279:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:279:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:279:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:279:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:280:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:280:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:280:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:281:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:281:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:281:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:285:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:287:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:288:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:289:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:291:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:292:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:293:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:295:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:296:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:297:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:299:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:301:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:303:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:304:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:305:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:308:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:310:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:311:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:314:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:316:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:317:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:318:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:321:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:325:1: Contract has 30 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:328:5: Main key parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:328:5: Value parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:329:5: Main key parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:329:5: Value parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:330:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:332:5: Main key parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:332:5: Value parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:333:5: Main key parameter in mapping _isExcluded is not named [Warning/named-parameters-mapping]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:333:5: Value parameter in mapping _isExcluded is not named [Warning/named-parameters-mapping]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:340:5: 'MAX' should start with _ [Warning/private-vars-leading-underscore]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:364:5: 'DEAD' should start with _ [Warning/private-vars-leading-underscore]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:364:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:369:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:373:5: GC: [isExcluded] on Event [ExcludeFromFees] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:374:5: GC: [marketingWallet] on Event [MarketingWalletChanged] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:375:5: GC: [buyBackWallet] on Event [BuyBackWalletChanged] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:376:5: GC: [enabled] on Event [SwapEnabledUpdated] could be Indexed [Warning/gas-indexed-events]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:378:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:396:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:396:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:396:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:400:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:400:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:400:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:404:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:404:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:404:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:408:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:408:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:412:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:412:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:417:5: Function order is incorrect, public  function can not go after public view function (line 412) [Warning/ordering]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:417:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:417:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:422:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:422:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:426:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:426:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:431:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:431:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:437:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:437:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:437:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:442:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:442:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:442:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:447:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:447:5: Function isExcludedFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:447:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:451:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:451:5: Function totalReflectionDistributed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:451:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:455:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:455:5: Function deliver() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:457:9: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:457:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:457:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:464:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:464:5: Function reflectionFromToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:464:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:465:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:465:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:475:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:475:5: Function tokenFromReflection() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:475:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:476:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:476:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:476:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:476:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:481:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:481:5: Function excludeFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:482:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:490:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:490:5: Function includeInReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:491:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:492:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:492:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:503:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:505:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:505:5: Function claimStuckTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:506:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:511:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:516:5: 'isContract' should start with _ [Warning/private-vars-leading-underscore]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:516:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:520:5: 'sendETH' should start with _ [Warning/private-vars-leading-underscore]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:521:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:521:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:524:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:524:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:524:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:532:2: Line length must be no more than 120 but current length is 127. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:532:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:532:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:532:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:532:5: GC: Named return value is missing - Index 3 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:532:5: GC: Named return value is missing - Index 4 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:532:5: GC: Named return value is missing - Index 5 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:532:5: GC: Named return value is missing - Index 6 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:534:2: Line length must be no more than 120 but current length is 128. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:534:68: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:538:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:538:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:538:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:538:5: GC: Named return value is missing - Index 3 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:546:2: Line length must be no more than 120 but current length is 165. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:546:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:546:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:546:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:555:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:560:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:560:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:563:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:563:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:592:2: Line length must be no more than 120 but current length is 142. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:592:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:592:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:603:5: 'calculateTaxFee' should start with _ [Warning/private-vars-leading-underscore]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:603:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:607:5: 'calculateBuyBackFee' should start with _ [Warning/private-vars-leading-underscore]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:607:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:611:5: 'calculateMarketingFee' should start with _ [Warning/private-vars-leading-underscore]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:611:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:615:5: 'calculateBurnFee' should start with _ [Warning/private-vars-leading-underscore]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:615:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:620:5: 'removeAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:634:5: 'restoreAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:641:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:641:5: Function isExcludedFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:641:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:646:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:646:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:646:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:647:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:647:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:647:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:658:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:658:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:658:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:659:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:659:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:659:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:663:36: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:693:5: 'swapTokensForETH' should start with _ [Warning/private-vars-leading-underscore]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:702:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:707:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:711:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:711:5: Function setSwapTokensAtAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:712:9: Error message for require is too long: 62 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:712:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:712:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:716:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:716:5: Function setSwapEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:749:2: Line length must be no more than 120 but current length is 164. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:760:2: Line length must be no more than 120 but current length is 164. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:772:2: Line length must be no more than 120 but current length is 164. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:784:2: Line length must be no more than 120 but current length is 164. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:797:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:797:5: Function excludeFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:798:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:798:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:798:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:804:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:804:5: Function changeMarketingWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:805:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:805:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:805:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:806:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:806:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:806:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:811:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:811:5: Function changeBuyBackWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:812:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:812:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:812:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:813:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:813:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:813:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:818:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:818:5: Function setTaxFeePercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:821:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:821:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:824:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:824:5: Function setMarketingFeePercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:827:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:827:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:830:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:830:5: Function setBuyBackFeePercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:833:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:833:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:836:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:836:5: Function setBurnFeePercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:839:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:839:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:842:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:842:5: Function enableWalletToWalletTransferWithoutFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:843:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:843:9: Error message for require is too long: 66 counted / 32 allowed [Warning/reason-string]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:843:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922.sol:843:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]

473 problem/s (13 error/s, 460 warning/s)
