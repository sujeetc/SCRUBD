./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:3:1: Found more than One contract per file. 7 contracts found! [Warning/one-contract-per-file]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:19:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:19:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:20:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:20:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:21:5: Function order is incorrect, external  function can not go after external view function (line 20) [Warning/ordering]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:21:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:21:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:22:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:22:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:23:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:23:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:25:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:25:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:31:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:32:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:41:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:41:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:42:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:42:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:43:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:43:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:47:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:51:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:70:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:77:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:77:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:84:5: Function order is incorrect, modifier definition can not go after public view function (line 77) [Warning/ordering]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:85:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:93:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:101:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:102:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:102:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:102:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:118:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:118:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:120:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:131:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:139:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:139:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:147:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:147:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:154:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:154:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:161:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:161:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:168:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:168:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:176:5: Function order is incorrect, public  function can not go after public view function (line 168) [Warning/ordering]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:176:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:176:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:184:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:184:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:191:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:191:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:199:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:199:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:207:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:207:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:207:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:207:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:219:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:219:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:219:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:228:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:228:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:228:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:230:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:230:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:230:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:230:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:247:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:247:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:247:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:248:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:248:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:248:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:253:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:253:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:253:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:253:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:268:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:289:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:289:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:289:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:290:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:290:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:290:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:304:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:314:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:319:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:319:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:320:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:320:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:320:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:322:5: Function order is incorrect, external  function can not go after external pure function (line 320) [Warning/ordering]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:322:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:325:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:326:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:327:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:328:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:330:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:331:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:331:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:331:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:332:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:334:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:335:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:336:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:338:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:339:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:339:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:339:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:340:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:343:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:344:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:345:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:347:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:348:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:348:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:349:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:351:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:352:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:353:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:355:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:356:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:356:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:357:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:360:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:361:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:362:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:364:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:366:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:366:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:367:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:369:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:370:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:371:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:373:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:375:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:375:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:376:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:377:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:378:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:381:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:382:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:383:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:384:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:385:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:388:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:389:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:390:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:390:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:390:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:393:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:394:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:394:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:394:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:394:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:396:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:397:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:397:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:397:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:397:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:399:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:400:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:400:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:400:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:403:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:405:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:405:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:405:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:405:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:405:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:406:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:406:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:406:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:406:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:406:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:407:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:407:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:407:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:407:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:407:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:408:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:408:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:408:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:409:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:409:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:409:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:413:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:415:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:416:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:417:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:419:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:420:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:421:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:423:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:424:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:425:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:427:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:429:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:431:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:432:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:433:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:436:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:438:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:439:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:442:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:444:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:445:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:446:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:449:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:454:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:454:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:454:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:456:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:456:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:457:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:457:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:459:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:460:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:460:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:461:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:461:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:461:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:463:5: Function order is incorrect, external  function can not go after external view function (line 461) [Warning/ordering]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:463:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:465:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:466:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:477:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:485:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:493:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:501:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:516:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:516:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:529:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:529:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:541:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:541:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:558:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:558:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:570:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:570:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:581:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:589:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:597:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:605:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:613:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:621:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:627:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:627:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:636:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:642:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:651:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:657:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:672:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:673:9: Error message for require is too long: 39 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:673:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:673:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:673:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:681:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:682:9: Error message for require is too long: 39 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:682:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:682:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:682:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:690:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:691:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:691:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:691:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:691:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:699:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:700:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:700:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:700:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:700:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:708:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:709:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:709:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:709:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:709:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:717:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:718:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:718:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:718:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:718:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:726:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:727:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:727:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:727:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:727:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:738:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:739:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:739:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:747:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:748:9: Error message for require is too long: 39 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:748:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:748:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:748:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:748:46: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:756:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:757:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:757:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:757:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:757:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:757:45: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:765:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:766:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:766:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:766:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:766:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:766:45: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:774:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:775:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:775:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:775:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:775:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:775:45: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:783:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:784:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:784:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:784:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:784:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:784:44: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:791:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:793:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:793:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:793:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:793:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:798:1: Contract has 16 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:803:5: Immutable variables name are set to be in capitalized SNAKE_CASE [Warning/immutable-vars-naming]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:819:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:823:5: Main key parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:823:5: Value parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:825:5: GC: [enabled] on Event [SwapAndLiquifyEnabledUpdated] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:827:5: GC: [tokensIntoLiqudity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:827:5: GC: [ethReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:828:5: GC: [isExcluded] on Event [ExcludeFromFees] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:829:5: GC: [prevValue] on Event [MaxWalletAmountUpdated] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:829:5: GC: [newValue] on Event [MaxWalletAmountUpdated] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:831:5: GC: [tokensSwapped] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:831:5: GC: [ethReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:831:5: GC: [tokensIntoLiqudity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:843:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:865:5: Function body contains 76 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:865:5: Function has cyclomatic complexity 13 but allowed no more than 7 [Warning/code-complexity]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:870:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:870:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:870:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:871:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:871:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:871:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:880:13: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:880:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:880:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:880:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:884:13: Error message for require is too long: 43 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:884:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:884:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:884:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:888:13: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:888:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:888:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:888:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:893:14: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:894:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:944:5: 'swapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:946:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:946:53: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:966:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:966:47: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:973:5: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:978:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:984:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:988:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:999:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1004:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1009:5: Function order is incorrect, public  function can not go after private  function (line 988) [Warning/ordering]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1009:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1009:5: Function removeBuyFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1010:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1010:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1015:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1015:5: Function removeSellFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1016:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1016:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1021:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1021:5: Function updateDevWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1025:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1025:5: Function setMaxBuyTransactionAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1027:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1027:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1030:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1030:5: Function setMaxSellTransactionAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1032:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1032:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1035:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1035:5: Function excludeFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1036:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1036:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1036:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1042:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1042:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1042:5: Function SetSwapTokensAtAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1046:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1046:5: Function isExcludedFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1046:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1050:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1050:5: Function setSwapAndLiquifyEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1055:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1055:5: Function setMaxWalletToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1058:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1058:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x039f7a065382b064c95f8409b7eff4a45cea3e23.sol:1062:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]

414 problem/s (414 warning/s)
