./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:6:1: Found more than One contract per file. 2 contracts found! [Warning/one-contract-per-file]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:41:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:52:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 41) [Warning/ordering]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:60:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:90:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:96:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:101:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:101:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:106:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:106:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:115:5: Function order is incorrect, external  function can not go after external view function (line 106) [Warning/ordering]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:115:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:115:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:124:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:124:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:140:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:140:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:151:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:151:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:169:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:169:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:175:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:176:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:178:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:179:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:180:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:180:5: 'swifyCoinAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:181:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:181:5: 'swifyContract' should start with _ [Warning/private-vars-leading-underscore]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:185:6: Function order is incorrect, struct definition can not go after state variable declaration (line 182) [Warning/ordering]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:186:6: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:194:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:197:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:198:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:199:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:200:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:201:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:202:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:207:5: Main key parameter in mapping tokens is not named [Warning/named-parameters-mapping]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:207:5: Value parameter in mapping tokens is not named [Warning/named-parameters-mapping]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:208:5: Main key parameter in mapping positions is not named [Warning/named-parameters-mapping]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:208:5: Value parameter in mapping positions is not named [Warning/named-parameters-mapping]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:208:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:209:5: Main key parameter in mapping positionsIdsByAddress is not named [Warning/named-parameters-mapping]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:209:5: Value parameter in mapping positionsIdsByAddress is not named [Warning/named-parameters-mapping]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:209:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:212:6: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:212:6: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:212:6: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:216:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:224:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:228:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:228:6: Function changeAmountOfTokenPerEth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:228:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:232:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:232:6: Function changeApr() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:232:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:236:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:236:6: Function calculateNumberDays() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:236:6: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:236:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:236:73: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:237:19: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:240:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:240:6: Function calculatePerWeekPayment() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:240:6: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:240:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:240:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:240:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:244:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:244:6: Function withdrawEth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:246:11: Provide an error message for require [Warning/reason-string]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:246:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:249:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:249:6: Function withdrawSwify() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:254:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:254:5: Function addToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:261:23: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:269:6: GC: For [ currentTokenId ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:272:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:272:5: Function stakeTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:272:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:273:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:273:47: Use double quotes for string literals [Error/quotes]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:274:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:274:19: Avoid to use tx.origin [Warning/avoid-tx-origin]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:275:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:279:11: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:280:11: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:282:11: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:283:11: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:285:42: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:290:16: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:292:16: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:300:11: GC: For [ currentPositionId ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:303:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:303:6: Function closePosition() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:303:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:304:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:304:19: Avoid to use tx.origin [Warning/avoid-tx-origin]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:305:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:305:70: Use double quotes for string literals [Error/quotes]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:306:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:306:55: Use double quotes for string literals [Error/quotes]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:308:2: Line length must be no more than 120 but current length is 126. [Error/max-line-length]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:310:11: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:311:11: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:312:11: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:315:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:315:6: Function receiveWeekProfits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:315:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:316:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:316:19: Avoid to use tx.origin [Warning/avoid-tx-origin]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:317:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:318:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:318:55: Use double quotes for string literals [Error/quotes]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:319:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:319:70: Use double quotes for string literals [Error/quotes]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:320:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:320:11: Error message for require is too long: 47 counted / 32 allowed [Warning/reason-string]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:320:11: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:320:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:320:19: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:320:79: Use double quotes for string literals [Error/quotes]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:323:2: Line length must be no more than 120 but current length is 137. [Error/max-line-length]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:326:54: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:328:11: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:330:11: Provide an error message for require [Warning/reason-string]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:330:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:333:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0453aa2dafff030614d9afef6c724ec2bee60876.sol:333:6: Function turnStaking() must match Foundry test naming convention [Warning/foundry-test-functions]

131 problem/s (9 error/s, 122 warning/s)
