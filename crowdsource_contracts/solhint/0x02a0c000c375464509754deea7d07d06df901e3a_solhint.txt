./0x02a0c000c375464509754deea7d07d06df901e3a.sol:18:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:21:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:27:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:27:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:29:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:29:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:31:5: Function order is incorrect, external  function can not go after external view function (line 29) [Warning/ordering]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:31:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:31:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:33:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:33:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:35:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:35:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:37:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:37:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:43:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:44:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:59:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:65:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:65:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:65:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:69:5: Function order is incorrect, modifier definition can not go after public view function (line 65) [Warning/ordering]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:70:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:74:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:74:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:81:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:83:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:83:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:87:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:91:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:96:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:96:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:101:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:106:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:106:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:106:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:110:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:114:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:119:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:126:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:132:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:140:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:140:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:142:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:142:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:142:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:144:5: Function order is incorrect, external payable function can not go after external pure function (line 142) [Warning/ordering]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:144:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:161:1: Contract has 19 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:164:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:165:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:166:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:169:5: Main key parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:169:5: Value parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:170:5: Main key parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:170:5: Value parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:171:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:172:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:172:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:173:5: 'MAX' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:174:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:181:5: Main key parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:181:5: Value parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:181:5: 'bots' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:182:5: Main key parameter in mapping cooldown is not named [Warning/named-parameters-mapping]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:182:5: Value parameter in mapping cooldown is not named [Warning/named-parameters-mapping]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:182:5: 'cooldown' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:185:5: 'uniswapV2Router' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:186:5: 'uniswapV2Pair' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:187:5: 'tradingOpen' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:188:5: 'inSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:189:5: 'swapEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:190:5: 'cooldownEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:193:5: GC: [_maxTxAmount] on Event [MaxTxAmountUpdated] could be Indexed [Warning/gas-indexed-events]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:200:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:211:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:211:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:211:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:215:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:215:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:215:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:219:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:219:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:219:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:223:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:223:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:227:5: Function order is incorrect, public view function can not go after public pure function (line 223) [Warning/ordering]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:227:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:227:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:231:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:231:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:240:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:240:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:249:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:249:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:258:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:258:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:267:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:275:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:275:5: Function setCooldownEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:279:5: 'tokenFromReflection' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:279:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:284:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:284:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:284:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:285:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:292:5: 'removeAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:298:5: 'restoreAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:308:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:308:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:308:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:309:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:309:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:309:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:314:5: Function has cyclomatic complexity 8 but allowed no more than 7 [Warning/code-complexity]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:319:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:319:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:319:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:320:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:320:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:320:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:321:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:321:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:321:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:331:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:338:13: Provide an error message for require [Warning/reason-string]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:338:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:338:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:339:13: Provide an error message for require [Warning/reason-string]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:339:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:346:17: Provide an error message for require [Warning/reason-string]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:346:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:346:40: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:347:32: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:367:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:372:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:377:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:381:5: 'sendETHToFee' should start with _ [Warning/private-vars-leading-underscore]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:386:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:386:5: Function startTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:387:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:393:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:399:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:411:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:411:5: Function manualswap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:412:9: Provide an error message for require [Warning/reason-string]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:412:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:417:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:417:5: Function manualsend() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:418:9: Provide an error message for require [Warning/reason-string]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:418:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:423:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:423:5: Function blockBots() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:424:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:424:47: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:429:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:429:5: Function unblockBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:475:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:477:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:477:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:477:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:477:5: GC: Named return value is missing - Index 3 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:477:5: GC: Named return value is missing - Index 4 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:477:5: GC: Named return value is missing - Index 5 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:498:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:498:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:498:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:501:9: Function param name must be in mixedCase [Warning/func-param-name-mixedcase]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:501:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:518:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:518:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:518:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:540:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:546:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:546:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:554:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:554:5: Function setMaxTxPercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x02a0c000c375464509754deea7d07d06df901e3a.sol:555:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]

178 problem/s (178 warning/s)
