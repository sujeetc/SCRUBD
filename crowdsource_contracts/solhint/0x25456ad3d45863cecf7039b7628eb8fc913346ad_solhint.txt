./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:5:1: Found more than One contract per file. 8 contracts found! [Warning/one-contract-per-file]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:5:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:8:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:8:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:9:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:9:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:11:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:11:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:12:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:12:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:13:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:13:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:14:5: Function order is incorrect, external view function can not go after external pure function (line 13) [Warning/ordering]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:14:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:14:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:14:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:15:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:15:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:15:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:16:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:16:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:16:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:18:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:18:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:18:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:19:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:19:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:19:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:20:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:20:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:20:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:22:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:22:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:22:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:23:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:23:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:23:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:24:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:24:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:24:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:26:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:26:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:26:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:28:5: GC: [amount0] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:28:5: GC: [amount1] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:28:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:28:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:29:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:29:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:29:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:29:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:30:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:30:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:30:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:30:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:32:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:33:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:34:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:35:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:38:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:38:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:40:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:40:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:40:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:40:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:41:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:41:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:42:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:42:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:43:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:43:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:44:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:45:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:45:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:45:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:46:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:46:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:46:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:47:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:47:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:47:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:49:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:49:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:50:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:50:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:50:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:51:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:51:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:51:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:52:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:53:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:55:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:60:1: Function order is incorrect, pragma directive can not go after interface (line 7) [Warning/ordering]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:60:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:63:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:63:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:63:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:65:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:65:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:66:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:66:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:68:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:69:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:69:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:70:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:70:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:70:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:72:5: Function order is incorrect, external  function can not go after external view function (line 70) [Warning/ordering]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:72:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:74:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:75:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:80:1: Compiler version >=0.6.2 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:83:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:83:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:84:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:84:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:84:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:86:5: Function order is incorrect, external  function can not go after external pure function (line 84) [Warning/ordering]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:86:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:89:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:90:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:91:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:92:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:94:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:95:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:95:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:95:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:96:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:98:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:99:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:100:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:102:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:103:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:103:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:103:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:104:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:107:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:108:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:109:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:111:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:112:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:112:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:113:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:115:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:116:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:117:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:119:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:120:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:120:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:121:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:124:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:125:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:126:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:128:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:130:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:130:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:131:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:133:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:134:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:135:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:137:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:139:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:139:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:140:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:141:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:142:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:145:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:146:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:147:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:148:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:149:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:152:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:153:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:154:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:154:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:154:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:157:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:158:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:158:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:158:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:158:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:160:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:161:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:161:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:161:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:161:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:163:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:164:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:164:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:164:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:167:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:169:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:169:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:169:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:169:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:169:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:170:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:170:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:170:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:170:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:170:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:171:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:171:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:171:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:171:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:171:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:172:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:172:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:172:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:173:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:173:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:173:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:178:1: Compiler version >=0.6.2 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:182:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:184:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:185:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:186:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:188:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:189:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:190:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:192:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:193:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:194:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:196:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:198:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:200:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:201:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:202:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:205:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:207:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:208:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:211:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:213:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:214:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:215:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:218:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:231:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:232:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:236:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:236:71: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:240:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:240:81: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:247:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:247:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:253:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:253:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:257:5: Function order is incorrect, internal  function can not go after internal view function (line 253) [Warning/ordering]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:257:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:276:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:277:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:298:1: Interface name 'DividendPayingTokenOptionalInterface' must start with "I" [Warning/interface-starts-with-i]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:302:3: Function withdrawableDividendOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:302:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:307:3: Function withdrawnDividendOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:307:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:313:3: Function accumulativeDividendOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:313:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:326:1: Interface name 'DividendPayingTokenInterface' must start with "I" [Warning/interface-starts-with-i]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:330:3: Function dividendOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:330:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:334:2: Line length must be no more than 120 but current length is 133. [Error/max-line-length]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:336:3: Function order is incorrect, external  function can not go after external view function (line 330) [Warning/ordering]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:336:3: Function withdrawDividend() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:341:3: GC: [weiAmount] on Event [DividendsDistributed] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:349:3: GC: [weiAmount] on Event [DividendWithdrawn] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:397:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:401:9: Provide an error message for require [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:401:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:402:9: Provide an error message for require [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:402:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:409:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:411:9: Provide an error message for require [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:411:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:420:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:422:9: Provide an error message for require [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:422:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:422:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:422:28: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:429:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:431:9: Provide an error message for require [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:431:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:431:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:431:28: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:438:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:439:9: Provide an error message for require [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:439:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:444:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:445:9: Provide an error message for require [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:445:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:445:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:461:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:463:5: Provide an error message for require [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:463:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:463:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:491:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:491:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:504:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:504:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:516:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:516:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:533:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:533:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:545:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:545:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:562:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:576:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:590:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:604:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:620:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:637:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:643:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:643:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:660:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:666:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:686:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:692:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:716:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:720:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:763:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:770:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:770:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:777:5: Function order is incorrect, modifier definition can not go after public view function (line 770) [Warning/ordering]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:778:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:789:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:797:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:798:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:798:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:798:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:827:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:827:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:832:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:832:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:841:5: Function order is incorrect, external  function can not go after external view function (line 832) [Warning/ordering]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:841:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:841:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:850:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:850:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:866:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:866:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:877:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:877:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:889:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:895:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:915:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:915:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:920:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:920:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:925:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:925:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:964:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:964:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:966:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:982:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:990:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:990:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:998:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:998:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1015:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1015:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1022:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1022:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1029:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1029:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1041:5: Function order is incorrect, public  function can not go after public view function (line 1029) [Warning/ordering]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1041:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1041:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1049:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1049:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1060:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1060:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1078:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1078:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1086:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1086:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1086:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1086:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1106:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1106:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1106:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1125:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1125:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1125:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1127:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1127:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1127:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1127:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1154:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1154:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1154:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1155:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1155:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1155:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1160:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1160:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1160:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1160:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1183:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1206:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1206:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1206:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1211:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1211:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1211:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1211:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1240:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1240:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1240:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1241:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1241:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1241:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1265:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1285:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1295:1: Contract has 20 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1300:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1303:5: Function order is incorrect, struct definition can not go after state variable declaration (line 1300) [Warning/ordering]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1316:5: 'swapping' should start with _ [Warning/private-vars-leading-underscore]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1329:5: 'totalBuyFee' should start with _ [Warning/private-vars-leading-underscore]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1330:5: 'totalSellFee' should start with _ [Warning/private-vars-leading-underscore]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1334:5: 'isTradingEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1339:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1340:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1344:5: Main key parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1344:5: Value parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1345:5: Main key parameter in mapping _isExcludedFromLimit is not named [Warning/named-parameters-mapping]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1345:5: Value parameter in mapping _isExcludedFromLimit is not named [Warning/named-parameters-mapping]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1346:5: Main key parameter in mapping _isBlackListed is not named [Warning/named-parameters-mapping]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1346:5: Value parameter in mapping _isBlackListed is not named [Warning/named-parameters-mapping]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1346:5: '_isBlackListed' should not start with _ [Warning/private-vars-leading-underscore]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1350:5: Main key parameter in mapping automatedMarketMakerPairs is not named [Warning/named-parameters-mapping]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1350:5: Value parameter in mapping automatedMarketMakerPairs is not named [Warning/named-parameters-mapping]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1358:5: GC: [isExcluded] on Event [ExcludeFromFees] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1368:5: GC: [tokensSwapped] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1368:5: GC: [ethReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1368:5: GC: [tokensIntoLiqudity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1380:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1418:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1420:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1420:5: Function updateRouter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1421:5: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1421:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1421:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1423:10: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1435:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1435:5: Function excludeFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1436:9: Error message for require is too long: 49 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1436:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1436:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1445:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1445:6: Function claimStuckTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1446:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1456:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1456:5: Function excludefromLimit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1463:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1463:5: Function setBlackList() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1467:4: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1467:4: Function enableTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1472:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1472:5: Function setAutomatedMarketMakerPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1476:9: Error message for require is too long: 76 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1476:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1476:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1485:9: Error message for require is too long: 63 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1485:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1485:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1494:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1494:5: Function setBuyFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1503:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1503:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1508:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1508:5: Function setSellFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1514:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1514:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1519:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1519:5: Function isExcludedFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1519:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1523:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1523:5: Function setTreasuryWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1524:5: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1524:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1524:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1529:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1529:5: Function setMarketingWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1530:5: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1530:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1530:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1534:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1534:5: Function setSwapEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1538:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1538:5: Function setMaxWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1542:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1542:5: Function setMaxBuyAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1543:7: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1543:7: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1543:7: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1543:15: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1547:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1547:5: Function setMaxSellAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1548:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1548:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1548:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1548:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1552:4: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1552:4: Function setSwapTokensAtAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1558:5: Function body contains 82 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1558:5: Function has cyclomatic complexity 12 but allowed no more than 7 [Warning/code-complexity]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1563:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1563:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1563:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1564:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1564:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1564:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1565:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1569:4: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1579:40: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1616:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1616:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1618:19: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1618:27: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1625:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1626:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1645:5: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1650:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1656:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1660:5: 'swapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1679:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1688:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1693:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1697:5: 'swapAndSendToWallets' should start with _ [Warning/private-vars-leading-underscore]
./0x25456ad3d45863cecf7039b7628eb8fc913346ad.sol:1698:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]

529 problem/s (5 error/s, 524 warning/s)
