./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:3:2: Line length must be no more than 120 but current length is 164. [Error/max-line-length]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:9:1: Found more than One contract per file. 8 contracts found! [Warning/one-contract-per-file]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:9:1: Compiler version 0.4.25 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:12:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:12:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:12:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:12:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:26:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:30:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:34:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:38:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:38:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:42:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:42:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:49:5: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:50:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:51:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:54:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:54:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:54:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:61:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:61:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:61:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:65:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:65:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:65:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:66:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:67:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:73:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:73:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:73:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:77:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:81:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:81:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:81:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:88:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:88:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:88:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:92:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:92:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:92:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:93:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:94:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:100:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:100:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:100:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:108:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:112:5: Function order is incorrect, internal view function can not go after internal pure function (line 107) [Warning/ordering]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:112:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:113:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:114:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:122:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:128:9: Provide an error message for require [Warning/reason-string]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:133:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:134:9: Provide an error message for require [Warning/reason-string]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:139:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:140:9: Provide an error message for require [Warning/reason-string]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:140:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:146:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:148:9: Provide an error message for require [Warning/reason-string]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:148:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:153:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:154:9: Provide an error message for require [Warning/reason-string]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:161:5: 'owner' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:167:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:171:5: 'disown' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:179:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:180:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:186:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:187:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:191:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:193:5: Main key parameter in mapping investors is not named [Warning/named-parameters-mapping]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:193:5: Value parameter in mapping investors is not named [Warning/named-parameters-mapping]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:193:5: 'investors' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:195:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:195:5: Function isInvestor() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:195:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:199:2: Line length must be no more than 120 but current length is 153. [Error/max-line-length]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:199:5: 'investorInfo' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:199:5: Explicitly mark visibility in function [Warning/func-visibility]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:199:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:199:74: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:206:5: 'updatePercent' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:206:5: Function has cyclomatic complexity 14 but allowed no more than 7 [Warning/code-complexity]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:207:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:210:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:212:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:214:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:216:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:218:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:220:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:222:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:224:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:226:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:228:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:230:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:232:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:237:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:237:5: Function newInvestor() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:237:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:237:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:237:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:244:9: GC: For [ size ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:248:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:248:5: Function addInvestment() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:248:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:248:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:253:60: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:258:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:258:5: Function setPaymentTime() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:258:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:258:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:266:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:266:5: Function withdrawBody() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:266:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:266:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:266:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:268:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:269:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:269:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:269:50: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:270:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:270:55: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:270:78: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:270:95: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:276:2: Line length must be no more than 120 but current length is 142. [Error/max-line-length]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:276:51: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:276:74: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:276:91: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:287:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:287:5: Function disqualify() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:287:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:301:5: Main key parameter in mapping m_referrals is not named [Warning/named-parameters-mapping]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:301:5: Value parameter in mapping m_referrals is not named [Warning/named-parameters-mapping]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:301:5: 'm_referrals' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:301:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:302:5: 'm_investors' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:302:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:303:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:303:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:304:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:304:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:307:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:308:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:310:5: 'm_referal_percent' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:310:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:311:5: 'm_referrer_percent' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:311:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:312:5: 'm_adminsPercent' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:312:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:313:5: 'm_advertisingPercent' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:313:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:314:5: 'm_firstBakersPercent' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:314:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:315:5: 'm_tenthBakerPercent' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:315:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:316:5: 'm_fiftiethBakerPercent' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:316:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:317:5: 'm_twentiethBakerPercent' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:317:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:319:5: GC: [when] on Event [LogPEInit] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:319:5: GC: [rev1Storage] on Event [LogPEInit] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:319:5: GC: [rev2Storage] on Event [LogPEInit] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:319:5: GC: [investorMaxInvestment] on Event [LogPEInit] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:319:5: GC: [endTimestamp] on Event [LogPEInit] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:319:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:319:74: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:319:102: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:320:5: GC: [when] on Event [LogSendExcessOfEther] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:320:5: GC: [value] on Event [LogSendExcessOfEther] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:320:5: GC: [investment] on Event [LogSendExcessOfEther] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:320:5: GC: [excess] on Event [LogSendExcessOfEther] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:320:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:320:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:320:77: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:320:94: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:321:5: GC: [when] on Event [LogNewReferral] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:321:5: GC: [refBonus] on Event [LogNewReferral] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:321:78: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:321:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:322:5: GC: [when] on Event [LogRGPInit] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:322:5: GC: [startTimestamp] on Event [LogRGPInit] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:322:5: GC: [maxDailyTotalInvestment] on Event [LogRGPInit] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:322:5: GC: [activityDays] on Event [LogRGPInit] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:322:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:322:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:322:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:322:84: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:323:5: GC: [when] on Event [LogRGPInvestment] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:323:5: GC: [investment] on Event [LogRGPInvestment] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:323:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:323:61: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:323:78: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:324:5: GC: [when] on Event [LogNewInvestment] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:324:5: GC: [investment] on Event [LogNewInvestment] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:324:5: GC: [value] on Event [LogNewInvestment] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:324:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:324:61: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:324:78: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:325:5: GC: [when] on Event [LogAutomaticReinvest] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:325:5: GC: [investment] on Event [LogAutomaticReinvest] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:325:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:325:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:326:5: GC: [when] on Event [LogPayDividends] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:326:5: GC: [dividends] on Event [LogPayDividends] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:326:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:326:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:327:5: GC: [when] on Event [LogNewInvestor] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:327:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:328:5: GC: [when] on Event [LogBalanceChanged] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:328:5: GC: [balance] on Event [LogBalanceChanged] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:328:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:328:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:329:5: GC: [when] on Event [LogNextWave] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:329:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:330:5: GC: [when] on Event [LogDisown] could be Indexed [Warning/gas-indexed-events]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:330:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:335:32: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:343:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:349:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:349:5: Fallback function must be simple [Warning/no-complex-fallback]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:357:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:357:5: Function disqualifyAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:361:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:361:5: Function doDisown() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:363:24: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:366:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:370:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:370:5: Function setAdvertisingAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:375:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:375:5: Function setAdminsAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:380:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:380:5: Function investorsNumber() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:380:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:380:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:384:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:384:5: Function balanceETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:384:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:384:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:388:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:388:5: Function advertisingPercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:388:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:388:71: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:392:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:392:5: Function adminsPercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:392:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:392:66: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:396:2: Line length must be no more than 120 but current length is 189. [Error/max-line-length]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:396:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:396:5: Function investorInfo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:396:69: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:396:93: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:399:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:399:5: Function investorDividendsAtNow() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:399:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:403:5: Function order is incorrect, public  function can not go after public view function (line 399) [Warning/ordering]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:403:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:403:5: Function getMyDividends() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:404:9: Provide an error message for require [Warning/reason-string]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:404:17: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:406:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:408:55: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:409:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:415:42: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:418:5: Function body contains 54 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:418:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:418:5: Function doInvest() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:418:5: Function has cyclomatic complexity 9 but allowed no more than 7 [Warning/code-complexity]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:419:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:420:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:421:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:421:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:421:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:422:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:426:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:429:18: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:429:51: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:432:9: Check result of "send" call [Warning/check-send-result]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:433:9: Check result of "send" call [Warning/check-send-result]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:433:9: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:440:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:441:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:442:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:445:59: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:448:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:451:51: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:462:59: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:464:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:467:68: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:468:45: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:471:9: GC: For [ investmentsNumber ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:472:43: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:475:5: 'getMemInvestor' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:475:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:476:2: Line length must be no more than 120 but current length is 184. [Error/max-line-length]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:476:10: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:476:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:480:5: 'calcDividends' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:480:72: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:482:52: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:487:22: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:490:5: 'nextWave' should start with _ [Warning/private-vars-leading-underscore]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:493:23: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04d660832910ff492e940daff9ec7b3497e886ac.sol:494:22: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]

304 problem/s (7 error/s, 297 warning/s)
