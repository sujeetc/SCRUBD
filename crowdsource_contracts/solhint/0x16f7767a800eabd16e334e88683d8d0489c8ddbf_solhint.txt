./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:3:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:6:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:12:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:12:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:13:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:13:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:14:5: Function order is incorrect, external  function can not go after external view function (line 13) [Warning/ordering]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:14:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:14:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:15:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:15:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:16:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:16:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:17:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:17:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:18:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:19:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:23:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:25:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:25:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:29:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:33:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:34:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:34:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:39:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:44:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:44:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:44:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:48:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:52:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:53:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:65:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:71:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:71:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:71:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:75:5: Function order is incorrect, modifier definition can not go after public view function (line 71) [Warning/ordering]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:76:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:80:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:80:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:88:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:92:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:93:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:94:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:97:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:99:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:99:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:100:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:100:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:100:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:101:5: Function order is incorrect, external payable function can not go after external pure function (line 100) [Warning/ordering]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:101:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:103:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:104:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:105:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:107:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:108:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:108:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:108:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:111:1: Contract has 20 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:113:5: Main key parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:113:5: Value parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:114:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:115:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:115:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:116:5: Main key parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:116:5: Value parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:116:5: 'bots' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:117:5: Main key parameter in mapping cooldown is not named [Warning/named-parameters-mapping]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:117:5: Value parameter in mapping cooldown is not named [Warning/named-parameters-mapping]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:117:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:117:5: 'cooldown' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:118:5: 'time' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:121:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:122:5: 'fee1' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:123:5: 'fee2' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:124:5: 'percentage1' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:125:5: 'percentage2' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:126:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:127:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:129:5: 'minBalance' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:132:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:135:5: 'uniswapV2Router' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:136:5: 'uniswapV2Pair' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:137:5: 'tradingOpen' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:138:5: 'inSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:139:5: 'swapEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:145:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:159:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:159:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:159:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:163:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:163:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:163:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:167:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:167:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:167:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:171:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:171:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:175:5: Function order is incorrect, public view function can not go after public pure function (line 171) [Warning/ordering]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:175:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:175:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:179:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:179:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:184:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:184:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:188:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:188:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:193:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:193:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:195:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:195:40: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:200:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:200:5: Function changeMinBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:201:9: Provide an error message for require [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:201:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:206:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:206:5: Function changeFeeDistribution() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:207:9: Provide an error message for require [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:207:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:214:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:214:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:214:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:215:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:215:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:215:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:221:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:221:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:221:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:222:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:222:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:222:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:223:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:223:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:223:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:227:13: Provide an error message for require [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:227:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:228:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:228:105: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:230:17: Provide an error message for require [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:230:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:230:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:231:17: Provide an error message for require [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:231:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:231:40: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:232:32: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:237:17: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:237:17: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:237:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:237:25: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:254:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:259:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:264:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:269:5: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:271:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:271:96: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:274:5: 'sendETHToFee' should start with _ [Warning/private-vars-leading-underscore]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:279:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:279:5: Function openTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:280:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:284:16: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:287:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:287:5: Function setBots() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:288:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:288:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:288:44: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:293:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:293:5: Function delBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:305:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:307:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:307:5: Function manualswap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:308:9: Provide an error message for require [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:308:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:313:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:313:5: Function manualsend() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:314:9: Provide an error message for require [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:314:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:319:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:319:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:325:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:325:5: Function recoverTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:326:9: Provide an error message for require [Warning/reason-string]
./0x16f7767a800eabd16e334e88683d8d0489c8ddbf.sol:326:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]

182 problem/s (2 error/s, 180 warning/s)
