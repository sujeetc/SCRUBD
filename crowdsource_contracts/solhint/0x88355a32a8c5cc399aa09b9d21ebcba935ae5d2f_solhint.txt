./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:1:1: Found more than One contract per file. 7 contracts found! [Warning/one-contract-per-file]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:1:1: Compiler version ^0.4.25 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:5:5: 'safeSub' should start with _ [Warning/private-vars-leading-underscore]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:5:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:5:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:5:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:5:61: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:6:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:10:5: 'safeSub' should start with _ [Warning/private-vars-leading-underscore]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:10:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:10:22: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:10:29: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:10:59: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:12:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:16:5: 'safeAdd' should start with _ [Warning/private-vars-leading-underscore]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:16:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:16:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:16:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:16:61: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:17:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:18:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:18:26: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:22:5: 'safeMul' should start with _ [Warning/private-vars-leading-underscore]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:22:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:22:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:22:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:22:61: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:23:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:31:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:31:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:31:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:31:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:37:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:37:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:37:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:37:61: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:42:5: Function order is incorrect, public  function can not go after public view function (line 37) [Warning/ordering]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:42:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:42:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:42:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:51:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:51:5: Function deposit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:51:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:58:5: Main key parameter in mapping moderator is not named [Warning/named-parameters-mapping]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:58:5: Value parameter in mapping moderator is not named [Warning/named-parameters-mapping]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:61:9: Provide an error message for require [Warning/reason-string]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:66:9: Provide an error message for require [Warning/reason-string]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:71:9: Provide an error message for require [Warning/reason-string]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:80:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:80:5: Function setOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:84:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:84:5: Function setReceiver() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:88:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:88:5: Function addModerator() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:92:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:92:5: Function removeModerator() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:99:5: Main key parameter in mapping authorized is not named [Warning/named-parameters-mapping]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:99:5: Value parameter in mapping authorized is not named [Warning/named-parameters-mapping]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:102:9: Provide an error message for require [Warning/reason-string]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:110:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:110:5: Function authorize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:114:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:114:5: Function deauthorize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:124:5: GC: [_paused] on Event [Paused] could be Indexed [Warning/gas-indexed-events]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:127:9: Provide an error message for require [Warning/reason-string]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:132:9: Provide an error message for require [Warning/reason-string]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:136:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:136:5: Function pause() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:140:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:140:5: Function activate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:150:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:152:5: GC: [_token] on Event [Withdrawal] could be Indexed [Warning/gas-indexed-events]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:152:5: GC: [_amount] on Event [Withdrawal] could be Indexed [Warning/gas-indexed-events]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:152:38: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:153:5: GC: [_receiver] on Event [Deposit] could be Indexed [Warning/gas-indexed-events]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:153:5: GC: [_amount] on Event [Deposit] could be Indexed [Warning/gas-indexed-events]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:153:38: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:154:5: GC: [_receiver] on Event [Fund] could be Indexed [Warning/gas-indexed-events]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:154:5: GC: [_amount] on Event [Fund] could be Indexed [Warning/gas-indexed-events]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:154:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:156:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:162:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:164:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:164:5: Function withdraw() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:164:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:167:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:171:24: Check result of "send" call [Warning/check-send-result]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:174:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:186:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:186:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:186:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:190:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:190:5: Function deposit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:190:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:196:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:196:5: Function fund() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:196:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:197:9: Provide an error message for require [Warning/reason-string]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:197:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:198:20: Check result of "send" call [Warning/check-send-result]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:204:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:204:5: Function setCasinoContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:209:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:209:5: Function setMaxFundAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:209:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f.sol:213:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

106 problem/s (1 error/s, 105 warning/s)
