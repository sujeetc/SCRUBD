./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:1:1: Found more than One contract per file. 6 contracts found! [Warning/one-contract-per-file]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:7:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:7:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:8:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:8:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:9:5: Function order is incorrect, external  function can not go after external view function (line 8) [Warning/ordering]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:9:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:9:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:10:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:10:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:11:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:11:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:12:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:12:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:14:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:15:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:20:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:22:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:22:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:27:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:31:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:32:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:32:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:38:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:47:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:47:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:47:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:52:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:56:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:57:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:64:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:68:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:69:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:76:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:80:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:82:2: Line length must be no more than 120 but current length is 126. [Error/max-line-length]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:89:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:100:5: Function order is incorrect, internal  function can not go after internal view function (line 89) [Warning/ordering]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:101:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:101:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:105:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:105:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:105:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:108:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:112:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:112:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:116:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:117:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:120:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:120:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:121:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:121:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:121:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:121:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:125:2: Line length must be no more than 120 but current length is 149. [Error/max-line-length]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:125:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:126:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:135:17: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:151:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:157:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:157:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:157:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:161:5: Function order is incorrect, modifier definition can not go after public view function (line 157) [Warning/ordering]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:162:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:166:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:166:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:171:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:171:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:172:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:172:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:172:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:179:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:180:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:180:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:184:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:184:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:185:5: Function order is incorrect, external view function can not go after external pure function (line 184) [Warning/ordering]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:185:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:185:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:185:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:186:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:187:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:188:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:191:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:193:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:194:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:195:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:198:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:200:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:200:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:200:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:201:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:202:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:204:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:205:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:206:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:208:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:209:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:209:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:209:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:210:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:213:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:214:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:215:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:217:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:218:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:218:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:219:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:219:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:219:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:222:1: Contract has 19 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:231:5: Function order is incorrect, state variable declaration can not go after modifier definition (line 225) [Warning/ordering]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:231:5: 'CatchthemMap' should start with _ [Warning/private-vars-leading-underscore]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:231:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:234:5: 'feeOne' should start with _ [Warning/private-vars-leading-underscore]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:235:5: 'feeTwo' should start with _ [Warning/private-vars-leading-underscore]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:236:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:236:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:237:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:238:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:238:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:243:5: '_maxWalletAmount' should not start with _ [Warning/private-vars-leading-underscore]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:244:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:244:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:249:5: 'deployer' should start with _ [Warning/private-vars-leading-underscore]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:253:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:283:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:283:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:283:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:287:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:287:5: Function setMaxWalletAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:291:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:291:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:291:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:295:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:295:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:295:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:299:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:299:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:303:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:303:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:307:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:307:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:312:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:312:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:316:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:316:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:321:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:321:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:323:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:323:40: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:327:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:327:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:327:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:332:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:332:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:332:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:333:2: Line length must be no more than 120 but current length is 138. [Error/max-line-length]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:333:41: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:337:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:337:5: Function setTaxFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:342:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:342:5: Function disableBotProtectionPermanently() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:343:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:343:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:343:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:347:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:347:5: Function excludeIncludeFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:351:5: 'addRemoveFee' should start with _ [Warning/private-vars-leading-underscore]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:352:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:352:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:358:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:358:5: Function openTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:359:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:359:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:359:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:362:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:368:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:369:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:373:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:373:5: Function isExcludedFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:373:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:378:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:378:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:378:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:379:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:379:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:379:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:385:5: Function has cyclomatic complexity 8 but allowed no more than 7 [Warning/code-complexity]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:386:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:386:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:386:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:387:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:387:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:387:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:388:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:388:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:388:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:397:42: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:407:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:421:5: 'catchBalances' should start with _ [Warning/private-vars-leading-underscore]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:423:56: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:435:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:435:5: Function numberOfCaughtBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:435:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:437:52: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:439:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:440:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:440:16: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:441:17: GC: For [ count ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:446:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:446:5: Function manualSnipeBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:449:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:449:5: Function manualSwap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:458:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:464:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:469:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:478:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:478:5: Function getTokenPrice() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:478:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:485:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:485:5: Function setEthPriceToSwap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:489:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:491:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:491:5: Function recoverEthInContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:496:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:496:5: Function recoverERC20Tokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:508:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:509:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:513:5: 'map' should start with _ [Warning/private-vars-leading-underscore]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:515:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:515:5: Function get() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:515:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:515:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:519:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:519:5: Function keyExists() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:519:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:523:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:523:5: Function getIndexOfKey() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:523:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:523:62: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:530:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:530:5: Function getKeyAtIndex() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:530:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:530:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:534:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:534:5: Function size() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:534:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:534:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:538:5: Function order is incorrect, public  function can not go after public view function (line 534) [Warning/ordering]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:538:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:538:5: Function set() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:538:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:549:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:549:5: Function remove() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:555:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x072668a75ba5a0740582d44c8d55a85aadb0644a.sol:556:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

257 problem/s (6 error/s, 251 warning/s)
