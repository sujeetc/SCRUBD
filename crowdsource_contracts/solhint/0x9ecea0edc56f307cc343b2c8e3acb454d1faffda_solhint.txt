./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:19:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:19:1: Compiler version 0.4.24 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:41:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:48:3: Function order is incorrect, modifier definition can not go after constructor/initializer (line 41) [Warning/ordering]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:49:5: Provide an error message for require [Warning/reason-string]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:56:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:56:3: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:65:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:65:3: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:74:5: Provide an error message for require [Warning/reason-string]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:81:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:91:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:91:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:99:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:99:5: Function transferBZxOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:100:2: Line length must be no more than 120 but current length is 125. [Error/max-line-length]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:100:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:100:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:110:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:110:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:117:1: Function order is incorrect, interface can not go after contract definition (line 83) [Warning/ordering]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:117:1: Interface name 'NonCompliantEIP20' must start with "I" [Warning/interface-starts-with-i]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:118:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:118:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:119:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:119:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:120:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:120:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:130:5: 'eip20Transfer' should start with _ [Warning/private-vars-leading-underscore]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:139:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:156:5: 'eip20TransferFrom' should start with _ [Warning/private-vars-leading-underscore]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:166:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:183:5: 'eip20Approve' should start with _ [Warning/private-vars-leading-underscore]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:192:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:213:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:215:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:215:5: Function withdrawEther() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:215:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:217:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:222:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:227:17: Check result of "send" call [Warning/check-send-result]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:230:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:230:5: Function depositToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:230:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:233:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:251:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:251:5: Function withdrawToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:251:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:254:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:271:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:271:5: Function transferTokenFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:271:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x9ecea0edc56f307cc343b2c8e3acb454d1faffda.sol:275:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

53 problem/s (3 error/s, 50 warning/s)
