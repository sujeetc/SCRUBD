./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:1:1: Compiler version ^0.4.6 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:6:2: Main key parameter in mapping registrantsPaid is not named [Warning/named-parameters-mapping]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:6:2: Value parameter in mapping registrantsPaid is not named [Warning/named-parameters-mapping]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:6:2: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:7:2: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:8:2: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:10:2: GC: [_from] on Event [Deposit] could be Indexed [Warning/gas-indexed-events]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:10:2: GC: [_amount] on Event [Deposit] could be Indexed [Warning/gas-indexed-events]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:10:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:11:2: GC: [_to] on Event [Refund] could be Indexed [Warning/gas-indexed-events]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:11:2: GC: [_amount] on Event [Refund] could be Indexed [Warning/gas-indexed-events]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:11:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:13:2: Constructors should use the new constructor keyword. [Warning/constructor-syntax]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:13:2: 'Conference' should start with _ [Warning/private-vars-leading-underscore]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:13:2: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:19:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:19:2: Function buyTicket() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:20:7: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:21:4: "throw" is deprecated, avoid to use it [Warning/avoid-throw]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:24:3: GC: For [ numRegistrants ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:28:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:28:2: Function changeQuota() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:28:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:33:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:33:2: Function refundTicket() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:33:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:37:8: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:38:6: Check result of "send" call [Warning/check-send-result]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:40:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:41:5: GC: For [ numRegistrants ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:47:2: 'destroy' should start with _ [Warning/private-vars-leading-underscore]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:47:2: Explicitly mark visibility in function [Warning/func-visibility]
./0x7fe180e63198e50057c3f2817d058e8904c650e3.sol:49:4: Use "selfdestruct" instead of deprecated "suicide" [Warning/avoid-suicide]

33 problem/s (1 error/s, 32 warning/s)
