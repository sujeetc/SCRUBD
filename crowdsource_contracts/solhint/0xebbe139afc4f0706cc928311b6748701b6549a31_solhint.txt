./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:4:1: Compiler version ^0.4.24 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:8:5: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:10:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:12:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:13:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:15:5: Explicitly mark visibility of state [Warning/state-visibility]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:15:5: 'owner' should start with _ [Warning/private-vars-leading-underscore]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:23:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:28:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:28:5: Fallback function must be simple [Warning/no-complex-fallback]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:29:9: Provide an error message for require [Warning/reason-string]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:29:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:37:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:37:5: 'Sort' should start with _ [Warning/private-vars-leading-underscore]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:39:8: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:41:5: Check result of "send" call [Warning/check-send-result]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:42:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:43:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:44:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:45:5: GC: For [ Tx ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:46:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:47:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:50:5: Function order is incorrect, public  function can not go after internal  function (line 37) [Warning/ordering]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:50:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:50:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:50:5: Function Count() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:52:13: Check result of "send" call [Warning/check-send-result]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:52:13: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:53:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xebbe139afc4f0706cc928311b6748701b6549a31.sol:53:13: GC: For [ counter ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]

30 problem/s (1 error/s, 29 warning/s)
