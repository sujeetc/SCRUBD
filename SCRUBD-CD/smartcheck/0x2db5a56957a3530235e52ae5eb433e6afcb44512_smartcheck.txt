./0x2db5a56957a3530235e52ae5eb433e6afcb44512.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 428
column: 26
content: (address(0))

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 588
column: 8
content: for(uint256i=0;i<_poolList.length;){IPool(_poolList[i]).stakeNFT(InputArray[i].tokenIds,msg.sender);emitStakeNFT(msg.sender,_poolList[i],InputArray[i].tokenIds);unchecked<missing ';'>{++i;}}

ruleId: SOLIDITY_EXTRA_GAS_IN_LOOPS
patternId: d3j11j
severity: 1
line: 615
column: 8
content: for(uint256i=0;i<_poolList.length;){uint256_stakeFTprice=IPool(_poolList[i]).stakeFTprice();address_paymentToken=IPool(_poolList[i]).paymentToken();uint256_totalFee=IPool(_poolList[i]).getCalcSellInfo(_userSellNumList[i],_stakeFTprice);if(_paymentToken==address(0)){require(_remainFee>=_totalFee,"not enogh value");_remainFee-=_totalFee;IPool(_poolList[i]).stakeFT<missing ';'>{value:_totalFee}(_userSellNumList[i],msg.sender);}else{IPool(_poolList[i]).stakeFT(_userSellNumList[i],msg.sender);}emitStakeFT(msg.sender,_poolList[i],_userSellNumList[i],_totalFee);unchecked<missing ';'>{++i;}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 9
column: 4
content: functionfmul(uint256x,uint256y,uint256baseUnit)internalpurereturns(uint256z){assembly{z:=mul(x,y)ifiszero(or(iszero(x),eq(div(z,x),y))){revert(0,0)}z:=div(z,baseUnit)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 28
column: 4
content: functionfdiv(uint256x,uint256y,uint256baseUnit)internalpurereturns(uint256z){assembly{z:=mul(x,baseUnit)ifor(iszero(y),iszero(or(iszero(x),eq(div(z,x),baseUnit)))){revert(0,0)}z:=div(z,y)}}

ruleId: SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN
patternId: 58bdd3
severity: 1
line: 51
column: 4
content: functionfpow(uint256x,uint256n,uint256baseUnit)internalpurereturns(uint256z){assembly{switchxcase0{switchncase0{z:=baseUnit}default{z:=0}}default{switchmod(n,2)case0{z:=baseUnit}default{z:=x}lethalf:=div(baseUnit,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,baseUnit)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,baseUnit)}}}}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 588
column: 8
content: for(uint256i=0;i<_poolList.length;){IPool(_poolList[i]).stakeNFT(InputArray[i].tokenIds,msg.sender);emitStakeNFT(msg.sender,_poolList[i],InputArray[i].tokenIds);unchecked<missing ';'>{++i;}}

ruleId: SOLIDITY_GAS_LIMIT_IN_LOOPS
patternId: f6f853
severity: 2
line: 615
column: 8
content: for(uint256i=0;i<_poolList.length;){uint256_stakeFTprice=IPool(_poolList[i]).stakeFTprice();address_paymentToken=IPool(_poolList[i]).paymentToken();uint256_totalFee=IPool(_poolList[i]).getCalcSellInfo(_userSellNumList[i],_stakeFTprice);if(_paymentToken==address(0)){require(_remainFee>=_totalFee,"not enogh value");_remainFee-=_totalFee;IPool(_poolList[i]).stakeFT<missing ';'>{value:_totalFee}(_userSellNumList[i],msg.sender);}else{IPool(_poolList[i]).stakeFT(_userSellNumList[i],msg.sender);}emitStakeFT(msg.sender,_poolList[i],_userSellNumList[i],_totalFee);unchecked<missing ';'>{++i;}}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 259
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 344
column: 16
content: ^

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 371
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 387
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 463
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 481
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 484
column: 52
content: private

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 9
column: 4
content: functionfmul(uint256x,uint256y,uint256baseUnit)internalpurereturns(uint256z){assembly{z:=mul(x,y)ifiszero(or(iszero(x),eq(div(z,x),y))){revert(0,0)}z:=div(z,baseUnit)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 28
column: 4
content: functionfdiv(uint256x,uint256y,uint256baseUnit)internalpurereturns(uint256z){assembly{z:=mul(x,baseUnit)ifor(iszero(y),iszero(or(iszero(x),eq(div(z,x),baseUnit)))){revert(0,0)}z:=div(z,y)}}

ruleId: SOLIDITY_SHOULD_NOT_BE_PURE
patternId: 11314f
severity: 1
line: 51
column: 4
content: functionfpow(uint256x,uint256n,uint256baseUnit)internalpurereturns(uint256z){assembly{switchxcase0{switchncase0{z:=baseUnit}default{z:=0}}default{switchmod(n,2)case0{z:=baseUnit}default{z:=x}lethalf:=div(baseUnit,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,baseUnit)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,baseUnit)}}}}}

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 361
column: 55
content: bytescalldata

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 14
column: 8
content: assembly{z:=mul(x,y)ifiszero(or(iszero(x),eq(div(z,x),y))){revert(0,0)}z:=div(z,baseUnit)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 33
column: 8
content: assembly{z:=mul(x,baseUnit)ifor(iszero(y),iszero(or(iszero(x),eq(div(z,x),baseUnit)))){revert(0,0)}z:=div(z,y)}

ruleId: SOLIDITY_USING_INLINE_ASSEMBLY
patternId: 109cd5
severity: 1
line: 56
column: 8
content: assembly{switchxcase0{switchncase0{z:=baseUnit}default{z:=0}}default{switchmod(n,2)case0{z:=baseUnit}default{z:=x}lethalf:=div(baseUnit,2)for{n:=div(n,2)}n{n:=div(n,2)}{letxx:=mul(x,x)ifiszero(eq(div(xx,x),x)){revert(0,0)}letxxRound:=add(xx,half)iflt(xxRound,xx){revert(0,0)}x:=div(xxRound,baseUnit)ifmod(n,2){letzx:=mul(z,x)ifand(iszero(iszero(x)),iszero(eq(div(zx,x),z))){revert(0,0)}letzxRound:=add(zx,half)iflt(zxRound,zx){revert(0,0)}z:=div(zxRound,baseUnit)}}}}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 394
column: 4
content: constructor(){_transferOwnership(_msgSender());}

SOLIDITY_VISIBILITY :1
SOLIDITY_PRAGMAS_VERSION :3
SOLIDITY_FUNCTIONS_RETURNS_TYPE_AND_NO_RETURN :3
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :4
SOLIDITY_EXTRA_GAS_IN_LOOPS :2
SOLIDITY_ADDRESS_HARDCODED :1
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_GAS_LIMIT_IN_LOOPS :2
SOLIDITY_USING_INLINE_ASSEMBLY :3
SOLIDITY_SHOULD_NOT_BE_PURE :3
