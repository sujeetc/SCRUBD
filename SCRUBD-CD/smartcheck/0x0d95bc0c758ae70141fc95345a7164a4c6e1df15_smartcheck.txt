./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol
jar:file:/usr/local/lib/node_modules/@smartdec/smartcheck/jdeploy-bundle/smartcheck-2.0-jar-with-dependencies.jar!/solidity-rules.xmlruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: adc165
severity: 1
line: 612
column: 65
content: 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 638
column: 32
content: 0xdead

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 642
column: 42
content: 0xdead

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: b140cd
severity: 1
line: 756
column: 30
content: 0xdead

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 154
column: 28
content: (address(0),account,amount)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 160
column: 27
content: (address(0),account,amount)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 166
column: 28
content: (account,address(0),amount)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 177
column: 27
content: (account,address(0),amount)

ruleId: SOLIDITY_ADDRESS_HARDCODED
patternId: a91b18
severity: 1
line: 238
column: 26
content: (address(0))

ruleId: SOLIDITY_ERC20_APPROVE
patternId: af782c
severity: 2
line: 95
column: 4
content: functionapprove(addressspender,uint256amount)publicvirtualoverridereturns(bool){addressowner=_msgSender();_approve(owner,spender,amount);returntrue;}

ruleId: SOLIDITY_LOCKED_MONEY
patternId: 30281d
severity: 3
line: 569
column: 0
content: contractLagardeisERC20,Ownable{usingSafeMathforuint256;IUniswapV2Router02privateuniswapV2Router;addressprivateuniswapV2Pair;mapping(address=>bool)private_isBlacklisted;boolprivate_swapping;uint256private_launchTime;uint256private_launchBlock;addressprivatefeeWallet;uint256publicmaxTransactionAmount;uint256publicswapTokensAtAmount;uint256publicmaxWallet;boolpubliclimitsInEffect=true;boolpublictradingActive=false;uint256deadBlocks=0;mapping(address=>uint256)private_holderLastTransferTimestamp;boolpublictransferDelayEnabled=true;uint256publictotalFees;uint256private_marketingFee;uint256private_liquidityFee;uint256private_tokensForMarketing;uint256private_tokensForLiquidity;mapping(address=>bool)private_isExcludedFromFees;mapping(address=>bool)private_isExcludedMaxTransactionAmount;mapping(address=>uint256)private_holderFirstBuyTimestamp;mapping(address=>bool)privateautomatedMarketMakerPairs;eventExcludeFromFees(addressindexedaccount,boolisExcluded);eventSetAutomatedMarketMakerPair(addressindexedpair,boolindexedvalue);eventfeeWalletUpdated(addressindexednewWallet,addressindexedoldWallet);eventSwapAndLiquify(uint256tokensSwapped,uint256ethReceived,uint256tokensIntoLiquidity);constructor()ERC20("Lagarde","ECB"){IUniswapV2Router02_uniswapV2Router=IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);excludeFromMaxTransaction(address(_uniswapV2Router),true);uniswapV2Router=_uniswapV2Router;uniswapV2Pair=IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH());excludeFromMaxTransaction(address(uniswapV2Pair),true);_setAutomatedMarketMakerPair(address(uniswapV2Pair),true);uint256marketingFee=7;uint256liquidityFee=1;<missing ';'>uint256<missing ';'>totalSupply=1<missing ';'>_000_000_000*1e18;maxTransactionAmount=totalSupply*2/100;maxWallet=totalSupply*4/100;swapTokensAtAmount=totalSupply*15/10000;_marketingFee=marketingFee;_liquidityFee=liquidityFee;totalFees=_marketingFee+_liquidityFee;feeWallet=address(owner());excludeFromFees(owner(),true);excludeFromFees(address(this),true);excludeFromFees(address(0xdead),true);excludeFromMaxTransaction(owner(),true);excludeFromMaxTransaction(address(this),true);excludeFromMaxTransaction(address(0xdead),true);_mint(address(this),totalSupply);}functionestablishTrading(uint256_percent)externalonlyOwnerpayable{require(_percent<=100,'must be between 0-100%');require(_launchTime==0,'already launched');require(_percent==0||msg.value>0,'need ETH for initial LP');deadBlocks=0;uint256_lpSupply=(totalSupply()*_percent)/100;uint256_leftover=totalSupply()-_lpSupply;if(_lpSupply>0){_addLp(_lpSupply,msg.value);}if(_leftover>0){_transfer(address(this),owner(),_leftover);}tradingActive=true;_launchTime=block.timestamp;_launchBlock=block.number;}function_addLp(uint256tokenAmount,uint256ethAmount)private{_approve(address(this),address(uniswapV2Router),tokenAmount);uniswapV2Router.addLiquidityETH<missing ';'>{value:ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp);}functionremoveRestrictions()externalonlyOwnerreturns(bool){limitsInEffect=false;returntrue;}functiondisableTransferDelay()externalonlyOwnerreturns(bool){transferDelayEnabled=false;returntrue;}functionupdateSwapTokensAtAmount(uint256newAmount)externalonlyOwnerreturns(bool){require(newAmount>=totalSupply()*1/100000,"Swap amount cannot be lower than 0.001% total supply.");require(newAmount<=totalSupply()*5/1000,"Swap amount cannot be higher than 0.5% total supply.");swapTokensAtAmount=newAmount;returntrue;}functionexcludeFromMaxTransaction(addressupdAds,boolisEx)publiconlyOwner{_isExcludedMaxTransactionAmount[updAds]=isEx;}functionchangeFeeSettings(uint256marketingFee,uint256liquidityFee)externalonlyOwner{_marketingFee=marketingFee;_liquidityFee=liquidityFee;totalFees=_marketingFee+_liquidityFee;require(totalFees<=15,"Must keep fees at 15% or less");}functionexcludeFromFees(addressaccount,boolexcluded)publiconlyOwner{_isExcludedFromFees[account]=excluded;emitExcludeFromFees(account,excluded);}functionsetAutomatedMarketMakerPair(addresspair,boolvalue)publiconlyOwner{require(pair!=uniswapV2Pair,"The pair cannot be removed from automatedMarketMakerPairs");_setAutomatedMarketMakerPair(pair,value);}function_setAutomatedMarketMakerPair(addresspair,boolvalue)private{automatedMarketMakerPairs[pair]=value;emitSetAutomatedMarketMakerPair(pair,value);}functionupdateFeeWallet(addressnewWallet)externalonlyOwner{emitfeeWalletUpdated(newWallet,feeWallet);feeWallet=newWallet;}functionisExcludedFromFees(addressaccount)publicviewreturns(bool){return_isExcludedFromFees[account];}functionisSniper(addressaddr)publicviewreturns(bool){return_isBlacklisted[addr];}function_transfer(addressfrom,addressto,uint256amount)internaloverride{require(from!=address(0),"ERC20: transfer from the zero address");require(to!=address(0),"ERC20: transfer to the zero address");require(!_isBlacklisted[from],"Your address has been marked as a sniper, you are unable to transfer or swap.");if(amount==0){super._transfer(from,to,0);return;}if(tradingActive){require(block.number>=_launchBlock+deadBlocks,"NOT BOT");}if(limitsInEffect){if(from!=owner()&&to!=owner()&&to!=address(0)&&to!=address(0xdead)&&!_swapping){if(!tradingActive){require(_isExcludedFromFees[from]||_isExcludedFromFees[to],"Trading is not active.");}if(balanceOf(to)==0&&_holderFirstBuyTimestamp[to]==0){_holderFirstBuyTimestamp[to]=block.timestamp;}if(transferDelayEnabled){if(to!=owner()&&to!=address(uniswapV2Router)&&to!=address(uniswapV2Pair)){require(_holderLastTransferTimestamp[tx.origin]<block.number,"_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.");_holderLastTransferTimestamp[tx.origin]=block.number;}}if(automatedMarketMakerPairs[from]&&!_isExcludedMaxTransactionAmount[to]){require(amount<=maxTransactionAmount,"Buy transfer amount exceeds the maxTransactionAmount.");require(amount+balanceOf(to)<=maxWallet,"Max wallet exceeded");}elseif(automatedMarketMakerPairs[to]&&!_isExcludedMaxTransactionAmount[from]){require(amount<=maxTransactionAmount,"Sell transfer amount exceeds the maxTransactionAmount.");}elseif(!_isExcludedMaxTransactionAmount[to]){require(amount+balanceOf(to)<=maxWallet,"Max wallet exceeded");}}}uint256contractTokenBalance=balanceOf(address(this));boolcanSwap=contractTokenBalance>=swapTokensAtAmount;if(canSwap&&!_swapping&&!automatedMarketMakerPairs[from]&&!_isExcludedFromFees[from]&&!_isExcludedFromFees[to]){_swapping=true;swapBack();_swapping=false;}booltakeFee=!_swapping;if(_isExcludedFromFees[from]||_isExcludedFromFees[to]){takeFee=false;}uint256fees=0;if(takeFee){fees=amount.mul(totalFees).div(100);_tokensForLiquidity+=fees*_liquidityFee/totalFees;_tokensForMarketing+=fees*_marketingFee/totalFees;if(fees>0){super._transfer(from,address(this),fees);}amount-=fees;}super._transfer(from,to,amount);}function_swapTokensForEth(uint256tokenAmount)private{address[]memorypath=newaddress[](2);path[0]=address(this);path[1]=uniswapV2Router.WETH();_approve(address(this),address(uniswapV2Router),tokenAmount);uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp);}function_addLiquidity(uint256tokenAmount,uint256ethAmount)private{_approve(address(this),address(uniswapV2Router),tokenAmount);uniswapV2Router.addLiquidityETH<missing ';'>{value:ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp);}functionswapBack()private{uint256contractBalance=balanceOf(address(this));uint256totalTokensToSwap=_tokensForLiquidity+_tokensForMarketing;if(contractBalance==0||totalTokensToSwap==0)return;if(contractBalance>swapTokensAtAmount){contractBalance=swapTokensAtAmount;}uint256liquidityTokens=contractBalance*_tokensForLiquidity/totalTokensToSwap/2;uint256amountToSwapForETH=contractBalance.sub(liquidityTokens);uint256initialETHBalance=address(this).balance;_swapTokensForEth(amountToSwapForETH);uint256ethBalance=address(this).balance.sub(initialETHBalance);uint256ethForMarketing=ethBalance.mul(_tokensForMarketing).div(totalTokensToSwap);uint256ethForLiquidity=ethBalance-ethForMarketing;_tokensForLiquidity=0;_tokensForMarketing=0;(boolsuccess,)=address(feeWallet).call<missing ';'>{value:ethForMarketing}("");success=false;if(liquidityTokens>0&&ethForLiquidity>0){_addLiquidity(liquidityTokens,ethForLiquidity);emitSwapAndLiquify(amountToSwapForETH,ethForLiquidity,_tokensForLiquidity);}}functionteamMessage(stringmemoryinput)externalonlyOwner{}functionforceSwap()externalonlyOwner{_swapTokensForEth(balanceOf(address(this)));(boolsuccess,)=address(feeWallet).call<missing ';'>{value:address(this).balance}("");success=false;}functionforceSend()externalonlyOwner{(boolsuccess,)=address(feeWallet).call<missing ';'>{value:address(this).balance}("");success=false;}receive()externalpayable{<missing ';'>}

ruleId: SOLIDITY_OVERPOWERED_ROLE
patternId: j83hf7
severity: 2
line: 711
column: 4
content: functionsetAutomatedMarketMakerPair(addresspair,boolvalue)publiconlyOwner{require(pair!=uniswapV2Pair,"The pair cannot be removed from automatedMarketMakerPairs");_setAutomatedMarketMakerPair(pair,value);}

ruleId: SOLIDITY_PRAGMAS_VERSION
patternId: 23fc32
severity: 1
line: 5
column: 16
content: ^

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 50
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 52
column: 52
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 54
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 56
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 57
column: 11
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 220
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 572
column: 23
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 573
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 575
column: 29
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 576
column: 9
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 577
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 578
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 580
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 590
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 594
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 595
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 597
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 598
column: 12
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 600
column: 29
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 601
column: 29
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 602
column: 32
content: private

ruleId: SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA
patternId: 5616b2
severity: 1
line: 603
column: 29
content: private

ruleId: SOLIDITY_SAFEMATH
patternId: 837cac
severity: 1
line: 570
column: 4
content: usingSafeMathforuint256;

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 255
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 263
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 270
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 279
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 286
column: 64
content: (bool,uint256)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 384
column: 49
content: (uint112reserve0,uint112reserve1,uint32blockTimestampLast)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 390
column: 47
content: (uintamount0,uintamount1)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 412
column: 23
content: (uintamountA,uintamountB,uintliquidity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 420
column: 31
content: (uintamountToken,uintamountETH,uintliquidity)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 429
column: 23
content: (uintamountA,uintamountB)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 437
column: 23
content: (uintamountToken,uintamountETH)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 447
column: 23
content: (uintamountA,uintamountB)

ruleId: SOLIDITY_SHOULD_RETURN_STRUCT
patternId: 83hf3l
severity: 1
line: 456
column: 23
content: (uintamountToken,uintamountETH)

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 769
column: 61
content: tx.origin

ruleId: SOLIDITY_TX_ORIGIN
patternId: 12e802
severity: 2
line: 770
column: 53
content: tx.origin

ruleId: SOLIDITY_UPGRADE_TO_050
patternId: 341gim
severity: 1
line: 44
column: 55
content: bytescalldata

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 60
column: 4
content: constructor(stringmemoryname_,stringmemorysymbol_){_name=name_;_symbol=symbol_;}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 224
column: 4
content: constructor(){_transferOwnership(_msgSender());}

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 457
column: 4
content: functionswapExactTokensForTokens(uintamountIn,uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 464
column: 4
content: functionswapTokensForExactTokens(uintamountOut,uintamountInMax,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 471
column: 4
content: functionswapExactETHForTokens(uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 475
column: 4
content: functionswapTokensForExactETH(uintamountOut,uintamountInMax,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 478
column: 4
content: functionswapExactTokensForETH(uintamountIn,uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 481
column: 4
content: functionswapETHForExactTokens(uintamountOut,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 512
column: 4
content: functionswapExactTokensForTokensSupportingFeeOnTransferTokens(uintamountIn,uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 519
column: 4
content: functionswapExactETHForTokensSupportingFeeOnTransferTokens(uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 525
column: 4
content: functionswapExactTokensForETHSupportingFeeOnTransferTokens(uintamountIn,uintamountOutMin,address[]calldata<missing ')'>

ruleId: SOLIDITY_VISIBILITY
patternId: 910067
severity: 1
line: 611
column: 4
content: constructor()ERC20("Lagarde","ECB"){IUniswapV2Router02_uniswapV2Router=IUniswapV2Router02(0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D);excludeFromMaxTransaction(address(_uniswapV2Router),true);uniswapV2Router=_uniswapV2Router;uniswapV2Pair=IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH());excludeFromMaxTransaction(address(uniswapV2Pair),true);_setAutomatedMarketMakerPair(address(uniswapV2Pair),true);uint256marketingFee=7;uint256liquidityFee=1;<missing ';'>uint256<missing ';'>totalSupply=1<missing ';'>_000_000_000*1e18;maxTransactionAmount=totalSupply*2/100;maxWallet=totalSupply*4/100;swapTokensAtAmount=totalSupply*15/10000;_marketingFee=marketingFee;_liquidityFee=liquidityFee;totalFees=_marketingFee+_liquidityFee;feeWallet=address(owner());excludeFromFees(owner(),true);excludeFromFees(address(this),true);excludeFromFees(address(0xdead),true);excludeFromMaxTransaction(owner(),true);excludeFromMaxTransaction(address(this),true);excludeFromMaxTransaction(address(0xdead),true);_mint(address(this),totalSupply);}

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 460
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 461
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 462
column: 8
content: uintdeadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 463
column: 23
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 467
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 468
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 469
column: 8
content: uintdeadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 470
column: 23
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 471
column: 73
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 471
column: 79
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 471
column: 91
content: uintdeadline)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 474
column: 12
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 475
column: 88
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 475
column: 94
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 475
column: 106
content: uintdeadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 477
column: 12
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 478
column: 88
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 478
column: 94
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 478
column: 106
content: uintdeadline)externalreturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 480
column: 12
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 481
column: 70
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 481
column: 76
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 481
column: 88
content: uintdeadline)externalpayablereturns

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 484
column: 12
content: (uint[]memoryamounts);

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 515
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 516
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 517
column: 8
content: uintdeadline)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 521
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 522
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 523
column: 8
content: uintdeadline)externalpayable;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 528
column: 27
content: path,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 529
column: 8
content: addressto,

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 530
column: 8
content: uintdeadline)external;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 588
column: 4
content: uint256deadBlocks=0;

ruleId: SOLIDITY_VISIBILITY
patternId: b51ce0
severity: 1
line: 901
column: 4
content: receive

SOLIDITY_VISIBILITY :47
SOLIDITY_SAFEMATH :1
SOLIDITY_OVERPOWERED_ROLE :1
SOLIDITY_PRAGMAS_VERSION :1
SOLIDITY_LOCKED_MONEY :1
SOLIDITY_PRIVATE_MODIFIER_DONT_HIDE_DATA :22
SOLIDITY_ADDRESS_HARDCODED :9
SOLIDITY_UPGRADE_TO_050 :1
SOLIDITY_SHOULD_RETURN_STRUCT :13
SOLIDITY_TX_ORIGIN :2
SOLIDITY_ERC20_APPROVE :1
