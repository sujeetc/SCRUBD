Smart Contract,Function Name,RENT,UE,is_student,Comments
0x000000000000541e251335090ac5b47176af4f7e,dexBlue.spendGasTokens,1,1,1,REENT -- Multi call bug---------- No REENT: no ether involved
0x000000000000541e251335090ac5b47176af4f7e,dexBlueSettlementModule.matchOrderWithReserve,1,,0,REENT -- balances[order.sellToken][order.signee]
0x000000000000541e251335090ac5b47176af4f7e,dexBlueSettlementModule.matchOrderWithReserveWithData,1,,0,REENT -- balances[order.sellToken][order.signee]
0x000000000000541e251335090ac5b47176af4f7e,dexBlueSettlementModule.settleRingTrade,1,,0,REENT -- balances[trades[i].giveToken][reserve]
0x000000000000541e251335090ac5b47176af4f7e,dexBlueSettlementModule.settleRingTradeWithData,1,,0,REENT -- balances[trades[i].giveToken][reserve]
0x000000000000541e251335090ac5b47176af4f7e,dexBlueSettlementModule.swapWithReserve,0,,0,
0x0000000000b3f879cb30fe243b4dfee438691c04,GasToken2.destroyChildren,1,,0,REENT -- Multi call bug
0x00195777bed7025e78819156281192c85fb3cf9b,GAME.startRaffle,1,0,1,---------- REENT -- state var jackpot
0x0030f75e27f6df16383f47ae11ae34abc21f5f2c,TYRANT.internalTransfer,1,,0,
0x0043a4a809be33afa17c1e3e37e19977622e4700,WithdrawableV2._withdrawAllSurcharges,1,0,1,--------
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain._mintFarmTokenAmount,1,,0,
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain._removeLiquidity,1,,0,"REENT -- _safeTransfer(setupInfo.liquidityPoolTokenAddress, exitFeeWallet, fee);"
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain._toggleSetup,1,0,1,"REENT -- require(block.number > _setupsInfo[setup.infoIndex].startBlock, ""Too early for this setup"");--------"
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain.addLiquidity,0,,0,No REENT --- no ext call
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain.openPosition,1,0,1,--------
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain.unlock,1,,0,
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain.withdrawLiquidity,1,,0,"REENT -- withdrawReward, delete setups[]"
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain.withdrawReward,1,0,1,REENT -- delete _positions[positionId];--------
0x009f3de1e8878cda9c2e94a6ce6084d9ca86425c,WalletLibrary.confirm,0,0,1,no REENT -- onlymanyowners modifier---------- No REENT: modifier onlymanyowner
0x00b25822e3b8f8720b327f2df8e7c6f96271c8dc,JINJAINU.ContractTransfer,0,,0,no REENT -- ext call at the end
0x00b6358d1ac8d3731defd6b4d593b6ba04f9b8ea,EtherRolling.emergencyWithdraw,1,,0,
0x00b6358d1ac8d3731defd6b4d593b6ba04f9b8ea,EtherRolling.withdraw,1,0,1,--------
0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922,Venify._transfer,0,,0,No REENT --- Sends ETH to a fixed address
0x00fe8ef58dc8282cac6e1d275acf0821c5084e88,Wallet.confirm,0,0,1,No REENT --- modifier onlymanywoners---------- No REENT : modifieronlymanyowners
0x01fd49a2042e962eb9b4f7fa1efaa8eac4cefeed,Finplether.doInvest,1,1,1,--------
0x02dd48ff449f57a4632c39068e0ca0f4325c3a8d,CB_BANK.Collect,1,0,1,---------- Reason for REENT: state var. acc.balance
0x0321be5f545ea569424aace4dc08d60f467229ac,BlackErc20.mintProof,1,,0,
0x03358425ada4620246dd703dc1f2246b8e148d22,BoomerangLiquidity.payout,1,1,1,--------UE: participants[payoutOrder].etherAddress.call.value(payoutToSend).gas(1000000)(); -- not checked -- REENT: payoutOrder
0x03fb31bb6def4dd3a7ea3b0fa6bdecc940e75795,BrokerV2.bid,1,,0,
0x03fb31bb6def4dd3a7ea3b0fa6bdecc940e75795,BrokerV2.buy,1,,0,
0x03fb31bb6def4dd3a7ea3b0fa6bdecc940e75795,BrokerV2.collect,1,,0,
0x03fb31bb6def4dd3a7ea3b0fa6bdecc940e75795,BrokerV2.withdrawERC20,0,1,1,No REENT because of onlyOwner--------
0x0453aa2dafff030614d9afef6c724ec2bee60876,SwifyStaking.closePosition,0,1,1,No REENT because of modifier non reentrant--------
0x0461c4e4b916bfc9449f853c7a854033b43c3a6c,Auction.start,0,1,1,No REENT because of modifier lock---------- UE: WRAPPED_ETH.deposit.value(balance)();
0x049658b3cc6ec345aaf2be7233a33da24ee82150,Bozu.internalTransfer,1,,0,
0x04d660832910ff492e940daff9ec7b3497e886ac,Revolution2.doInvest,1,1,1,--------
0x04f062809b244e37e7fdc21d9409469c989c2342,Joyso.migrateByAdmin_DQV,0,1,1,No REENT -- onlyAdmin--------
0x051bda85fbc58ace9d6060ba9488abe120ac072d,CRYPTOVATOR._transfer,0,,0,
0x0544ada225de796baa4030877314a96faacea7fc,ExclusiveDividendTracker._withdrawDividendOfUser,0,0,1,--------
0x0544ada225de796baa4030877314a96faacea7fc,ExclusiveDividendTracker.process,0,0,1,--------
0x058a144951e062fc14f310057d2fd9ef0cf5095b,HourglassX.reinvestPartial,0,,0,
0x05af72594440cf75c0fdcbbd9993fc26f62c7afc,TwelveHourAuction.buy,1,,0,REENT -- repay = ...g.keyLevel
0x06012c8cf97bead5deae237070f9587f8e7a266d,KittyBreeding.giveBirth,1,1,1,REENT -- mixGenes can reenter--------
0x0608d0d987ca8371af38fa0b6e028760110b987e,DeflatLottoBurn.fallback,1,0,1,---------- Reason for REENT: playerPool.length
0x064c81842a12127759b85f3b2d261abcacc2bfb0,VotingChallenge.sendReward,1,1,1,REENT -- voters[to].fullVotes[winner]--------
0x0654b7f747c9ee9f5fb5eba443e9fe64f1fa77ef,SAFX._transferFrom,0,,0,
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.DayQuKuan,1,0,1,--------
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.DayQuKuanUsdt,1,,0,
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.quhuiBET,1,,0,
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.setETH,1,,0,
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.setUSDT,1,,0,
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.setVoteFandui,1,,0,
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.setVoteZancheng,1,0,1,--------
0x06ef66ab59919e1c3b25ad4732a002f644fe0f8e,MonkeyScam.determinePID,1,,0,REENT -- getPlayerName can reenter
0x06ef66ab59919e1c3b25ad4732a002f644fe0f8e,MonkeyScam.endRound,0,0,1,No REENT --sending Eth to fixed address---------- No REENT: address MonkeyKingCorp is fixed
0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8,charge.claimFarmedToken,1,,0,
0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7,Multiplier.pay,1,1,1,--------
0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7,Multiplier.refunding,1,1,1,--------
0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7,Multiplier.singleRefunding,1,1,1,--------
0x07c1c8c2bce6290daa554118b7d208041615ce54,RC.refundEther,0,,0,No REENT due to modifier
0x07c1c8c2bce6290daa554118b7d208041615ce54,RC.takeEther,0,,0,
0x07c1c8c2bce6290daa554118b7d208041615ce54,RCpro.refundEther,0,,0,No REENT -- modifier 
0x07c1c8c2bce6290daa554118b7d208041615ce54,RCpro.takeEther,0,,0,
0x07ef026be5f1452f494e7af1b13a3333d5cd2d23,DividendDistributor.distributeDividend,1,1,1,--------
0x07ef026be5f1452f494e7af1b13a3333d5cd2d23,IceMachine._transferFrom,1,,0,
0x081d8a340d384cffca0c2dafbf45020d760d7576,SOLIDBLOCK.transferFrom,0,,0,
0x08715190074e24cf2145e8a61b784a1b5ac9a505,DogeviathanBasic.createCollectible,1,0,1,--------
0x08759550264b7f8078d95eff8a0577001c833483,Canvas.buy,1,1,1,---------- gas limit may change in future
0x08cce68cfe23bbf13e3151c2a43dcc02623710d6,MoneyPrinter.distributeDividend,1,1,1,--------
0x08cce68cfe23bbf13e3151c2a43dcc02623710d6,SaylorsLastHope._transfer,0,,0,"No REENT -- 2nd external call at the end, 1st begining ext call does not reenter"
0x091ac882e57b89e071c8b153be3aab668a80303d,Town.claimExternalTokens,1,0,1,--------
0x091ac882e57b89e071c8b153be3aab668a80303d,Town.claimFunds,1,,0,
0x091ac882e57b89e071c8b153be3aab668a80303d,Town.getTownTokens,1,0,1,--------
0x091ac882e57b89e071c8b153be3aab668a80303d,Town.remuneration,1,0,1,REENT -- if (restOfTokens > 0) {--------
0x092e038af43a42e0332810db3f50b923fb256ff0,Free3.claim,1,0,1,---------- REENT: stake.totalStaked
0x097a5e3d974332aa5612675caaaeb117091dc743,CoolUncle.distributeDividend,1,1,1,REENT -- shares[shareholder].totalExcluded is used in getUnpaidEarnings----------No REENT: protected by modifiers
0x097a5e3d974332aa5612675caaaeb117091dc743,ShibaUncle._transfer,0,,0,"No REENT -- external call at the end, begining ext call does not reenter"
0x099764910a38190bbd317857e635e6f461b11119,IronHands.payout,1,0,1,---------- REENT: payoutOrder
0x09a80172ed7335660327cd664876b5df6fe06108,Distribution.doPayments,1,,0,
0x09a80172ed7335660327cd664876b5df6fe06108,OMPxContract.getFee,1,1,1,--------
0x09ab651217b86d1ee7236e0fad1ebb19185fe769,MonkeyScam.determinePID,1,,0,REENT -- getPlayerName can reenter
0x09ab651217b86d1ee7236e0fad1ebb19185fe769,MonkeyScam.endRound,0,0,1,No REENT -- send Eth to fixed address--------
0x09d063d9950cdf02d545ec6fb0166491e3ea4fd2,BEAST._transfer,0,,0,
0x09d063d9950cdf02d545ec6fb0166491e3ea4fd2,BensRevival.distributeDividend,1,1,1,----------No REENT: protected by modifiers
0x09f5f9413cefd61044db02940540155507bdcc55,TwoCoinsOneMoonGame.withdraw,0,1,1,"No REENT -- 1st cann sends eth to fixed address, 2nd call is at the end--------"
0x09f6a183dc0375ccf8032c367881f3aafb5342ef,Bussiness.buy,1,1,1,--------
0x09f6a183dc0375ccf8032c367881f3aafb5342ef,Bussiness.buyByUsdt,1,,0,
0x09f6a183dc0375ccf8032c367881f3aafb5342ef,Bussiness.removePrice,0,,0,
0x0a42ef719ee77820993b27369089ae2c6bd6ced5,dapMultisig.executeTokenTxn,0,,0,No REENT -- modifier onlyOwner
0x0a42ef719ee77820993b27369089ae2c6bd6ced5,dapMultisig.executeTxn,0,0,1,No REENT -- modifier onlyOwner--------
0x0a5a0a14419f9db1da68cf2f550720e5df49d4fe,YZYVault._sendLotteryAmount,1,1,1,--------
0x0a5a0a14419f9db1da68cf2f550720e5df49d4fe,YZYVault.stake,0,0,1,No REENT -- dynamic analysis is needed to detect the bug -- staker.stakedAmount = staker.stakedAmount.add(newBalance);--------
0x0a5a0a14419f9db1da68cf2f550720e5df49d4fe,YZYVault.unstake,1,1,1,REENT -- staker.stakedAmount--------
0x0a5b38ac2d24c4fafc19ceb2591b70ece0d005d1,Daoclub.liquidate,1,0,1,--------REENT: _amountOfGrandTotalLiquidation
0x0a5b38ac2d24c4fafc19ceb2591b70ece0d005d1,Daoclub.redemptionApproveOne,0,,0,No REENT -- modifier onlyOwner
0x0a5b38ac2d24c4fafc19ceb2591b70ece0d005d1,Daoclub.subscriptionCancel,1,0,1,--------
0x0aabf9daefcd484405479d2748cbaedb53c33d87,DividendPayingToken._withdrawDividendOfUser,0,0,1,--------
0x0aabf9daefcd484405479d2748cbaedb53c33d87,MRFROG.updateDividendTracker,0,,0,
0x0aabf9daefcd484405479d2748cbaedb53c33d87,MRFROGDividendTracker.process,0,0,1,--------
0x0af27f9be4ac583a491ee6573ebdccf32d1b561c,TheBureau121._RFT,0,,0,
0x0af27f9be4ac583a491ee6573ebdccf32d1b561c,TheBureau121.transferOwner,0,0,1,no REENT -- modifier onlyOwner --------
0x0b452278223d3954f4ac050949d7998e373e7e43,SUZUME.intializeContract,0,,0,no REENT -- modifier onlyOwner
0x0b452278223d3954f4ac050949d7998e373e7e43,SUZUME.transferOwner,0,0,1,no REENT -- modifier onlyOwner ---------- no UE: given functions always return true
0x0b5ecbb411d8fe829e5eac253ee1f2dc05d8d1ae,KUNOICHIX._transfer,0,,0,no REENT -- no ext call in _transfer
0x0b9e8415f47da353ccc7ad58234321f50d49063a,Emeejis.orderEmeejis,0,0,1,no REENT -- reentrancyLock--------
0x0bc95951bb59d6fd063ce7ad5c3b3dcaace98132,ViVICO.contribute,1,,0,REENT -- totalDistributed
0x0c073c92e7684031cfc297b83ecc33619e864d18,XetherGames.placeBet,1,,0,REENT -- bet.gambler
0x0c073c92e7684031cfc297b83ecc33619e864d18,XetherGames.placeBetRoulette,1,,0,
0x0c073c92e7684031cfc297b83ecc33619e864d18,XetherGames.sendDividends,1,0,1,--------
0x0c2795fc4e1f57614eb78923dc78521ff0676fb8,BitChordCrowdsale.buy,1,,0,REENT -- stage_1_TokensSold
0x0c78003843b4a72b765938cb3b14aecb188dbc6a,Crowdsale.__callback,1,,0,
0x0c78003843b4a72b765938cb3b14aecb188dbc6a,Crowdsale.buyTokens,0,0,1,--------
0x0c7e06db03aee1d592887deeb5cd20ce79f7bdbe,VotingChallenge.sendReward,1,1,1,REENT -- voters[to].weightedVotes[winner]--------
0x0c8f5a446e8df687dfa460d743cf3fc73a6b1676,Wallet.confirm,0,0,1,no REENT -- modifier onlymanywoners--------
0x0cb0a2136f2e80662eb5c50b96bfa3de85f335ce,IGLOO._transferFrom,0,,0,no REENT -- external call do not reenter
0x0ceae0bd68f89e41a1ed5dc20ca930c0c41856d7,EscrowGoods.arbYes,0,,0,no REENT -- external call is equipped with safetly lock against reentrancy 
0x0ceae0bd68f89e41a1ed5dc20ca930c0c41856d7,EscrowGoods.getFees,0,0,1,no REENT -- external call is equipped with safetly lock against reentrancy--------
0x0ceae0bd68f89e41a1ed5dc20ca930c0c41856d7,EscrowGoods.getMoney,0,0,1,no REENT -- external call is equipped with safetly lock against reentrancy---------- RENT: safesend() sends ether
0x0ceae0bd68f89e41a1ed5dc20ca930c0c41856d7,EscrowGoods.yes,0,,0,no REENT -- external call is equipped with safetly lock against reentrancy
0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e,SEISHI.transferFrom,1,,0,
0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb,FUEGO.transferFrom,1,,0,
0x0d7c864bf6c86bf11da2c8068b4c4edee4d76080,DappVolumeAd.updateAd,1,1,1,---------- Reason for REENT: reentering the function again can set the value of state var. purchaseTimestamp wrongly. It would affect other functions
0x0d7c864bf6c86bf11da2c8068b4c4edee4d76080,DappVolumeAd.updateInvestor,0,1,1,"no REENT -- sending 60% of msg.value -- no benefit to attacker, moreover there is no need of reentrancy to perform the attack--------"
0x0d7e1053924599ceac270d3a28b839282781ecec,ExchangerV4.buy,0,0,1,"no REENT -- 1st call sends eth to owner, 2nd call at the end--------"
0x0e24224484c7e445438ae9ed9b03a0108ad798f2,ChipToken._transfer,0,,0,
0x0e30bc9512306534b85afd0c75065b455af55d45,COPIUM._transfer,0,,0,
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,NamiExchange.buyNac,1,,0,REENT -- ask[_seller].volume = 0;
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,NamiExchange.closeAskOrder,0,,0,REENT. --  namitoken.transfer cannot reenter
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,NamiExchange.closeBidOrder,1,,0,
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,NamiExchange.sellNac,1,,0,REENT -- bid[_buyer].eth = 0;
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,NamiPool._withdrawNAC,0,,0,no REENT -- namitoken.transfer cannot reenter
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,NamiPool.withdrawTop,1,,0,
0x0e3ea79e194aef78b69209447f0f6c17ed96a5d6,Web3NameService.allowListSubdomain,1,,0,REENT -- require(tokenAddressandID[new_domain] == 0)
0x0e3ea79e194aef78b69209447f0f6c17ed96a5d6,Web3NameService.register,0,,0,
0x0e3ea79e194aef78b69209447f0f6c17ed96a5d6,Web3NameService.registerSubdomain,1,,0,REENT -- require(tokenAddressandID[new_domain] == 0)
0x0e82b29a77a53880dd4ee8326cfea9b4c68db638,DappIncubator.transfer,0,,0,no REENT -- external call() has modifier -- non-reentrant
0x0e9186d1d0c7aa2212e3f42405eda1bc35d826a9,dividendsContract.collectDividends,1,0,1,---------- Reason for REENT: state var. paid[member] and state var. totalPaid
0x0e94278497e51629c78697dac758fded6c8f188f,Dividends.fallback,1,0,1,---------- Reason for RENT: State variable users[user]-- It has reentrancy because of updation of the variable users[user] after transfer; it is checked in if condition (users[user] != 1) -- Reason for no UE: transfer function returns exception on fail
0x0eabed78fd49ad3c0a3e445954f29522025c09a0,WOAI.reserveWoai,0,0,1,no REENT --  -- onlyowner modifier--------NO COMMENTS SPECIFIED
0x0eb65b4c3d3de340e1b15384f8f211784247a37a,ReserveAuctionMarketplace._removeReserveAuctionListing,1,0,1,---------- no REENT: _removeReserveAuctionListing is private and this function is called from onlythose functions which are non reentrant
0x0efef0b34638addc8833ba729ae20016b5f24ffc,WithdrawContract.withdraw,1,0,1,REENT -- currentToken != d.token--------
0x0f6423618083e15989be7e4208c222cf759f99fb,TradableErc20.makeLiquidity,0,0,1,no REENT -- modifier--------
0x0f7f8ca2c9b617b4dabb1a16c3e2dc5d83faf907,PreOrder.confirmOrder,1,0,1,"---------- Reason for REENT: Token(tokenAddress).transfer(owneraddress;price) can reenter and stat. var named ""status"""
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.ETHsend,0,,0,
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.addKey,0,,0,
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.deposit,1,,0,
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.emergencyWithdraw,0,,0,No REENT --userLock[msg.sender] = true; -- reentrancy lock
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.paySubscription,0,,0,No REENT -- secondaryUserLock[msg.sender] = false; -- reentrancy lock 
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.preApproveTokens,0,,0,No REENT -- secondaryUserLock[msg.sender] = false; -- reentrancy lock 
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.sendtoRecipient,1,,0,
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.tokenSend,0,,0,No REENT -- secondaryUserLock[msg.sender] = false; -- reentrancy lock 
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.withdraw,1,,0,
0x10452f898766f59a8514dc6856ff62bbdc6a0f51,Piggy_BNK.Collect,1,0,1,--------Reentrancy is the a vulnerability where an external contract can call back into the current contract before the current function has completed. This can potentially lead to unexpected behavior. In the above code snippet the 'msg.sender.call.value(_am)()' line is a call to an external contract using the low-level 'call' function.
0x10819fae72282b9a594e34c647a7bc446ef4ad2e,CryptoFun.doInvest,1,0,1,--------
0x108523415a8cd7cb8ef2d6b12177181f489ec210,DividendDistributor.distributeDividend,1,1,1,--------
0x10bbbebacd34509b1388a528003dbb77c20b22ba,MappingTokenFactory._createMappingToken,1,,0,
0x10bbbebacd34509b1388a528003dbb77c20b22ba,MappingTokenFactory.createMappableToken,1,,0,
0x10bbbebacd34509b1388a528003dbb77c20b22ba,MappingTokenFactory.createTokenMapped,1,0,1,--------
0x1190074795dad0e61b61270de48e108427f8f817,CoinMerge.teamWithdraw,1,,0,
0x119f4c9de5539fd053aed5091db4ba59f83330d7,DividendPayingToken._withdrawDividendOfUser,0,0,1,--------
0x119f4c9de5539fd053aed5091db4ba59f83330d7,PENGUDividendTracker.process,0,,0,No REENT --- ext calls not malicious
0x121726eaab9965b918f00b9871c25c4baf5cc960,Event.distribute,0,0,1,No REENT ---  --             states[attendees[i]] = ATTENDEE_REWARDED;--------
0x125365069020439b830c9eac9dd402f8aa762569,RatScam.determinePID,1,,0,REENT --  getPlayerID can reenter
0x125365069020439b830c9eac9dd402f8aa762569,RatScam.endRound,0,0,1,No REENT ---  sends eth to fixed address--------
0x12d82d7cf17d909fb5808707136200ed200b6d52,Investment.processUserTransactions,0,,0,No REENT --- modifier onlyOwner
0x12d82d7cf17d909fb5808707136200ed200b6d52,Investment.removeOrder,1,1,1,--------
0x12db622c98d75f6f19493d9acbc7479fe382ec44,TBECrowdsale.fallback,1,0,1,---------- Reason for no UE: tokenReward.transfer() does not return any value -- Reason for REENT: whitelistedMax[msg.sender]
0x132e2b67e91bf0294536b16d772e8dee099fc40c,Brave3d.overStage,1,,0,
0x132e2b67e91bf0294536b16d772e8dee099fc40c,Brave3d.withdraw,0,0,1,--------
0x136e99a415957fc3f23e0a6885b22bcd0c475ab4,Voting.addDestructionProposal,0,0,1,No REENT ---  addProposal -- sends Eth to a fixed address--------
0x136e99a415957fc3f23e0a6885b22bcd0c475ab4,Voting.addRaiseTapProposal,0,,0,No REENT ---  addProposal -- sends Eth to a fixed address
0x13d6cfd3b119dadaadd7561fe9a864064259bc56,SafeDif.distributeRef,0,,0,
0x13d6cfd3b119dadaadd7561fe9a864064259bc56,SafeDif.withdraw,1,1,1,---------- Reason for UE: sender.send()-- Reason for REENT: player_[uid].plans[i].isClose = bClose;
0x13ddd5c273a027608a42727a46f8250011645166,Fund.fundWithdraw,0,0,1,No REENT ---  modifier---------- Reason for no UE: transfer() function throws error if it fails
0x143eea4413231878f58dc812b3dc6f22835a5dd6,cb_BANK.Collect,1,0,1,--------
0x150dbfc384ba5c13c304efd2efee73cc57cc2c16,Lottery10ETH.drawing,1,1,1,--------
0x150dbfc384ba5c13c304efd2efee73cc57cc2c16,Lottery10ETH.fallback,0,,0,No REENT --- array issue player_[_affID2].aff is updated and dependency on other
0x15ada2a8e62134806a86db3030fefc0a2a13cc99,PonyBreeding.giveBirth,1,,0,REENT --mixGenes() can reenter
0x15ada2a8e62134806a86db3030fefc0a2a13cc99,PonyUpgrade.upgradePony,1,,0,REENT -- upgradeponyResult can callback
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,Depot.exchangeEtherForSynths,1,0,1,REENT -- multi call--------
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,Synthetix.removeSynth,0,,0,No REENT ---  modifier
0x1684843a68f7e6489c666d524f178edb1af27772,BabyDubbz._transferFrom,0,,0,
0x1684843a68f7e6489c666d524f178edb1af27772,DividendDistributor.distributeDividend,1,1,1,--------
0x172e09691dfbbc035e37c73b62095caa16ee2388,Depot.exchangeEtherForSynths,1,0,1,--------
0x172e09691dfbbc035e37c73b62095caa16ee2388,Synthetix.removeSynth,0,,0,No REENT --- modifier
0x1806b3527c18fb532c46405f6f014c1f381b499a,PlanetCryptoToken.buyLand,1,,0,
0x190956a704fbb70f0acce8338870771d17654952,MessierAnonymity.swapAndShare,0,1,1,No REENT ---  array issue -- shareOfReward--------
0x1963737af12d3649f6f319fb64af2aa29f7256b7,MessierAnonymity.swapAndShare,0,1,1,No REENT ---  array issue -- shareOfReward--------
0x19b423e5131d8e4996a18e69d0cb99674ba34c21,BuybackBabyToken._transferFrom,0,,0,No REENT ---  external call at the end 
0x19b423e5131d8e4996a18e69d0cb99674ba34c21,DividendDistributor.distributeDividend,1,1,1,--------
0x1a050d77003caee532df18d04d86b99ca15bf9e8,POOHMO.determinePID,1,,0,REENT -- getPlayerID can reenter
0x1a050d77003caee532df18d04d86b99ca15bf9e8,POOHMO.endRound,0,1,1,No REENT ---  sending eth to fixed address (admin)--------
0x1a9206cd9a4c59967ca728ca96b15287b2fd4c7c,CoinFlip.refundFlip,0,,0,No REENT --- array issue
0x1b6df88f60b6b7c2b7f9b6beec4a6b3841a10d6c,Primacorp.fallback,1,1,1,---------- Reason for Reentrancy Vulnerability: allowance[msg.sender] =0 is set after the external call and if condition checks whether allowance[msg.sender] > 0 or not
0x1c1de57cc864072f7eab381c4c06b14a6963dd4b,ERC20dex.trade,0,,0,No REENT --- array issue
0x1da73fc09ea07781482994036a0eecc7e6952dfb,TydoIco.refund,1,0,1,--------
0x1e887e7115321b4ee5d58dd446ec09e12b45d81b,GFarm.POOL1_unstake,1,1,1,--------
0x1f42f986f9ef31d6ef787565b211bce0eb877bcc,GameWave.startPayments,0,,0,No REENT --- send to fixed address
0x20c476bb4c7aa64f919278fb9c09e880583beb4c,X3ProfitMainFundTransfer.fallback,1,0,1,---------- Reason for REENT: Variable isResend
0x214a8abb5fd89d3605c6cadb178f1748c36f6b8d,PAPE.openTrading,0,,0,No REENT --- onlyowner
0x2247fdc0e5de91ae589abfab8b99976d8e9f330b,BoomerangLiquidity.payout,1,1,1,--------
0x2268003d92ff03be6ca6da029f8d8127fd2f617e,ShortOrder.exerciseLong,1,,0,
0x2268003d92ff03be6ca6da029f8d8127fd2f617e,ShortOrder.nonActivationShortWithdrawal,1,,0,
0x2268003d92ff03be6ca6da029f8d8127fd2f617e,ShortOrder.nonActivationWithdrawal,1,,0,
0x2268003d92ff03be6ca6da029f8d8127fd2f617e,ShortOrder.tokenFulfillmentDeposit,1,,0,
0x2463a3f13cea3ea308be5c23cc887fdf205653ea,ADAMPROJECT._transfer,0,,0,
0x2463a3f13cea3ea308be5c23cc887fdf205653ea,ADAMPROJECT.swapBack,0,,0,No REENT --- modifier
0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31,AIDOGEX._transfer,0,,0,dynamic No REENT -- inSwapAndLiquify
0x25061388ba6886d98110f7355e4f2c5912ae53c8,DividendDistributor.distributeDividend,1,1,1,--------
0x2628e13a3cbdc52ed96b4b8d6b1041d3ef3a409e,Participant.processPayment,0,1,1,No REENT --- ext call to fixed address-------- -- Reson for no REENT: owner.send() --  Reason for UE: owner.send() -- return not checked
0x2638a23a9118d5786b6a6529bf3c09c922d3cdad,Infernu.claimETH,0,,0,dynamic No REENT -- iswithdrawing
0x2767e2ad18b358be2b511963a1b236b48203618c,BabyPOOF._transferFrom,0,,0,
0x2767e2ad18b358be2b511963a1b236b48203618c,DividendDistributor.distributeDividend,1,1,1,--------
0x284b0f2f49d072836db87dd25d0623cd2f622bb1,DesTokenSale.doPurchase,0,,0,No REENT ---  two transfer of diff types for multi call
0x28eeac83b9c843ef2fc6c78bcd860cab46aa88d0,DividendDistributor.distributeDividend,1,1,1,--------
0x28eeac83b9c843ef2fc6c78bcd860cab46aa88d0,PepeBonk._transferFrom,0,,0,
0x2934443c1749dcc0cdcabbd77098eea31d2ea6c3,xSNXCore.mint,0,,0,
0x2980b7c0c8e1a2c0bdecff55cde9e3576aaf9eaf,PiZZa.reinvestEarnings,0,0,1,---------- no UE: transfer() always return true
0x2980b7c0c8e1a2c0bdecff55cde9e3576aaf9eaf,PiZZa.withdraw,0,0,1,No REENT --- transfer cannot reenter--------
0x299e52c5d34596c05a04b61514dd79808167015a,TreasureHunt.unlockTreasure,1,0,1,--------The contract has reentrancy vulnerability because of isActive variable. The attacker can reenter through transfer function; get more transfer done before isActive variable is set to false
0x29aa20fb9b23421e310bdb8a7cfb81d7fbb4a1b3,SharkPool.do_redemption,1,1,1,--------
0x2aeee16d8412beabc5f38a6995ee5e4d32ab7f9d,RAGE._transfer,0,,0,
0x2c125240e472e752bcfd1627ff7632b6c5265b2e,Bussiness.buy,1,,0,
0x2c125240e472e752bcfd1627ff7632b6c5265b2e,Bussiness.buyByUsdt,1,,0,
0x2c125240e472e752bcfd1627ff7632b6c5265b2e,Bussiness.removePrice,1,1,1,--------
0x2c125240e472e752bcfd1627ff7632b6c5265b2e,Bussiness.setPriceFeeHBWALLET,1,,0,
0x2cc6ca9c3023a6a876fd54a03f68281c7aad0e8b,Escrow.fundICO,0,0,1,No REENT ---  if (msg.sender != addressSCICO || tx.origin != owner) {-------- 
0x2cc6ca9c3023a6a876fd54a03f68281c7aad0e8b,ICO.finalize,0,,0,No REENT --- onlyOwner 
0x2cc6ca9c3023a6a876fd54a03f68281c7aad0e8b,Tokens.refundTokens,0,,0,No REENT --- validate does not reenter
0x2cc6ca9c3023a6a876fd54a03f68281c7aad0e8b,Tokens.transfer,0,,0,No REENT --- validate does not reenter
0x2cc6ca9c3023a6a876fd54a03f68281c7aad0e8b,Tokens.transferFrom,0,,0,No REENT --- validate does not reenter
0x2cf5694906bdd80f33bac7cb80183f1c61bc5be2,PaymentProcessor.processPayment,0,,0,No REENT --- onlyMonetha
0x2d5df43d54ae164a912db8de092cf707b446f693,CA_BANK.Collect,1,0,1,--------
0x2e09a70dca6ab05505b26382003912783e588f9c,PhantomProject.swapAndLiquify,0,1,1,No REENT --- modifier ensures that function won't reenter--------
0x2e6d72d5948c0cb0b9ac1adc2034e16d02cdabda,MILADYXP._transfer,0,,0,
0x300af88747b3f913012753071f209b48b30ea1ac,BabyApe._transfer,0,,0,
0x300af88747b3f913012753071f209b48b30ea1ac,DividendDistributor.distributeDividend,1,0,1,--------
0x308af1c4759dcb9f2ac2accdcd301862702df40f,Escrow.cancelTokenTransaction,1,1,1,---------- It does not have reentrancy vulnerability because its visibility is private; it cannot be called through any other public functions. Attacker can't reach the function
0x308af1c4759dcb9f2ac2accdcd301862702df40f,Escrow.cancelTransaction,1,,0,
0x308af1c4759dcb9f2ac2accdcd301862702df40f,Escrow.createTokenTransaction,0,,0,No REENT --- modifier
0x308af1c4759dcb9f2ac2accdcd301862702df40f,Escrow.releaseFunds,1,1,1,---------- Reason for RENT: releaseFunds can be called by release function. reentrancy because of following lines: Transaction storage transaction = transactions[_tag]; require(transaction.status == transactionStatus.Pending); ........................................................................................ .............................Code Logic......................................... ........................................................................................ transaction.status = transactionStatus.PendingR1; -- Reason for UE: token.transfer returns boolean value
0x308af1c4759dcb9f2ac2accdcd301862702df40f,Escrow.userRecover,0,,0,
0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec,EthTokenToSmthSwaps.createSwap,1,,0,
0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec,EthTokenToSmthSwaps.createSwapTarget,1,,0,
0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec,EthTokenToSmthSwaps.refund,1,,0,
0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec,EthTokenToSmthSwaps.withdraw,1,0,1,---------- Reason for REENT: swaps[_ownerAddress][msg.sender].balance
0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec,EthTokenToSmthSwaps.withdrawNoMoney,1,,0,
0x3114b3312417b27a83bfd934764eee363d1e9325,Dice.__callback,0,0,1,--------
0x31718bcf61910b6760ec5fc6aaa8a6a0110af902,PepFarmer.reapFarm,1,1,1,--------
0x32ed067fb79b38b65e1fdd2bcc8c81078b866c3b,$BITCOINReflections._transferFrom,0,,0,
0x32ed067fb79b38b65e1fdd2bcc8c81078b866c3b,DividendDistributor.distributeDividend,1,1,1,--------
0x32fd0a9206c6ada63ceb2738449261e3a876bbf6,Town.claimExternalTokens,1,1,1,--------
0x32fd0a9206c6ada63ceb2738449261e3a876bbf6,Town.claimFunds,1,,0,
0x32fd0a9206c6ada63ceb2738449261e3a876bbf6,Town.getTownTokens,1,1,1,--------
0x32fd0a9206c6ada63ceb2738449261e3a876bbf6,Town.remuneration,1,0,1,REENT -- if (restOfTokens < amount) {--------
0x356598a62aed83950e724db6e62b10b1027e33e2,RuneLock._releaseTokens,1,1,1,--------
0x356598a62aed83950e724db6e62b10b1027e33e2,RuneLock.lockTokens,1,,0,REENT --beneficiaryToReleaseTime
0x37238583c041a2f51964f23fde2710c4fbd29e9e,BATMO.determinePID,1,,0,REENT -- getPlayerName -- can callback
0x37238583c041a2f51964f23fde2710c4fbd29e9e,BATMO.endRound,1,1,1,---------- REENT: state var rID_
0x372bf2843c4e4e2f6f7fba9e2e6dbe6adf2b760f,HayReflections.distributeDividend,1,1,1,--------
0x372bf2843c4e4e2f6f7fba9e2e6dbe6adf2b760f,hayr._transfer,0,,0,
0x3775876e537df71b60061151b39bcfb638f832f5,DividendDistributor.distributeDividend,0,,0,No REENT --- if(shares[shareholder].amount == 0){ return; } -- array issue
0x37e343f2cc245754595f1ae3656b460c35d636fb,BalanceManager.systemWithdraw,0,1,1,No REENT --- modifier---------- Reason for REENT: gameToken can callback and get extra tokens; state var.: balances[userId] -- Reason for UE: gameToken.transfer() returns boolean value
0x37e343f2cc245754595f1ae3656b460c35d636fb,BalanceManager.withdraw,1,0,1,---------- Reason for REENT: balances[userId]
0x380e0f015c0a830dc5d25e5f99570ad0be275350,Button.close,0,0,1,No REENT --- special case with selfdestruct instruction--------
0x38721079a72030ab1817fb9e1aaa86ae0d08356f,Investment.removeFromPool,1,,0,
0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215,LiquidityPool.migrateTokens,1,,0,
0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215,LiquidityPool.reinvestRewards,0,,0,No REENT --- array issue
0x3f513977cd827428e0459fdef7217cd6272dc893,KittenSelfDrop2.fallback,1,1,1,"---------- Reason for reentrancy vuln:  1. require (participants[msg.sender] < dropNumber && kittensRemainingToDrop > basicReward); --> checked before external call 2. kittenContract.transfer(msg.sender; tokensIssued); participants[msg.sender] = dropNumber; kittensRemainingToDrop -= tokensIssued; kittensDroppedToTheWorld += tokensIssued; --> updated after external call transfer() -- Reason for UE: transfer function declared in ""contract KittenCoin"" returns boolean"
0x400e115f1be2b646139c298272a43b2cff2b127e,PiggY_BANK.Collect,1,0,1,---------- Reason for REENT: State variable acc.balance
0x40da24a66f729d0bd0453681c5a6506bdc2a7a6a,CrwdTimelock.release,1,0,1,---------- Reason for REENT: State variable balances[_beneficiary]-- Reason for no UE: transfer function defined in token contract always return true; no need to check the return value
0x41021442eab722c0a52c61738550faabfd0fca4e,Crowdsale.fallback,0,0,1,---------- Reason for no UE: tokenreward.transfer() does not return any value
0x42a4a749123469ca6a8b6ca494b1953076a26ef7,SendTokensContract.withdrawTokens,1,0,1,---------- Reason for no UE: token.transfer() does not return any value
0x4470887011bbf1e196b62020266aa5ae1081bd70,Deposit.ClaimMTU,1,,0,
0x4470887011bbf1e196b62020266aa5ae1081bd70,Redeem.RedeemMTU,1,1,1,---------- Reason for REENT: state variable Redeemer[msg.sender]; withdrawVal is calulated based on Redeemer[msg.sender] -- Reason for UE: tokenFunction.transfer() returns boolean value
0x463f235748bc7862deaa04d85b4b16ac8fafef39,PrivateBank.CashOut,1,0,1,---------- Reason for REENT: state var. balances[msg.sender]
0x465cd6299775dc459a23c80997d2664656be9780,SafeDif.distributeRef,0,,0,No REENT --- array issue player_[_affID2].aff is updated and dependency on other
0x465cd6299775dc459a23c80997d2664656be9780,SafeDif.withdraw,1,1,1,---------- Reason for REENT: state var. player_[uid].plans[i].isClose
0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407,DecentralizedExchangeHotPotato.buy,0,,0,No REENT --- dynamic No REENT
0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407,DecentralizedExchangeHotPotato.revoke,1,0,1,---------- Reason for no UE : Issuer.transfer does not return any value; so no need to check
0x470142a1834438515b757118f322703aba6e1e05,PolicyPalNetworkAirdrop.signatureDropMultipleAmount,0,0,1,No REENT --- onlyAdmin---------- Not UE because they have used assert -- Reason for no RENT: modifier onlyOwner
0x470142a1834438515b757118f322703aba6e1e05,PolicyPalNetworkAirdrop.twitterDropMultipleAmount,0,0,1,"No REENT --- onlyAdmin--------Reentranct contract because of the line ""twitterdrops[recipient] = true;"""
0x479cbe1f6a7fa4d7e304ae983803c46e85ced870,Slaughter3D.tryFinalizeStage,1,,0,
0x4b71ad9c1a84b9b643aa54fdd66e2dec96e8b152,airPort.transfer,1,1,1,--------Reentrancy Vulnerability:- The function uses a loop to make external contract calls within the the loop using 'caddress.call(id;from;_tos;v);'. This cause to a reenterancy vulnerablity if the called contracts have a fallback function that allows external call if they modify their own state in an unsafe way. If the malicious contract is among the '_tos' addresses and reenters the 'transfer' function before it completes; it can manipulate the contracts state. To prevent reentrancy attacks the user should create checks-effects-interactions patterns.
0x4bb12d68c795462c12ec30ad82421218d9c32a7d,Crowdsale.safeWithdrawal,0,,0,"No REENT --- if (fundingGoalReached && beneficiary == msg.sender) -- will be executed only if first if fails. It is like: ""else if"""
0x4e61ba9c25d43e802c6be8d160432e4989dea1fc,IOU.withdraw,0,0,1,No REENT --- seem like multi call but calls are different---------- It does not have UE --> token.transfer does not return boolean; no need to check
0x4e73b32ed6c35f570686b89848e5f39f20ecc106,PRIVATE_ETH_CELL.Collect,1,0,1,--------Reason for REENT: state var. balances[msg.sender]
0x4f0499f4da2d75d03fcc2dc2d97ffae976246809,VestingContractWT.transfer,1,0,1,---------- Reason for REENT: state vars. account_data[msg.sender].current_transferred and account_data[msg.sender].current_balance
0x5211475520dc4a13fee1cc7c2c0c1167998bcbb8,AuctionContract.closeAuction,1,1,1,No REENT --- assert(msg.sender == winner) -- However state variable winner can be written by a public function. ---------- Reason for REENT: state var. isActive -- Reason for UE:  auctioneer.createAuctionContract() can fail
0x530a9cceee0c45f58229ae5c256e414e6df957ad,ABIO_BaseICO.burnRestTokens,1,,0,
0x533411c7c401ee3a136ddc7a2fc95d6624c9e041,VestingContractWTTEST.transfer,1,0,1,---------- Reason for REENT: state vars. account_data[msg.sender].current_transferred and account_data[msg.sender].current_balance
0x561eac93c92360949ab1f1403323e6db345cbf31,BANK_SAFE.Collect,1,0,1,--------
0x57acbe7bf11b8a4584403cc900e230a18a7ab138,Locker.unlock,0,0,1,No REENT --- transfer to fixed address ---------- Reason for no REENT: receiver is fixed and attacker cannot change the value of receiver
0x58ed44f46c279f30fd0a0724d3fed4bc18b11bb0,BoomerangLiquidity.payout,1,1,1,----------- participants[payoutOrder].etherAddress.call.value(payoutToSend).gas(1000000)(); --> Can fail; so UE is there
0x5c430fa24f782cf8156ca97208c42127b17b0494,HackDao.__callback,1,0,1,---------- Reason for REENT: 		if (results[myid] == 2 OR results[myid] == 1) throw; //this game already run? results[myid] is getting set in the function
0x5f38c57b268664015de387229bc9d3822b53ec32,v1Migration.migrate,1,,0,REENT -- mintCard()
0x60de9d9b062595cf10bc3fbf9ed5a6104befe882,WWW_WALLET.Collect,1,0,1,---------- Reason for REENT: State var. acc.balance
0x61683dfbe07e98a4edbddc2f1f1a44a75fa74912,BDSM_Crowdsale.fallback,1,0,1,---------- Reason for REENT: State var. crowdsaleClosed
0x62500ad71aa50744bbd4917d1a64938897e952bf,C_bAnK.Collect,1,0,1,---------- Reason for REENT: State variable acc.balance
0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839,TokenBank.WithdrawToHolder,0,0,1,No REENT --- onlyOwner---------- No REENT --> because of onlyOwner modifier
0x62b01d0aeb16656aff7a7632c3a61c8b069a8928,TopInvest125.pay,1,,0,
0x62f49e904af170ea377f399aca76c13ff25a6f5e,TrustlessOTC.cancelTrade,0,0,1,No REENT --- array issue--------
0x62f49e904af170ea377f399aca76c13ff25a6f5e,TrustlessOTC.take,1,0,1,---------- Reason for REENT : o.active
0x644417f540bf96fd218287454501b2eb13c83295,Dividends.fallback,1,0,1,---------- Reason for REENT: users[user]
0x652729577d5c5a13060f81c256aa79adb264f188,VNETTokenPreSale.fallback,1,0,1,---------- No UE: msg.sender.transfer() does not return any value; it throws exception on failing -- REENT: State var. ratioNext
0x6cd171ef32b2ffa2b54481bea9d72692cd44f053,Crowdsale.fallback,1,0,1,--------Reason for RENT: Event TokenFree(tokenFree); will have different values in two different invocations (one with reentrancy and one without reentrancy). Ref: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
0x6d84769b1e287a27f282a938c8110b22714dbf78,ABIO_BaseICO.burnRestTokens,1,,0,
0x6e3c384480e71792948c29e9fc8d7b9c9d75ae8f,p_bank.Collect,1,0,1,--------
0x7183169973eda16209f66a602f2e27e1303bf414,BoomerangLiquidity.payout,1,1,1,---------- Reason for UE: participants[payoutOrder].etherAddress.call.value(payoutToSend).gas(1000000)();-- Reason for REENT: Attacker can reenter through etherAddress.call.value() and before payoutOrder is updated. payoutToSend is calculated based on payoutOrder variable. That is used to send Ether.
0x71aaf9dc418e9dde76aee42e431fc203d9cfd0c2,VestingContractWTTEST.transfer,1,0,1,---------- Reason for REENT: 1. we_test_token.transfer(); 2. account_data[msg.sender].current_transferred and account_data[msg.sender].current_balance
0x72bf3030e276a96539143551bd8f91aff699bf7c,LotteryGameLogic.finalizeRound,0,0,1,No REENT --- onlyOwner---------- Reason for no REENT: modifier onlyOwner
0x72f41244e09b3b2f09d9e2f5f1184fa8bd6b4a1e,EasySmart.withdraw,1,1,1,---------- Reason for UE: sender.send()-- Reason for REENT: player_[rId_][uid].plans[i].isClose = bClose;
0x730f8c40a08d02349a2d64e3193cf207a2a2dfe7,PG_Bank.Collect,1,0,1,---------- Reason for REENT: State var. acc.balance
0x774853153c3cc175a3606c58d6f27f6b57e72fd3,c_BANK.Collect,1,0,1,---------- Reason for REENT: State variable acc.balance
0x78e6d2bfe731e578a50a4129df89bb4950591d18,Swap.fallback,1,1,1,---------- It stores true in the check[msg.sender] variable after it sends the the amount to the beneficiary which will cause reentrancy if the fallback function calls it again. -- Rentrancy vulnerability because of check[msg.sender] variable
0x79e784a77254aedbc6488ce0001abee487b1d88d,Y_WALLET.Collect,1,0,1,---------- Reason for RENT --> state var. acc.balance
0x7fe180e63198e50057c3f2817d058e8904c650e3,Conference.refundTicket,1,1,1,---------- Reason for REENT: State Variable registrantsPaid[recipient]
0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7,ESmart.pay,1,,0,
0x8a1190c9a21ccc195a943ec9ee434620461b46b2,HeroAuction.orderOnFightAuction,1,,0,
0x8a1190c9a21ccc195a943ec9ee434620461b46b2,HeroAuction.orderOnSaleAuction,1,,0,REENT -- order can reenter
0x8a1190c9a21ccc195a943ec9ee434620461b46b2,HeroFighting._fight,1,,0,
0x8a1190c9a21ccc195a943ec9ee434620461b46b2,HeroLedger.collect,1,0,1,---------- Reason for REENT: erc20.transfer() is not defined in the contract; it can have external calls; state var. ownerIndexToERC20Balance[msg.sender]
0x8a1190c9a21ccc195a943ec9ee434620461b46b2,HeroLedger.withdrawERC20Balance,0,1,1,No REENT --- onlyLeader---------- Reason for REENT: state var totalBalance and totalUsed
0x8c7777c45481dba411450c228cb692ac3d550344,ETH_VAULT.CashOut,1,0,1,---------- Reason for REENT: State variable balances[msg.sender]
0x8c944c3f4029c14c22b6525ac3155482c2559541,BDSM_Presale.fallback,1,0,1,--------
0x8e3e25958ad448aeb5982a01b63bcb91355d56a5,Swap.fallback,1,1,1,---------- It stores true in the check[msg.sender] variable after it sends the the amount to the beneficiary which will cause reentrancy if the fallback function calls it again.
0x91d7e5895f7a635ba8bdce9e2be544e5e527135f,Crowdsale.safeWithdrawal,1,,0,
0x92579f2fa430b20bf6ce9d19938fe061aad992e2,DCY_preICO.bringBackTokens,1,0,1,---------- It does not have UE because transfer function defined in token contract does not return any value
0x92579f2fa430b20bf6ce9d19938fe061aad992e2,DCY_preICO.fallback,1,,0,
0x92579f2fa430b20bf6ce9d19938fe061aad992e2,DCY_preICO.safeWithdrawal,0,,0,"No REENT --- if (fundingGoalReached && beneficiary == msg.sender) -- will be executed only if first if fails. It is like: ""else if"""
0x926e81009c2fa4475e1c798a8c43a4f598575c80,FoundersVesting.withdrawTokens,0,0,1,No REENT --- balanceOf cannot reenter---------- Reason for no UE: transfer function defined in token contract always return true; no need to check the return value-- Reason for no REENT: transfer function defined in token contract does have any external calls involved
0x926e81009c2fa4475e1c798a8c43a4f598575c80,Goldmint.issueTokensInternal,0,,0,No REENT --- issueTokens() cannot reenter
0x93c32845fae42c83a70e5f06214c8433665c2ab5,X_WALLET.Collect,1,0,1,--------
0x94554c78bd90dc7047f1a400dd3c5730991d9484,HoldPresaleContract.unlockTokens,0,0,1,No REENT --- function transfer cannot reenter---------- Reason for no REENT: OppToken.transfer() is defined inside the contract BasicToken. It does not have any exernal calls
0x950ad688ade27bcaa6e890e9d86ba5a9293f4d8c,Crowdsale.safeWithdrawal,1,0,1,--------
0x967719548b8385be3c21ee96bdc57b9409b501cb,SellERC20BasicTokens.fallback,1,,0,REENT -- deposit
0x967719548b8385be3c21ee96bdc57b9409b501cb,SellERC20BasicTokens.sendToken,0,0,1,--------REENT is there because of variable deposit
0xa1e4608ff6b4b9324c6472eee2efebd20a20bbe8,KittenSelfDrop.fallback,1,1,1,---------- Reason for REENT: state var. kittensRemainingToDrop
0xa27f262391913a5e21216c70de5358a1e887de25,VestingContractWTTEST.transfer,1,0,1,---------- Reason for REENT: state vars. account_data[msg.sender].current_transferred and account_data[msg.sender].current_balance
0xa5629861c9c345f50221996ef852fd9665eb1c05,IronHands.payout,1,1,1,REENT -- payoutOrder---------- uint256 tokens = weak_hands.buy.value(investment).gas(1000000)(msg.sender); --> causes UE because the return value of the call is not checked -- Reason for no reentrancy: No require; if; assert statements based on state variables
0xab78561558d06ace60f206d9fcaac65bb1cfdee2,SIMPL_BANK.Collect,1,0,1,--------
0xac355d24591c01ad44f8da36ec7629d275a2c6e1,ShortOrder.exerciseLong,1,,0,
0xac355d24591c01ad44f8da36ec7629d275a2c6e1,ShortOrder.nonActivationShortWithdrawal,1,,0,
0xac355d24591c01ad44f8da36ec7629d275a2c6e1,ShortOrder.nonActivationWithdrawal,1,,0,
0xac355d24591c01ad44f8da36ec7629d275a2c6e1,ShortOrder.tokenFulfillmentDeposit,1,,0,REENT -- orderRecord[msg.sender][orderHash].tokenDeposit = true;
0xaf7aea249098f2c2f50cc11d4000ccf798194373,ZTCrowdsale.refund,0,,0,"No REENT --- Dynamically on buggy, smartly written function"
0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d,Mattew.fallback,1,1,1,"--------The reentrancy vulnerability occurs when a contract makes an external call before it has finished executing its own logic. In this function; the vulnerable portion is this part: ""  bool isSuccess = whale.send(stake);  ""    . The external call to whale.send(stake) allows the whale contract to execute arbitrary code; including calls back into the current contract. An attacker can create a malicious contract that calls this contract repeatedly before the state is updated; allowing the attacker to drain funds from the contract."
0xb48e28b7de69e921e37c9786f11a6f73274777ef,Crowdsale.fallback,1,1,1,---------- Reason for not REENT: beneficiary and tokenReward will get the money if the attack is successful. These variables are set by owner. Owner is not malicious.
0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7,keepMyEther.withdraw,1,1,1,--------
0xb98de64d4dbe2956e80149e88ce9135bb05e9400,Bounty.getTokens,1,1,1,Cross function REENT---------- Reason for RENT: 1. require(validPurchase(beneficiary)); and 2. participated[beneficiary] = true; -- Reason for UE: token.transfer() returns boolean
0xbaea5bc6568dcb1f1c5aa24223a47333a6b3a8f5,TrustlessOTC.cancelTrade,0,1,1,---------- Reason for UE: Token(o.tokenFrom).transfer(o.creator; o.amountFrom) returns boolean
0xbaea5bc6568dcb1f1c5aa24223a47333a6b3a8f5,TrustlessOTC.take,0,,0,
0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f,ETH_VAULT.CashOut,1,0,1,---------- Reason for REENT: State var. balances[msg.sender]
0xbd367c347fc8e0a9b2da08717bcc22bb3fd878eb,HoldPresaleContract.unlockTokens,0,0,1,no REENT: transfer -- it is implemented and it cannot reenter---------- Reason for no REENT: OppToken.Transfer() does not call any external functions
0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888,MONEY_BOX.Collect,1,0,1,---------- Reason for REENT: state var. acc.balance
0xc543afe640c8c7521beb6549be75f77b568f4590,GET111.pay,1,,0,
0xc7bd5dac314a67a375a0347d72797c2ea1f1a672,KlownGasDrop.claimGasDrop,1,1,1,---------- Reason for reentrancy vuln: receivers[msg.sender] = true; is set after external call to transfer. transfer happens based on the value of receivers[msg.sender] -- Reason for UE: IERC20(currentTokenAddress).transfer(msg.sender; amountToClaim); returns oolean
0xc86dd185fc95031489b89eeaaa3fd47e11c065e9,OpportyBountyHold.unlockTokens,0,0,1,"No REENT ---  -- token.transfer(msg.sender, holderList[msg.sender].tokens); -- it is implemented and it cannot reenter ---------- Reason for no UE: Function transfer() defined in contract BasicToken always return true; so no need to check for return value"
0xd012717342c0a7a24b840605fe7756f6094c9570,SafeDif.distributeRef,0,,0,No REENT --- array issue player_[_affID2].aff is updated and dependency on other
0xd012717342c0a7a24b840605fe7756f6094c9570,SafeDif.withdraw,1,1,1,---------- Reason for UE: sender.send() -- Reason for REENT: player_[uid].plans[i].isClose = bClose;
0xd1265bfe57597840f89971b7e67538bac780f9ad,DesTokenSale.fallback,0,,0,
0xd518db222f37f9109db8e86e2789186c7e340f12,D_BANK.Collect,1,0,1,---------- Reason for REENT: State var. balances[msg.sender] 
0xd5967fed03e85d1cce44cab284695b41bc675b5c,demo.transfer,0,1,1,--------Reentrancy Vulnerability:- The function uses a loop to make external contract calls within the the loop using 'caddress.call(id;from;_tos;v);'. This cause to a reenterancy vulnerablity if the called contracts have a fallback function that allows external call if they modify their own state in an unsafe way. If the malicious contract is among the '_tos' addresses and reenters the 'transfer' function before it completes; it can manipulate the contracts state. To prevent reentrancy attacks the user should create checks-effects-interactions patterns. 
0xd5e5ab3438c14a6c823886baa24d8f41636b1d34,TokenERC20.fallback,0,,0,Dynamic No REENT --         if (users[msg.sender].invested != 0) {
0xd5e5ab3438c14a6c823886baa24d8f41636b1d34,TokenERC20.investedbuy,0,,0,Dynamic No REENT --         if (users[msg.sender].invested != 0) {
0xd5e5ab3438c14a6c823886baa24d8f41636b1d34,TokenERC20.withdrawcommissions,1,1,1,---------- Reason for REENT: users[msg.sender].pot updated after external call; through modifier olyowner one can set the value of variable aipi to attacker's address
0xd67aa6a98e99f979f23bf0da772d113fe6dbe50a,Crowdsale.fallback,1,0,1,--------
0xd72d254737ab0a8de2ac43ba95557885ed13bbfd,MenloTokenTimelock.release,1,1,1,---------- Reason for REENT: balance[msg.sender]-- Reason for UE: token.transfer() returns boolean value
0xd84b6aec4985e68ef5882de0b5d0b30992bb5057,EthTokenToSmthSwaps.createSwap,1,,0,
0xd84b6aec4985e68ef5882de0b5d0b30992bb5057,EthTokenToSmthSwaps.createSwapTarget,1,,0,
0xd84b6aec4985e68ef5882de0b5d0b30992bb5057,EthTokenToSmthSwaps.refund,1,,0,
0xd84b6aec4985e68ef5882de0b5d0b30992bb5057,EthTokenToSmthSwaps.withdraw,1,0,1,---------- Reason for REENT: swaps[_ownerAddress][msg.sender].balance -- Reason for no UE: ERC20(swap.token).transfer() does not return any value
0xd84b6aec4985e68ef5882de0b5d0b30992bb5057,EthTokenToSmthSwaps.withdrawNoMoney,1,0,1,---------- Reason for REENT: swaps[msg.sender][participantAddress].balance
0xd84b6aec4985e68ef5882de0b5d0b30992bb5057,EthTokenToSmthSwaps.withdrawOther,1,0,1,---------- Reason for no UE: function transfer() does not return any value -- Reason for REENT: swaps[_ownerAddress][participantAddress]
0xd96d1947b7758271c4b0621d90808825121bf329,DomainAuction.refundBid,0,1,1,---------- Reason for REENT: The event Refund will have two different values on different invocations. It might affect external entities. Ref: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
0xdb8459034fc97eed3d43172909e1d353e9f4d282,URUNCrowdsale.buyTokens,1,,0,REENT -- require(TOKENS_SOLD<maxTokensToSaleInClosedPreSale);
0xdd654450e2ef8f672ef297ea3ff9aabea2e22840,VestingContractABX.transfer,1,1,1,--------Reason for reentrancy vuln:  1. account_data[msg.sender].current_transferred += value; 2. account_data[msg.sender].current_balance -= value; --> Executed after external call require(value <= abx_token.balanceOf(this) && value <= account_data[msg.sender].current_balance && account_data[msg.sender].current_transferred + value <= account_data[msg.sender].current_limit); --> it checks above updated variables in require statement
0xde1fa94c7fa043fccf3938f47e9911ca584baed4,DailyGreed.fallback,0,1,1,Dynamic No REENT--------The function does not have reentrancy vulnerability. There is no benefit to the attacker. Moreover the balance will get updated once the reentrant call finishes
0xde7c2911cac44d5949cbe80b0c7d38f7a476cbad,SimpleWallet.withdraw,1,1,1,REENT -- Multi call bug---------- Reason for RENT: wallet1 can reenter and take all money (wallet1.send)
0xe7e0bb725a6c1ed81b89042b1d37756b21db4958,BDSM_Crowdsale.fallback,1,0,1,--------
0xe85083dec29ca5287a00a29f667a8c5489cdf297,OpportyWhiteListHold.unlockTokens,1,0,1,---------- Reason for no REENT: OppToken.transfer() is defined and it does not call any external function -- Reason for no UE: OppToken.transfer() always return true; no need to check
0xea9c15f733ee4cd9e24c97bdddd66077a757b474,BoomerangLiquidity.payout,1,1,1,--------There is reentrancy bug. If the fallback function of the contract which is being paid by the line flmContract.call.value(investment).gas(1000000)() calls payout() again; it can keep getting money until balance <= 1. There is unchecked call return value because the success of flmContract.call.value(investment).gas(1000000)() is not being validated by checking the output. The code goes ahead even if the money transfer failed. This can lead to inconsistencies in the state of the contract.
0xebbe139afc4f0706cc928311b6748701b6549a31,Contagion.Count,0,1,1,No REENT --  modifier--------
0xec94d178d97bac527fdcd4b3d4bf41b57d640c5b,Crowdsale.devResWithdrawal,1,,0,
0xf1add8bf553d0066be17768d6816f3730c476237,EasySmartolution.getOut,0,,0,
0xf1add8bf553d0066be17768d6816f3730c476237,EasySmartolution.processPayment,1,,0,
0xf847b0052b9d369401b0d71465f28392ea7e3304,Pandora.returnDeposit,1,,0,
0xfbe2fff3145e08a21a9d9c8d5f20c01706939647,C_bank.Collect,1,0,1,---------- Reason for REENT: State var. acc.balance
0xfc560a12fb91c7b743d070e5764b4404de2f4883,Crowdsale.safeWithdrawal,1,0,1,REENT -- balanceOf[buyerId]---------- Reason for no REENT: There is no benefit to attacker; funds are sent to beneficiary
0x000000000000541e251335090ac5b47176af4f7e,dexBlue.settleReserveReserveTrade,0,0,1,
0x0000000000b3f879cb30fe243b4dfee438691c04,GasToken2.makeChild,0,1,1,-- Reason for no REENT: No state changes after external call -- Reason for UE: create call can fail
0x0003ed19f80564745e84b4cc411a7b6be4f0cf31,NeverJeet.openTrading,0,0,1,
0x0030f75e27f6df16383f47ae11ae34abc21f5f2c,TYRANT.GoLive,0,0,1,-- no REENT: modifier onlyowner
0x0041fb383081576f9750c5a9b507180992e1c5da,GMI2.forceSwapAndSendDividends,0,0,1,
0x005d068a5dd27f3e49a047deac6785b426145bbc,ParasyteInu.openTrading,0,0,1,-- No REENT: modifier onlyonwer-- No UE: balanceOf does not fail
0x007d8eedc142d9e14ea3498471c5e884d6249a20,F10.recoverTokens,0,1,1,
0x00a704f5721fe068a46221ca7293e76b39f92af6,BabyRyoshi.openTrading,0,0,1,
0x00b0e8d3d7a6275dea291111ff8480ea053cd719,RickAndMorty.openTrading,0,0,1,
0x00b25822e3b8f8720b327f2df8e7c6f96271c8dc,JINJAINU.OpenMarket,0,0,1,-- No REENT: modifier onlyowner
0x00d97facb316f12b64c7ac93405b2d45ed9aa358,KIRITOINU.openTrading,0,0,1,-- No REENT: modifier onlyonwer-- No UE: balanceOf does not fail
0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922,Venify.claimStuckTokens,0,0,1,-- No UE: transfer function always return true
0x00e5b0e005ae310312942197e0898de60e30a3a3,SHIBUTT.openTrading,0,0,1,
0x00e76361d45707507db7bdeb7dd2c0f5c1c3fa6d,DekuInu.openTrading,0,0,1,-- no UE: approve() always return true
0x00f9e55eb4701f9354946e081970f7b14684b9fd,$CHRIST.claimStuckTokens,0,1,1,
0x01490172fd413bb9b74ca73c5df1e245ef14412a,SOTL._sendETHToTreasury,0,1,1,
0x01490172fd413bb9b74ca73c5df1e245ef14412a,SOTL.claimETHRewards,0,1,1,
0x01490172fd413bb9b74ca73c5df1e245ef14412a,SOTL.claimTokenRewards,0,0,1,
0x01490172fd413bb9b74ca73c5df1e245ef14412a,SOTL.emergencyWithdraw,0,1,1,
0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4,JinChan.sendERC20Tokens,0,0,1,
0x01680af31961fb47ad92e32218a5d8cbd036f6ba,DEEPINU.openTrading,0,0,1,
0x018194f1e70185eb153bcab2f6d64070c605a318,LEET.swapAndLiquify,0,0,1,-- No REENT : marketingAddr is fixed; attacker won't get any benefits
0x01886cabb4a19a89fad686810f2ee60459452cf3,DividendTracker._compoundDividendOfUser,0,0,1,-- No reent: function is private and callable only by owner through other public function
0x01886cabb4a19a89fad686810f2ee60459452cf3,DividendTracker._withdrawDividendOfUser,0,0,1,-- No reent: function is private and callable only by owner through other public function
0x018a871f4403ecd7be46819789551aaba1331af0,$Jiraiya.openTrading,0,0,1,
0x01911afa1a3d64d52451a22cb265fc34f596f425,BuyVote.buy,0,1,1,
0x01aa9c6023ce74282aa2705d6cb89cea76a18be3,DOGETUITION.openTrading,0,0,1,
0x01b92e2c0d06325089c6fd53c98a214f5c75b2ac,MYSTIC.processActionProposal,0,1,1,-- No REENT: modifier nonReentrant  UE: (bool success; bytes memory returnData) = proposal.applicant.call{value: proposal.tributeOffered}(action); return value not processed properly
0x01d5609df23dee77fe8db8e03c66be11dca7d21b,Mittens.TeamRescueTokens,0,1,1,
0x01de5bce5c5ee4f92e8f4183f6f4e4f12f9a86cd,VaultWETH._claimCompoundDivs,0,0,1,-- no REENT: This is private function which is callable from nonReentrant functions
0x01de5bce5c5ee4f92e8f4183f6f4e4f12f9a86cd,VaultWETH.claim,0,0,1,-- no REENT: nonReentrant function
0x01e7e52aba28a0f61cc053c544efe943e5b43954,TwinsInu.openTrading,0,0,1,
0x01f44890160c3963bfa8841aabbb4019245a9205,BABYCHAD.openTrading,0,0,1,
0x0208a9ffc97a6e96f050087ae1c9f7a2bdd3f5b0,HoshiKatachi.openTrading,0,0,1,
0x0224853bdff6b04ce259d87303b7523d4e16d656,PriceChecker._updatePrice,0,0,1,
0x024b77a5205733bc1cf283b0442be8ecab88803a,AKIHIRO.openTrading,0,0,1,
0x024b77a5205733bc1cf283b0442be8ecab88803a,AKIHIRO.recoverTokens,0,1,1,transfer function is not fixed; it depends on address passed to this function
0x025cd28d7ef83e1c2ffe511d5f9290d54ba5dcf0,ProductionUnitToken.exit,0,0,1,
0x02a0c000c375464509754deea7d07d06df901e3a,EthereumCate.startTrading,0,0,1,
0x030d087bfb025268f129a1979bda8ed3a6191a02,Andy.swapAndLiquify,0,0,1,
0x0321be5f545ea569424aace4dc08d60f467229ac,BlackErc20.deployAwardToken,0,0,1,-- No UE: transfer function always return true
0x03766932d07fad2ea2e60454ccbbb5d88780b63e,STS.swapAndLiquify,0,0,1,
0x038b7537fd58d966404be0c7bcec64e6cbeb88a1,GohanInu.startTrading,0,0,1,
0x039f7a065382b064c95f8409b7eff4a45cea3e23,Xlabs.swapAndLiquify,0,0,1,
0x0453aa2dafff030614d9afef6c724ec2bee60876,SwifyStaking.withdrawSwify,0,1,1,
0x04797c1ae852a31665d8e512ddae33e6044ef39d,InstaDice.payoutPreviousRoll,0,0,1,
0x04797c1ae852a31665d8e512ddae33e6044ef39d,InstaDice.roll,0,0,1,
0x047b957bb18534b4e4add20c101cb5791f12d112,NEKOLAND.swapAndLiquify,0,0,1,
0x049658b3cc6ec345aaf2be7233a33da24ee82150,Bozu.GoLive,0,0,1,
0x04e52df738e0c13bc58d6d75f964381f8d18b1b7,SminemToken.open,0,0,1,
0x051bda85fbc58ace9d6060ba9488abe120ac072d,CRYPTOVATOR.launch,0,0,1,
0x052f4e43d9d65ca35ce6d3438aa956fda91ef520,XYZProtocol._beforeTokenTransfer,0,0,1,
0x058a144951e062fc14f310057d2fd9ef0cf5095b,HourglassXReferralHandler.takeShitcoin,0,1,1,-- No reent because external call is at the end -- UE: transfer function is not fixed; it depends on address passed to this function
0x05a2f46b2409fe46b8c1f87af2508e7aef5aa8fa,EtherGet.getTokens,0,1,1,
0x05a4909d737d0a6433335504d25536e12f65a4e5,Hydra.swapBack,0,1,1,No REENT: amountETHMarketing is not updated after external call
0x05af72594440cf75c0fdcbbd9993fc26f62c7afc,TwelveHourAuction.sendProfitTTH,0,0,1,-- no REENT: money is being sent to fixed address
0x05b902c7fd6d221d582bb973fe6e253921568717,Flasko.removeStuckToken,0,1,1,
0x06012c8cf97bead5deae237070f9587f8e7a266d,KittyCore.withdrawBalance,0,1,1,
0x0654b7f747c9ee9f5fb5eba443e9fe64f1fa77ef,SAFX._sellTaxedTokens,0,1,1,
0x0654b7f747c9ee9f5fb5eba443e9fe64f1fa77ef,SAFX.transferERC,0,0,1,
0x0654b7f747c9ee9f5fb5eba443e9fe64f1fa77ef,SAFX.transferETH,0,1,1,
0x06a07a3911dab4507dd44cd97e30c3267d4a9c63,DERPNATION.takeLoan,0,1,1,
0x06ef66ab59919e1c3b25ad4732a002f644fe0f8e,MonkeyScam.withdraw,0,0,1,
0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8,charge.ControlSellAllTokens,0,0,1,
0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8,charge.rescueTokens,0,1,1,
0x072668a75ba5a0740582d44c8d55a85aadb0644a,AAI.recoverERC20Tokens,0,0,1,-- No UE: transfer function always return true
0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7,Multiplier.verify,0,1,1,
0x07c1c8c2bce6290daa554118b7d208041615ce54,RC.giveToken,0,1,1,
0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e,PoCGame.donateToWhale,0,1,1,-- Reason for no REENT: whale.call.value sends amount to whale contract. it does not depend on any state variable
0x07f86ba2f0e6c421a3ecb233068117e65228ac6b,Society.launch,0,0,1,-- No REENT: modifier onlyowner
0x081d8a340d384cffca0c2dafbf45020d760d7576,SOLIDBLOCK.swapTokensForETH,1,0,1,-- REENT: ETHAmount.treasury
0x085e64546fe941bbfd1751b99365dab4b2f454fc,MetaMononokeInu.startTrading,0,0,1,
0x0881c6bc48b80726ed97cb1c44586cdaf4f4be94,ZeroTax.swapAndLiquify,0,0,1,-- no REENT: modifier swaping
0x095c3f181cde64ff0d96ec14fba29210f2851fe2,CompliantCrowdsale.approveMint,0,0,1,
0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1,Spitz.Launch,0,0,1,
0x0a28dd8141394e6d680d20d54ffeb3544b576a78,Loan._userRefund,0,0,1,
0x0a28dd8141394e6d680d20d54ffeb3544b576a78,Loan.checkPayShareholder,1,1,1,
0x0a5a0a14419f9db1da68cf2f550720e5df49d4fe,YZYVault.addTaxFee,0,1,1,
0x0a5a0a14419f9db1da68cf2f550720e5df49d4fe,YZYVault.emergencyWithdrawToken,0,1,1,
0x0a5a0a14419f9db1da68cf2f550720e5df49d4fe,YZYVault.stakeLPToken,0,1,1,
0x0ac31bc80e6905bc27f3cdcb66dc38945f2055e2,Nothing.mintNOTHING,0,0,1,
0x0acbcc45dde258b18c11b16b06bdc64fd91913ac,TokenTimelock.release,0,1,1,
0x0b5ecbb411d8fe829e5eac253ee1f2dc05d8d1ae,KUNOICHIX.launch,0,0,1,
0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61,BoltInu.manualSendToken,0,0,1,
0x0bc95951bb59d6fd063ce7ad5c3b3dcaace98132,ViVICO.externalTokensRecovery,0,1,1,
0x0bc95951bb59d6fd063ce7ad5c3b3dcaace98132,ViVICO.refund,0,0,1,
0x0bc95951bb59d6fd063ce7ad5c3b3dcaace98132,ViVICO.successful,0,1,1,
0x0c2795fc4e1f57614eb78923dc78521ff0676fb8,BitChordCrowdsale.startOraclize,0,1,1,
0x0c2795fc4e1f57614eb78923dc78521ff0676fb8,BitChordCrowdsale.update,0,1,1,
0x0c6139206f995d160edb00422a5ac819bc94295e,ChainBot3000.depositOutput,0,0,1,-- Reason for not UE: UniswapContract.ethToTokenTransferOutput returns uint value; it does not return boolean. No need to check the value when function returns uint. -- Reason for not REENT: State variables (deposits[_steamid]) changed after the external call has no impact on the execution of transfer function. 
0x0c78003843b4a72b765938cb3b14aecb188dbc6a,Crowdsale.updatePrice,0,0,1,
0x0cb0a2136f2e80662eb5c50b96bfa3de85f335ce,IGLOO._payTreasury,0,1,1,
0x0cb0a2136f2e80662eb5c50b96bfa3de85f335ce,IGLOO.transferERC,0,0,1,
0x0d1c59da19c60092cc3a56ee6750bd162582f857,CUELauncherToken._doBurn,0,0,1,
0x0d1c59da19c60092cc3a56ee6750bd162582f857,CUELauncherToken.manualTokenomics,0,0,1,-- No UE: transfer always return True
0x0d1c59da19c60092cc3a56ee6750bd162582f857,CUELauncherToken.v1AirdropETH,0,0,1,-- No UE: transfer always return True
0x0d2508ff66a445116029b153f5ca261145717cc1,UnicornToken._disperseEth,0,0,1,no REENT -- m_EthReflectSvcAddress is fixed
0x0d2508ff66a445116029b153f5ca261145717cc1,UnicornToken.addLiquidity,0,0,1,-- no UE: approve() always return true
0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e,SEISHI.swapForTokenomics,0,0,1,
0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb,FUEGO.swapForTokenomics,0,0,1,
0x0d95bc0c758ae70141fc95345a7164a4c6e1df15,Lagarde.establishTrading,0,0,1,
0x0dd1326b7b80107f002ba16dad7fe2dd22f00491,LetsBreakThings.checkBalanceSendEth,0,1,1,-- Reason for no RENT: No state changes after external call
0x0de3539f225e3431d6a7bbd3495cc2caf19b334c,BabyKounotori.gm,0,0,1,-- no UE: approve() always return true
0x0e24224484c7e445438ae9ed9b03a0108ad798f2,ChipToken.swap,0,0,1,
0x0e2d791d78e6cc39c8dbeb7898b02221ac35c3f7,PumpToken.addLiquidity,0,0,1,
0x0e30bc9512306534b85afd0c75065b455af55d45,COPIUM.swapAndLiquify,0,0,1,
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,BinaryOption.closeSession,0,1,1,-- no REENT: modifier onlyEscrow
0x0e3ea79e194aef78b69209447f0f6c17ed96a5d6,Ownable.renounceOwnership,0,0,1,
0x0e3ea79e194aef78b69209447f0f6c17ed96a5d6,Ownable.transferOwnership,0,0,1,
0x0e50763fbbd9a2474c429041b338624bb2a8b7bd,IZA.rescueBEP20Tokens,0,1,1,
0x0e82b29a77a53880dd4ee8326cfea9b4c68db638,DappIncubator.withdraw,0,1,1,-- UE: transfer() function
0x0eb65b4c3d3de340e1b15384f8f211784247a37a,KODAV3SecondaryMarketplace.adminRejectTokenBid,0,0,1,
0x0efef0b34638addc8833ba729ae20016b5f24ffc,Escapable.escapeHatch,0,1,1,-- UE: token.transfer(escapeHatchDestination; balance)
0x0f99d989df7017d7bb27bffb3f12c6b035863980,THEGAMEOFCHAD.launch,0,0,1,
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.addContractTokens,0,1,1,
0x1056f5436dc817e28a24c509ff26f5912b837214,CompliantCrowdsaleHardcap._approveMint,0,0,1,
0x105923fa70412c82452ff75f5e775fb0383ee2fc,Keetsu.swapAndLiquify,0,0,1,
0x108523415a8cd7cb8ef2d6b12177181f489ec210,Pepe.swapBack,0,0,1,-- no REENT: modifier swapping
0x1104080b3ca1f766a33c16aa890465d1a63e5078,RedKnightToken._swapAndLiquify,0,0,1,-- no REENT: _swapping
0x11566f832f90155701384e42f0adcdc889767bbc,HexSaitama.startTrading,0,0,1,
0x1190074795dad0e61b61270de48e108427f8f817,CoinMerge._disperseEth,0,0,1,
0x1190074795dad0e61b61270de48e108427f8f817,CoinMerge.addLiquidity,0,0,1,
0x119995a900c86c6aaf68b917341b844c3786913c,GLITCH.swapAndLiquifyForEth,0,0,1,
0x11ce3c5ecfa4cc788eaa94157a63a1ca4863a90c,ShiryoMarket.acceptItemOffer,0,0,1,
0x122ad2495b1af2a14c5c4b4ca59adfcd79c2dcb3,GameTime._swap,0,0,1,-- NO REENT: state var _swapping
0x125365069020439b830c9eac9dd402f8aa762569,RatScam.withdraw,0,0,1,
0x126bf7880a9597e2760380d44d147c90cd75ee39,The_Disturbance.swapAndLiquify,0,0,1,-- No REENT: modifier lockTheSwap -- No UE: transfer() always return bool
0x126bf7880a9597e2760380d44d147c90cd75ee39,The_Disturbance.sweepTokens,0,0,1,-- no uE: transfer always return true
0x128ad1ad707c3b36e6f2ac9739f9df7516fdb592,alfav3.RescueTokens,0,0,1,-- no uE: transfer always return true
0x12bafa32c73c6b7f0c00b36b3ba6d9416b163c59,FitCoin.addLiquidity,0,0,1,
0x132e2b67e91bf0294536b16d772e8dee099fc40c,Brave3d.buyByAddress,0,0,1,no ether involved
0x132e2b67e91bf0294536b16d772e8dee099fc40c,Brave3d.buyByName,0,0,1,
0x132e2b67e91bf0294536b16d772e8dee099fc40c,Brave3d.setName,0,0,1,
0x13763173527aab169f588fd663886f17740dfc65,HARAMADAN.addLiquidity,0,0,1,
0x13c34380e14c47cdd089d466396e53f8a0a24442,PunkMonkeyDividendTracker._reinvestDividendOfUser,0,0,1,-- no REENT: callable from onlyonwer function
0x13c34380e14c47cdd089d466396e53f8a0a24442,PunkMonkeyDividendTracker.process,0,0,1,
0x13d8faf4a690f5ae52e2d2c52938d1167057b9af,BatchSwap.cancelSwapIntent,0,0,1,
0x13ee0099f47a84bb4ab4cce741326b2976eda776,TradableErc20.createLiquidity,0,0,1,
0x147aa9ada01b70c4c8c8b89b06afe767908aced7,PharaGoddess.withdrawFund,0,0,1,-- no REENT: modifier onlyOwner
0x14c7f742d9a2fe6fe13fafbc1cb24be74ac5708d,CharityMiner.deposit,0,0,1,-- Reason for no UE: p3d.buy.value() does not return boolean; transfer sends an exception on failing
0x15ada2a8e62134806a86db3030fefc0a2a13cc99,BiddingClockAuction.withdrawDklBalance,0,1,1,
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,Depot.depositSynths,0,1,1,
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,Depot.exchangeEtherForSynthetix,0,1,1,
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,Depot.exchangeSynthsForSynthetix,0,1,1,
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,Depot.withdrawMyDepositedSynths,0,1,1,
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,SynthetixEscrow.vest,0,1,1,
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,SynthetixEscrow.withdrawSynthetix,0,1,1,
0x16a76a81bb2c2b16ca7b0a2ea4f093bcdf47ae7b,MultiChainCapital.sendETHToTeam,0,1,1,
0x16f7767a800eabd16e334e88683d8d0489c8ddbf,M510.recoverTokens,0,0,1,-- no UE: transfer() always return true
0x1806b3527c18fb532c46405f6f014c1f381b499a,PlanetCryptoToken.burn,0,1,1,
0x193c4c0bdf474efe82a56e530f70af58810cf74d,WINORWATCH._depositWETH,0,1,1,
0x1963737af12d3649f6f319fb64af2aa29f7256b7,MessierAnonymity.sendRewardtoPool,0,1,1,
0x19f259affad4eab74ee306f709044b2c8145f692,Third_Degree_Burn.ReleaseLP,0,0,1,-- Function transfer always return True
0x1a84f41c5a0f3ac34e0fb5fef6ff84be81242fce,DefiGold.syncPair,0,1,1,
0x1a9206cd9a4c59967ca728ca96b15287b2fd4c7c,CoinFlip.withdrawToken,0,1,1,
0x1b1a4586fd99f7e044868ac8e5e91eac4863149b,yUSDT.withdraw,0,0,1,
0x1ba35631c69a1363769d2b3e4a9d5c7020b3e520,yUSDC.withdraw,0,0,1,
0x1bd367eeb05d9c7f8b5ba488df1878d9b983ebfd,Crowdsale.fallback,0,0,1,-- Reason for no UE: tokenreward.transfer() does not return any value
0x1c1de57cc864072f7eab381c4c06b14a6963dd4b,ERC20dex.collect_fee,0,1,1,
0x1c3f78372a8c3e01970b85e1b26b885803011da3,yDAI.withdraw,0,0,1,
0x1c57481dc2e2b987b2f012e9d3cc4cbbecd7c116,yTUSD.extractYELDEarningsWhileKeepingDeposit,0,0,1,
0x1c57481dc2e2b987b2f012e9d3cc4cbbecd7c116,yTUSD.withdraw,0,0,1,
0x1d86a854da490ff74dedc7abe281fb468f8c19ee,MultiVesting.clearAll,0,0,1,-- Reason for no RENT: modifier onlyOwner
0x1d9fe29aec8852d7a32ac26b695c258840feba15,InterestFinal.payout,0,1,1,
0x1da73fc09ea07781482994036a0eecc7e6952dfb,TydoIco.buy,0,1,1,
0x1da73fc09ea07781482994036a0eecc7e6952dfb,TydoIco.withdrawTokens,0,1,1,
0x214a8abb5fd89d3605c6cadb178f1748c36f6b8d,PAPE.withdrawStuckTokens,0,0,1,
0x2229e2da4406fbe856ca9414035eb97d739808b2,Kichona.extractERC20Tokens,0,0,1,
0x2268003d92ff03be6ca6da029f8d8127fd2f617e,ShortOrder.claimDonations,0,0,1,-- Reason for no REENT: money is being sent to admin
0x237ebdb70cd9b35be854ce92350b6afcbb90078d,AirDropContract.transfer,0,1,1,
0x23ed5bd2dbf560926312cad48653a027af0b6e11,yUSDC.withdraw,0,0,1,
0x2463a3f13cea3ea308be5c23cc887fdf205653ea,ADAMPROJECT.clearStuckTokens,0,0,1,
0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31,AIDOGEX.claimStuckTokens,0,0,1,
0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c,ICO.buyTokens,0,0,1,-- No REENT: state vars changed after external call has no impact on the execution of external call
0x25067272880fa0e49f1cebc988a2eed8485343a6,Wallet.sendTo,0,0,1,-- Reason for no REENT: modifier admin
0x25456ad3d45863cecf7039b7628eb8fc913346ad,LUNRR.claimStuckTokens,0,0,1,
0x254be9060f72d70bf6e264b496b691a98733251e,B.go,0,1,1,
0x25ad23adf5da60190d5f44297ab7d7ab147ad9db,Sandwich._lockLiquidityForever,0,0,1,
0x2628e13a3cbdc52ed96b4b8d6b1041d3ef3a409e,EasySmartolution.addParticipant,0,1,1,-- Reason for no RENT: No state changes after external call
0x26436e73fdd02adde8ae7ab61fa660d6f7926e6f,Crowdsale.buyTokens,0,1,1,
0x26436e73fdd02adde8ae7ab61fa660d6f7926e6f,Crowdsale.destroy,0,1,1,
0x272922870b1b23db61e41f7aa2c6abf976b6a4ab,samuraiFees.withdraw,0,1,1,
0x284b0f2f49d072836db87dd25d0623cd2f622bb1,DesTokenSale.finishPhase,0,0,1,-- Reason for no RENT: onlyOwner modifier
0x287fda15f8f002e5df9f536f10bbfc0816960f36,EncryptedToken.fallback,0,1,1,
0x28d673424398fd5de64133d4e64487c495a724f5,Opportunity.fallback,0,1,1,
0x28f1135e43e61ebf303c8f1f9beef4f6a00dcb34,XC.unlock,0,0,1,-- Reason for not REENT: state variable lockBalance gets updated after external call. However there is no dependency on that state variable.
0x2934443c1749dcc0cdcabbd77098eea31d2ea6c3,xSNXCore.mintWithSnx,0,0,1,
0x2934443c1749dcc0cdcabbd77098eea31d2ea6c3,xSNXCore.withdrawFees,0,1,1,
0x2980b7c0c8e1a2c0bdecff55cde9e3576aaf9eaf,PiZZa.pullResolves,0,0,1,-- no UE: transfer always returns true
0x29b6f1f4f6513a6363e32d092bf95319ec5266b9,BullDogeAIToken.claimStuckTokens,0,0,1,
0x2aa216f8126190fe5610b1b6c3c4835d1b07c8c8,BoomstarterPresale.buy,0,1,1,
0x2aa216f8126190fe5610b1b6c3c4835d1b07c8c8,BoomstarterPresale.finishSale,0,1,1,
0x2aeee16d8412beabc5f38a6995ee5e4d32ab7f9d,RAGE.removeERC20,0,1,1,
0x2b4a6831931175b0afb39adff9c43350500bded3,EIC.importantFunction__RescueTokens,0,0,1,
0x2c92744a0428e405e95dc3eb812e1b87872b22eb,LPStaking.stake,0,1,1,
0x2cc995bce8644e4809f43c6e8b3cbd611bcebbb5,AIO.recoverTokens,0,0,1,-- no UE: transfer() always return true
0x2cc995bce8644e4809f43c6e8b3cbd611bcebbb5,AIO.unlock,0,0,1,-- no UE: transfer() always return true
0x2cf5694906bdd80f33bac7cb80183f1c61bc5be2,PaymentProcessor.secureTokenPay,0,1,1,
0x2daae64cc8516187c9d2ab209f3faa2f83b246e1,Moloch.sponsorProposal,0,1,1,
0x2daae64cc8516187c9d2ab209f3faa2f83b246e1,Moloch.unwrapShares,0,1,1,
0x2db5a56957a3530235e52ae5eb433e6afcb44512,Router.withdrawSupportFee,0,1,1,
0x2db5a56957a3530235e52ae5eb433e6afcb44512,Router.withdrawProtocolFee,0,1,1
0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4,EncryptedToken.fallback,0,1,1
0x2e6d72d5948c0cb0b9ac1adc2034e16d02cdabda,MILADYXP.swapBack,0,0,1,-- no UE: IERC20(address(this)).transfer(DEAD; tokensToBurn); always return true
0x2fd4f0569896b4009ffad793ac6308bfd79b4c35,Cave.manualSendToken,0,0,1,
0x3085c9403871c00f7fd2e84dac1bdaa05f5f652e,PreICOProxyBuyer.claim,0,0,1,
0x30919c5c5c7727eea89b110d7258cbb36d541377,Crowdsale.safeWithdrawal,0,0,1,
0x33b44a1d150f3feaa40503ad20a75634adc39b18,TimeCapsule.withdraw,0,1,1,
0x352dbba201af66f98a47f2b280bff45f9050dbf8,DrainMe.callFirstTarget,0,1,1,
0x352dbba201af66f98a47f2b280bff45f9050dbf8,DrainMe.callSecondTarget,0,1,1,
0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7,DoublePoggerino._rewardLiquidityProvidersETH,0,0,1,-- no UE: transfer() always return true
0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7,DoublePoggerino.burnLiquidity,0,0,1,-- no UE: transfer() always return true
0x3775876e537df71b60061151b39bcfb638f832f5,Staking.emergencyWithdraw,0,1,1,
0x3775876e537df71b60061151b39bcfb638f832f5,Staking.harvest,0,0,1,
0x3848d38145ef835b7570768dbc98a3d8ceb46cd5,DividendDistributor.rescueDividends,0,1,1,
0x38721079a72030ab1817fb9e1aaa86ae0d08356f,Investment.addToPool,0,0,1,Function transfer always return true
0x38ec125e6271b343d84529e9ca8c2481e3b194e5,FranceInu.sweepExternalTokens,0,0,1,Function transfer always return true
0x3967f481031f78a3fcbfe5c6a1079ec9f8426432,Kongtou.transferToken,0,1,1,-- Reason for no REENT: calling the function with and without reentrant call will have same impact. The attacker won't get any benefits
0x39832e9b4851c76160d754267d4a169617c27d88,TheHand.withdrawToken,0,1,1,
0x39c74b1996d2cdbc2c996f2bb414ce316e245417,SimplifiedDelegatedTrasfer.claimETH,0,1,1,Reason for no reentrancy vulnerability: No state changes after external call
0x39cfd754c85023648bf003bea2dd498c5612abfa,Token.WithdrawToken,0,1,1,
0x3a2fd07ec2ad6f355f93af695a7cf858f5967b78,MTVote.onTokenReceived,0,1,1,No UE: TVToken(TVTokenAddress).transfer(wallet; _value); --> returns boolean and the return value is not checked Reentrancy vulnerability is not there because of the line --> require(msg.sender == TVTokenAddress); the function can be called by only one address ie                 TVTokenAddress. Constructor() is setting the address. We are assuming that the node deploying the contract is non-malicious
0x3ab4a46beae2a0b025eeed54db05819814ff287a,CloneFarmFarmer.hijackClones,0,1,1,
0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215,LiquidityPool.addLiquidity,0,1,1,
0x4051334adc52057aca763453820cb0e045076ef3,airdrop.transfer,0,1,1,-- Reason for no REENT: calling the function with and without reentrant call will have same impact. The attacker won't get any benefits
0x42db5bfe8828f12f164586af8a992b3a7b038164,firstTest.withdrawal,0,1,1,-- Reason for no REENT: No state changes after external call
0x43212915c5c01d9ec111d0672e37cc4c4d6f023c,CallContract.callFrozen,0,1,1,
0x43212915c5c01d9ec111d0672e37cc4c4d6f023c,CallContract.changeContractController,0,1,1,
0x44f2f79343ac7244c09e0189df05588524a86515,IOU.withdraw,0,0,1,-- No REENT: no state changes after external call -- No UE: token.transfer() does not return any value; so no need to check
0x475de1f3e1ba5aeefc9fc694852c8fce59b353a1,EtherShareDonation.FreeShare,0,1,1,
0x479cbe1f6a7fa4d7e304ae983803c46e85ced870,Slaughter3D.DivsToRefundpot,0,1,1,In the above code snippet of the contract the line 'SPASM_.disburse.value(base)();' makes an external contract call to the 'disburse' function of the 'SPASM_' contract and transfer the ether to it using '.value(base)'. This line does not check the return value of the external call. It's important to check the return values of the external calls. When transferring the  Ether ; to ensure that the call was successful. If the external call fails; it can lead to unexpected behavior in the contract. We need to check the return value and handle any potential errors or failures. Reason for not Reentrancy:- SPASM_.disburse.value(base)(); ; base depends upon dividends; dividends does not depend upon the state variables changed after external call (Refundpot; Jackpot)
0x47f8c173083af430f4507124b63db55296500baf,Deal.destroyCampaign,0,1,1,-- No REENT --> because of onlyOwner modifier -- UE --> token.transfer() returns boolean
0x4c60e311d8fba04e313f7e7b3dec61b3028726d1,EtherWorldCup.pullRipCord,0,1,1,
0x4c60e311d8fba04e313f7e7b3dec61b3028726d1,EtherWorldCup.register,0,1,1,
0x505766c3aef3ea43cf7e1bf9620e52607d45885e,AgentContracteGalaxy.returnBalanseToTarget,0,1,1,
0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2,BitProCoinX.withdraw,0,1,1,
0x5171f06b66479c751c0ac6d2935d2db373ca06c4,OffChainOrFeedPriceFeed.withdrawETHAndTokens,0,1,1,-- Reason for no REENT: Modifier onlyOwner
0x52c2d09acf0ef12c487ae0c20a92d4f9a4abbfd1,MyNewBank.withdraw,0,1,1,
0x530a9cceee0c45f58229ae5c256e414e6df957ad,ABIO_BaseICO.fallback,0,0,1,
0x575d8909d7fef2561ef8c2114d80b736fb77cbb6,ABChainNetContract_v5.rtbPaymentsProcessing,0,0,1,-- Reason for no REENT: ABChainRTBtoken(tokenAddress).transfer is given and it does not have any external calls-- Reason for no UE: ABChainRTBtoken(tokenAddress).transfer always return true; no need to check
0x589fbf3d4168518b8b849b7eedfdb719407900ca,AirDropLight.transferDirect,0,0,1,"-- Reason for not REENT: State variables grandTotalClaimed changed after the external call has no impact on the execution of transfer function. """
0x595677bac1d68074c4f7b93bb6654156466a66b0,EtherPayment.multiTransfer,0,1,1,
0x5b463c4e19358b4eaf010cf24244bf140541a63e,TokenERC20.sell,0,1,1,
0x5bb52e85c21ca3df3c71da6d03be19cff89e7cf9,CreditDepositBank.close,0,1,1,
0x5bb52e85c21ca3df3c71da6d03be19cff89e7cf9,CreditDepositBank.credit,0,1,1,
0x5bb52e85c21ca3df3c71da6d03be19cff89e7cf9,CreditDepositBank.withdraw,0,1,1,
0x5d268508179db4da44de9057792758bff280e3ed,CentraWhiteList.withdraw,0,1,1,
0x5db4364cc0959c224f7898d8188413c1f560cf48,Receiver.drain,0,1,1,Not reentrant: only contract implementation can call this function
0x5e88d3aa9c690a519279c199cc16f37b99510e2d,OffChainOrFeedPriceFeed.withdrawETHAndTokens,0,1,1,Reason for no REENT: modifier onlyOwner
0x5f38c57b268664015de387229bc9d3822b53ec32,CanBeV1Migrated.canBeMigrated,0,1,1,
0x62a03c868c959386b2df7f266e79bc711fb92398,BatchTransfer.batchTransfer,0,0,1,-- Not reentrant because of modifier onlyOwnerOrAdmin-- Not UE because transfer function defined in token contract does not return any value
0x62b01d0aeb16656aff7a7632c3a61c8b069a8928,TopInvest125.fallback,0,1,1,-- Reason for not REENT: PROMO account will get benefit; not attacker
0x641074844a0dd00042347161f830346bdfe348bc,SharedBank.withdraw,0,1,1,
0x64b09d1a4b01db659fc36b72de0361f2c6c521b1,EncryptedToken.getEth,0,1,1,
0x675c807fe3cf4fcc51b5c739b4bb910b0009ccb1,OurBank.payout,0,1,1,-- Reason for no REENT: no state var. changes after external call
0x6a3f85f8a86e7b3de0269c20e9ab066dd57b8e21,AccRegCenter.transfertoacc,0,0,1,-- Reason for no REENT: Modifier onlyOwner
0x6cdccb2b249298419ab3dea261a92fbacf2223ab,BountyEscrow.payout,0,1,1,
0x6d84769b1e287a27f282a938c8110b22714dbf78,ABIO_BaseICO.fallback,0,0,1,"-- No UE: abioToken.transfer does not return any value as per declaration in ""interface ABIO_Token"""
0x71d57fc11e9d85d8ce2b5acc9019af399bf0cbcb,LockToken.release,0,1,1,-- Reason for no REENT: modifier onlyOwner -- Reason for UE: function token_reward.transfer() returns boolean value
0x7a5c92aa4deff4f784a7149e26ba96e77f3f0635,Contagion.Count,0,1,1,-- No REENT --> because of onlyOwner modifier
0x7a5c92aa4deff4f784a7149e26ba96e77f3f0635,Contagion.Sort,0,1,1,In the above code snippet the line 'owner.send(feecounter)' address without checking the return value of the function 'send' function. This is a potential issue because the function 'send' it return a Boolean value indicating whether the transfer was successful or not. It failed to check  this return value could lead to unintended consequences if the transfer fails. i.e. if the owner contract does't have a fallback function. To counter or prevent we need to check the return value of the 'send' function and handle failure appropriately.
0x7c52209718662dde9e18690e5ce435aa81502edd,BurnableOpenPayment.release,0,1,1,
0x7c52209718662dde9e18690e5ce435aa81502edd,BurnableOpenPaymentFactory.newBurnableOpenPayment,0,1,1,
0x7d09edb07d23acb532a82be3da5c17d9d85806b4,PoCGame.donateToWhale,0,1,1,-- Reason for no REENT: whale.call.value sends amount to whale contract. it does not depend on any state variable
0x7d7dde4b196a237879e448fc4b69b8647c124932,Utopium.Optin,0,1,1,
0x7d7dde4b196a237879e448fc4b69b8647c124932,Utopium.Payout,0,1,1,-- Reson for not RENT: No statements after external call -- Reason for UE: token.transfer returns boolean value
0x7e433aee8090ee2c8ee3e6aaedfde1b76d776ace,LockToken.release,0,1,1,-- No REENT --> because of onlyOwner modifier -- It has UE; as transfer can return false
0x82a9187ad010f85678b6f96b3d6f3a579ab640fb,AgentContract.returnBalanseToTarget,0,1,1,-- No REENT: assert(msg.sender == __owner)
0x82cc62a5441c4df93acf0d2cf63e25060289e847,zeroXWrapper.zeroXSwap,0,1,1,Reentrancy Vulnerability :- The above contract function does not have reentrancy vulnerability as it calls 'forwarder' contract and emits the result of the call; but it doesn't make any additionally state changes or external calls that could be exploited by an attacker for reentrancy. 
0x849019a489c3c26c7a7668e468be81a4d132781f,SimpleDeposit.RefundDeposit,0,1,1,
0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7,ESmart.withdrawPrize,0,1,1,-- Reason for no REENT: withdrawPrize gets called after 5 rounds. jackpotAmount is entire balance of the contract. The depositor will get entire balance in first send and there is no way that any user can send money to the contract again after 5 rounds.
0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f,BankWallet.fund,0,0,1,-- Reason for no REENT: No state changes after external call
0x887e4f25db63b079dffed24283f0470b0704b8e8,TheWarBlueNation.Count,0,1,1,-- Reason for no REENT: modifier onlyowner
0x887e4f25db63b079dffed24283f0470b0704b8e8,TheWarBlueNation.Sort,0,1,1,Reason for not reentrancy:
0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633,BZxVault.withdrawEther,0,1,1,
0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb,TokenLock.release,0,0,1,-- Reason for no REENT: Modifier ownerOnly
0x8fd1e427396ddb511533cf9abdbebd0a7e08da35,Token.WithdrawToken,0,1,1,This function doesn't contain direct reentrancy vulnerability because it follows the checks-effects-interaction pattern. However; it does have an unchecked call return value issue. Specifically the line:
0x91d7e5895f7a635ba8bdce9e2be544e5e527135f,Crowdsale.checkGoalReached,0,0,1,
0x950ad688ade27bcaa6e890e9d86ba5a9293f4d8c,Crowdsale.checkGoalReached,0,0,1,
0x95e7ab2a7a120ceac7bcdb945367e41ff106e3cf,Receiver.drain,0,1,1,
0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7,WeSendReserve.release,0,1,1,-- Reason for UE: token.transfer returns boolean -- Reason for no RENT: modifier isAuthorized
0x99d804f479df333ed4d2287af2d4da3eda1b3cd1,EthealSplit.split,0,1,1,-- Reason for no REENT: there is only one function that receives money; i.e. this function. It sends same money to addresses selected by sender
0x9accb8fe0d9df53ce0040bc78d1294e1f55dcc88,MyAdvancedToken8.sell,0,0,1,
0x9bf7b6be208672cabbb671a3438c60c1ecb13061,AutoWallet.sweep,0,1,1,
0x9d24335fd550568615bc81f8c0aa72aaa70ab93a,TheWarRedNation.Count,0,1,1,-- Reason for no REENT: modifier onlyowner
0x9d24335fd550568615bc81f8c0aa72aaa70ab93a,TheWarRedNation.Sort,0,1,1,
0x9d31ff892f984a83e8b342a5ece8e8911ed909e0,A_Free_Ether_A_Day.show_me_the_money,0,0,1,
0x9d661f7773be14439b4223f5b516bc7ef67b0369,PayableHumanityApplicant.applyWithEtherFor,0,1,1,
0x9ecea0edc56f307cc343b2c8e3acb454d1faffda,BZxVault.withdrawEther,0,1,1,-- Reason for UE: return (to.send(amount));
0x9ed484129f09e5a90a13f4e914a0bd6fa08ceba7,BoomerangLiquidity.donate,0,1,1,The call Return Value of the call() function is not checked to see if it was a success or not.
0xa43ebd8939d8328f5858119a3fb65f65c864c6dd,Sweeper_clean,0,1,1,
0xa46edd6a9a93feec36576ee5048146870ea2c3ae,EBU.transfer,0,1,1,-- No REENT: The attacker won't get any benefits over normally calling the function twice
0xa584c5eaccb5dd4a5c0fc0a785dee952becc4c06,Crowdsale.safeWithdrawal,0,1,1,
0xa97e65fbb5d1f9698a78f55e3a3529a74417ae69,GOOGTokenSale.fallback,0,0,1,-- Reason for no UE: require statements check the return value
0xa9b6e2381dee5dd4ea5d6e31e11b3c6f10d35afc,UserContract.Initiate,0,0,1,-- No REENT: No externall call in token.transfer() function (In contract Wrapped_Ether)
0xaa3f3485b5a009b34308707aa8e4c6f6c8e4dd49,IOU.withdraw,0,0,1,-- Reason for no RENT: No state changes after external call (one function from 1. msg.sender.transfer(eth_to_refund);     2. token.transfer(msg.sender; iou_to_withdraw); will be executed. Not both.)
0xab32cdd8d4796f5ae968ac176b3cc54a3200c723,ICO.withdraw,0,1,1,-- Reason for UE: owner.send(amount)
0xac355d24591c01ad44f8da36ec7629d275a2c6e1,ShortOrder.claimDonations,0,1,1,The first call to admin.transfer() is a legit call and in case of any failure; the transaction will get revert. However; the second call Token(tokenUser[0]).transfer() is user defined and returns a bool value instead of reverting the transaction. Hence; any failure in this transaction will return normally with a false bool value which is not at all checked in the above code. Instead ; the state variables are changed without checking the Token(tokenUser[0]).transfer() return value. Hence; unchecked call return value bug is present. Secondly; the potential candidate for reentrancy bug is Token(tokenUser[0]).transfer().But; it is only calling admin address for the transaction to occur. This admin address is the owner of the contract as defined in the constructor of the class. This address is fixed and can not be changed by the attacker which prohibits the reentrancy bug.
0xacb8a40073d0a7e041b29381debcafc2b538cd7c,DepositContract.RefundDeposit,0,1,1,-- Reason for No RENT: State changes after external call does not affect the excution of add.send
0xad43e8ba48a974e6dc5a385d87fc8cd1fe94a408,Crowdsale.fallback,0,0,1,
0xad93be20a1781d9976b87c5bda2be64b2ebc132d,BlockworqCredit.withdraw,0,1,1,
0xaf7aea249098f2c2f50cc11d4000ccf798194373,ZTCrowdsale.fallback,0,0,1,-- Reason for no REENT: state vars changed after external call has no impact on the execution of external call
0xafb7ae966a9a7801beace4a7d5bbee91d860f616,Token.buyTokens,0,1,1,
0xafc36ac17c5d84504064f944b27292e795d03398,IOU.withdraw,0,1,1,
0xb11b2fed6c9354f7aa2f658d3b4d7b31d8a13b77,Proxy.proxy,0,1,1,
0xb25cef763846fe25185de5cf970fdf2ac13fc16d,Crowdsale.fallback,0,0,1,-- state changes after external call are not important becuase the variable soldTokensCounter is not used anywhere in the function inside if; require; or assert
0xb588530e3956d9787b0429244ca360f566ff3301,BaseUnilotGame.revoke,0,0,1,-- Reason for no REENT: modifier onlyAdministrator
0xb620cee6b52f96f3c6b253e6eea556aa2d214a99,DrainMe.callFirstTarget,0,1,1,
0xb620cee6b52f96f3c6b253e6eea556aa2d214a99,DrainMe.callSecondTarget,0,1,1,
0xb69a50f98a49f85fd2042813e1647b02dc43d71f,EbyteDistribution.fallback,0,1,1,-- Reason for UE: ebyteToken.transfer() returns boolean-- Reason for no REENT: state variables changed after external call has no impact on external call
0xbd8dbefb4e1217e95fa37201c61daf4b57a9fe19,Airdrop.withdraw,0,1,1,
0xc4529ea3f838a7e27a673a87bfe844a5b8b1e4e2,InterestTest.payout,0,1,1,
0xc524079859fd32597f257c175c5f9e239c1dd2db,EncryptedToken.getEth,0,1,1,
0xc543afe640c8c7521beb6549be75f77b568f4590,GET111.fallback,0,1,1,Not reentrant because money is sent to ADMIN. We are assuming that ADMIN is not malicious.
0xc601f6938c75c4ca03eaad570701d86e607771db,Contagion.Count,0,1,1,-- Reason for no REENT: modifier onlyowner
0xc601f6938c75c4ca03eaad570701d86e607771db,Contagion.Sort,0,1,1,Reason for not reentrancy: 1. Variable feecounter is local; 2. Function Sort is internal
0xc64fd3ff188c4f1f1e34bbff54f67d8c88175696,LockingContract.releaseTokens,0,0,1,
0xc67c1f88f31e724b137a057292e55cb42a5f3241,Crowdsale.fallback,0,0,1,-- Reason for no REENT: state var. amountLeft has no impact on the execution of transfer
0xc80defd365fbac2dffeddfcb091b99afea6f8408,FruitFarm.getTokens,0,1,1,
0xceffdb3f1aed635e94a0b565239d4353ae44c744,BancorBuyer.buy,0,0,1,
0xd1265bfe57597840f89971b7e67538bac780f9ad,DesTokenSale.finishPhase,0,0,1,-- Reason for not reentrancy: onlyOwner modifier
0xd1a3ace46c98e028229974217201433e7163c4dd,HelpMeTokenPart1.fallback,0,1,1,Above function has Unchecked Call Return Value as the return value of thankyou() function is not checked.
0xd40c2daf2b55fbf5532ddeada3febe738f431dfe,EncryptedToken.fallback,0,1,1,Not reentrant because the function is fallback function and we are sending msg.value to owner; in the next reentrant call the attacker has to send money in order for owner to receive it
0xd54920cedf704b87342fa26d5773efabf9037a77,CryptoStars.withdrawPartial,0,1,1,-- Reason for no reentrancy vuln: No state variable changes after external call
0xd5e5ab3438c14a6c823886baa24d8f41636b1d34,TokenERC20.withdraw,0,1,1,
0xd89098a767a3fe39410d6fa7d72b6ebc5eaae247,LockingContract.releaseTokens,0,0,1,-- Reason for no REENT: stat var totalTokens which is changed after external call has no impact on the execution of the external call
0xdb8459034fc97eed3d43172909e1d353e9f4d282,URUNCrowdsale.manualTokenTransfer,0,1,1,Reason for UE: Token.transfer returns boolean value -- Reason for no REENT: Modifier onlyOwner
0xde39859237f5ff14926b194c3ef72e3213d3c665,Dex.trade,0,1,1,
0xde39859237f5ff14926b194c3ef72e3213d3c665,Dex.tradeRoutes,0,1,1,-- Reason for no REENT: Calling the function twice using reentrancy vuln and calling the function twice using normal call has same impact
0xdef5dce5781220efda3f5235cc6e5dd5a08e22bd,SmcdCoin.fallback,0,1,1,
0xe2a88ab6dc9da8e017c0a529d731558adc4183d5,Receiver.drain,0,1,1,-- Reason for no REENT: no state changes; no other statements except an external call
0xe2a88ab6dc9da8e017c0a529d731558adc4183d5,Receiver.forward,0,1,1,
0xe2d8337423519a95eb38d6bce22ea5e8784e79d5,CentraAsiaWhiteList.withdraw,0,1,1,
0xe4e28bfd45969218a2af311ee10e80846f7b2fdc,Presale.getFunds,0,1,1,Above function has Unchecked Call Return Value as the function does not check the value of send to see if transfer is successful or not.
0xe650a4ed8c64174201204fd4d628a98661048fc4,RobetTest.signal,0,1,1,-- Reason for no REENT: no state changes after external call
0xe66888a40b5e6271006e2a0de47cfc70ca0ba4fa,AirdropController.airdropManually,0,1,1,-- No REENT --> because of onlyOwner modifier -- UE --> token.transfer() returns boolean
0xe894d54dca59cb53fe9cbc5155093605c7068220,airDrop.transfer,0,1,1,
0xe9aec9c2a03d06243fffb907f6ce377e3c5c8936,CentraToken.withdraw,0,1,1,
0xebbe139afc4f0706cc928311b6748701b6549a31,Contagion.Sort,0,1,1,Reason for not reentrancy: 1. Variable feecounter is local; 2. Function Sort is internal
0xec8f9a0de90487e7aa172fe5291fd19ad7163aa1,BDSMAirdrop.tokensBack,0,0,1,-- No REENT --> because of onlyOwner modifier-- No UE: transfer function throws exception on failing
0xec94d178d97bac527fdcd4b3d4bf41b57d640c5b,Crowdsale.fallback,0,0,1,No comments mentioned in the answer
0xecbed48098c4f25a16195c45ddf5fd736e28b14b,UserfeedsClaimWithValueMultiSendUnsafe.send,0,1,1,-- No reentrancy because the attacker won't get any benefits by attacking the contract. He gets msg.value/recipients.length. He needs to send msg.value amount everytime and he will get less than that -- Reason for no RENT: even if one of the recipients calls the function again; he/she needs to send money also (amount=msg.value...) There is no benefit to attacker in reentering the function again
0xecfe4b7afc47260cb590d3043d3f790a61bb7910,EbyteDistribution.fallback,0,1,1,-- No REENT: state changes after external call has no impact on execution of transfer function -- UE: ebyteToken.transfer() returns boolean value
0xee3dc775669d2415cad8b5b424e6c97ad60ebef5,EncryptedToken.getEth,0,1,1,
0xefcc5dcaba4a93046b5f5c24c1281c685154214c,CrypteloPreSale.refund,0,1,1,
0xefcc5dcaba4a93046b5f5c24c1281c685154214c,CrypteloPreSale.withdrawAllEther,0,1,1,
0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d,DivisibleFirstCommonsForumToken.withdrawEther,0,1,1,
0xf1add8bf553d0066be17768d6816f3730c476237,Participant.processPayment,0,1,1,
0xf2570186500a46986f3139f65afedc2afe4f445d,RealOldFuckMaker.makeOldFucks,0,1,1,--  Reason for no REENT: No benefit to attacker in peroming the attack.
0xf2d54d17d3dc3810a0d62042a0b381df122ed162,BeercoinICO.fallback,0,0,1,-- Reason for no UE: beercoin.transfer() does not return any value
0xf796eb0a13b5a75e94f13fd14fb66b2b8007f69b,CoinByInsomniaTokenSale.buyTokens,0,0,1,
0xf847b0052b9d369401b0d71465f28392ea7e3304,Pandora.payToMarketingReferral,0,1,1,
0xf8a617d786dcb28f5d00f7e81b9f92b0cad617df,EFINITY.withdraw,0,1,1,
0xfae0300c03a1ea898176bcb39f919c559f64f4ff,deposittest.withdraw,0,1,1,-- No REENT --> because of onlyOwner modifier; no state changes after external call
0xfb0f7189b354660e649ae14261a9fe0e8febf369,CandyContract.collectBack,0,0,1,Reason for no REENT: modifier onlyOwner
0xfcc74ab9a02d55b9b1d0c378547a6bcfad7597c9,WashCrowdsale.fallback,0,1,1,-- It has unchecked call return value because of the line beneficiary.send(ethamount);
0xfcdd6d4f2cfb7cea900c4a57282cffcf3e41e068,Interestv3.payout,0,1,1,
