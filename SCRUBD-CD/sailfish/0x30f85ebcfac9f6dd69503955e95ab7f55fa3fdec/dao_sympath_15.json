{
    "file_name": "dao_symex_path_15.json",
    "from_function": "createSwapTarget",
    "to_function": "withdraw",
    "bug_type": "dao",
    "src_node": "\"BlockID: 467\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 489\nCall context: \nTrue\nREF_10 -> swaps[msg.sender]\nREF_11 -> REF_10[_participantAddress]\nTMP_32 = CONVERT 0 to bytes32\nTMP_33 = new Swap(_token,_targetWallet,TMP_32,_secretHash,now,_value)\nREF_11 := TMP_33\nEmit CreateSwap(now)\""
    ],
    "executable_instructions": 163,
    "state_variable": "swaps",
    "error": "",
    "result": "SAT",
    "execution_details": "# using file \/ethereum-security\/empirical-study\/data\/extracted_solc_codes\/crowdsource_contracts\/sailfish\/0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec\/dao_symex_path_15.json\n# attack type: range\n# solver type: z3\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x3@__GLOBAL__\n    > adding global block: 0x4@__GLOBAL__\n    > adding global block: 0x15@__GLOBAL__\n    > adding global block: 0x16@__GLOBAL__\n    > adding global block: 0x17@__GLOBAL__\n    > adding global block: 0x2a@__GLOBAL__\n    > adding global block: 0x2b@__GLOBAL__\n    > adding global block: 0x2c@__GLOBAL__\n    > adding global block: 0x3f@__GLOBAL__\n    > adding global block: 0x40@__GLOBAL__\n    > adding global block: 0x41@__GLOBAL__\n    > adding global block: 0x54@__GLOBAL__\n    > adding global block: 0x55@__GLOBAL__\n    > adding global block: 0x56@__GLOBAL__\n    > adding global block: 0x69@__GLOBAL__\n    > adding global block: 0x6a@__GLOBAL__\n    > adding global block: 0x6b@__GLOBAL__\n    > adding global block: 0x7e@__GLOBAL__\n    > adding global block: 0x7f@__GLOBAL__\n    > adding global block: 0x80@__GLOBAL__\n    > adding global block: 0x93@__GLOBAL__\n    > adding global block: 0x94@__GLOBAL__\n    > adding global block: 0x95@__GLOBAL__\n    > adding global block: 0xa8@__GLOBAL__\n    > adding global block: 0xa9@__GLOBAL__\n    > adding global block: 0xaa@__GLOBAL__\n    > adding global block: 0xbd@__GLOBAL__\n    > adding global block: 0xbe@__GLOBAL__\n    > adding global block: 0xbf@__GLOBAL__\n    > adding global block: 0xd4@__GLOBAL__\n    > adding global block: 0xd5@__GLOBAL__\n    > adding global block: 0xd6@__GLOBAL__\n    > adding global block: 0xeb@__GLOBAL__\n    > adding global block: 0xec@__GLOBAL__\n    > adding global block: 0xed@__GLOBAL__\n    > adding global block: 0x102@__GLOBAL__\n    > adding global block: 0x103@__GLOBAL__\n    > adding global block: 0x104@__GLOBAL__\n    > adding global block: 0x117@__GLOBAL__\n    > adding global block: 0x118@__GLOBAL__\n    > adding global block: 0x119@__GLOBAL__\n    > adding global block: 0x12c@__GLOBAL__\n    > adding global block: 0x12d@__GLOBAL__\n    > adding global block: 0x12e@__GLOBAL__\n    > adding global block: 0x141@__GLOBAL__\n    > adding global block: 0x142@__GLOBAL__\n    > adding global block: 0x143@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: swaps\n    > initializing global variable: swaps\n    > declaring global variable: SafeTime\n    > initializing global variable: SafeTime\n\n    > declaring global variable: owner\n    > initializing global variable: owner\n\n    > declaring global variable: SafeMath\n    > initializing global variable: SafeMath\n    > declaring global variable: ERC20\n    > initializing global variable: ERC20\n    > declaring global variable: EthTokenToSmthSwaps\n    > initializing global variable: EthTokenToSmthSwaps\n# building ranges\n  > start adding range variables\n    > adding: swaps -> (0x2@__RANGE__ 0x6@__RANGE__ 0x9@__RANGE__ 0xc@__RANGE__ 0xf@__RANGE__ 0x12@__RANGE__ 0x14@__RANGE__)\n  > range entry addresses: (0x2@__RANGE__ 0x6@__RANGE__ 0x14@__RANGE__ 0x12@__RANGE__ 0x9@__RANGE__ 0xf@__RANGE__ 0xc@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0x6@__RANGE__\n    > adding range block: 0x7@__RANGE__\n    > adding range block: 0x5@__RANGE__\n    > adding range block: 0x9@__RANGE__\n    > adding range block: 0xa@__RANGE__\n    > adding range block: 0x8@__RANGE__\n    > adding range block: 0xc@__RANGE__\n    > adding range block: 0xd@__RANGE__\n    > adding range block: 0xb@__RANGE__\n    > adding range block: 0xf@__RANGE__\n    > adding range block: 0x10@__RANGE__\n    > adding range block: 0xe@__RANGE__\n    > adding range block: 0x12@__RANGE__\n    > adding range block: 0x11@__RANGE__\n    > adding range block: 0x14@__RANGE__\n    > adding range block: 0x13@__RANGE__\n# building normal scopes\n  > root addr: 0x144\n  > dest addrs: (0x154)\n  > loading normal blocks\n    > adding normal block: 0x144\n    > adding normal block: 0x145\n    > adding normal block: 0x145_r0\n    > adding normal block: 0x146\n    > adding normal block: 0x146_r0\n    > adding normal block: 0x147\n    > adding normal block: 0x148\n    > adding normal block: 0x149\n    > adding normal block: 0x149_r0\n    > adding normal block: 0x14a\n    > adding normal block: 0x14a_r0\n    > adding normal block: 0x14c\n    > adding normal block: 0x14c_r0\n    > adding normal block: 0x14d\n    > adding normal block: 0x14e\n    > adding normal block: 0x150\n    > adding normal block: 0x151\n    > adding normal block: 0x151_r0\n    > adding normal block: 0x152\n    > adding normal block: 0x14b\n    > adding normal block: 0x153\n    > adding normal block: 0x14f\n    > adding normal block: 0x14f_r0\n    > adding normal block: 0x154\n    > adding normal block: 0x155\n    > adding normal block: 0xRequireTrap\n# start interpretation of normal blocks...\n\n# asserts size: 66\n# using solver: #<z3>\n# result: #t\n"
}