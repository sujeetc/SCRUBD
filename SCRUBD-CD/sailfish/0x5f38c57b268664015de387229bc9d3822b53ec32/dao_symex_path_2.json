{
    "file": "0x5f38c57b268664015de387229bc9d3822b53ec32.sol",
    "global_structs": [
        {
            "name": "Purchase",
            "fields": {
                "current": [
                    "integer"
                ],
                "count": [
                    "integer"
                ],
                "user": [
                    "integer"
                ],
                "randomness": [
                    "integer"
                ],
                "commit": [
                    "integer"
                ]
            }
        },
        {
            "name": "Batch",
            "fields": {
                "userID": [
                    "integer"
                ],
                "size": [
                    "integer"
                ]
            }
        },
        {
            "name": "StackDepthLimit",
            "fields": {
                "oldProtos": [
                    "array",
                    "integer"
                ],
                "purities": [
                    "array",
                    "integer"
                ],
                "qualities": [
                    "array",
                    "integer"
                ],
                "protos": [
                    "array",
                    "integer"
                ]
            }
        },
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0xd2"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0xd3"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0xd4"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "canMigrate",
            "type": [
                "array",
                "integer",
                "boolean"
            ],
            "init": []
        },
        {
            "name": "v1Migrated",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "boolean"
                ]
            ],
            "init": []
        },
        {
            "name": "migration",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ebs",
            "type": [
                "array",
                "integer"
            ],
            "init": [
                "0x7"
            ]
        },
        {
            "name": "limit",
            "type": [
                "integer"
            ],
            "init": [
                "0x6"
            ]
        },
        {
            "name": "cards",
            "type": [
                "integer"
            ],
            "init": [
                "0x5"
            ]
        },
        {
            "name": "IPackFour",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "BaseMigration",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "IERC165",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "IERC721",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ICards",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "v1Migration",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "CanBeV1Migrated",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0x4",
            "instructions": [
                "CLR_0 = canMigrate[U]",
                "REF_33 = CLR_0",
                "canMigrate[0] = true",
                "canMigrate[1] = true",
                "canMigrate[2] = true",
                "canMigrate[3] = true",
                "canMigrate[4] = true",
                "canMigrate[5] = true",
                "canMigrate[6] = true",
                "canMigrate[7] = true",
                "canMigrate[8] = true",
                "canMigrate[9] = true"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x5",
            "instructions": [
                "cards = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x6",
            "instructions": [
                "limit = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x7",
            "instructions": [
                "ebs = 400",
                "ebs = 413",
                "ebs = 414",
                "ebs = 421",
                "ebs = 427",
                "ebs = 428",
                "ebs = 389",
                "ebs = 415",
                "ebs = 416",
                "ebs = 422",
                "ebs = 424",
                "ebs = 425",
                "ebs = 426",
                "ebs = 382",
                "ebs = 420",
                "ebs = 417"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xf",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x10",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x11",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xd2",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xd3",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xd4",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "v1Migrated",
            "addrs": [
                "0x2",
                "0xa",
                "0xd"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa",
            "instructions": [
                "CLR_1 = canMigrate[U]",
                "REF_36 = CLR_1",
                "RTMP_86 = REF_36 == true",
                "CONDITION RTMP_86 0xb 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb",
            "instructions": [
                "CLR_2 = v1Migrated[U]",
                "REF_37 = CLR_2",
                "CLR_3 = REF_37[U]",
                "REF_38 = CLR_3",
                "RTMP_87 = ! REF_38",
                "CONDITION RTMP_87 0x9 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9",
            "instructions": [
                "CLR_4 = v1Migrated[U]",
                "REF_34 = CLR_4",
                "CLR_5 = REF_34[U]",
                "REF_35 = CLR_5",
                "REF_34[0] = true",
                "REF_34[1] = true",
                "REF_34[2] = true",
                "REF_34[3] = true",
                "REF_34[4] = true",
                "REF_34[5] = true",
                "REF_34[6] = true",
                "REF_34[7] = true",
                "REF_34[8] = true",
                "REF_34[9] = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xd",
            "instructions": [
                "CLR_6 = canMigrate[U]",
                "REF_36 = CLR_6",
                "RTMP_86 = REF_36 == true",
                "CONDITION RTMP_86 0xe 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xe",
            "instructions": [
                "CLR_7 = v1Migrated[U]",
                "REF_37 = CLR_7",
                "CLR_8 = REF_37[U]",
                "REF_38 = CLR_8",
                "RTMP_87 = ! REF_38",
                "CONDITION RTMP_87 0xc 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xc",
            "instructions": [
                "CLR_9 = v1Migrated[U]",
                "REF_34 = CLR_9",
                "CLR_10 = REF_34[U]",
                "REF_35 = CLR_10",
                "REF_34[0] = true",
                "REF_34[1] = true",
                "REF_34[2] = true",
                "REF_34[3] = true",
                "REF_34[4] = true",
                "REF_34[5] = true",
                "REF_34[6] = true",
                "REF_34[7] = true",
                "REF_34[8] = true",
                "REF_34[9] = true"
            ]
        }
    ],
    "root_addr": "0xd5",
    "dest_addrs": [
        "0x160"
    ],
    "normal_blocks": [
        {
            "scope": "migrate",
            "addr": "0xd5",
            "instructions": [
                "NOP",
                "ids = NEW_COL integer",
                "loopStart = NEW_VAL integer",
                "remaining = NEW_VAL integer",
                "x = NEW_VAL integer",
                "i = NEW_VAL integer",
                "i = NEW_VAL integer",
                "proto = NEW_VAL integer",
                "proto = NEW_VAL integer",
                "purity = NEW_VAL integer",
                "pack = NEW_VAL integer",
                "i = NEW_VAL integer",
                "sdl = NEW_VAL StackDepthLimit",
                "startID = NEW_VAL integer",
                "id = NEW_VAL integer",
                "pack = NEW_VAL integer",
                "loopEnd = NEW_VAL integer",
                "JUMP 0xd6"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xd6",
            "instructions": [
                "i = 0",
                "JUMP 0xd7"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xd7",
            "instructions": [
                "NOP",
                "REF_7 = LENGTH ids",
                "TMP_40 = i < REF_7",
                "CONDITION TMP_40 0xd8 0xd9"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xda",
            "instructions": [
                "TMP_42 = i",
                "i = i + 1",
                "JUMP 0xd7"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xdb",
            "instructions": [
                "NOP",
                "JUMP 0xdc"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xdc",
            "instructions": [
                "TMP_43 = NEW_VAL unknown",
                "CLR_11 = canMigrate[TMP_43]",
                "REF_9 = CLR_11",
                "CONDITION REF_9 0xdc_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xdc_r0",
            "instructions": [
                "JUMP 0xdd"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xdd",
            "instructions": [
                "TMP_45 = NEW_VAL unknown",
                "CLR_12 = v1Migrated[TMP_45]",
                "REF_10 = CLR_12",
                "CLR_13 = REF_10[id]",
                "REF_11 = CLR_13",
                "TMP_46 = ! REF_11",
                "CONDITION TMP_46 0xdd_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xdd_r0",
            "instructions": [
                "JUMP 0xde"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xde",
            "instructions": [
                "NOP",
                "NOP",
                "NOP",
                "NOP",
                "TUPLE_2 = NEW_COL unknown",
                "JUMP 0xdf"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xdf",
            "instructions": [
                "current = NEW_VAL unknown",
                "count = NEW_VAL unknown",
                "user = NEW_VAL unknown",
                "randomness = NEW_VAL unknown",
                "TMP_48 = randomness != 0",
                "CONDITION TMP_48 0xdf_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xdf_r0",
            "instructions": [
                "JUMP 0xe0"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xe0",
            "instructions": [
                "TMP_50 = count - current",
                "TMP_51 = TMP_50 * 5",
                "remaining = TMP_51",
                "TMP_52 = remaining > 0",
                "CONDITION TMP_52 0xe0_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xe0_r0",
            "instructions": [
                "JUMP 0xe1"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xe1",
            "instructions": [
                "TMP_54 = limit >= remaining",
                "CONDITION TMP_54 0xe1_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xe1_r0",
            "instructions": [
                "JUMP 0xe2"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xe2",
            "instructions": [
                "NOP",
                "CLR_14 = sdl.protos",
                "REF_13 = CLR_14",
                "TMP_57 = NEW_COL integer",
                "sdl.protos = TMP_57",
                "CLR_15 = sdl.qualities",
                "REF_14 = CLR_15",
                "TMP_59 = NEW_COL integer",
                "sdl.qualities = TMP_59",
                "CLR_16 = sdl.oldProtos",
                "REF_15 = CLR_16",
                "CLR_17 = sdl.purities",
                "REF_16 = CLR_17",
                "ATTACK",
                "TUPLE_3 = NEW_COL unknown",
                "JUMP 0xe3"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xe4",
            "instructions": [
                "NCV_0 = NEW_VAL unknown",
                "sdl.oldProtos = NCV_0",
                "NCV_1 = NEW_VAL unknown",
                "sdl.purities = NCV_1",
                "TMP_60 = current * 5",
                "loopStart = TMP_60",
                "i = 0",
                "JUMP 0xe5"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xe5",
            "instructions": [
                "NOP",
                "TMP_61 = i < remaining",
                "CONDITION TMP_61 0xe7 0xe6"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xe6",
            "instructions": [
                "NOP",
                "JUMP 0xe8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xe8",
            "instructions": [
                "CLR_18 = sdl.protos",
                "REF_27 = CLR_18",
                "CLR_19 = sdl.qualities",
                "REF_28 = CLR_19",
                "TMP_66 = NEW_VAL integer",
                "JUMP 0xe9"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xe9",
            "instructions": [
                "startID = TMP_66",
                "TMP_67 = NEW_VAL unknown",
                "CLR_20 = v1Migrated[TMP_67]",
                "REF_29 = CLR_20",
                "CLR_21 = REF_29[id]",
                "REF_30 = CLR_21",
                "REF_29[id] = true",
                "TMP_68 = loopStart + remaining",
                "loopEnd = TMP_68",
                "TMP_69 = NEW_VAL unknown",
                "NOP",
                "JUMP 0xda"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xea",
            "instructions": [
                "REF_22[i] = TMP_64",
                "TMP_65 = i",
                "i = i + 1",
                "JUMP 0xe5"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xeb",
            "instructions": [
                "NOP",
                "JUMP 0xec"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xec",
            "instructions": [
                "TMP_22 = proto >= 1",
                "TMP_23 = proto <= 377",
                "TMP_24 = TMP_22 && TMP_23",
                "CONDITION TMP_24 0xed 0xee"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xed",
            "instructions": [
                "TMP_78 = proto",
                "JUMP 0xef"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xee",
            "instructions": [
                "NOP",
                "JUMP 0xf0"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xf0",
            "instructions": [
                "TMP_25 = proto == 380",
                "CONDITION TMP_25 0xf1 0xf2"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xf1",
            "instructions": [
                "TMP_78 = 400",
                "JUMP 0xef"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xf2",
            "instructions": [
                "NOP",
                "JUMP 0xf3"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xf3",
            "instructions": [
                "TMP_26 = proto == 381",
                "CONDITION TMP_26 0xf4 0xf5"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xf4",
            "instructions": [
                "TMP_78 = 401",
                "JUMP 0xef"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xf5",
            "instructions": [
                "NOP",
                "JUMP 0xf6"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xf6",
            "instructions": [
                "TMP_27 = proto == 394",
                "CONDITION TMP_27 0xf7 0xf8"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xf7",
            "instructions": [
                "TMP_78 = 402",
                "JUMP 0xef"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xf8",
            "instructions": [
                "NOP",
                "JUMP 0xf9"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xfa",
            "instructions": [
                "found = NEW_VAL unknown",
                "index = NEW_VAL unknown",
                "CONDITION found 0xfb 0xfc"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xfb",
            "instructions": [
                "TMP_28 = 380 + index",
                "TMP_29 = NEW_VAL unknown",
                "TMP_78 = TMP_29",
                "JUMP 0xef"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xfc",
            "instructions": [
                "NOP",
                "JUMP 0xfd"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xfd",
            "instructions": [
                "TMP_30 = proto == 378",
                "CONDITION TMP_30 0xfe 0xff"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xfe",
            "instructions": [
                "TMP_78 = 65000",
                "JUMP 0xef"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xff",
            "instructions": [
                "NOP",
                "JUMP 0x100"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x100",
            "instructions": [
                "TMP_31 = proto == 379",
                "CONDITION TMP_31 0x101 0x102"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x101",
            "instructions": [
                "TMP_78 = 65001",
                "JUMP 0xef"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x102",
            "instructions": [
                "NOP",
                "JUMP 0x103"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x103",
            "instructions": [
                "TMP_32 = proto == 383",
                "CONDITION TMP_32 0x104 0x105"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x104",
            "instructions": [
                "TMP_78 = 65002",
                "JUMP 0xef"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x105",
            "instructions": [
                "NOP",
                "JUMP 0x106"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x106",
            "instructions": [
                "TMP_33 = proto == 384",
                "CONDITION TMP_33 0x107 0x108"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x107",
            "instructions": [
                "TMP_78 = 65003",
                "JUMP 0xef"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x108",
            "instructions": [
                "NOP",
                "JUMP 0x109"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x109",
            "instructions": [
                "CONDITION false 0x109_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x109_r0",
            "instructions": [
                "JUMP 0xef"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x10a",
            "instructions": [
                "NOP",
                "JUMP 0x10b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x10b",
            "instructions": [
                "i = 0",
                "JUMP 0x10c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x10c",
            "instructions": [
                "NOP",
                "REF_2 = LENGTH ebs",
                "TMP_35 = i < REF_2",
                "CONDITION TMP_35 0x10d 0x10e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x10d",
            "instructions": [
                "CLR_22 = ebs[i]",
                "REF_3 = CLR_22",
                "TMP_36 = REF_3 == proto",
                "CONDITION TMP_36 0x10f 0x110"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x10e",
            "instructions": [
                "NOP",
                "JUMP 0x111"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x111",
            "instructions": [
                "TMP_79 = false",
                "JUMP 0x112"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x10f",
            "instructions": [
                "TMP_79 = true",
                "JUMP 0x112"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x110",
            "instructions": [
                "NOP",
                "JUMP 0x113"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x113",
            "instructions": [
                "TMP_37 = i",
                "i = i + 1",
                "JUMP 0x10c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x112",
            "instructions": [
                "TMP_79 = i",
                "JUMP 0x114"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xf9",
            "instructions": [
                "NOP",
                "NOP",
                "proto = proto",
                "JUMP 0x10a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x114",
            "instructions": [
                "TUPLE_1 = TMP_79",
                "JUMP 0xfa"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xe7",
            "instructions": [
                "TMP_62 = loopStart + i",
                "x = TMP_62",
                "CLR_23 = sdl.protos",
                "REF_18 = CLR_23",
                "CLR_24 = REF_18[i]",
                "REF_19 = CLR_24",
                "CLR_25 = sdl.oldProtos",
                "REF_20 = CLR_25",
                "CLR_26 = REF_20[x]",
                "REF_21 = CLR_26",
                "proto = REF_21",
                "JUMP 0xeb"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xef",
            "instructions": [
                "TMP_63 = TMP_78",
                "JUMP 0x115"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x116",
            "instructions": [
                "NOP",
                "JUMP 0x117"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x117",
            "instructions": [
                "TMP_19 = purity \/ 1000",
                "TMP_20 = 4 - TMP_19",
                "TMP_21 = NEW_VAL unknown",
                "TMP_77 = TMP_21",
                "JUMP 0x118"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x115",
            "instructions": [
                "REF_18[i] = TMP_63",
                "CLR_27 = sdl.qualities",
                "REF_22 = CLR_27",
                "CLR_28 = REF_22[i]",
                "REF_23 = CLR_28",
                "CLR_29 = sdl.purities",
                "REF_24 = CLR_29",
                "CLR_30 = REF_24[x]",
                "REF_25 = CLR_30",
                "purity = REF_25",
                "JUMP 0x116"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x118",
            "instructions": [
                "TMP_64 = TMP_77",
                "JUMP 0xea"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xd8",
            "instructions": [
                "CLR_31 = ids[i]",
                "REF_8 = CLR_31",
                "pack = pack",
                "id = REF_8",
                "JUMP 0xdb"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0xe3",
            "instructions": [
                "NOP",
                "loopStart = NEW_VAL integer",
                "remaining = NEW_VAL integer",
                "x = NEW_VAL integer",
                "i = NEW_VAL integer",
                "proto = NEW_VAL integer",
                "proto = NEW_VAL integer",
                "purity = NEW_VAL integer",
                "pack = NEW_VAL integer",
                "i = NEW_VAL integer",
                "sdl = NEW_VAL StackDepthLimit",
                "startID = NEW_VAL integer",
                "id = NEW_VAL integer",
                "loopEnd = NEW_VAL integer",
                "JUMP 0x119"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x119",
            "instructions": [
                "TMP_43 = NEW_VAL unknown",
                "CLR_32 = canMigrate[TMP_43]",
                "REF_9 = CLR_32",
                "CONDITION REF_9 0x119_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x119_r0",
            "instructions": [
                "JUMP 0x11a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x11a",
            "instructions": [
                "TMP_45 = NEW_VAL unknown",
                "CLR_33 = v1Migrated[TMP_45]",
                "REF_10 = CLR_33",
                "CLR_34 = REF_10[id]",
                "REF_11 = CLR_34",
                "TMP_46 = ! REF_11",
                "CONDITION TMP_46 0x11a_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x11a_r0",
            "instructions": [
                "JUMP 0x11b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x11b",
            "instructions": [
                "NOP",
                "NOP",
                "NOP",
                "NOP",
                "TUPLE_2 = NEW_COL unknown",
                "JUMP 0x11c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x11c",
            "instructions": [
                "current = NEW_VAL unknown",
                "count = NEW_VAL unknown",
                "user = NEW_VAL unknown",
                "randomness = NEW_VAL unknown",
                "TMP_48 = randomness != 0",
                "CONDITION TMP_48 0x11c_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x11c_r0",
            "instructions": [
                "JUMP 0x11d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x11d",
            "instructions": [
                "TMP_50 = count - current",
                "TMP_51 = TMP_50 * 5",
                "remaining = TMP_51",
                "TMP_52 = remaining > 0",
                "CONDITION TMP_52 0x11d_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x11d_r0",
            "instructions": [
                "JUMP 0x11e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x11e",
            "instructions": [
                "TMP_54 = limit >= remaining",
                "CONDITION TMP_54 0x11e_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x11e_r0",
            "instructions": [
                "JUMP 0x11f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x11f",
            "instructions": [
                "NOP",
                "CLR_35 = sdl.protos",
                "REF_13 = CLR_35",
                "TMP_57 = NEW_COL integer",
                "sdl.protos = TMP_57",
                "CLR_36 = sdl.qualities",
                "REF_14 = CLR_36",
                "TMP_59 = NEW_COL integer",
                "sdl.qualities = TMP_59",
                "CLR_37 = sdl.oldProtos",
                "REF_15 = CLR_37",
                "CLR_38 = sdl.purities",
                "REF_16 = CLR_38",
                "TUPLE_3 = NEW_COL unknown",
                "JUMP 0x120"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x120",
            "instructions": [
                "NCV_2 = NEW_VAL unknown",
                "sdl.oldProtos = NCV_2",
                "NCV_3 = NEW_VAL unknown",
                "sdl.purities = NCV_3",
                "TMP_60 = current * 5",
                "loopStart = TMP_60",
                "i = 0",
                "JUMP 0x121"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x121",
            "instructions": [
                "NOP",
                "TMP_61 = i < remaining",
                "CONDITION TMP_61 0x123 0x122"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x122",
            "instructions": [
                "NOP",
                "JUMP 0x124"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x124",
            "instructions": [
                "CLR_39 = sdl.protos",
                "REF_27 = CLR_39",
                "CLR_40 = sdl.qualities",
                "REF_28 = CLR_40",
                "TMP_66 = NEW_VAL integer",
                "JUMP 0x125"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x125",
            "instructions": [
                "startID = TMP_66",
                "TMP_67 = NEW_VAL unknown",
                "CLR_41 = v1Migrated[TMP_67]",
                "REF_29 = CLR_41",
                "CLR_42 = REF_29[id]",
                "REF_30 = CLR_42",
                "REF_29[id] = true",
                "TMP_68 = loopStart + remaining",
                "loopEnd = TMP_68",
                "TMP_69 = NEW_VAL unknown",
                "NOP",
                "JUMP 0x126"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x127",
            "instructions": [
                "REF_22[i] = TMP_64",
                "TMP_65 = i",
                "i = i + 1",
                "JUMP 0x121"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x128",
            "instructions": [
                "NOP",
                "JUMP 0x129"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x129",
            "instructions": [
                "TMP_22 = proto >= 1",
                "TMP_23 = proto <= 377",
                "TMP_24 = TMP_22 && TMP_23",
                "CONDITION TMP_24 0x12a 0x12b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x12a",
            "instructions": [
                "TMP_78 = proto",
                "JUMP 0x12c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x12b",
            "instructions": [
                "NOP",
                "JUMP 0x12d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x12d",
            "instructions": [
                "TMP_25 = proto == 380",
                "CONDITION TMP_25 0x12e 0x12f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x12e",
            "instructions": [
                "TMP_78 = 400",
                "JUMP 0x12c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x12f",
            "instructions": [
                "NOP",
                "JUMP 0x130"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x130",
            "instructions": [
                "TMP_26 = proto == 381",
                "CONDITION TMP_26 0x131 0x132"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x131",
            "instructions": [
                "TMP_78 = 401",
                "JUMP 0x12c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x132",
            "instructions": [
                "NOP",
                "JUMP 0x133"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x133",
            "instructions": [
                "TMP_27 = proto == 394",
                "CONDITION TMP_27 0x134 0x135"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x134",
            "instructions": [
                "TMP_78 = 402",
                "JUMP 0x12c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x135",
            "instructions": [
                "NOP",
                "JUMP 0x136"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x137",
            "instructions": [
                "found = NEW_VAL unknown",
                "index = NEW_VAL unknown",
                "CONDITION found 0x138 0x139"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x138",
            "instructions": [
                "TMP_28 = 380 + index",
                "TMP_29 = NEW_VAL unknown",
                "TMP_78 = TMP_29",
                "JUMP 0x12c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x139",
            "instructions": [
                "NOP",
                "JUMP 0x13a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x13a",
            "instructions": [
                "TMP_30 = proto == 378",
                "CONDITION TMP_30 0x13b 0x13c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x13b",
            "instructions": [
                "TMP_78 = 65000",
                "JUMP 0x12c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x13c",
            "instructions": [
                "NOP",
                "JUMP 0x13d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x13d",
            "instructions": [
                "TMP_31 = proto == 379",
                "CONDITION TMP_31 0x13e 0x13f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x13e",
            "instructions": [
                "TMP_78 = 65001",
                "JUMP 0x12c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x13f",
            "instructions": [
                "NOP",
                "JUMP 0x140"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x140",
            "instructions": [
                "TMP_32 = proto == 383",
                "CONDITION TMP_32 0x141 0x142"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x141",
            "instructions": [
                "TMP_78 = 65002",
                "JUMP 0x12c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x142",
            "instructions": [
                "NOP",
                "JUMP 0x143"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x143",
            "instructions": [
                "TMP_33 = proto == 384",
                "CONDITION TMP_33 0x144 0x145"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x144",
            "instructions": [
                "TMP_78 = 65003",
                "JUMP 0x12c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x145",
            "instructions": [
                "NOP",
                "JUMP 0x146"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x146",
            "instructions": [
                "CONDITION false 0x146_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x146_r0",
            "instructions": [
                "JUMP 0x12c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x147",
            "instructions": [
                "NOP",
                "JUMP 0x148"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x148",
            "instructions": [
                "i = 0",
                "JUMP 0x149"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x149",
            "instructions": [
                "NOP",
                "REF_2 = LENGTH ebs",
                "TMP_35 = i < REF_2",
                "CONDITION TMP_35 0x14a 0x14b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x14a",
            "instructions": [
                "CLR_43 = ebs[i]",
                "REF_3 = CLR_43",
                "TMP_36 = REF_3 == proto",
                "CONDITION TMP_36 0x14c 0x14d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x14b",
            "instructions": [
                "NOP",
                "JUMP 0x14e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x14e",
            "instructions": [
                "TMP_79 = false",
                "JUMP 0x14f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x14c",
            "instructions": [
                "TMP_79 = true",
                "JUMP 0x14f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x14d",
            "instructions": [
                "NOP",
                "JUMP 0x150"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x150",
            "instructions": [
                "TMP_37 = i",
                "i = i + 1",
                "JUMP 0x149"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x14f",
            "instructions": [
                "TMP_79 = i",
                "JUMP 0x151"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x136",
            "instructions": [
                "NOP",
                "NOP",
                "proto = proto",
                "JUMP 0x147"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x151",
            "instructions": [
                "TUPLE_1 = TMP_79",
                "JUMP 0x137"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x123",
            "instructions": [
                "TMP_62 = loopStart + i",
                "x = TMP_62",
                "CLR_44 = sdl.protos",
                "REF_18 = CLR_44",
                "CLR_45 = REF_18[i]",
                "REF_19 = CLR_45",
                "CLR_46 = sdl.oldProtos",
                "REF_20 = CLR_46",
                "CLR_47 = REF_20[x]",
                "REF_21 = CLR_47",
                "proto = REF_21",
                "JUMP 0x128"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x12c",
            "instructions": [
                "TMP_63 = TMP_78",
                "JUMP 0x152"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x153",
            "instructions": [
                "NOP",
                "JUMP 0x154"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x154",
            "instructions": [
                "TMP_19 = purity \/ 1000",
                "TMP_20 = 4 - TMP_19",
                "TMP_21 = NEW_VAL unknown",
                "TMP_77 = TMP_21",
                "JUMP 0x155"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x152",
            "instructions": [
                "REF_18[i] = TMP_63",
                "CLR_48 = sdl.qualities",
                "REF_22 = CLR_48",
                "CLR_49 = REF_22[i]",
                "REF_23 = CLR_49",
                "CLR_50 = sdl.purities",
                "REF_24 = CLR_50",
                "CLR_51 = REF_24[x]",
                "REF_25 = CLR_51",
                "purity = REF_25",
                "JUMP 0x153"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x155",
            "instructions": [
                "TMP_64 = TMP_77",
                "JUMP 0x127"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x156",
            "instructions": [
                "NOP",
                "REF_7 = LENGTH ids",
                "TMP_40 = i < REF_7",
                "CONDITION TMP_40 0x157 0xd9"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x158",
            "instructions": [
                "TMP_42 = i",
                "i = i + 1",
                "JUMP 0x156"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x159",
            "instructions": [
                "NOP",
                "JUMP 0x15a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x15a",
            "instructions": [
                "TMP_43 = NEW_VAL unknown",
                "CLR_52 = canMigrate[TMP_43]",
                "REF_9 = CLR_52",
                "CONDITION REF_9 0x15a_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x15a_r0",
            "instructions": [
                "JUMP 0x15b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x15b",
            "instructions": [
                "TMP_45 = NEW_VAL unknown",
                "CLR_53 = v1Migrated[TMP_45]",
                "REF_10 = CLR_53",
                "CLR_54 = REF_10[id]",
                "REF_11 = CLR_54",
                "TMP_46 = ! REF_11",
                "CONDITION TMP_46 0x15b_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x15b_r0",
            "instructions": [
                "JUMP 0x15c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x15c",
            "instructions": [
                "NOP",
                "NOP",
                "NOP",
                "NOP",
                "TUPLE_2 = NEW_COL unknown",
                "JUMP 0x15d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x15d",
            "instructions": [
                "current = NEW_VAL unknown",
                "count = NEW_VAL unknown",
                "user = NEW_VAL unknown",
                "randomness = NEW_VAL unknown",
                "TMP_48 = randomness != 0",
                "CONDITION TMP_48 0x15d_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x15d_r0",
            "instructions": [
                "JUMP 0x15e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x15e",
            "instructions": [
                "TMP_50 = count - current",
                "TMP_51 = TMP_50 * 5",
                "remaining = TMP_51",
                "TMP_52 = remaining > 0",
                "CONDITION TMP_52 0x15e_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x15e_r0",
            "instructions": [
                "JUMP 0x15f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x15f",
            "instructions": [
                "TMP_54 = limit >= remaining",
                "CONDITION TMP_54 0x15f_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x15f_r0",
            "instructions": [
                "JUMP 0x160"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x126",
            "instructions": [
                "NCV_4 = NEW_VAL unknown",
                "sdl.oldProtos = NCV_4",
                "NCV_5 = NEW_VAL unknown",
                "sdl.purities = NCV_5",
                "TMP_60 = current * 5",
                "loopStart = TMP_60",
                "i = 0",
                "JUMP 0x161"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x161",
            "instructions": [
                "NOP",
                "TMP_61 = i < remaining",
                "CONDITION TMP_61 0x163 0x162"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x162",
            "instructions": [
                "NOP",
                "JUMP 0x164"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x164",
            "instructions": [
                "CLR_55 = sdl.protos",
                "REF_27 = CLR_55",
                "CLR_56 = sdl.qualities",
                "REF_28 = CLR_56",
                "TMP_66 = NEW_VAL integer",
                "JUMP 0x165"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x165",
            "instructions": [
                "startID = TMP_66",
                "TMP_67 = NEW_VAL unknown",
                "CLR_57 = v1Migrated[TMP_67]",
                "REF_29 = CLR_57",
                "CLR_58 = REF_29[id]",
                "REF_30 = CLR_58",
                "REF_29[id] = true",
                "TMP_68 = loopStart + remaining",
                "loopEnd = TMP_68",
                "TMP_69 = NEW_VAL unknown",
                "NOP",
                "JUMP 0x158"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x166",
            "instructions": [
                "REF_22[i] = TMP_64",
                "TMP_65 = i",
                "i = i + 1",
                "JUMP 0x161"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x167",
            "instructions": [
                "NOP",
                "JUMP 0x168"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x168",
            "instructions": [
                "TMP_22 = proto >= 1",
                "TMP_23 = proto <= 377",
                "TMP_24 = TMP_22 && TMP_23",
                "CONDITION TMP_24 0x169 0x16a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x169",
            "instructions": [
                "TMP_78 = proto",
                "JUMP 0x16b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x16a",
            "instructions": [
                "NOP",
                "JUMP 0x16c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x16c",
            "instructions": [
                "TMP_25 = proto == 380",
                "CONDITION TMP_25 0x16d 0x16e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x16d",
            "instructions": [
                "TMP_78 = 400",
                "JUMP 0x16b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x16e",
            "instructions": [
                "NOP",
                "JUMP 0x16f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x16f",
            "instructions": [
                "TMP_26 = proto == 381",
                "CONDITION TMP_26 0x170 0x171"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x170",
            "instructions": [
                "TMP_78 = 401",
                "JUMP 0x16b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x171",
            "instructions": [
                "NOP",
                "JUMP 0x172"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x172",
            "instructions": [
                "TMP_27 = proto == 394",
                "CONDITION TMP_27 0x173 0x174"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x173",
            "instructions": [
                "TMP_78 = 402",
                "JUMP 0x16b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x174",
            "instructions": [
                "NOP",
                "JUMP 0x175"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x176",
            "instructions": [
                "found = NEW_VAL unknown",
                "index = NEW_VAL unknown",
                "CONDITION found 0x177 0x178"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x177",
            "instructions": [
                "TMP_28 = 380 + index",
                "TMP_29 = NEW_VAL unknown",
                "TMP_78 = TMP_29",
                "JUMP 0x16b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x178",
            "instructions": [
                "NOP",
                "JUMP 0x179"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x179",
            "instructions": [
                "TMP_30 = proto == 378",
                "CONDITION TMP_30 0x17a 0x17b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x17a",
            "instructions": [
                "TMP_78 = 65000",
                "JUMP 0x16b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x17b",
            "instructions": [
                "NOP",
                "JUMP 0x17c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x17c",
            "instructions": [
                "TMP_31 = proto == 379",
                "CONDITION TMP_31 0x17d 0x17e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x17d",
            "instructions": [
                "TMP_78 = 65001",
                "JUMP 0x16b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x17e",
            "instructions": [
                "NOP",
                "JUMP 0x17f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x17f",
            "instructions": [
                "TMP_32 = proto == 383",
                "CONDITION TMP_32 0x180 0x181"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x180",
            "instructions": [
                "TMP_78 = 65002",
                "JUMP 0x16b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x181",
            "instructions": [
                "NOP",
                "JUMP 0x182"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x182",
            "instructions": [
                "TMP_33 = proto == 384",
                "CONDITION TMP_33 0x183 0x184"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x183",
            "instructions": [
                "TMP_78 = 65003",
                "JUMP 0x16b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x184",
            "instructions": [
                "NOP",
                "JUMP 0x185"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x185",
            "instructions": [
                "CONDITION false 0x185_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x185_r0",
            "instructions": [
                "JUMP 0x16b"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x186",
            "instructions": [
                "NOP",
                "JUMP 0x187"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x187",
            "instructions": [
                "i = 0",
                "JUMP 0x188"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x188",
            "instructions": [
                "NOP",
                "REF_2 = LENGTH ebs",
                "TMP_35 = i < REF_2",
                "CONDITION TMP_35 0x189 0x18a"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x189",
            "instructions": [
                "CLR_59 = ebs[i]",
                "REF_3 = CLR_59",
                "TMP_36 = REF_3 == proto",
                "CONDITION TMP_36 0x18b 0x18c"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x18a",
            "instructions": [
                "NOP",
                "JUMP 0x18d"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x18d",
            "instructions": [
                "TMP_79 = false",
                "JUMP 0x18e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x18b",
            "instructions": [
                "TMP_79 = true",
                "JUMP 0x18e"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x18c",
            "instructions": [
                "NOP",
                "JUMP 0x18f"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x18f",
            "instructions": [
                "TMP_37 = i",
                "i = i + 1",
                "JUMP 0x188"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x18e",
            "instructions": [
                "TMP_79 = i",
                "JUMP 0x190"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x175",
            "instructions": [
                "NOP",
                "NOP",
                "proto = proto",
                "JUMP 0x186"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x190",
            "instructions": [
                "TUPLE_1 = TMP_79",
                "JUMP 0x176"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x163",
            "instructions": [
                "TMP_62 = loopStart + i",
                "x = TMP_62",
                "CLR_60 = sdl.protos",
                "REF_18 = CLR_60",
                "CLR_61 = REF_18[i]",
                "REF_19 = CLR_61",
                "CLR_62 = sdl.oldProtos",
                "REF_20 = CLR_62",
                "CLR_63 = REF_20[x]",
                "REF_21 = CLR_63",
                "proto = REF_21",
                "JUMP 0x167"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x16b",
            "instructions": [
                "TMP_63 = TMP_78",
                "JUMP 0x191"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x192",
            "instructions": [
                "NOP",
                "JUMP 0x193"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x193",
            "instructions": [
                "TMP_19 = purity \/ 1000",
                "TMP_20 = 4 - TMP_19",
                "TMP_21 = NEW_VAL unknown",
                "TMP_77 = TMP_21",
                "JUMP 0x194"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x191",
            "instructions": [
                "REF_18[i] = TMP_63",
                "CLR_64 = sdl.qualities",
                "REF_22 = CLR_64",
                "CLR_65 = REF_22[i]",
                "REF_23 = CLR_65",
                "CLR_66 = sdl.purities",
                "REF_24 = CLR_66",
                "CLR_67 = REF_24[x]",
                "REF_25 = CLR_67",
                "purity = REF_25",
                "JUMP 0x192"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x194",
            "instructions": [
                "TMP_64 = TMP_77",
                "JUMP 0x166"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x157",
            "instructions": [
                "CLR_68 = ids[i]",
                "REF_8 = CLR_68",
                "pack = pack",
                "id = REF_8",
                "JUMP 0x159"
            ]
        },
        {
            "scope": "migrate",
            "addr": "0x160",
            "instructions": [
                "NOP",
                "CLR_69 = sdl.protos",
                "REF_13 = CLR_69",
                "TMP_57 = NEW_COL integer",
                "sdl.protos = TMP_57",
                "CLR_70 = sdl.qualities",
                "REF_14 = CLR_70",
                "TMP_59 = NEW_COL integer",
                "sdl.qualities = TMP_59",
                "CLR_71 = sdl.oldProtos",
                "REF_15 = CLR_71",
                "CLR_72 = sdl.purities",
                "REF_16 = CLR_72",
                "TUPLE_3 = NEW_COL unknown"
            ]
        },
        {
            "scope": "trap",
            "addr": "0xd9",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}