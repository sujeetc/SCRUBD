{
    "file_name": "dao_symex_path_3.json",
    "from_function": "migrate",
    "to_function": "migrate",
    "bug_type": "dao",
    "src_node": "\"BlockID: 762\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 896\nCall context: \nNone\nstartID := TMP_66\nTMP_67 = CONVERT pack to address\nREF_29 -> v1Migrated[TMP_67]\nREF_30 -> REF_29[id]\nREF_30 := true\nTMP_68 = loopStart + remaining\nloopEnd := TMP_68\nTMP_69 = CONVERT pack to address\nEmit Migrated(user.TMP_69.id.loopStart.loopEnd.startID)\""
    ],
    "executable_instructions": 435,
    "state_variable": "v1Migrated",
    "error": "",
    "result": "UNSAT",
    "execution_details": "# using file \/ethereum-security\/empirical-study\/data\/extracted_solc_codes\/crowdsource_contracts\/sailfish\/0x5f38c57b268664015de387229bc9d3822b53ec32\/dao_symex_path_3.json\n# attack type: range\n# solver type: z3\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x4@__GLOBAL__\n    > adding global block: 0x5@__GLOBAL__\n    > adding global block: 0x6@__GLOBAL__\n    > adding global block: 0x7@__GLOBAL__\n    > adding global block: 0xf@__GLOBAL__\n    > adding global block: 0x10@__GLOBAL__\n    > adding global block: 0x11@__GLOBAL__\n    > adding global block: 0xd2@__GLOBAL__\n    > adding global block: 0xd3@__GLOBAL__\n    > adding global block: 0xd4@__GLOBAL__\n    > adding global block: 0x195@__GLOBAL__\n    > adding global block: 0x196@__GLOBAL__\n    > adding global block: 0x197@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: canMigrate\n    > initializing global variable: canMigrate\n    > declaring global variable: v1Migrated\n    > initializing global variable: v1Migrated\n    > declaring global variable: migration\n    > initializing global variable: migration\n    > declaring global variable: ebs\n    > initializing global variable: ebs\n\n    > declaring global variable: limit\n    > initializing global variable: limit\n\n    > declaring global variable: cards\n    > initializing global variable: cards\n\n    > declaring global variable: IPackFour\n    > initializing global variable: IPackFour\n    > declaring global variable: BaseMigration\n    > initializing global variable: BaseMigration\n    > declaring global variable: IERC165\n    > initializing global variable: IERC165\n    > declaring global variable: IERC721\n    > initializing global variable: IERC721\n    > declaring global variable: ICards\n    > initializing global variable: ICards\n    > declaring global variable: v1Migration\n    > initializing global variable: v1Migration\n    > declaring global variable: CanBeV1Migrated\n    > initializing global variable: CanBeV1Migrated\n# building ranges\n  > start adding range variables\n    > adding: v1Migrated -> (0x2@__RANGE__ 0xa@__RANGE__ 0xd@__RANGE__)\n  > range entry addresses: (0x2@__RANGE__ 0xd@__RANGE__ 0xa@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0xa@__RANGE__\n    > adding range block: 0xb@__RANGE__\n    > adding range block: 0x9@__RANGE__\n    > adding range block: 0xd@__RANGE__\n    > adding range block: 0xe@__RANGE__\n    > adding range block: 0xc@__RANGE__\n# building normal scopes\n  > root addr: 0x198\n  > dest addrs: (0x1e2)\n  > loading normal blocks\n    > adding normal block: 0x198\n    > adding normal block: 0x19a\n    > adding normal block: 0x199\n    > adding normal block: 0x199_r0\n    > adding normal block: 0x19c\n    > adding normal block: 0x19c_r0\n    > adding normal block: 0x19b\n    > adding normal block: 0x19d\n    > adding normal block: 0x19d_r0\n    > adding normal block: 0x19e\n    > adding normal block: 0x19e_r0\n    > adding normal block: 0x19f\n    > adding normal block: 0x1a0\n    > adding normal block: 0x1a0_r0\n    > adding normal block: 0x1a1\n    > adding normal block: 0x1a1_r0\n    > adding normal block: 0x1a2\n    > adding normal block: 0x1a2_r0\n    > adding normal block: 0x1a3\n    > adding normal block: 0x1a4\n    > adding normal block: 0x1a5\n    > adding normal block: 0x1a6\n    > adding normal block: 0x1a8\n    > adding normal block: 0x1a9\n    > adding normal block: 0x1ab\n    > adding normal block: 0x1ac\n    > adding normal block: 0x1ad\n    > adding normal block: 0x1ae\n    > adding normal block: 0x1af\n    > adding normal block: 0x1b1\n    > adding normal block: 0x1b2\n    > adding normal block: 0x1b3\n    > adding normal block: 0x1b4\n    > adding normal block: 0x1b5\n    > adding normal block: 0x1b6\n    > adding normal block: 0x1b7\n    > adding normal block: 0x1b8\n    > adding normal block: 0x1b9\n    > adding normal block: 0x1bb\n    > adding normal block: 0x1bc\n    > adding normal block: 0x1bd\n    > adding normal block: 0x1be\n    > adding normal block: 0x1bf\n    > adding normal block: 0x1c0\n    > adding normal block: 0x1c1\n    > adding normal block: 0x1c2\n    > adding normal block: 0x1c3\n    > adding normal block: 0x1c4\n    > adding normal block: 0x1c5\n    > adding normal block: 0x1c6\n    > adding normal block: 0x1c7\n    > adding normal block: 0x1c8\n    > adding normal block: 0x1c9\n    > adding normal block: 0x1ca\n    > adding normal block: 0x1ca_r0\n    > adding normal block: 0x1cb\n    > adding normal block: 0x1cc\n    > adding normal block: 0x1cd\n    > adding normal block: 0x1ce\n    > adding normal block: 0x1cf\n    > adding normal block: 0x1d2\n    > adding normal block: 0x1d0\n    > adding normal block: 0x1d1\n    > adding normal block: 0x1d4\n    > adding normal block: 0x1d3\n    > adding normal block: 0x1ba\n    > adding normal block: 0x1d5\n    > adding normal block: 0x1a7\n    > adding normal block: 0x1b0\n    > adding normal block: 0x1d7\n    > adding normal block: 0x1d8\n    > adding normal block: 0x1d6\n    > adding normal block: 0x1d9\n    > adding normal block: 0x1aa\n    > adding normal block: 0x1aa_r0\n    > adding normal block: 0x1da\n    > adding normal block: 0x1da_r0\n    > adding normal block: 0x1db\n    > adding normal block: 0x1db_r0\n    > adding normal block: 0x1dc\n    > adding normal block: 0x1dd\n    > adding normal block: 0x1de\n    > adding normal block: 0x1df\n    > adding normal block: 0x1e1\n    > adding normal block: 0x1e2\n    > adding normal block: 0x1e3\n    > adding normal block: 0x1e4\n    > adding normal block: 0x1e5\n    > adding normal block: 0x1e6\n    > adding normal block: 0x1e7\n    > adding normal block: 0x1e9\n    > adding normal block: 0x1ea\n    > adding normal block: 0x1eb\n    > adding normal block: 0x1ec\n    > adding normal block: 0x1ed\n    > adding normal block: 0x1ee\n    > adding normal block: 0x1ef\n    > adding normal block: 0x1f0\n    > adding normal block: 0x1f1\n    > adding normal block: 0x1f3\n    > adding normal block: 0x1f4\n    > adding normal block: 0x1f5\n    > adding normal block: 0x1f6\n    > adding normal block: 0x1f7\n    > adding normal block: 0x1f8\n    > adding normal block: 0x1f9\n    > adding normal block: 0x1fa\n    > adding normal block: 0x1fb\n    > adding normal block: 0x1fc\n    > adding normal block: 0x1fd\n    > adding normal block: 0x1fe\n    > adding normal block: 0x1ff\n    > adding normal block: 0x200\n    > adding normal block: 0x201\n    > adding normal block: 0x202\n    > adding normal block: 0x202_r0\n    > adding normal block: 0x203\n    > adding normal block: 0x204\n    > adding normal block: 0x205\n    > adding normal block: 0x206\n    > adding normal block: 0x207\n    > adding normal block: 0x20a\n    > adding normal block: 0x208\n    > adding normal block: 0x209\n    > adding normal block: 0x20c\n    > adding normal block: 0x20b\n    > adding normal block: 0x1f2\n    > adding normal block: 0x20d\n    > adding normal block: 0x1e0\n    > adding normal block: 0x1e8\n    > adding normal block: 0x20f\n    > adding normal block: 0x210\n    > adding normal block: 0x20e\n    > adding normal block: 0x211\n    > adding normal block: 0x212\n    > adding normal block: 0xRequireTrap\n# start interpretation of normal blocks...\n\n# asserts size: 64\n# using solver: #<z3>\n# result: #f\n"
}