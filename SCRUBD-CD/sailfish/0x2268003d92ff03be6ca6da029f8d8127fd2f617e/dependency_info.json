{
    "0x2268003d92ff03be6ca6da029f8d8127fd2f617e.sol": [
        {
            "attack_type": "DAO",
            "composed_functions": [
                "tokenFulfillmentDeposit",
                "tokenFulfillmentDeposit"
            ],
            "from_function": "tokenFulfillmentDeposit",
            "to_function": "tokenFulfillmentDeposit",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 148\nFunction: tokenFulfillmentDeposit\nNode: \nEXPRESSION require(bool)(ecrecover(bytes32,uint8,bytes32,bytes32)(keccak256()(\u0019Ethereum Signed Message:\n32,orderHash),v,rs[0],rs[1]) == msg.sender && block.number > minMaxDMWCPNonce[2] && block.number <= minMaxDMWCPNonce[3] && orderRecord[tokenUser[1]][orderHash].balance >= minMaxDMWCPNonce[0] && amount == safeMul(orderRecord[msg.sender][orderHash].balance,minMaxDMWCPNonce[6]) && ! orderRecord[msg.sender][orderHash].tokenDeposit)\nIRS: \nTMP_47 = SOLIDITY_CALL require(bool)(TMP_46)\"",
                        "\"BlockID: 16\nFunction: tokenFulfillmentDeposit\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].tokenDeposit = true\nIRS: \nREF_40 := true\""
                    ],
                    "state_variable": "orderRecord.tokenDeposit"
                },
                {
                    "path": [
                        "\"BlockID: 150\nFunction: tokenFulfillmentDeposit\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].shortBalance[tokenUser[0]] = safeAdd(orderRecord[msg.sender][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_32 := TMP_50\"",
                        "\"BlockID: 22\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\""
                    ],
                    "state_variable": "orderRecord.shortBalance"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 15\nFunction: tokenFulfillmentDeposit\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].shortBalance[tokenUser[0]] = safeAdd(orderRecord[msg.sender][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_32 := TMP_50\""
                    ],
                    "state_variable": "orderRecord.shortBalance"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "tokenFulfillmentDeposit",
                "exerciseLong"
            ],
            "from_function": "exerciseLong",
            "to_function": "tokenFulfillmentDeposit",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 56\nFunction: exerciseLong\nNode: \nIF orderRecord[msg.sender][orderHash].tokenDeposit\nIRS: \nCONDITION REF_169\"",
                        "\"BlockID: 16\nFunction: tokenFulfillmentDeposit\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].tokenDeposit = true\nIRS: \nREF_40 := true\""
                    ],
                    "state_variable": "orderRecord.tokenDeposit"
                },
                {
                    "path": [
                        "\"BlockID: 57\nFunction: exerciseLong\nNode: \nIF ! orderRecord[msg.sender][orderHash].tokenDeposit\nIRS: \nCONDITION TMP_114\"",
                        "\"BlockID: 16\nFunction: tokenFulfillmentDeposit\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].tokenDeposit = true\nIRS: \nREF_40 := true\""
                    ],
                    "state_variable": "orderRecord.tokenDeposit"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\"",
                        "\"BlockID: 22\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\""
                    ],
                    "state_variable": "orderRecord.shortBalance"
                },
                {
                    "path": [
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 15\nFunction: tokenFulfillmentDeposit\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].shortBalance[tokenUser[0]] = safeAdd(orderRecord[msg.sender][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_32 := TMP_50\""
                    ],
                    "state_variable": "orderRecord.shortBalance"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exerciseLong",
                "tokenFulfillmentDeposit"
            ],
            "from_function": "tokenFulfillmentDeposit",
            "to_function": "exerciseLong",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 13\nFunction: tokenFulfillmentDeposit\nNode: \nEXPRESSION require(bool)(ecrecover(bytes32,uint8,bytes32,bytes32)(keccak256()(\u0019Ethereum Signed Message:\n32,orderHash),v,rs[0],rs[1]) == msg.sender && block.number > minMaxDMWCPNonce[2] && block.number <= minMaxDMWCPNonce[3] && orderRecord[tokenUser[1]][orderHash].balance >= minMaxDMWCPNonce[0] && amount == safeMul(orderRecord[msg.sender][orderHash].balance,minMaxDMWCPNonce[6]) && ! orderRecord[msg.sender][orderHash].tokenDeposit)\nIRS: \nTMP_47 = SOLIDITY_CALL require(bool)(TMP_46)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: tokenFulfillmentDeposit\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].shortBalance[tokenUser[0]] = safeAdd(orderRecord[msg.sender][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_32 := TMP_50\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 18\nFunction: safeMul\nNode: \nEXPRESSION assert(bool)(a == 0 || c \/ a == b)\nIRS: \nTMP_20 = SOLIDITY_CALL assert(bool)(TMP_19)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 22\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 15\nFunction: tokenFulfillmentDeposit\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].shortBalance[tokenUser[0]] = safeAdd(orderRecord[msg.sender][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_32 := TMP_50\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.shortBalance"
                },
                {
                    "path": [
                        "\"BlockID: 22\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.shortBalance"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exerciseLong",
                "depositCoupon"
            ],
            "from_function": "depositCoupon",
            "to_function": "exerciseLong",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 28\nFunction: depositCoupon\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].coupon = safeAdd(orderRecord[msg.sender][orderHash].coupon,msg.value)\nIRS: \nREF_57 := TMP_61\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 28\nFunction: depositCoupon\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].coupon = safeAdd(orderRecord[msg.sender][orderHash].coupon,msg.value)\nIRS: \nREF_57 := TMP_61\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 28\nFunction: depositCoupon\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].coupon = safeAdd(orderRecord[msg.sender][orderHash].coupon,msg.value)\nIRS: \nREF_57 := TMP_61\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 28\nFunction: depositCoupon\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].coupon = safeAdd(orderRecord[msg.sender][orderHash].coupon,msg.value)\nIRS: \nREF_57 := TMP_61\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 28\nFunction: depositCoupon\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].coupon = safeAdd(orderRecord[msg.sender][orderHash].coupon,msg.value)\nIRS: \nREF_57 := TMP_61\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 30\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exerciseLong",
                "placeLong"
            ],
            "from_function": "placeLong",
            "to_function": "exerciseLong",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 36\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeAdd(orderRecord[tokenUser[1]][orderHash].balance,msg.value)\nIRS: \nREF_98 := TMP_75\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeAdd(orderRecord[tokenUser[1]][orderHash].balance,msg.value)\nIRS: \nREF_98 := TMP_75\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeAdd(orderRecord[tokenUser[1]][orderHash].balance,msg.value)\nIRS: \nREF_98 := TMP_75\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeAdd(orderRecord[tokenUser[1]][orderHash].balance,msg.value)\nIRS: \nREF_98 := TMP_75\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeAdd(orderRecord[tokenUser[1]][orderHash].balance,msg.value)\nIRS: \nREF_98 := TMP_75\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: placeLong\nNode: \nEXPRESSION require(bool)(ecrecover(bytes32,uint8,bytes32,bytes32)(keccak256()(\u0019Ethereum Signed Message:\n32,orderHash),v,rs[0],rs[1]) == tokenUser[1] && block.number <= minMaxDMWCPNonce[2] && orderRecord[tokenUser[1]][orderHash].coupon == minMaxDMWCPNonce[5] && orderRecord[tokenUser[1]][orderHash].balance <= minMaxDMWCPNonce[1])\nIRS: \nTMP_73 = SOLIDITY_CALL require(bool)(TMP_72)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 39\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = safeAdd(orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender],msg.value)\nIRS: \nREF_89 := TMP_74\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = safeAdd(orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender],msg.value)\nIRS: \nREF_89 := TMP_74\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = safeAdd(orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender],msg.value)\nIRS: \nREF_89 := TMP_74\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = safeAdd(orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender],msg.value)\nIRS: \nREF_89 := TMP_74\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = safeAdd(orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender],msg.value)\nIRS: \nREF_89 := TMP_74\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = safeAdd(orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender],msg.value)\nIRS: \nREF_89 := TMP_74\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = safeAdd(orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender],msg.value)\nIRS: \nREF_89 := TMP_74\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeAdd(orderRecord[tokenUser[1]][orderHash].balance,msg.value)\nIRS: \nREF_98 := TMP_75\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 39\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 35\nFunction: placeLong\nNode: \nEXPRESSION require(bool)(ecrecover(bytes32,uint8,bytes32,bytes32)(keccak256()(\u0019Ethereum Signed Message:\n32,orderHash),v,rs[0],rs[1]) == tokenUser[1] && block.number <= minMaxDMWCPNonce[2] && orderRecord[tokenUser[1]][orderHash].coupon == minMaxDMWCPNonce[5] && orderRecord[tokenUser[1]][orderHash].balance <= minMaxDMWCPNonce[1])\nIRS: \nTMP_73 = SOLIDITY_CALL require(bool)(TMP_72)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeAdd(orderRecord[tokenUser[1]][orderHash].balance,msg.value)\nIRS: \nREF_98 := TMP_75\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 39\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 40\nFunction: placeLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = safeAdd(orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender],msg.value)\nIRS: \nREF_89 := TMP_74\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exerciseLong",
                "buyLong"
            ],
            "from_function": "buyLong",
            "to_function": "exerciseLong",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 44\nFunction: buyLong\nNode: \nEXPRESSION orderRecord[sellerShort[1]][hashRS[0]].longBalance[msg.sender] = orderRecord[sellerShort[1]][hashRS[0]].longBalance[sellerShort[0]]\nIRS: \nREF_122 := REF_129\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: buyLong\nNode: \nEXPRESSION orderRecord[sellerShort[1]][hashRS[0]].longBalance[sellerShort[0]] = uint256(0)\nIRS: \nREF_136 := TMP_90\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: buyLong\nNode: \nEXPRESSION orderRecord[sellerShort[1]][hashRS[0]].longBalance[msg.sender] = orderRecord[sellerShort[1]][hashRS[0]].longBalance[sellerShort[0]]\nIRS: \nREF_122 := REF_129\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: buyLong\nNode: \nEXPRESSION orderRecord[sellerShort[1]][hashRS[0]].longBalance[sellerShort[0]] = uint256(0)\nIRS: \nREF_136 := TMP_90\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: buyLong\nNode: \nEXPRESSION orderRecord[sellerShort[1]][hashRS[0]].longBalance[msg.sender] = orderRecord[sellerShort[1]][hashRS[0]].longBalance[sellerShort[0]]\nIRS: \nREF_122 := REF_129\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: buyLong\nNode: \nEXPRESSION orderRecord[sellerShort[1]][hashRS[0]].longBalance[sellerShort[0]] = uint256(0)\nIRS: \nREF_136 := TMP_90\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: buyLong\nNode: \nEXPRESSION orderRecord[sellerShort[1]][hashRS[0]].longBalance[msg.sender] = orderRecord[sellerShort[1]][hashRS[0]].longBalance[sellerShort[0]]\nIRS: \nREF_122 := REF_129\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: buyLong\nNode: \nEXPRESSION orderRecord[sellerShort[1]][hashRS[0]].longBalance[sellerShort[0]] = uint256(0)\nIRS: \nREF_136 := TMP_90\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: buyLong\nNode: \nEXPRESSION orderRecord[sellerShort[1]][hashRS[0]].longBalance[msg.sender] = orderRecord[sellerShort[1]][hashRS[0]].longBalance[sellerShort[0]]\nIRS: \nREF_122 := REF_129\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: buyLong\nNode: \nEXPRESSION orderRecord[sellerShort[1]][hashRS[0]].longBalance[sellerShort[0]] = uint256(0)\nIRS: \nREF_136 := TMP_90\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 44\nFunction: buyLong\nNode: \nEXPRESSION orderRecord[sellerShort[1]][hashRS[0]].longBalance[msg.sender] = orderRecord[sellerShort[1]][hashRS[0]].longBalance[sellerShort[0]]\nIRS: \nREF_122 := REF_129\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 45\nFunction: buyLong\nNode: \nEXPRESSION orderRecord[sellerShort[1]][hashRS[0]].longBalance[sellerShort[0]] = uint256(0)\nIRS: \nREF_136 := TMP_90\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exerciseLong",
                "exerciseLong"
            ],
            "from_function": "exerciseLong",
            "to_function": "exerciseLong",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 168\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_245 := TMP_119\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 168\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_245 := TMP_119\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 168\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_245 := TMP_119\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 168\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_245 := TMP_119\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 168\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_245 := TMP_119\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: exerciseLong\nNode: \nEXPRESSION require(bool)(ecrecover(bytes32,uint8,bytes32,bytes32)(keccak256()(\u0019Ethereum Signed Message:\n32,orderHash),v,rs[0],rs[1]) == tokenUser[1] && block.number > minMaxDMWCPNonce[3] && block.number <= minMaxDMWCPNonce[4] && orderRecord[tokenUser[1]][orderHash].balance >= minMaxDMWCPNonce[0])\nIRS: \nTMP_102 = SOLIDITY_CALL require(bool)(TMP_101)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: exerciseLong\nNode: \nEXPRESSION msg.sender.transfer(safeAdd(couponAmount,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender]))\nIRS: \nTransfer dest:msg.sender value:TMP_116\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: exerciseLong\nNode: \nEXPRESSION msg.sender.transfer(couponAmount)\nIRS: \nTransfer dest:msg.sender value:couponAmount\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: exerciseLong\nNode: \nEXPRESSION Token(tokenUser[0]).transfer(msg.sender,amount)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(Token), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 173\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: safeMul\nNode: \nEXPRESSION assert(bool)(a == 0 || c \/ a == b)\nIRS: \nTMP_20 = SOLIDITY_CALL assert(bool)(TMP_19)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 177\nFunction: safeMul\nNode: \nEXPRESSION assert(bool)(a == 0 || c \/ a == b)\nIRS: \nTMP_20 = SOLIDITY_CALL assert(bool)(TMP_19)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 179\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_237 := TMP_118\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: safeMul\nNode: \nEXPRESSION assert(bool)(a == 0 || c \/ a == b)\nIRS: \nTMP_20 = SOLIDITY_CALL assert(bool)(TMP_19)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 186\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 169\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_259 := TMP_120\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 174\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 169\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_259 := TMP_120\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 174\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 169\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_259 := TMP_120\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 174\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 169\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_259 := TMP_120\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 174\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 169\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_259 := TMP_120\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 174\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 169\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_259 := TMP_120\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 174\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: exerciseLong\nNode: \nEXPRESSION msg.sender.transfer(safeAdd(couponAmount,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender]))\nIRS: \nTransfer dest:msg.sender value:TMP_116\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 168\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_245 := TMP_119\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: exerciseLong\nNode: \nEXPRESSION msg.sender.transfer(couponAmount)\nIRS: \nTransfer dest:msg.sender value:couponAmount\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: exerciseLong\nNode: \nEXPRESSION Token(tokenUser[0]).transfer(msg.sender,amount)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(Token), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 173\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: safeMul\nNode: \nEXPRESSION assert(bool)(a == 0 || c \/ a == b)\nIRS: \nTMP_20 = SOLIDITY_CALL assert(bool)(TMP_19)\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 177\nFunction: safeMul\nNode: \nEXPRESSION assert(bool)(a == 0 || c \/ a == b)\nIRS: \nTMP_20 = SOLIDITY_CALL assert(bool)(TMP_19)\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 179\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_237 := TMP_118\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: safeMul\nNode: \nEXPRESSION assert(bool)(a == 0 || c \/ a == b)\nIRS: \nTMP_20 = SOLIDITY_CALL assert(bool)(TMP_19)\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 186\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_237 := TMP_118\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_237 := TMP_118\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_237 := TMP_118\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_237 := TMP_118\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_237 := TMP_118\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 167\nFunction: exerciseLong\nNode: \nEXPRESSION msg.sender.transfer(safeAdd(couponAmount,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender]))\nIRS: \nTransfer dest:msg.sender value:TMP_116\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 168\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_245 := TMP_119\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: exerciseLong\nNode: \nEXPRESSION msg.sender.transfer(couponAmount)\nIRS: \nTransfer dest:msg.sender value:couponAmount\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 172\nFunction: exerciseLong\nNode: \nEXPRESSION Token(tokenUser[0]).transfer(msg.sender,amount)\nIRS: \nTMP_108(bool) = HIGH_LEVEL_CALL, dest:TMP_107(Token), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 173\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 176\nFunction: safeMul\nNode: \nEXPRESSION assert(bool)(a == 0 || c \/ a == b)\nIRS: \nTMP_20 = SOLIDITY_CALL assert(bool)(TMP_19)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 177\nFunction: safeMul\nNode: \nEXPRESSION assert(bool)(a == 0 || c \/ a == b)\nIRS: \nTMP_20 = SOLIDITY_CALL assert(bool)(TMP_19)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: safeAdd\nNode: \nEXPRESSION assert(bool)(c >= a && c >= b)\nIRS: \nTMP_29 = SOLIDITY_CALL assert(bool)(TMP_28)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 179\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: safeMul\nNode: \nEXPRESSION assert(bool)(a == 0 || c \/ a == b)\nIRS: \nTMP_20 = SOLIDITY_CALL assert(bool)(TMP_19)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 186\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 173\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.shortBalance"
                },
                {
                    "path": [
                        "\"BlockID: 186\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.shortBalance"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exerciseLong",
                "nonActivationShortWithdrawal"
            ],
            "from_function": "nonActivationShortWithdrawal",
            "to_function": "exerciseLong",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 98\nFunction: nonActivationShortWithdrawal\nNode: \nEXPRESSION require(bool)(ecrecover(bytes32,uint8,bytes32,bytes32)(keccak256()(\u0019Ethereum Signed Message:\n32,orderHash),v,rs[0],rs[1]) == msg.sender && block.number > minMaxDMWCPNonce[2] && orderRecord[tokenUser[1]][orderHash].balance < minMaxDMWCPNonce[0])\nIRS: \nTMP_147 = SOLIDITY_CALL require(bool)(TMP_146)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: nonActivationShortWithdrawal\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].coupon = uint256(0)\nIRS: \nREF_342 := TMP_149\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: nonActivationShortWithdrawal\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].coupon = uint256(0)\nIRS: \nREF_342 := TMP_149\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: nonActivationShortWithdrawal\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].coupon = uint256(0)\nIRS: \nREF_342 := TMP_149\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: nonActivationShortWithdrawal\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].coupon = uint256(0)\nIRS: \nREF_342 := TMP_149\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: nonActivationShortWithdrawal\nNode: \nEXPRESSION orderRecord[msg.sender][orderHash].coupon = uint256(0)\nIRS: \nREF_342 := TMP_149\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.coupon"
                },
                {
                    "path": [
                        "\"BlockID: 99\nFunction: nonActivationShortWithdrawal\nNode: \nEXPRESSION msg.sender.transfer(orderRecord[msg.sender][orderHash].coupon)\nIRS: \nTransfer dest:msg.sender value:REF_339\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.coupon"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "exerciseLong",
                "nonActivationWithdrawal"
            ],
            "from_function": "nonActivationWithdrawal",
            "to_function": "exerciseLong",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 108\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_375 := TMP_163\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_375 := TMP_163\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_375 := TMP_163\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_375 := TMP_163\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_375 := TMP_163\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 106\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION require(bool)(ecrecover(bytes32,uint8,bytes32,bytes32)(keccak256()(\u0019Ethereum Signed Message:\n32,orderHash),v,rs[0],rs[1]) == tokenUser[1] && block.number > minMaxDMWCPNonce[2] && block.number <= minMaxDMWCPNonce[4] && orderRecord[tokenUser[1]][orderHash].balance < minMaxDMWCPNonce[0])\nIRS: \nTMP_161 = SOLIDITY_CALL require(bool)(TMP_160)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 111\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.balance"
                },
                {
                    "path": [
                        "\"BlockID: 109\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_389 := TMP_164\"",
                        "\"BlockID: 66\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]] = safeSub(orderRecord[tokenUser[1]][orderHash].shortBalance[tokenUser[0]],amount)\nIRS: \nREF_209 := TMP_111\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 109\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_389 := TMP_164\"",
                        "\"BlockID: 76\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 109\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_389 := TMP_164\"",
                        "\"BlockID: 77\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 109\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_389 := TMP_164\"",
                        "\"BlockID: 78\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].coupon = safeSub(orderRecord[tokenUser[1]][orderHash].coupon,couponAmount)\nIRS: \nREF_186 := TMP_109\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 109\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_389 := TMP_164\"",
                        "\"BlockID: 79\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 109\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_389 := TMP_164\"",
                        "\"BlockID: 80\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_194 := TMP_110\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 107\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION msg.sender.transfer(orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nTransfer dest:msg.sender value:REF_371\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 108\nFunction: nonActivationWithdrawal\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].balance = safeSub(orderRecord[tokenUser[1]][orderHash].balance,orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender])\nIRS: \nREF_375 := TMP_163\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                },
                {
                    "path": [
                        "\"BlockID: 111\nFunction: safeSub\nNode: \nEXPRESSION assert(bool)(b <= a)\nIRS: \nTMP_23 = SOLIDITY_CALL assert(bool)(TMP_22)\"",
                        "\"BlockID: 67\nFunction: exerciseLong\nNode: \nEXPRESSION orderRecord[tokenUser[1]][orderHash].longBalance[msg.sender] = uint256(0)\nIRS: \nREF_220 := TMP_112\""
                    ],
                    "state_variable": "orderRecord.longBalance"
                }
            ]
        }
    ]
}