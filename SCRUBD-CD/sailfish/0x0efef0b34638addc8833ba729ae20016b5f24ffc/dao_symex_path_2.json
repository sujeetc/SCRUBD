{
    "file": "0x0efef0b34638addc8833ba729ae20016b5f24ffc.sol",
    "global_structs": [
        {
            "name": "Deposit",
            "fields": {
                "block": [
                    "integer"
                ],
                "token": [
                    "integer"
                ],
                "amount": [
                    "integer"
                ],
                "canceled": [
                    "boolean"
                ]
            }
        },
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0xc7"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0xc8"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0xc9"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "newOwnerCandidate",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "escapeBlacklist",
            "type": [
                "array",
                "integer",
                "boolean"
            ],
            "init": []
        },
        {
            "name": "deposits",
            "type": [
                "array",
                "Deposit"
            ],
            "init": []
        },
        {
            "name": "nextDepositToPayout",
            "type": [
                "array",
                "integer",
                "integer"
            ],
            "init": []
        },
        {
            "name": "skipDeposits",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "boolean"
                ]
            ],
            "init": []
        },
        {
            "name": "rewardToken",
            "type": [
                "integer"
            ],
            "init": [
                "0x25"
            ]
        },
        {
            "name": "owner",
            "type": [
                "integer"
            ],
            "init": [
                "0xf"
            ]
        },
        {
            "name": "escapeHatchDestination",
            "type": [
                "integer"
            ],
            "init": [
                "0x15",
                "0x24"
            ]
        },
        {
            "name": "escapeHatchCaller",
            "type": [
                "integer"
            ],
            "init": [
                "0x14",
                "0x23"
            ]
        },
        {
            "name": "ERC20",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Owned",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Escapable",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "MiniMeToken",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "WithdrawContract",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0xf",
            "instructions": [
                "owner = msg_sender"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x14",
            "instructions": [
                "escapeHatchCaller = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x15",
            "instructions": [
                "escapeHatchDestination = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x23",
            "instructions": [
                "escapeHatchCaller = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x24",
            "instructions": [
                "escapeHatchDestination = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x25",
            "instructions": [
                "rewardToken = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x53",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x54",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x55",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xc7",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xc8",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xc9",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "owner",
            "addrs": [
                "0x2",
                "0x11",
                "0x34",
                "0x3a"
            ]
        },
        {
            "name": "newOwnerCandidate",
            "addrs": [
                "0x2",
                "0x13",
                "0x36",
                "0x38",
                "0x3c"
            ]
        },
        {
            "name": "skipDeposits",
            "addrs": [
                "0x2",
                "0x16"
            ]
        },
        {
            "name": "deposits",
            "addrs": [
                "0x2",
                "0x18",
                "0x3e",
                "0x41",
                "0x51"
            ]
        },
        {
            "name": "escapeHatchCaller",
            "addrs": [
                "0x2",
                "0x43"
            ]
        },
        {
            "name": "nextDepositToPayout",
            "addrs": [
                "0x2",
                "0x46",
                "0x4b"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11",
            "instructions": [
                "CLR_0 = msg.sender",
                "RTMP_237 = CLR_0 == newOwnerCandidate",
                "CONDITION RTMP_237 0x10 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x10",
            "instructions": [
                "owner = newOwnerCandidate"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13",
            "instructions": [
                "CLR_1 = msg.sender",
                "RTMP_238 = CLR_1 == newOwnerCandidate",
                "CONDITION RTMP_238 0x12 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12",
            "instructions": [
                "newOwnerCandidate = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16",
            "instructions": [
                "CLR_2 = msg.sender",
                "CLR_3 = skipDeposits[CLR_2]",
                "REF_81 = CLR_3",
                "CLR_4 = REF_81[U]",
                "REF_82 = CLR_4",
                "REF_81[0] = U",
                "REF_81[1] = U",
                "REF_81[2] = U",
                "REF_81[3] = U",
                "REF_81[4] = U",
                "REF_81[5] = U",
                "REF_81[6] = U",
                "REF_81[7] = U",
                "REF_81[8] = U",
                "REF_81[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x18",
            "instructions": [
                "CLR_5 = msg.sender",
                "RTMP_240 = CLR_5 == owner",
                "CONDITION RTMP_240 0x17 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x17",
            "instructions": [
                "REF_83 = NEW_VAL integer",
                "TMP_239 = REF_83 + 1",
                "NCV_0 = NEW_VAL integer",
                "deposits.length = NCV_0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x34",
            "instructions": [
                "CLR_6 = msg.sender",
                "RTMP_253 = CLR_6 == owner",
                "CONDITION RTMP_253 0x33 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x33",
            "instructions": [
                "owner = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x36",
            "instructions": [
                "CLR_7 = msg.sender",
                "RTMP_254 = CLR_7 == owner",
                "CONDITION RTMP_254 0x35 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x35",
            "instructions": [
                "newOwnerCandidate = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x38",
            "instructions": [
                "CLR_8 = msg.sender",
                "RTMP_255 = CLR_8 == owner",
                "CONDITION RTMP_255 0x37 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x37",
            "instructions": [
                "newOwnerCandidate = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3a",
            "instructions": [
                "CLR_9 = msg.sender",
                "RTMP_256 = CLR_9 == owner",
                "CONDITION RTMP_256 0x39 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x39",
            "instructions": [
                "owner = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3c",
            "instructions": [
                "CLR_10 = msg.sender",
                "RTMP_257 = CLR_10 == owner",
                "CONDITION RTMP_257 0x3b 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3b",
            "instructions": [
                "newOwnerCandidate = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3e",
            "instructions": [
                "CLR_11 = msg.sender",
                "RTMP_259 = CLR_11 == owner",
                "CONDITION RTMP_259 0x3f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3f",
            "instructions": [
                "CLR_12 = msg.value",
                "RTMP_260 = CLR_12 > 0",
                "CONDITION RTMP_260 0x3d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3d",
            "instructions": [
                "REF_84 = NEW_VAL integer",
                "TMP_258 = REF_84 + 1",
                "NCV_1 = NEW_VAL integer",
                "deposits.length = NCV_1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x41",
            "instructions": [
                "CLR_13 = msg.sender",
                "RTMP_261 = CLR_13 == owner",
                "CONDITION RTMP_261 0x40 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x40",
            "instructions": [
                "CLR_14 = deposits[U]",
                "REF_85 = CLR_14",
                "CLR_15 = REF_85.canceled",
                "REF_86 = CLR_15",
                "REF_85.canceled = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x43",
            "instructions": [
                "CLR_16 = msg.sender",
                "RTMP_262 = CLR_16 == escapeHatchCaller",
                "CONDITION RTMP_262 0x44 0x44"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x44",
            "instructions": [
                "CLR_17 = msg.sender",
                "RTMP_263 = CLR_17 == owner",
                "CONDITION RTMP_263 0x42 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x42",
            "instructions": [
                "escapeHatchCaller = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x46",
            "instructions": [
                "CLR_18 = msg.sender",
                "CLR_19 = nextDepositToPayout[CLR_18]",
                "REF_92 = CLR_19",
                "CLR_20 = msg.sender",
                "CLR_21 = nextDepositToPayout[CLR_20]",
                "REF_93 = CLR_21",
                "REF_94 = NEW_VAL integer",
                "RTMP_266 = REF_92 < REF_94",
                "RTMP_267 = REF_93 < REF_94",
                "RTMP_268 = RTMP_266 || RTMP_267",
                "CONDITION RTMP_268 0x1 0x47"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x47",
            "instructions": [
                "CLR_22 = msg.gas",
                "REF_95 = CLR_22",
                "RTMP_269 = REF_95 > 148000",
                "CONDITION RTMP_269 0x1 0x48"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x48",
            "instructions": [
                "CLR_23 = msg.sender",
                "CLR_24 = nextDepositToPayout[CLR_23]",
                "REF_89 = CLR_24",
                "REF_90 = NEW_VAL integer",
                "RTMP_264 = REF_89 < REF_90",
                "CONDITION RTMP_264 0x49 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x49",
            "instructions": [
                "CLR_25 = msg.gas",
                "REF_91 = CLR_25",
                "RTMP_265 = REF_91 > 149000",
                "CONDITION RTMP_265 0x45 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x45",
            "instructions": [
                "CLR_26 = msg.sender",
                "CLR_27 = nextDepositToPayout[CLR_26]",
                "REF_87 = CLR_27",
                "CLR_28 = msg.sender",
                "CLR_29 = nextDepositToPayout[CLR_28]",
                "REF_88 = CLR_29",
                "CLR_30 = msg.sender",
                "nextDepositToPayout[CLR_30] = REF_87",
                "CLR_31 = msg.sender",
                "nextDepositToPayout[CLR_31] = REF_88"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4b",
            "instructions": [
                "CLR_32 = msg.sender",
                "CLR_33 = nextDepositToPayout[CLR_32]",
                "REF_101 = CLR_33",
                "CLR_34 = msg.sender",
                "CLR_35 = nextDepositToPayout[CLR_34]",
                "REF_102 = CLR_35",
                "REF_103 = NEW_VAL integer",
                "RTMP_272 = REF_101 < REF_103",
                "RTMP_273 = REF_102 < REF_103",
                "RTMP_274 = RTMP_272 || RTMP_273",
                "CONDITION RTMP_274 0x4c 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4c",
            "instructions": [
                "CLR_36 = msg.gas",
                "REF_104 = CLR_36",
                "RTMP_275 = REF_104 > 148000",
                "CONDITION RTMP_275 0x4d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4d",
            "instructions": [
                "CLR_37 = msg.sender",
                "CLR_38 = nextDepositToPayout[CLR_37]",
                "REF_98 = CLR_38",
                "REF_99 = NEW_VAL integer",
                "RTMP_270 = REF_98 < REF_99",
                "CONDITION RTMP_270 0x4e 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4e",
            "instructions": [
                "CLR_39 = msg.gas",
                "REF_100 = CLR_39",
                "RTMP_271 = REF_100 > 149000",
                "CONDITION RTMP_271 0x4f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4f",
            "instructions": [
                "CLR_40 = deposits[U]",
                "REF_105 = CLR_40",
                "CLR_41 = REF_105.token",
                "REF_106 = CLR_41",
                "CLR_42 = deposits[U]",
                "REF_107 = CLR_42",
                "CLR_43 = REF_107.token",
                "REF_108 = CLR_43",
                "CLR_44 = deposits[U]",
                "REF_109 = CLR_44",
                "CLR_45 = REF_109.token",
                "REF_110 = CLR_45",
                "RTMP_276 = REF_106 != REF_110",
                "RTMP_277 = REF_108 != REF_110",
                "RTMP_278 = RTMP_276 || RTMP_277",
                "CONDITION RTMP_278 0x4a 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4a",
            "instructions": [
                "CLR_46 = msg.sender",
                "CLR_47 = nextDepositToPayout[CLR_46]",
                "REF_96 = CLR_47",
                "CLR_48 = msg.sender",
                "CLR_49 = nextDepositToPayout[CLR_48]",
                "REF_97 = CLR_49",
                "CLR_50 = msg.sender",
                "nextDepositToPayout[CLR_50] = REF_96",
                "CLR_51 = msg.sender",
                "nextDepositToPayout[CLR_51] = REF_97"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x51",
            "instructions": [
                "CLR_52 = msg.sender",
                "RTMP_259 = CLR_52 == owner",
                "CONDITION RTMP_259 0x52 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x52",
            "instructions": [
                "CLR_53 = msg.value",
                "RTMP_260 = CLR_53 > 0",
                "CONDITION RTMP_260 0x50 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x50",
            "instructions": [
                "REF_84 = NEW_VAL integer",
                "TMP_258 = REF_84 + 1",
                "NCV_2 = NEW_VAL integer",
                "deposits.length = NCV_2"
            ]
        }
    ],
    "root_addr": "0xca",
    "dest_addrs": [
        "0x13a"
    ],
    "normal_blocks": [
        {
            "scope": "withdraw_v1",
            "addr": "0xca",
            "instructions": [
                "NOP",
                "i = NEW_VAL integer",
                "d = NEW_VAL Deposit",
                "currentToken = NEW_VAL integer",
                "_idDeposit = NEW_VAL integer",
                "_holder = NEW_VAL integer",
                "_dest = NEW_VAL integer",
                "acc = NEW_VAL integer",
                "_idDeposit = NEW_VAL integer",
                "_token = NEW_VAL integer",
                "_amount = NEW_VAL integer",
                "JUMP 0xcb"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xcb",
            "instructions": [
                "acc = 0",
                "CLR_54 = msg.sender",
                "CLR_55 = nextDepositToPayout[CLR_54]",
                "REF_30 = CLR_55",
                "i = REF_30",
                "REF_31 = LENGTH deposits",
                "TMP_119 = i < REF_31",
                "CONDITION TMP_119 0xcb_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xcb_r0",
            "instructions": [
                "JUMP 0xcc"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xcc",
            "instructions": [
                "CLR_56 = deposits[i]",
                "REF_32 = CLR_56",
                "CLR_57 = REF_32.token",
                "REF_33 = CLR_57",
                "currentToken = REF_33",
                "CLR_58 = msg.gas",
                "TMP_121 = CLR_58 > 149000",
                "CONDITION TMP_121 0xcc_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xcc_r0",
            "instructions": [
                "JUMP 0xcd"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xcd",
            "instructions": [
                "NOP",
                "REF_34 = LENGTH deposits",
                "TMP_123 = i < REF_34",
                "CLR_59 = msg.gas",
                "TMP_124 = CLR_59 > 148000",
                "TMP_125 = TMP_123 && TMP_124",
                "CONDITION TMP_125 0xcf 0xce"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xce",
            "instructions": [
                "NOP",
                "JUMP 0xd0"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xd1",
            "instructions": [
                "TMP_128 = ! TMP_127",
                "TMP_129 = TMP_126 && TMP_128",
                "CONDITION TMP_129 0xd2 0xd3"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xd2",
            "instructions": [
                "CLR_60 = d.token",
                "REF_37 = CLR_60",
                "TMP_130 = currentToken != REF_37",
                "CONDITION TMP_130 0xd4 0xd3"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xd5",
            "instructions": [
                "NOP",
                "JUMP 0xd6"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xd6",
            "instructions": [
                "TMP_140 = i",
                "i = i + 1",
                "JUMP 0xcd"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xd7",
            "instructions": [
                "NOP",
                "JUMP 0xd8"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xd8",
            "instructions": [
                "CLR_61 = d.amount",
                "REF_41 = CLR_61",
                "CLR_62 = d.block",
                "REF_43 = CLR_62",
                "TMP_136 = NEW_VAL integer",
                "JUMP 0xd9"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xd9",
            "instructions": [
                "TMP_137 = REF_41 * TMP_136",
                "CLR_63 = d.block",
                "REF_45 = CLR_63",
                "TMP_138 = NEW_VAL integer",
                "JUMP 0xda"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xda",
            "instructions": [
                "TMP_139 = TMP_137 \/ TMP_138",
                "acc = acc + TMP_139",
                "JUMP 0xd5"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xdb",
            "instructions": [
                "CONDITION TMP_132 0xdb_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xdb_r0",
            "instructions": [
                "JUMP 0xdc"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xdc",
            "instructions": [
                "CLR_64 = msg.sender",
                "CLR_65 = nextDepositToPayout[CLR_64]",
                "REF_39 = CLR_65",
                "TMP_134 = REF_39 == i",
                "CONDITION TMP_134 0xdc_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xdc_r0",
            "instructions": [
                "JUMP 0xdd"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xdd",
            "instructions": [
                "CLR_66 = d.token",
                "REF_40 = CLR_66",
                "currentToken = REF_40",
                "acc = 0",
                "JUMP 0xd7"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xde",
            "instructions": [
                "NOP",
                "JUMP 0xdf"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xdf",
            "instructions": [
                "TMP_173 = _amount == 0",
                "CONDITION TMP_173 0xd3 0xe0"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xe0",
            "instructions": [
                "NOP",
                "JUMP 0xe1"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xe1",
            "instructions": [
                "TMP_174 = NEW_VAL unknown",
                "TMP_175 = TMP_174 == 0",
                "CONDITION TMP_175 0xd3 0xe2"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xe2",
            "instructions": [
                "ATTACK",
                "TMP_178 = NEW_VAL boolean",
                "JUMP 0xe3"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xd0",
            "instructions": [
                "CLR_67 = msg.sender",
                "CLR_68 = nextDepositToPayout[CLR_67]",
                "REF_46 = CLR_68",
                "CLR_69 = msg.sender",
                "nextDepositToPayout[CLR_69] = i",
                "TMP_141 = i - 1",
                "_idDeposit = TMP_141",
                "CLR_70 = msg.sender",
                "_dest = CLR_70",
                "_token = currentToken",
                "_amount = acc",
                "JUMP 0xde"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xe4",
            "instructions": [
                "NOP",
                "JUMP 0xe5"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xe5",
            "instructions": [
                "CLR_71 = skipDeposits[_holder]",
                "REF_73 = CLR_71",
                "CLR_72 = REF_73[_idDeposit]",
                "REF_74 = CLR_72",
                "TMP_230 = REF_74",
                "JUMP 0xe6"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xcf",
            "instructions": [
                "CLR_73 = deposits[i]",
                "REF_35 = CLR_73",
                "d = REF_35",
                "CLR_74 = d.canceled",
                "REF_36 = CLR_74",
                "TMP_126 = ! REF_36",
                "CLR_75 = msg.sender",
                "_holder = CLR_75",
                "_idDeposit = i",
                "JUMP 0xe4"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xe6",
            "instructions": [
                "TMP_127 = TMP_230",
                "JUMP 0xd1"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xe7",
            "instructions": [
                "NOP",
                "JUMP 0xe8"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xe8",
            "instructions": [
                "TMP_173 = _amount == 0",
                "CONDITION TMP_173 0xe9 0xea"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xe9",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0xeb"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xea",
            "instructions": [
                "NOP",
                "JUMP 0xec"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xec",
            "instructions": [
                "TMP_174 = NEW_VAL unknown",
                "TMP_175 = TMP_174 == 0",
                "CONDITION TMP_175 0xed 0xee"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xed",
            "instructions": [
                "CLR_76 = this.balance",
                "WRP_0 = CLR_76 - _amount",
                "this.balance = WRP_0",
                "TMP_176 = NEW_VAL unknown",
                "JUMP 0xef"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xee",
            "instructions": [
                "TMP_178 = NEW_VAL boolean",
                "JUMP 0xf0"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xf0",
            "instructions": [
                "TMP_179 = ! TMP_178",
                "CONDITION TMP_179 0xf1 0xf2"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xf1",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0xeb"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xf2",
            "instructions": [
                "NOP",
                "JUMP 0xf3"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xf3",
            "instructions": [
                "NOP",
                "JUMP 0xf4"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xf4",
            "instructions": [
                "NOP",
                "JUMP 0xf5"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xf5",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0xeb"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xef",
            "instructions": [
                "TMP_177 = ! TMP_176",
                "CONDITION TMP_177 0xf6 0xf7"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xf6",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0xeb"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xf7",
            "instructions": [
                "NOP",
                "JUMP 0xf3"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xd4",
            "instructions": [
                "CLR_77 = msg.sender",
                "CLR_78 = nextDepositToPayout[CLR_77]",
                "REF_38 = CLR_78",
                "CLR_79 = msg.sender",
                "nextDepositToPayout[CLR_79] = i",
                "TMP_131 = i - 1",
                "_idDeposit = TMP_131",
                "CLR_80 = msg.sender",
                "_dest = CLR_80",
                "_token = currentToken",
                "_amount = acc",
                "JUMP 0xe7"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xeb",
            "instructions": [
                "TMP_132 = TMP_231",
                "JUMP 0xdb"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xe3",
            "instructions": [
                "NOP",
                "i = NEW_VAL integer",
                "d = NEW_VAL Deposit",
                "currentToken = NEW_VAL integer",
                "_idDeposit = NEW_VAL integer",
                "_holder = NEW_VAL integer",
                "_dest = NEW_VAL integer",
                "acc = NEW_VAL integer",
                "_idDeposit = NEW_VAL integer",
                "_token = NEW_VAL integer",
                "_amount = NEW_VAL integer",
                "JUMP 0xf8"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xf8",
            "instructions": [
                "acc = 0",
                "CLR_81 = msg.sender",
                "CLR_82 = nextDepositToPayout[CLR_81]",
                "REF_30 = CLR_82",
                "i = REF_30",
                "REF_31 = LENGTH deposits",
                "TMP_119 = i < REF_31",
                "CONDITION TMP_119 0xf8_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xf8_r0",
            "instructions": [
                "JUMP 0xf9"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xf9",
            "instructions": [
                "CLR_83 = deposits[i]",
                "REF_32 = CLR_83",
                "CLR_84 = REF_32.token",
                "REF_33 = CLR_84",
                "currentToken = REF_33",
                "CLR_85 = msg.gas",
                "TMP_121 = CLR_85 > 149000",
                "CONDITION TMP_121 0xf9_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xf9_r0",
            "instructions": [
                "JUMP 0xfa"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xfa",
            "instructions": [
                "NOP",
                "REF_34 = LENGTH deposits",
                "TMP_123 = i < REF_34",
                "CLR_86 = msg.gas",
                "TMP_124 = CLR_86 > 148000",
                "TMP_125 = TMP_123 && TMP_124",
                "CONDITION TMP_125 0xfc 0xfb"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xfb",
            "instructions": [
                "NOP",
                "JUMP 0xfd"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xfe",
            "instructions": [
                "CONDITION TMP_142 0xfe_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xfe_r0",
            "instructions": [
                "JUMP 0xff"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xff",
            "instructions": [
                "CLR_87 = msg.sender",
                "CLR_88 = nextDepositToPayout[CLR_87]",
                "REF_47 = CLR_88",
                "TMP_144 = REF_47 == i",
                "CONDITION TMP_144 0xff_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xff_r0",
            "instructions": [
                "JUMP 0x100"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x101",
            "instructions": [
                "TMP_128 = ! TMP_127",
                "TMP_129 = TMP_126 && TMP_128",
                "CONDITION TMP_129 0x102 0xd3"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x102",
            "instructions": [
                "CLR_89 = d.token",
                "REF_37 = CLR_89",
                "TMP_130 = currentToken != REF_37",
                "CONDITION TMP_130 0x103 0xd3"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x104",
            "instructions": [
                "NOP",
                "JUMP 0x105"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x105",
            "instructions": [
                "TMP_140 = i",
                "i = i + 1",
                "JUMP 0xfa"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x106",
            "instructions": [
                "NOP",
                "JUMP 0x107"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x107",
            "instructions": [
                "CLR_90 = d.amount",
                "REF_41 = CLR_90",
                "CLR_91 = d.block",
                "REF_43 = CLR_91",
                "TMP_136 = NEW_VAL integer",
                "JUMP 0x108"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x108",
            "instructions": [
                "TMP_137 = REF_41 * TMP_136",
                "CLR_92 = d.block",
                "REF_45 = CLR_92",
                "TMP_138 = NEW_VAL integer",
                "JUMP 0x109"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x109",
            "instructions": [
                "TMP_139 = TMP_137 \/ TMP_138",
                "acc = acc + TMP_139",
                "JUMP 0x104"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x10a",
            "instructions": [
                "CONDITION TMP_132 0x10a_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x10a_r0",
            "instructions": [
                "JUMP 0x10b"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x10b",
            "instructions": [
                "CLR_93 = msg.sender",
                "CLR_94 = nextDepositToPayout[CLR_93]",
                "REF_39 = CLR_94",
                "TMP_134 = REF_39 == i",
                "CONDITION TMP_134 0x10b_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x10b_r0",
            "instructions": [
                "JUMP 0x10c"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x10c",
            "instructions": [
                "CLR_95 = d.token",
                "REF_40 = CLR_95",
                "currentToken = REF_40",
                "acc = 0",
                "JUMP 0x106"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x10d",
            "instructions": [
                "NOP",
                "JUMP 0x10e"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x10e",
            "instructions": [
                "TMP_173 = _amount == 0",
                "CONDITION TMP_173 0x10f 0x110"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x10f",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x111"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x110",
            "instructions": [
                "NOP",
                "JUMP 0x112"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x112",
            "instructions": [
                "TMP_174 = NEW_VAL unknown",
                "TMP_175 = TMP_174 == 0",
                "CONDITION TMP_175 0x113 0x114"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x113",
            "instructions": [
                "CLR_96 = this.balance",
                "WRP_1 = CLR_96 - _amount",
                "this.balance = WRP_1",
                "TMP_176 = NEW_VAL unknown",
                "JUMP 0x115"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x114",
            "instructions": [
                "TMP_178 = NEW_VAL boolean",
                "JUMP 0x116"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x116",
            "instructions": [
                "TMP_179 = ! TMP_178",
                "CONDITION TMP_179 0x117 0x118"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x117",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x111"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x118",
            "instructions": [
                "NOP",
                "JUMP 0x119"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x119",
            "instructions": [
                "NOP",
                "JUMP 0x11a"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x11a",
            "instructions": [
                "NOP",
                "JUMP 0x11b"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x11b",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x111"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x115",
            "instructions": [
                "TMP_177 = ! TMP_176",
                "CONDITION TMP_177 0x11c 0x11d"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x11c",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x111"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x11d",
            "instructions": [
                "NOP",
                "JUMP 0x119"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xfd",
            "instructions": [
                "CLR_97 = msg.sender",
                "CLR_98 = nextDepositToPayout[CLR_97]",
                "REF_46 = CLR_98",
                "CLR_99 = msg.sender",
                "nextDepositToPayout[CLR_99] = i",
                "TMP_141 = i - 1",
                "_idDeposit = TMP_141",
                "CLR_100 = msg.sender",
                "_dest = CLR_100",
                "_token = currentToken",
                "_amount = acc",
                "JUMP 0x10d"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x111",
            "instructions": [
                "TMP_142 = TMP_231",
                "JUMP 0xfe"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x11e",
            "instructions": [
                "NOP",
                "JUMP 0x11f"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x11f",
            "instructions": [
                "CLR_101 = skipDeposits[_holder]",
                "REF_73 = CLR_101",
                "CLR_102 = REF_73[_idDeposit]",
                "REF_74 = CLR_102",
                "TMP_230 = REF_74",
                "JUMP 0x120"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xfc",
            "instructions": [
                "CLR_103 = deposits[i]",
                "REF_35 = CLR_103",
                "d = REF_35",
                "CLR_104 = d.canceled",
                "REF_36 = CLR_104",
                "TMP_126 = ! REF_36",
                "CLR_105 = msg.sender",
                "_holder = CLR_105",
                "_idDeposit = i",
                "JUMP 0x11e"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x120",
            "instructions": [
                "TMP_127 = TMP_230",
                "JUMP 0x101"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x121",
            "instructions": [
                "NOP",
                "JUMP 0x122"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x122",
            "instructions": [
                "TMP_173 = _amount == 0",
                "CONDITION TMP_173 0x123 0x124"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x123",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x125"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x124",
            "instructions": [
                "NOP",
                "JUMP 0x126"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x126",
            "instructions": [
                "TMP_174 = NEW_VAL unknown",
                "TMP_175 = TMP_174 == 0",
                "CONDITION TMP_175 0x127 0x128"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x127",
            "instructions": [
                "CLR_106 = this.balance",
                "WRP_2 = CLR_106 - _amount",
                "this.balance = WRP_2",
                "TMP_176 = NEW_VAL unknown",
                "JUMP 0x129"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x128",
            "instructions": [
                "TMP_178 = NEW_VAL boolean",
                "JUMP 0x12a"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x12a",
            "instructions": [
                "TMP_179 = ! TMP_178",
                "CONDITION TMP_179 0x12b 0x12c"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x12b",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x125"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x12c",
            "instructions": [
                "NOP",
                "JUMP 0x12d"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x12d",
            "instructions": [
                "NOP",
                "JUMP 0x12e"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x12e",
            "instructions": [
                "NOP",
                "JUMP 0x12f"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x12f",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x125"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x129",
            "instructions": [
                "TMP_177 = ! TMP_176",
                "CONDITION TMP_177 0x130 0x131"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x130",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x125"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x131",
            "instructions": [
                "NOP",
                "JUMP 0x12d"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x103",
            "instructions": [
                "CLR_107 = msg.sender",
                "CLR_108 = nextDepositToPayout[CLR_107]",
                "REF_38 = CLR_108",
                "CLR_109 = msg.sender",
                "nextDepositToPayout[CLR_109] = i",
                "TMP_131 = i - 1",
                "_idDeposit = TMP_131",
                "CLR_110 = msg.sender",
                "_dest = CLR_110",
                "_token = currentToken",
                "_amount = acc",
                "JUMP 0x121"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x125",
            "instructions": [
                "TMP_132 = TMP_231",
                "JUMP 0x10a"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x100",
            "instructions": [
                "TMP_179 = ! TMP_178",
                "CONDITION TMP_179 0x132 0x133"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x132",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x134"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x134",
            "instructions": [
                "TMP_142 = TMP_231",
                "JUMP 0x135"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x133",
            "instructions": [
                "NOP",
                "JUMP 0x136"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x136",
            "instructions": [
                "NOP",
                "JUMP 0x137"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x137",
            "instructions": [
                "NOP",
                "JUMP 0x138"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x138",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x134"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x135",
            "instructions": [
                "CONDITION TMP_142 0x135_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x135_r0",
            "instructions": [
                "JUMP 0x139"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x139",
            "instructions": [
                "CLR_111 = msg.sender",
                "CLR_112 = nextDepositToPayout[CLR_111]",
                "REF_47 = CLR_112",
                "TMP_144 = REF_47 == i",
                "CONDITION TMP_144 0x139_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x139_r0",
            "instructions": [
                "JUMP 0x13a"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x13a",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "trap",
            "addr": "0xd3",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}