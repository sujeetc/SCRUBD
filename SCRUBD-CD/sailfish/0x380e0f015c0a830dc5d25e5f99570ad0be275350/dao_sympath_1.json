{
    "file_name": "dao_symex_path_1.json",
    "from_function": "createButton",
    "to_function": "announceWinner",
    "bug_type": "dao",
    "src_node": "\"BlockID: 124\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 135\nCall context: \nNone\nnewButton := TMP_62\nREF_22 -> buttons[newButton]\nREF_22 := true\nEmit NewButton(newButton.msg.sender._countdown._countdownDecrement._cooloffIncrement._pressFee._signupFee)\""
    ],
    "executable_instructions": 42,
    "state_variable": "buttons",
    "error": "",
    "result": "SAT",
    "execution_details": "# using file \/ethereum-security\/empirical-study\/data\/extracted_solc_codes\/crowdsource_contracts\/sailfish\/0x380e0f015c0a830dc5d25e5f99570ad0be275350\/dao_symex_path_1.json\n# attack type: range\n# solver type: z3\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0xf@__GLOBAL__\n    > adding global block: 0x1a@__GLOBAL__\n    > adding global block: 0x1b@__GLOBAL__\n    > adding global block: 0x1c@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: factory\n    > initializing global variable: factory\n    > declaring global variable: countdown\n    > initializing global variable: countdown\n    > declaring global variable: countdownDecrement\n    > initializing global variable: countdownDecrement\n    > declaring global variable: cooloffIncrement\n    > initializing global variable: cooloffIncrement\n    > declaring global variable: pressFee\n    > initializing global variable: pressFee\n    > declaring global variable: signupFee\n    > initializing global variable: signupFee\n    > declaring global variable: lastPresser\n    > initializing global variable: lastPresser\n    > declaring global variable: endBlock\n    > initializing global variable: endBlock\n    > declaring global variable: pressers\n    > initializing global variable: pressers\n    > declaring global variable: rake\n    > initializing global variable: rake\n    > declaring global variable: creationFee\n    > initializing global variable: creationFee\n    > declaring global variable: buttons\n    > initializing global variable: buttons\n    > declaring global variable: owner\n    > initializing global variable: owner\n\n    > declaring global variable: Button\n    > initializing global variable: Button\n    > declaring global variable: ButtonFactory\n    > initializing global variable: ButtonFactory\n# building ranges\n  > start adding range variables\n    > adding: creationFee -> (0x2@__RANGE__ 0xd@__RANGE__)\n    > adding: buttons -> (0x2@__RANGE__ 0xe@__RANGE__)\n  > range entry addresses: (0x2@__RANGE__ 0xd@__RANGE__ 0xe@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0xd@__RANGE__\n    > adding range block: 0xc@__RANGE__\n    > adding range block: 0xe@__RANGE__\n# building normal scopes\n  > root addr: 0x1d\n  > dest addrs: (0x23)\n  > loading normal blocks\n    > adding normal block: 0x1d\n    > adding normal block: 0x1e\n    > adding normal block: 0x1e_r0\n    > adding normal block: 0x1f\n    > adding normal block: 0x20\n    > adding normal block: 0x21\n    > adding normal block: 0x21_r0\n    > adding normal block: 0x22\n    > adding normal block: 0x23\n    > adding normal block: 0x24\n    > adding normal block: 0xRequireTrap\n# start interpretation of normal blocks...\n\n# asserts size: 8\n# using solver: #<z3>\n# result: #t\n"
}