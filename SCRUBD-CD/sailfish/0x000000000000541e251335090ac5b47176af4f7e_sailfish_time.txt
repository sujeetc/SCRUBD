[INFO] | 2024-11-10 07:37:23 AM | analyzer.0x000000000000541e251335090ac5b47176af4f7e | Analysis started at: 2024-11-10 07:37:23 AM
[INFO] | 2024-11-10 07:37:38 AM | analyzer.0x000000000000541e251335090ac5b47176af4f7e | Version constraints: ['0.5.11']
[INFO] | 2024-11-10 07:37:38 AM | analyzer.0x000000000000541e251335090ac5b47176af4f7e | solc version: v0.5.11
Traceback (most recent call last):
  File "contractlint.py", line 71, in analyze_contracts
    slither_obj = Slither(contract_path, solc=solc_path)
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/slither.py", line 85, in __init__
    self._analyze_contracts()
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/solc_parsing/slitherSolc.py", line 252, in _analyze_contracts
    self._analyze_third_part(contracts_to_be_analyzed, libraries)
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/solc_parsing/slitherSolc.py", line 331, in _analyze_third_part
    self._analyze_variables_modifiers_functions(contract)
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/solc_parsing/slitherSolc.py", line 371, in _analyze_variables_modifiers_functions
    contract.analyze_content_functions()
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/solc_parsing/declarations/contract.py", line 285, in analyze_content_functions
    function.analyze_content()
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/solc_parsing/declarations/function.py", line 223, in analyze_content
    if self._filter_ternary():
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/solc_parsing/declarations/function.py", line 1013, in _filter_ternary
    st = SplitTernaryExpression(node.expression)
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/utils/expression_manipulations.py", line 44, in __init__
    self.copy_expression(expression, self.true_expression, self.false_expression)
  File "/usr/local/lib/python3.6/dist-packages/slither_analyzer-0.6.8-py3.6.egg/slither/utils/expression_manipulations.py", line 116, in copy_expression
    raise SlitherException('Ternary operation not handled {}({})'.format(expression, type(expression)))
slither.exceptions.SlitherException: Ternary operation not handled ! matchOrderWithReserve(orderFromInput(orderInput),reserves[if tradeInput.packedInput3[16] == bytes1(0x01) then uint256((tradeInput.packedInput3 & 0x0000000000000000000000000000000000ffff00000000000000000000000000) >> 104) else uint256((tradeInput.packedInput3 & 0x00000000000000000000000000000000000000ffff0000000000000000000000) >> 88)],reserveTradeFromInput(tradeInput))(<class 'slither.core.expressions.unary_operation.UnaryOperation'>)

real	0m20.724s
user	0m21.150s
sys	0m2.280s
