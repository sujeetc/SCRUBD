'solc --version' running
'solc ./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:
Warning: Contract code size is 25147 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on Mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> 0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:341:1:
    |
341 | contract AIDOGEX is Context, IERC20, Ownable {
    | ^ (Relevant source part starts here and spans across multiple lines).



Reentrancy in AIDOGEX._transfer(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#694-752):
	External calls:
	- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(contractTokenBalance,0,path,address(this),block.timestamp) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#722-727)
	- buybackAndBurn(buybackBNB) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#738)
		- uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: buybackBNB}(0,path,address(0xdead),block.timestamp + 300) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#759-764)
	- address(marketingWallet).sendValue(marketingAmount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#743)
	External calls sending eth:
	- buybackAndBurn(buybackBNB) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#738)
		- uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: buybackBNB}(0,path,address(0xdead),block.timestamp + 300) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#759-764)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#751)
		- _rOwned[address(this)] = _rOwned[address(this)] + rBuybackBurn (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#625)
		- _rOwned[address(this)] = _rOwned[address(this)] + rMarketing (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#635)
		- _rOwned[sender] = _rOwned[sender] - rAmount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#819)
		- _rOwned[sender] = _rOwned[sender] - rAmount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#809)
		- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#810)
		- _rOwned[sender] = _rOwned[sender] - rAmount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#842)
		- _rOwned[sender] = _rOwned[sender] - rAmount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#831)
		- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#832)
		- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#821)
		- _rOwned[recipient] = _rOwned[recipient] + rTransferAmount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#844)
	AIDOGEX._rOwned (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#345) can be used in cross function reentrancies:
	- AIDOGEX._getCurrentSupply() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#609-619)
	- AIDOGEX._takeLiquidity(uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#621-629)
	- AIDOGEX._takeMarketing(uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#631-639)
	- AIDOGEX._transferBothExcluded(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#839-849)
	- AIDOGEX._transferFromExcluded(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#828-837)
	- AIDOGEX._transferStandard(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#807-815)
	- AIDOGEX._transferToExcluded(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#817-826)
	- AIDOGEX.balanceOf(address) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#472-475)
	- AIDOGEX.constructor() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#402-454)
	- AIDOGEX.deliver(uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#515-522)
	- AIDOGEX.excludeFromReward(address) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#541-548)
	- _tokenTransfer(from,to,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#751)
		- _rTotal = _rTotal - rFee (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#577)
	AIDOGEX._rTotal (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#359) can be used in cross function reentrancies:
	- AIDOGEX._getCurrentSupply() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#609-619)
	- AIDOGEX._reflectFee(uint256,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#576-579)
	- AIDOGEX.constructor() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#402-454)
	- AIDOGEX.deliver(uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#515-522)
	- AIDOGEX.tokenFromReflection(uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#535-539)
	- _tokenTransfer(from,to,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#751)
		- _tOwned[address(this)] = _tOwned[address(this)] + tBuybackBurn (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#627)
		- _tOwned[address(this)] = _tOwned[address(this)] + tMarketing (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#637)
		- _tOwned[sender] = _tOwned[sender] - tAmount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#841)
		- _tOwned[sender] = _tOwned[sender] - tAmount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#830)
		- _tOwned[recipient] = _tOwned[recipient] + tTransferAmount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#820)
		- _tOwned[recipient] = _tOwned[recipient] + tTransferAmount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#843)
	AIDOGEX._tOwned (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#346) can be used in cross function reentrancies:
	- AIDOGEX._getCurrentSupply() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#609-619)
	- AIDOGEX._takeLiquidity(uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#621-629)
	- AIDOGEX._takeMarketing(uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#631-639)
	- AIDOGEX._transferBothExcluded(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#839-849)
	- AIDOGEX._transferFromExcluded(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#828-837)
	- AIDOGEX._transferToExcluded(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#817-826)
	- AIDOGEX.balanceOf(address) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#472-475)
	- AIDOGEX.constructor() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#402-454)
	- AIDOGEX.excludeFromReward(address) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#541-548)
	- AIDOGEX.includeInReward(address) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#550-561)
	- inSwapAndLiquify = false (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#747)
	AIDOGEX.inSwapAndLiquify (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#387) can be used in cross function reentrancies:
	- AIDOGEX._transfer(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#694-752)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

AIDOGEX.claimStuckTokens(address) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#565-574) ignores return value by ERC20token.transfer(msg.sender,balance) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#573)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

AIDOGEX.constructor().router (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#404) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

AIDOGEX.claimStuckTokens(address) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#565-574) ignores return value by address(msg.sender).sendValue(address(this).balance) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#568)
AIDOGEX._transfer(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#694-752) ignores return value by address(marketingWallet).sendValue(marketingAmount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#743)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

AIDOGEX.allowance(address,address).owner (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#482) shadows:
	- Ownable.owner() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#43-45) (function)
AIDOGEX._approve(address,address,uint256).owner (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#681) shadows:
	- Ownable.owner() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#43-45) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

Reentrancy in AIDOGEX._transfer(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#694-752):
	External calls:
	- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(contractTokenBalance,0,path,address(this),block.timestamp) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#722-727)
	- buybackAndBurn(buybackBNB) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#738)
		- uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: buybackBNB}(0,path,address(0xdead),block.timestamp + 300) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#759-764)
	- address(marketingWallet).sendValue(marketingAmount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#743)
	External calls sending eth:
	- buybackAndBurn(buybackBNB) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#738)
		- uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: buybackBNB}(0,path,address(0xdead),block.timestamp + 300) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#759-764)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#751)
		- _buybackBurnFee = 0 (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#658)
		- _buybackBurnFee = buybackBurnFeeOnSell (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#674)
		- _buybackBurnFee = buybackBurnFeeOnBuy (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#666)
	- _tokenTransfer(from,to,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#751)
		- _marketingFee = marketingFeeonSell (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#673)
		- _marketingFee = marketingFeeonBuy (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#665)
		- _marketingFee = 0 (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#657)
	- _tokenTransfer(from,to,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#751)
		- _tFeeTotal = _tFeeTotal + tFee (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#578)
	- _tokenTransfer(from,to,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#751)
		- _taxFee = 0 (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#656)
		- _taxFee = taxFeeonSell (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#672)
		- _taxFee = taxFeeonBuy (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#664)
Reentrancy in AIDOGEX.transferFrom(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#491-495):
	External calls:
	- _transfer(sender,recipient,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#492)
		- (success,None) = recipient.call{value: amount}() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#96)
		- uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: buybackBNB}(0,path,address(0xdead),block.timestamp + 300) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#759-764)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(contractTokenBalance,0,path,address(this),block.timestamp) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#722-727)
		- address(marketingWallet).sendValue(marketingAmount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#743)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#492)
		- (success,None) = recipient.call{value: amount}() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#96)
		- uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: buybackBNB}(0,path,address(0xdead),block.timestamp + 300) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#759-764)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#493)
		- _allowances[owner][spender] = amount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#685)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in AIDOGEX._transfer(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#694-752):
	External calls:
	- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(contractTokenBalance,0,path,address(this),block.timestamp) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#722-727)
	- buybackAndBurn(buybackBNB) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#738)
		- uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: buybackBNB}(0,path,address(0xdead),block.timestamp + 300) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#759-764)
	- address(marketingWallet).sendValue(marketingAmount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#743)
	External calls sending eth:
	- buybackAndBurn(buybackBNB) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#738)
		- uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: buybackBNB}(0,path,address(0xdead),block.timestamp + 300) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#759-764)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#814)
		- _tokenTransfer(from,to,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#751)
	- Transfer(sender,recipient,tTransferAmount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#836)
		- _tokenTransfer(from,to,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#751)
	- Transfer(sender,recipient,tTransferAmount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#825)
		- _tokenTransfer(from,to,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#751)
	- Transfer(sender,recipient,tTransferAmount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#848)
		- _tokenTransfer(from,to,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#751)
Reentrancy in AIDOGEX.transferFrom(address,address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#491-495):
	External calls:
	- _transfer(sender,recipient,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#492)
		- (success,None) = recipient.call{value: amount}() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#96)
		- uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: buybackBNB}(0,path,address(0xdead),block.timestamp + 300) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#759-764)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(contractTokenBalance,0,path,address(this),block.timestamp) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#722-727)
		- address(marketingWallet).sendValue(marketingAmount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#743)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#492)
		- (success,None) = recipient.call{value: amount}() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#96)
		- uniswapV2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: buybackBNB}(0,path,address(0xdead),block.timestamp + 300) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#759-764)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#686)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#493)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Address.isContract(address) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#81-90) uses assembly
	- INLINE ASM (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#88)
Address._functionCallWithValue(address,bytes,uint256,string) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#117-138) uses assembly
	- INLINE ASM (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#130-133)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

AIDOGEX.enableTrading() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#689-692) compares to a boolean constant:
	-require(bool,string)(tradingEnabled == false,Trading is already enabled) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#690)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality

AIDOGEX.includeInReward(address) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#550-561) has costly operations inside a loop:
	- _excluded.pop() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#557)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop

Context._msgData() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#26-29) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

AIDOGEX._tTotal (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#358) is set pre-construction with a non-constant function or state variable:
	- 420e12 * (10 ** _decimals)
AIDOGEX._rTotal (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#359) is set pre-construction with a non-constant function or state variable:
	- (MAX - (MAX % _tTotal))
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint 0.8.17 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess.
It is used by:
	- 0.8.17 (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#92-98):
	- (success,None) = recipient.call{value: amount}() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#96)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#117-138):
	- (success,returndata) = target.call{value: weiValue}(data) (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#121)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IUniswapV2Pair.DOMAIN_SEPARATOR() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#172) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#173) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#189) is not in mixedCase
Function IUniswapV2Router01.WETH() (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#208) is not in mixedCase
Parameter AIDOGEX.calculateTaxFee(uint256)._amount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#641) is not in mixedCase
Parameter AIDOGEX.calculateLiquidityFee(uint256)._amount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#645) is not in mixedCase
Parameter AIDOGEX.calculateMarketingFee(uint256)._amount (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#649) is not in mixedCase
Parameter AIDOGEX.setSwapEnabled(bool)._enabled (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#773) is not in mixedCase
Parameter AIDOGEX.changeMarketingWallet(address)._marketingWallet (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#858) is not in mixedCase
Parameter AIDOGEX.setBuyFeePercentages(uint256,uint256,uint256)._taxFeeonBuy (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#865) is not in mixedCase
Parameter AIDOGEX.setBuyFeePercentages(uint256,uint256,uint256)._buybackBurnFeeOnBuy (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#865) is not in mixedCase
Parameter AIDOGEX.setBuyFeePercentages(uint256,uint256,uint256)._marketingFeeonBuy (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#865) is not in mixedCase
Parameter AIDOGEX.setSellFeePercentages(uint256,uint256,uint256)._taxFeeonSell (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#874) is not in mixedCase
Parameter AIDOGEX.setSellFeePercentages(uint256,uint256,uint256)._buybackBurnFeeOnSell (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#874) is not in mixedCase
Parameter AIDOGEX.setSellFeePercentages(uint256,uint256,uint256)._marketingFeeonSell (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#874) is not in mixedCase
Variable AIDOGEX._taxFee (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#371) is not in mixedCase
Variable AIDOGEX._buybackBurnFee (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#372) is not in mixedCase
Variable AIDOGEX._marketingFee (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#373) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#27)" inContext (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#21-30)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

AIDOGEX.DEAD (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#382) is never used in AIDOGEX (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#341-889)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

Loop condition i < _excluded.length (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#612) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length

AIDOGEX._decimals (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#355) should be constant 
AIDOGEX._name (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#353) should be constant 
AIDOGEX._symbol (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#354) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

AIDOGEX._tTotal (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#358) should be immutable 
AIDOGEX.uniswapV2Pair (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#385) should be immutable 
AIDOGEX.uniswapV2Router (0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol#384) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol analyzed (9 contracts with 94 detectors), 48 result(s) found

real	0m4.105s
user	0m3.853s
sys	0m0.253s
