'solc --version' running
'solc ./0x125365069020439b830c9eac9dd402f8aa762569.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x125365069020439b830c9eac9dd402f8aa762569.sol:
./0x125365069020439b830c9eac9dd402f8aa762569.sol:113:86: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xe7C3101745b3DD71228006084dcCb619340f8390'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    RatInterfaceForForwarder constant private RatKingCorp = RatInterfaceForForwarder(0xe7c3101745b3dd71228006084dccb619340f8390);
                                                                                     ^----------------------------------------^
./0x125365069020439b830c9eac9dd402f8aa762569.sol:114:63: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0xF5C4a2C3a92A8450899D064074cEc29A9756c95D'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
	RatBookInterface constant private RatBook = RatBookInterface(0xf5c4a2c3a92a8450899d064074cec29a9756c95d);
	                                                             ^----------------------------------------^
./0x125365069020439b830c9eac9dd402f8aa762569.sol:1086:27: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
    function managePlayer(uint256 _pID, RSdatasets.EventReturns memory _eventData_)
                          ^----------^
./0x125365069020439b830c9eac9dd402f8aa762569.sol:1086:5: Warning: Function state mutability can be restricted to pure
    function managePlayer(uint256 _pID, RSdatasets.EventReturns memory _eventData_)
    ^ (Relevant source part starts here and spans across multiple lines).


Reentrancy in RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794):
	External calls:
	- _eventData_ = endRound(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#769)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	State variables written after the call(s):
	- plyr_[_pID].gen = plyr_[_pID].gen.add(msg.value) (0x125365069020439b830c9eac9dd402f8aa762569.sol#792)
	RatScam.plyr_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#135) can be used in cross function reentrancies:
	- RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794)
	- RatScam.buyXaddr(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#246-282)
	- RatScam.buyXid(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#216-244)
	- RatScam.buyXname(bytes32) (0x125365069020439b830c9eac9dd402f8aa762569.sol#284-320)
	- RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951)
	- RatScam.determinePID(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1049-1080)
	- RatScam.distributeExternal(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1218-1249)
	- RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148)
	- RatScam.endTx(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1342-1364)
	- RatScam.fallback() (0x125365069020439b830c9eac9dd402f8aa762569.sol#192-207)
	- RatScam.getCurrentRoundInfo() (0x125365069020439b830c9eac9dd402f8aa762569.sol#688-704)
	- RatScam.getPlayerInfoByAddress(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#719-740)
	- RatScam.getPlayerVaults(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#627-663)
	- RatScam.plyr_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#135)
	- RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841)
	- RatScam.reLoadXaddr(address,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#360-395)
	- RatScam.reLoadXid(uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#331-358)
	- RatScam.reLoadXname(bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#397-432)
	- RatScam.receivePlayerInfo(uint256,address,bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1016-1032)
	- RatScam.registerNameXID(string,uint256,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#526-540)
	- RatScam.registerNameXaddr(string,address,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#542-556)
	- RatScam.registerNameXname(string,bytes32,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#558-572)
	- RatScam.updateGenVault(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1153-1164)
	- RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500)
	- RatScam.withdrawEarnings(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1320-1337)
Reentrancy in RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951):
	External calls:
	- _eventData_ = distributeExternal(_pID,_eth,_affID,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#945)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1238)
	State variables written after the call(s):
	- _eventData_ = distributeInternal(_pID,_eth,_keys,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#946)
		- airDropPot_ = airDropPot_.add(_air) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1263)
	RatScam.airDropPot_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#128) can be used in cross function reentrancies:
	- RatScam.airDropPot_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#128)
	- RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951)
	- RatScam.distributeInternal(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1254-1282)
	- RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148)
	- RatScam.endTx(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1342-1364)
	- RatScam.getCurrentRoundInfo() (0x125365069020439b830c9eac9dd402f8aa762569.sol#688-704)
	- _eventData_ = distributeInternal(_pID,_eth,_keys,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#946)
		- plyrRnds_[_pID].mask = (((round_.mask.mul(_keys)) / (1000000000000000000)).sub(_pearn)).add(plyrRnds_[_pID].mask) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1310)
	RatScam.plyrRnds_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#136) can be used in cross function reentrancies:
	- RatScam.calcUnMaskedEarnings(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#960-966)
	- RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951)
	- RatScam.getPlayerInfoByAddress(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#719-740)
	- RatScam.getPlayerVaults(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#627-663)
	- RatScam.getPlayerVaultsHelper(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#668-674)
	- RatScam.plyrRnds_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#136)
	- RatScam.updateGenVault(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1153-1164)
	- RatScam.updateMasks(uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1288-1314)
	- _eventData_ = distributeInternal(_pID,_eth,_keys,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#946)
		- round_.mask = _ppt.add(round_.mask) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1305)
		- round_.pot = _pot.add(_dust).add(round_.pot) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1275)
	RatScam.round_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#141) can be used in cross function reentrancies:
	- RatScam.activate() (0x125365069020439b830c9eac9dd402f8aa762569.sol#1370-1388)
	- RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794)
	- RatScam.calcKeysReceived(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#974-987)
	- RatScam.calcUnMaskedEarnings(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#960-966)
	- RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951)
	- RatScam.distributeInternal(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1254-1282)
	- RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148)
	- RatScam.getBuyPrice() (0x125365069020439b830c9eac9dd402f8aa762569.sol#582-595)
	- RatScam.getCurrentRoundInfo() (0x125365069020439b830c9eac9dd402f8aa762569.sol#688-704)
	- RatScam.getPlayerVaults(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#627-663)
	- RatScam.getPlayerVaultsHelper(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#668-674)
	- RatScam.getTimeLeft() (0x125365069020439b830c9eac9dd402f8aa762569.sol#603-618)
	- RatScam.iWantXKeys(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#995-1008)
	- RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841)
	- RatScam.round_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#141)
	- RatScam.updateMasks(uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1288-1314)
	- RatScam.updateTimer(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1169-1187)
	- RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500)
Reentrancy in RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148):
	External calls:
	- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	State variables written after the call(s):
	- round_.mask = _ppt.add(round_.mask) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1136)
	RatScam.round_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#141) can be used in cross function reentrancies:
	- RatScam.activate() (0x125365069020439b830c9eac9dd402f8aa762569.sol#1370-1388)
	- RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794)
	- RatScam.calcKeysReceived(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#974-987)
	- RatScam.calcUnMaskedEarnings(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#960-966)
	- RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951)
	- RatScam.distributeInternal(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1254-1282)
	- RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148)
	- RatScam.getBuyPrice() (0x125365069020439b830c9eac9dd402f8aa762569.sol#582-595)
	- RatScam.getCurrentRoundInfo() (0x125365069020439b830c9eac9dd402f8aa762569.sol#688-704)
	- RatScam.getPlayerVaults(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#627-663)
	- RatScam.getPlayerVaultsHelper(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#668-674)
	- RatScam.getTimeLeft() (0x125365069020439b830c9eac9dd402f8aa762569.sol#603-618)
	- RatScam.iWantXKeys(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#995-1008)
	- RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841)
	- RatScam.round_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#141)
	- RatScam.updateMasks(uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1288-1314)
	- RatScam.updateTimer(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1169-1187)
	- RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500)
Reentrancy in RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500):
	External calls:
	- _eventData_ = endRound(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#460)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	State variables written after the call(s):
	- _eth = withdrawEarnings(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#463)
		- plyr_[_pID].gen = _earnings.add(plyr_[_pID].gen) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1160)
		- plyr_[_pID].win = 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#1331)
		- plyr_[_pID].gen = 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#1332)
		- plyr_[_pID].aff = 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#1333)
	RatScam.plyr_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#135) can be used in cross function reentrancies:
	- RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794)
	- RatScam.buyXaddr(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#246-282)
	- RatScam.buyXid(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#216-244)
	- RatScam.buyXname(bytes32) (0x125365069020439b830c9eac9dd402f8aa762569.sol#284-320)
	- RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951)
	- RatScam.determinePID(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1049-1080)
	- RatScam.distributeExternal(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1218-1249)
	- RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148)
	- RatScam.endTx(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1342-1364)
	- RatScam.fallback() (0x125365069020439b830c9eac9dd402f8aa762569.sol#192-207)
	- RatScam.getCurrentRoundInfo() (0x125365069020439b830c9eac9dd402f8aa762569.sol#688-704)
	- RatScam.getPlayerInfoByAddress(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#719-740)
	- RatScam.getPlayerVaults(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#627-663)
	- RatScam.plyr_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#135)
	- RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841)
	- RatScam.reLoadXaddr(address,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#360-395)
	- RatScam.reLoadXid(uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#331-358)
	- RatScam.reLoadXname(bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#397-432)
	- RatScam.receivePlayerInfo(uint256,address,bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1016-1032)
	- RatScam.registerNameXID(string,uint256,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#526-540)
	- RatScam.registerNameXaddr(string,address,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#542-556)
	- RatScam.registerNameXname(string,bytes32,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#558-572)
	- RatScam.updateGenVault(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1153-1164)
	- RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500)
	- RatScam.withdrawEarnings(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1320-1337)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

NameFilter.nameFilter(string) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1537-1599) is declared view but contains assembly code
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#constant-functions-using-assembly-code

RatScam.getPlayerVaultsHelper(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#668-674) performs a multiplication on the result of a division:
	- (((((round_.mask).add(((((round_.pot).mul(potSplit_)) / 100).mul(1000000000000000000)) / (round_.keys))).mul(plyrRnds_[_pID].keys)) / 1000000000000000000)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#673)
RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148) performs a multiplication on the result of a division:
	- _gen = (_pot.mul(potSplit_)) / 100 (0x125365069020439b830c9eac9dd402f8aa762569.sol#1114)
	- _ppt = (_gen.mul(1000000000000000000)) / (round_.keys) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1117)
RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148) performs a multiplication on the result of a division:
	- _ppt = (_gen.mul(1000000000000000000)) / (round_.keys) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1117)
	- _dust = _gen.sub((_ppt.mul(round_.keys)) / 1000000000000000000) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1118)
RatScam.updateTimer(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1169-1187) performs a multiplication on the result of a division:
	- _newTime = (((_keys) / (1000000000000000000)).mul(rndInc_)).add(round_.end) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1180)
RatScam.updateTimer(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1169-1187) performs a multiplication on the result of a division:
	- _newTime = (((_keys) / (1000000000000000000)).mul(rndInc_)).add(_now) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1178)
RatScam.airdrop() (0x125365069020439b830c9eac9dd402f8aa762569.sol#1194-1213) performs a multiplication on the result of a division:
	- (seed - ((seed / 1000) * 1000)) < airDropTracker_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#1209)
RatScam.updateMasks(uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1288-1314) performs a multiplication on the result of a division:
	- _ppt = (_gen.mul(1000000000000000000)) / (round_.keys) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1304)
	- _pearn = (_ppt.mul(_keys)) / (1000000000000000000) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1309)
RatScam.updateMasks(uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1288-1314) performs a multiplication on the result of a division:
	- _ppt = (_gen.mul(1000000000000000000)) / (round_.keys) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1304)
	- (_gen.sub((_ppt.mul(round_.keys)) / (1000000000000000000))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1313)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794) uses a dangerous strict equality:
	- _now > round_.strt + rndGap_ && (_now <= round_.end || (_now > round_.end && round_.plyr == 0)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#757)
RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794) uses a dangerous strict equality:
	- _now > round_.end && round_.ended == false (0x125365069020439b830c9eac9dd402f8aa762569.sol#765)
RatScam.calcKeysReceived(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#974-987) uses a dangerous strict equality:
	- _now > round_.strt + rndGap_ && (_now <= round_.end || (_now > round_.end && round_.plyr == 0)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#983)
RatScam.getBuyPrice() (0x125365069020439b830c9eac9dd402f8aa762569.sol#582-595) uses a dangerous strict equality:
	- _now > round_.strt + rndGap_ && (_now <= round_.end || (_now > round_.end && round_.plyr == 0)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#591)
RatScam.getPlayerVaults(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#627-663) uses a dangerous strict equality:
	- now > round_.end && round_.ended == false && round_.plyr != 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#633)
RatScam.getPlayerVaults(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#627-663) uses a dangerous strict equality:
	- round_.plyr == _pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#636)
RatScam.iWantXKeys(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#995-1008) uses a dangerous strict equality:
	- _now > round_.strt + rndGap_ && (_now <= round_.end || (_now > round_.end && round_.plyr == 0)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1004)
RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841) uses a dangerous strict equality:
	- _now > round_.strt + rndGap_ && (_now <= round_.end || (_now > round_.end && round_.plyr == 0)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#807)
RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841) uses a dangerous strict equality:
	- _now > round_.end && round_.ended == false (0x125365069020439b830c9eac9dd402f8aa762569.sol#818)
RatScam.updateTimer(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1169-1187) uses a dangerous strict equality:
	- _now > round_.end && round_.plyr == 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#1177)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Reentrancy in RatScam.buyXaddr(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#246-282):
	External calls:
	- _eventData_ = determinePID(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#254)
		- _pID = RatBook.getPlayerID(msg.sender) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1058)
		- _name = RatBook.getPlayerName(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1059)
		- _laff = RatBook.getPlayerLAff(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1060)
	State variables written after the call(s):
	- plyr_[_pID].laff = _affID (0x125365069020439b830c9eac9dd402f8aa762569.sol#276)
	RatScam.plyr_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#135) can be used in cross function reentrancies:
	- RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794)
	- RatScam.buyXaddr(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#246-282)
	- RatScam.buyXid(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#216-244)
	- RatScam.buyXname(bytes32) (0x125365069020439b830c9eac9dd402f8aa762569.sol#284-320)
	- RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951)
	- RatScam.determinePID(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1049-1080)
	- RatScam.distributeExternal(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1218-1249)
	- RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148)
	- RatScam.endTx(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1342-1364)
	- RatScam.fallback() (0x125365069020439b830c9eac9dd402f8aa762569.sol#192-207)
	- RatScam.getCurrentRoundInfo() (0x125365069020439b830c9eac9dd402f8aa762569.sol#688-704)
	- RatScam.getPlayerInfoByAddress(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#719-740)
	- RatScam.getPlayerVaults(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#627-663)
	- RatScam.plyr_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#135)
	- RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841)
	- RatScam.reLoadXaddr(address,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#360-395)
	- RatScam.reLoadXid(uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#331-358)
	- RatScam.reLoadXname(bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#397-432)
	- RatScam.receivePlayerInfo(uint256,address,bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1016-1032)
	- RatScam.registerNameXID(string,uint256,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#526-540)
	- RatScam.registerNameXaddr(string,address,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#542-556)
	- RatScam.registerNameXname(string,bytes32,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#558-572)
	- RatScam.updateGenVault(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1153-1164)
	- RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500)
	- RatScam.withdrawEarnings(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1320-1337)
Reentrancy in RatScam.buyXid(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#216-244):
	External calls:
	- _eventData_ = determinePID(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#224)
		- _pID = RatBook.getPlayerID(msg.sender) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1058)
		- _name = RatBook.getPlayerName(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1059)
		- _laff = RatBook.getPlayerLAff(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1060)
	State variables written after the call(s):
	- plyr_[_pID].laff = _affCode (0x125365069020439b830c9eac9dd402f8aa762569.sol#239)
	RatScam.plyr_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#135) can be used in cross function reentrancies:
	- RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794)
	- RatScam.buyXaddr(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#246-282)
	- RatScam.buyXid(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#216-244)
	- RatScam.buyXname(bytes32) (0x125365069020439b830c9eac9dd402f8aa762569.sol#284-320)
	- RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951)
	- RatScam.determinePID(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1049-1080)
	- RatScam.distributeExternal(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1218-1249)
	- RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148)
	- RatScam.endTx(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1342-1364)
	- RatScam.fallback() (0x125365069020439b830c9eac9dd402f8aa762569.sol#192-207)
	- RatScam.getCurrentRoundInfo() (0x125365069020439b830c9eac9dd402f8aa762569.sol#688-704)
	- RatScam.getPlayerInfoByAddress(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#719-740)
	- RatScam.getPlayerVaults(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#627-663)
	- RatScam.plyr_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#135)
	- RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841)
	- RatScam.reLoadXaddr(address,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#360-395)
	- RatScam.reLoadXid(uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#331-358)
	- RatScam.reLoadXname(bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#397-432)
	- RatScam.receivePlayerInfo(uint256,address,bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1016-1032)
	- RatScam.registerNameXID(string,uint256,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#526-540)
	- RatScam.registerNameXaddr(string,address,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#542-556)
	- RatScam.registerNameXname(string,bytes32,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#558-572)
	- RatScam.updateGenVault(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1153-1164)
	- RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500)
	- RatScam.withdrawEarnings(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1320-1337)
Reentrancy in RatScam.buyXname(bytes32) (0x125365069020439b830c9eac9dd402f8aa762569.sol#284-320):
	External calls:
	- _eventData_ = determinePID(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#292)
		- _pID = RatBook.getPlayerID(msg.sender) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1058)
		- _name = RatBook.getPlayerName(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1059)
		- _laff = RatBook.getPlayerLAff(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1060)
	State variables written after the call(s):
	- plyr_[_pID].laff = _affID (0x125365069020439b830c9eac9dd402f8aa762569.sol#314)
	RatScam.plyr_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#135) can be used in cross function reentrancies:
	- RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794)
	- RatScam.buyXaddr(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#246-282)
	- RatScam.buyXid(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#216-244)
	- RatScam.buyXname(bytes32) (0x125365069020439b830c9eac9dd402f8aa762569.sol#284-320)
	- RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951)
	- RatScam.determinePID(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1049-1080)
	- RatScam.distributeExternal(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1218-1249)
	- RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148)
	- RatScam.endTx(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1342-1364)
	- RatScam.fallback() (0x125365069020439b830c9eac9dd402f8aa762569.sol#192-207)
	- RatScam.getCurrentRoundInfo() (0x125365069020439b830c9eac9dd402f8aa762569.sol#688-704)
	- RatScam.getPlayerInfoByAddress(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#719-740)
	- RatScam.getPlayerVaults(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#627-663)
	- RatScam.plyr_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#135)
	- RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841)
	- RatScam.reLoadXaddr(address,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#360-395)
	- RatScam.reLoadXid(uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#331-358)
	- RatScam.reLoadXname(bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#397-432)
	- RatScam.receivePlayerInfo(uint256,address,bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1016-1032)
	- RatScam.registerNameXID(string,uint256,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#526-540)
	- RatScam.registerNameXaddr(string,address,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#542-556)
	- RatScam.registerNameXname(string,bytes32,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#558-572)
	- RatScam.updateGenVault(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1153-1164)
	- RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500)
	- RatScam.withdrawEarnings(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1320-1337)
Reentrancy in RatScam.determinePID(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1049-1080):
	External calls:
	- _pID = RatBook.getPlayerID(msg.sender) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1058)
	- _name = RatBook.getPlayerName(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1059)
	- _laff = RatBook.getPlayerLAff(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1060)
	State variables written after the call(s):
	- pIDxAddr_[msg.sender] = _pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#1063)
	RatScam.pIDxAddr_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#133) can be used in cross function reentrancies:
	- RatScam.buyXaddr(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#246-282)
	- RatScam.buyXid(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#216-244)
	- RatScam.buyXname(bytes32) (0x125365069020439b830c9eac9dd402f8aa762569.sol#284-320)
	- RatScam.determinePID(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1049-1080)
	- RatScam.fallback() (0x125365069020439b830c9eac9dd402f8aa762569.sol#192-207)
	- RatScam.getPlayerInfoByAddress(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#719-740)
	- RatScam.pIDxAddr_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#133)
	- RatScam.reLoadXaddr(address,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#360-395)
	- RatScam.reLoadXid(uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#331-358)
	- RatScam.reLoadXname(bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#397-432)
	- RatScam.receivePlayerInfo(uint256,address,bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1016-1032)
	- RatScam.registerNameXID(string,uint256,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#526-540)
	- RatScam.registerNameXaddr(string,address,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#542-556)
	- RatScam.registerNameXname(string,bytes32,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#558-572)
	- RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

RatScam.reLoadXname(bytes32,uint256)._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#404) is a local variable never initialized
RatScam.reLoadXid(uint256,uint256)._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#338) is a local variable never initialized
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns)._prize (0x125365069020439b830c9eac9dd402f8aa762569.sol#890) is a local variable never initialized
RatScam.withdraw()._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#456) is a local variable never initialized
RatScam.reLoadXaddr(address,uint256)._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#367) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

Reentrancy in RatScam.determinePID(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1049-1080):
	External calls:
	- _pID = RatBook.getPlayerID(msg.sender) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1058)
	- _name = RatBook.getPlayerName(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1059)
	- _laff = RatBook.getPlayerLAff(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1060)
	State variables written after the call(s):
	- pIDxName_[_name] = _pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#1068)
	- plyrNames_[_pID][_name] = true (0x125365069020439b830c9eac9dd402f8aa762569.sol#1070)
	- plyr_[_pID].addr = msg.sender (0x125365069020439b830c9eac9dd402f8aa762569.sol#1064)
	- plyr_[_pID].name = _name (0x125365069020439b830c9eac9dd402f8aa762569.sol#1069)
	- plyr_[_pID].laff = _laff (0x125365069020439b830c9eac9dd402f8aa762569.sol#1074)
Reentrancy in RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500):
	External calls:
	- _eventData_ = endRound(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#460)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	State variables written after the call(s):
	- _eth = withdrawEarnings(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#463)
		- plyrRnds_[_pID].mask = _earnings.add(plyrRnds_[_pID].mask) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1162)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794):
	External calls:
	- _eventData_ = endRound(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#769)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	Event emitted after the call(s):
	- RSEvents.onBuyAndDistribute(msg.sender,plyr_[_pID].name,msg.value,_eventData_.compressedData,_eventData_.compressedIDs,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount) (0x125365069020439b830c9eac9dd402f8aa762569.sol#776-788)
Reentrancy in RatScam.buyXaddr(address) (0x125365069020439b830c9eac9dd402f8aa762569.sol#246-282):
	External calls:
	- _eventData_ = determinePID(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#254)
		- _pID = RatBook.getPlayerID(msg.sender) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1058)
		- _name = RatBook.getPlayerName(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1059)
		- _laff = RatBook.getPlayerLAff(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1060)
	- buyCore(_pID,_affID,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#281)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1238)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	External calls sending eth:
	- buyCore(_pID,_affID,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#281)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1238)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	Event emitted after the call(s):
	- RSEvents.onAffiliatePayout(_affID,plyr_[_affID].addr,plyr_[_affID].name,_pID,_aff,now) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1232)
		- buyCore(_pID,_affID,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#281)
	- RSEvents.onBuyAndDistribute(msg.sender,plyr_[_pID].name,msg.value,_eventData_.compressedData,_eventData_.compressedIDs,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount) (0x125365069020439b830c9eac9dd402f8aa762569.sol#776-788)
		- buyCore(_pID,_affID,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#281)
	- RSEvents.onEndTx(_eventData_.compressedData,_eventData_.compressedIDs,plyr_[_pID].name,msg.sender,_eth,_keys,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount,_eventData_.potAmount,airDropPot_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1348-1363)
		- buyCore(_pID,_affID,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#281)
Reentrancy in RatScam.buyXid(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#216-244):
	External calls:
	- _eventData_ = determinePID(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#224)
		- _pID = RatBook.getPlayerID(msg.sender) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1058)
		- _name = RatBook.getPlayerName(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1059)
		- _laff = RatBook.getPlayerLAff(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1060)
	- buyCore(_pID,_affCode,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#243)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1238)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	External calls sending eth:
	- buyCore(_pID,_affCode,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#243)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1238)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	Event emitted after the call(s):
	- RSEvents.onAffiliatePayout(_affID,plyr_[_affID].addr,plyr_[_affID].name,_pID,_aff,now) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1232)
		- buyCore(_pID,_affCode,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#243)
	- RSEvents.onBuyAndDistribute(msg.sender,plyr_[_pID].name,msg.value,_eventData_.compressedData,_eventData_.compressedIDs,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount) (0x125365069020439b830c9eac9dd402f8aa762569.sol#776-788)
		- buyCore(_pID,_affCode,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#243)
	- RSEvents.onEndTx(_eventData_.compressedData,_eventData_.compressedIDs,plyr_[_pID].name,msg.sender,_eth,_keys,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount,_eventData_.potAmount,airDropPot_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1348-1363)
		- buyCore(_pID,_affCode,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#243)
Reentrancy in RatScam.buyXname(bytes32) (0x125365069020439b830c9eac9dd402f8aa762569.sol#284-320):
	External calls:
	- _eventData_ = determinePID(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#292)
		- _pID = RatBook.getPlayerID(msg.sender) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1058)
		- _name = RatBook.getPlayerName(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1059)
		- _laff = RatBook.getPlayerLAff(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1060)
	- buyCore(_pID,_affID,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#319)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1238)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	External calls sending eth:
	- buyCore(_pID,_affID,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#319)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1238)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	Event emitted after the call(s):
	- RSEvents.onAffiliatePayout(_affID,plyr_[_affID].addr,plyr_[_affID].name,_pID,_aff,now) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1232)
		- buyCore(_pID,_affID,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#319)
	- RSEvents.onBuyAndDistribute(msg.sender,plyr_[_pID].name,msg.value,_eventData_.compressedData,_eventData_.compressedIDs,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount) (0x125365069020439b830c9eac9dd402f8aa762569.sol#776-788)
		- buyCore(_pID,_affID,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#319)
	- RSEvents.onEndTx(_eventData_.compressedData,_eventData_.compressedIDs,plyr_[_pID].name,msg.sender,_eth,_keys,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount,_eventData_.potAmount,airDropPot_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1348-1363)
		- buyCore(_pID,_affID,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#319)
Reentrancy in RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951):
	External calls:
	- _eventData_ = distributeExternal(_pID,_eth,_affID,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#945)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1238)
	Event emitted after the call(s):
	- RSEvents.onEndTx(_eventData_.compressedData,_eventData_.compressedIDs,plyr_[_pID].name,msg.sender,_eth,_keys,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount,_eventData_.potAmount,airDropPot_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1348-1363)
		- endTx(_pID,_eth,_keys,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#949)
Reentrancy in RatScam.fallback() (0x125365069020439b830c9eac9dd402f8aa762569.sol#192-207):
	External calls:
	- _eventData_ = determinePID(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#200)
		- _pID = RatBook.getPlayerID(msg.sender) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1058)
		- _name = RatBook.getPlayerName(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1059)
		- _laff = RatBook.getPlayerLAff(_pID) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1060)
	- buyCore(_pID,plyr_[_pID].laff,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#206)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1238)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	External calls sending eth:
	- buyCore(_pID,plyr_[_pID].laff,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#206)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1238)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	Event emitted after the call(s):
	- RSEvents.onAffiliatePayout(_affID,plyr_[_affID].addr,plyr_[_affID].name,_pID,_aff,now) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1232)
		- buyCore(_pID,plyr_[_pID].laff,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#206)
	- RSEvents.onBuyAndDistribute(msg.sender,plyr_[_pID].name,msg.value,_eventData_.compressedData,_eventData_.compressedIDs,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount) (0x125365069020439b830c9eac9dd402f8aa762569.sol#776-788)
		- buyCore(_pID,plyr_[_pID].laff,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#206)
	- RSEvents.onEndTx(_eventData_.compressedData,_eventData_.compressedIDs,plyr_[_pID].name,msg.sender,_eth,_keys,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount,_eventData_.potAmount,airDropPot_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1348-1363)
		- buyCore(_pID,plyr_[_pID].laff,_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#206)
Reentrancy in RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841):
	External calls:
	- _eventData_ = endRound(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#821)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	Event emitted after the call(s):
	- RSEvents.onReLoadAndDistribute(msg.sender,plyr_[_pID].name,_eventData_.compressedData,_eventData_.compressedIDs,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount) (0x125365069020439b830c9eac9dd402f8aa762569.sol#828-839)
Reentrancy in RatScam.registerNameXID(string,uint256,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#526-540):
	External calls:
	- (_isNewPlayer,_affID) = RatBook.registerNameXIDFromDapp.value(_paid)(_addr,_name,_affCode,_all) (0x125365069020439b830c9eac9dd402f8aa762569.sol#534)
	Event emitted after the call(s):
	- RSEvents.onNewName(_pID,_addr,_name,_isNewPlayer,_affID,plyr_[_affID].addr,plyr_[_affID].name,_paid,now) (0x125365069020439b830c9eac9dd402f8aa762569.sol#539)
Reentrancy in RatScam.registerNameXaddr(string,address,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#542-556):
	External calls:
	- (_isNewPlayer,_affID) = RatBook.registerNameXaddrFromDapp.value(msg.value)(msg.sender,_name,_affCode,_all) (0x125365069020439b830c9eac9dd402f8aa762569.sol#550)
	Event emitted after the call(s):
	- RSEvents.onNewName(_pID,_addr,_name,_isNewPlayer,_affID,plyr_[_affID].addr,plyr_[_affID].name,_paid,now) (0x125365069020439b830c9eac9dd402f8aa762569.sol#555)
Reentrancy in RatScam.registerNameXname(string,bytes32,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#558-572):
	External calls:
	- (_isNewPlayer,_affID) = RatBook.registerNameXnameFromDapp.value(msg.value)(msg.sender,_name,_affCode,_all) (0x125365069020439b830c9eac9dd402f8aa762569.sol#566)
	Event emitted after the call(s):
	- RSEvents.onNewName(_pID,_addr,_name,_isNewPlayer,_affID,plyr_[_affID].addr,plyr_[_affID].name,_paid,now) (0x125365069020439b830c9eac9dd402f8aa762569.sol#571)
Reentrancy in RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500):
	External calls:
	- _eventData_ = endRound(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#460)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	External calls sending eth:
	- _eventData_ = endRound(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#460)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	- plyr_[_pID].addr.transfer(_eth) (0x125365069020439b830c9eac9dd402f8aa762569.sol#467)
	Event emitted after the call(s):
	- RSEvents.onWithdrawAndDistribute(msg.sender,plyr_[_pID].name,_eth,_eventData_.compressedData,_eventData_.compressedIDs,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount) (0x125365069020439b830c9eac9dd402f8aa762569.sol#474-486)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500) uses timestamp for comparisons
	Dangerous comparisons:
	- _now > round_.end && round_.ended == false && round_.plyr != 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#453)
RatScam.getBuyPrice() (0x125365069020439b830c9eac9dd402f8aa762569.sol#582-595) uses timestamp for comparisons
	Dangerous comparisons:
	- _now > round_.strt + rndGap_ && (_now <= round_.end || (_now > round_.end && round_.plyr == 0)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#591)
RatScam.getTimeLeft() (0x125365069020439b830c9eac9dd402f8aa762569.sol#603-618) uses timestamp for comparisons
	Dangerous comparisons:
	- _now < round_.end (0x125365069020439b830c9eac9dd402f8aa762569.sol#611)
	- _now > round_.strt + rndGap_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#612)
RatScam.getPlayerVaults(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#627-663) uses timestamp for comparisons
	Dangerous comparisons:
	- now > round_.end && round_.ended == false && round_.plyr != 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#633)
	- round_.plyr == _pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#636)
RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794) uses timestamp for comparisons
	Dangerous comparisons:
	- _now > round_.strt + rndGap_ && (_now <= round_.end || (_now > round_.end && round_.plyr == 0)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#757)
	- _now > round_.end && round_.ended == false (0x125365069020439b830c9eac9dd402f8aa762569.sol#765)
RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841) uses timestamp for comparisons
	Dangerous comparisons:
	- _now > round_.strt + rndGap_ && (_now <= round_.end || (_now > round_.end && round_.plyr == 0)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#807)
	- _now > round_.end && round_.ended == false (0x125365069020439b830c9eac9dd402f8aa762569.sol#818)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses timestamp for comparisons
	Dangerous comparisons:
	- round_.plyr != _pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#876)
RatScam.calcKeysReceived(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#974-987) uses timestamp for comparisons
	Dangerous comparisons:
	- _now > round_.strt + rndGap_ && (_now <= round_.end || (_now > round_.end && round_.plyr == 0)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#983)
RatScam.iWantXKeys(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#995-1008) uses timestamp for comparisons
	Dangerous comparisons:
	- _now > round_.strt + rndGap_ && (_now <= round_.end || (_now > round_.end && round_.plyr == 0)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1004)
RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148) uses timestamp for comparisons
	Dangerous comparisons:
	- _dust > 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#1119)
RatScam.updateGenVault(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1153-1164) uses timestamp for comparisons
	Dangerous comparisons:
	- _earnings > 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#1157)
RatScam.updateTimer(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1169-1187) uses timestamp for comparisons
	Dangerous comparisons:
	- _now > round_.end && round_.plyr == 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#1177)
	- _newTime < (rndMax_).add(_now) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1183)
RatScam.airdrop() (0x125365069020439b830c9eac9dd402f8aa762569.sol#1194-1213) uses timestamp for comparisons
	Dangerous comparisons:
	- (seed - ((seed / 1000) * 1000)) < airDropTracker_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#1209)
RatScam.distributeInternal(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1254-1282) uses timestamp for comparisons
	Dangerous comparisons:
	- _dust > 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#1271)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

NameFilter.nameFilter(string) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1537-1599) uses assembly
	- INLINE ASM (0x125365069020439b830c9eac9dd402f8aa762569.sol#1595-1598)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500) compares to a boolean constant:
	-_now > round_.end && round_.ended == false && round_.plyr != 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#453)
RatScam.getPlayerVaults(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#627-663) compares to a boolean constant:
	-now > round_.end && round_.ended == false && round_.plyr != 0 (0x125365069020439b830c9eac9dd402f8aa762569.sol#633)
RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794) compares to a boolean constant:
	-_now > round_.end && round_.ended == false (0x125365069020439b830c9eac9dd402f8aa762569.sol#765)
RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841) compares to a boolean constant:
	-_now > round_.end && round_.ended == false (0x125365069020439b830c9eac9dd402f8aa762569.sol#818)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) compares to a boolean constant:
	-airdrop() == true (0x125365069020439b830c9eac9dd402f8aa762569.sol#887)
RatScam.receivePlayerInfo(uint256,address,bytes32,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1016-1032) compares to a boolean constant:
	-plyrNames_[_pID][_name] == false (0x125365069020439b830c9eac9dd402f8aa762569.sol#1030)
RatScam.receivePlayerNameList(uint256,bytes32) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1037-1043) compares to a boolean constant:
	-plyrNames_[_pID][_name] == false (0x125365069020439b830c9eac9dd402f8aa762569.sol#1041)
RatScam.activate() (0x125365069020439b830c9eac9dd402f8aa762569.sol#1370-1388) compares to a boolean constant:
	-require(bool,string)(activated_ == false,ratscam already activated) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1381)
RatScam.isActivated() (0x125365069020439b830c9eac9dd402f8aa762569.sol#163-166) compares to a boolean constant:
	-require(bool,string)(activated_ == true,its not ready yet) (0x125365069020439b830c9eac9dd402f8aa762569.sol#164)
NameFilter.nameFilter(string) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1537-1599) compares to a boolean constant:
	-_hasNonNumber == false (0x125365069020439b830c9eac9dd402f8aa762569.sol#1569)
NameFilter.nameFilter(string) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1537-1599) compares to a boolean constant:
	-_hasNonNumber == false && (_temp[i] < 0x30 || _temp[i] > 0x39) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1587)
NameFilter.nameFilter(string) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1537-1599) compares to a boolean constant:
	-require(bool,string)(_hasNonNumber == true,string cannot be only numbers) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1592)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality

Version constraint ^0.4.24 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData.
It is used by:
	- ^0.4.24 (0x125365069020439b830c9eac9dd402f8aa762569.sol#1)
solc-0.4.24 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148):
	- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
Low level call in RatScam.distributeExternal(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1218-1249):
	- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1238)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Event RSEvents.onNewName(uint256,address,bytes32,bool,uint256,address,bytes32,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#6-17) is not in CapWords
Event RSEvents.onEndTx(uint256,uint256,bytes32,address,uint256,uint256,address,bytes32,uint256,uint256,uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#20-35) is not in CapWords
Event RSEvents.onWithdraw(uint256,address,bytes32,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#38-45) is not in CapWords
Event RSEvents.onWithdrawAndDistribute(address,bytes32,uint256,uint256,uint256,address,bytes32,uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#48-60) is not in CapWords
Event RSEvents.onBuyAndDistribute(address,bytes32,uint256,uint256,uint256,address,bytes32,uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#64-76) is not in CapWords
Event RSEvents.onReLoadAndDistribute(address,bytes32,uint256,uint256,address,bytes32,uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#80-91) is not in CapWords
Event RSEvents.onAffiliatePayout(uint256,address,bytes32,uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#94-102) is not in CapWords
Contract modularRatScam (0x125365069020439b830c9eac9dd402f8aa762569.sol#105) is not in CapWords
Parameter RatScam.buyXid(uint256)._affCode (0x125365069020439b830c9eac9dd402f8aa762569.sol#216) is not in mixedCase
Parameter RatScam.buyXaddr(address)._affCode (0x125365069020439b830c9eac9dd402f8aa762569.sol#246) is not in mixedCase
Parameter RatScam.buyXname(bytes32)._affCode (0x125365069020439b830c9eac9dd402f8aa762569.sol#284) is not in mixedCase
Parameter RatScam.reLoadXid(uint256,uint256)._affCode (0x125365069020439b830c9eac9dd402f8aa762569.sol#331) is not in mixedCase
Parameter RatScam.reLoadXid(uint256,uint256)._eth (0x125365069020439b830c9eac9dd402f8aa762569.sol#331) is not in mixedCase
Parameter RatScam.reLoadXaddr(address,uint256)._affCode (0x125365069020439b830c9eac9dd402f8aa762569.sol#360) is not in mixedCase
Parameter RatScam.reLoadXaddr(address,uint256)._eth (0x125365069020439b830c9eac9dd402f8aa762569.sol#360) is not in mixedCase
Parameter RatScam.reLoadXname(bytes32,uint256)._affCode (0x125365069020439b830c9eac9dd402f8aa762569.sol#397) is not in mixedCase
Parameter RatScam.reLoadXname(bytes32,uint256)._eth (0x125365069020439b830c9eac9dd402f8aa762569.sol#397) is not in mixedCase
Parameter RatScam.registerNameXID(string,uint256,bool)._nameString (0x125365069020439b830c9eac9dd402f8aa762569.sol#526) is not in mixedCase
Parameter RatScam.registerNameXID(string,uint256,bool)._affCode (0x125365069020439b830c9eac9dd402f8aa762569.sol#526) is not in mixedCase
Parameter RatScam.registerNameXID(string,uint256,bool)._all (0x125365069020439b830c9eac9dd402f8aa762569.sol#526) is not in mixedCase
Parameter RatScam.registerNameXaddr(string,address,bool)._nameString (0x125365069020439b830c9eac9dd402f8aa762569.sol#542) is not in mixedCase
Parameter RatScam.registerNameXaddr(string,address,bool)._affCode (0x125365069020439b830c9eac9dd402f8aa762569.sol#542) is not in mixedCase
Parameter RatScam.registerNameXaddr(string,address,bool)._all (0x125365069020439b830c9eac9dd402f8aa762569.sol#542) is not in mixedCase
Parameter RatScam.registerNameXname(string,bytes32,bool)._nameString (0x125365069020439b830c9eac9dd402f8aa762569.sol#558) is not in mixedCase
Parameter RatScam.registerNameXname(string,bytes32,bool)._affCode (0x125365069020439b830c9eac9dd402f8aa762569.sol#558) is not in mixedCase
Parameter RatScam.registerNameXname(string,bytes32,bool)._all (0x125365069020439b830c9eac9dd402f8aa762569.sol#558) is not in mixedCase
Parameter RatScam.getPlayerVaults(uint256)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#627) is not in mixedCase
Parameter RatScam.getPlayerVaultsHelper(uint256)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#668) is not in mixedCase
Parameter RatScam.getPlayerInfoByAddress(address)._addr (0x125365069020439b830c9eac9dd402f8aa762569.sol#719) is not in mixedCase
Parameter RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#750) is not in mixedCase
Parameter RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns)._affID (0x125365069020439b830c9eac9dd402f8aa762569.sol#750) is not in mixedCase
Parameter RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns)._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#750) is not in mixedCase
Parameter RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#800) is not in mixedCase
Parameter RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns)._affID (0x125365069020439b830c9eac9dd402f8aa762569.sol#800) is not in mixedCase
Parameter RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns)._eth (0x125365069020439b830c9eac9dd402f8aa762569.sol#800) is not in mixedCase
Parameter RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns)._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#800) is not in mixedCase
Parameter RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#847) is not in mixedCase
Parameter RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns)._eth (0x125365069020439b830c9eac9dd402f8aa762569.sol#847) is not in mixedCase
Parameter RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns)._affID (0x125365069020439b830c9eac9dd402f8aa762569.sol#847) is not in mixedCase
Parameter RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns)._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#847) is not in mixedCase
Parameter RatScam.calcUnMaskedEarnings(uint256)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#960) is not in mixedCase
Parameter RatScam.calcKeysReceived(uint256)._eth (0x125365069020439b830c9eac9dd402f8aa762569.sol#974) is not in mixedCase
Parameter RatScam.iWantXKeys(uint256)._keys (0x125365069020439b830c9eac9dd402f8aa762569.sol#995) is not in mixedCase
Parameter RatScam.receivePlayerInfo(uint256,address,bytes32,uint256)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#1016) is not in mixedCase
Parameter RatScam.receivePlayerInfo(uint256,address,bytes32,uint256)._addr (0x125365069020439b830c9eac9dd402f8aa762569.sol#1016) is not in mixedCase
Parameter RatScam.receivePlayerInfo(uint256,address,bytes32,uint256)._name (0x125365069020439b830c9eac9dd402f8aa762569.sol#1016) is not in mixedCase
Parameter RatScam.receivePlayerInfo(uint256,address,bytes32,uint256)._laff (0x125365069020439b830c9eac9dd402f8aa762569.sol#1016) is not in mixedCase
Parameter RatScam.receivePlayerNameList(uint256,bytes32)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#1037) is not in mixedCase
Parameter RatScam.receivePlayerNameList(uint256,bytes32)._name (0x125365069020439b830c9eac9dd402f8aa762569.sol#1037) is not in mixedCase
Parameter RatScam.determinePID(RSdatasets.EventReturns)._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#1049) is not in mixedCase
Parameter RatScam.managePlayer(uint256,RSdatasets.EventReturns)._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#1086) is not in mixedCase
Parameter RatScam.endRound(RSdatasets.EventReturns)._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099) is not in mixedCase
Parameter RatScam.updateGenVault(uint256)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#1153) is not in mixedCase
Parameter RatScam.updateTimer(uint256)._keys (0x125365069020439b830c9eac9dd402f8aa762569.sol#1169) is not in mixedCase
Parameter RatScam.distributeExternal(uint256,uint256,uint256,RSdatasets.EventReturns)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#1218) is not in mixedCase
Parameter RatScam.distributeExternal(uint256,uint256,uint256,RSdatasets.EventReturns)._eth (0x125365069020439b830c9eac9dd402f8aa762569.sol#1218) is not in mixedCase
Parameter RatScam.distributeExternal(uint256,uint256,uint256,RSdatasets.EventReturns)._affID (0x125365069020439b830c9eac9dd402f8aa762569.sol#1218) is not in mixedCase
Parameter RatScam.distributeExternal(uint256,uint256,uint256,RSdatasets.EventReturns)._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#1218) is not in mixedCase
Parameter RatScam.distributeInternal(uint256,uint256,uint256,RSdatasets.EventReturns)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#1254) is not in mixedCase
Parameter RatScam.distributeInternal(uint256,uint256,uint256,RSdatasets.EventReturns)._eth (0x125365069020439b830c9eac9dd402f8aa762569.sol#1254) is not in mixedCase
Parameter RatScam.distributeInternal(uint256,uint256,uint256,RSdatasets.EventReturns)._keys (0x125365069020439b830c9eac9dd402f8aa762569.sol#1254) is not in mixedCase
Parameter RatScam.distributeInternal(uint256,uint256,uint256,RSdatasets.EventReturns)._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#1254) is not in mixedCase
Parameter RatScam.updateMasks(uint256,uint256,uint256)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#1288) is not in mixedCase
Parameter RatScam.updateMasks(uint256,uint256,uint256)._gen (0x125365069020439b830c9eac9dd402f8aa762569.sol#1288) is not in mixedCase
Parameter RatScam.updateMasks(uint256,uint256,uint256)._keys (0x125365069020439b830c9eac9dd402f8aa762569.sol#1288) is not in mixedCase
Parameter RatScam.withdrawEarnings(uint256)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#1320) is not in mixedCase
Parameter RatScam.endTx(uint256,uint256,uint256,RSdatasets.EventReturns)._pID (0x125365069020439b830c9eac9dd402f8aa762569.sol#1342) is not in mixedCase
Parameter RatScam.endTx(uint256,uint256,uint256,RSdatasets.EventReturns)._eth (0x125365069020439b830c9eac9dd402f8aa762569.sol#1342) is not in mixedCase
Parameter RatScam.endTx(uint256,uint256,uint256,RSdatasets.EventReturns)._keys (0x125365069020439b830c9eac9dd402f8aa762569.sol#1342) is not in mixedCase
Parameter RatScam.endTx(uint256,uint256,uint256,RSdatasets.EventReturns)._eventData_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#1342) is not in mixedCase
Constant RatScam.RatKingCorp (0x125365069020439b830c9eac9dd402f8aa762569.sol#113) is not in UPPER_CASE_WITH_UNDERSCORES
Constant RatScam.RatBook (0x125365069020439b830c9eac9dd402f8aa762569.sol#114) is not in UPPER_CASE_WITH_UNDERSCORES
Constant RatScam.rndInit_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#121) is not in UPPER_CASE_WITH_UNDERSCORES
Constant RatScam.rndInc_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#122) is not in UPPER_CASE_WITH_UNDERSCORES
Constant RatScam.rndMax_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#123) is not in UPPER_CASE_WITH_UNDERSCORES
Parameter RSKeysCalc.keysRec(uint256,uint256)._curEth (0x125365069020439b830c9eac9dd402f8aa762569.sol#1462) is not in mixedCase
Parameter RSKeysCalc.keysRec(uint256,uint256)._newEth (0x125365069020439b830c9eac9dd402f8aa762569.sol#1462) is not in mixedCase
Parameter RSKeysCalc.ethRec(uint256,uint256)._curKeys (0x125365069020439b830c9eac9dd402f8aa762569.sol#1476) is not in mixedCase
Parameter RSKeysCalc.ethRec(uint256,uint256)._sellKeys (0x125365069020439b830c9eac9dd402f8aa762569.sol#1476) is not in mixedCase
Parameter RSKeysCalc.keys(uint256)._eth (0x125365069020439b830c9eac9dd402f8aa762569.sol#1489) is not in mixedCase
Parameter RSKeysCalc.eth(uint256)._keys (0x125365069020439b830c9eac9dd402f8aa762569.sol#1502) is not in mixedCase
Parameter NameFilter.nameFilter(string)._input (0x125365069020439b830c9eac9dd402f8aa762569.sol#1537) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500):
	External calls:
	- plyr_[_pID].addr.transfer(_eth) (0x125365069020439b830c9eac9dd402f8aa762569.sol#467)
	External calls sending eth:
	- _eventData_ = endRound(_eventData_) (0x125365069020439b830c9eac9dd402f8aa762569.sol#460)
		- ! address(RatKingCorp).call.value(_com)(bytes4(keccak256()(deposit()))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1129)
	- plyr_[_pID].addr.transfer(_eth) (0x125365069020439b830c9eac9dd402f8aa762569.sol#467)
	Event emitted after the call(s):
	- RSEvents.onWithdrawAndDistribute(msg.sender,plyr_[_pID].name,_eth,_eventData_.compressedData,_eventData_.compressedIDs,_eventData_.winnerAddr,_eventData_.winnerName,_eventData_.amountWon,_eventData_.newPot,_eventData_.genAmount) (0x125365069020439b830c9eac9dd402f8aa762569.sol#474-486)
Reentrancy in RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500):
	External calls:
	- plyr_[_pID].addr.transfer(_eth) (0x125365069020439b830c9eac9dd402f8aa762569.sol#495)
	Event emitted after the call(s):
	- RSEvents.onWithdraw(_pID,msg.sender,plyr_[_pID].name,_eth,_now) (0x125365069020439b830c9eac9dd402f8aa762569.sol#498)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

RatScam.withdraw() (0x125365069020439b830c9eac9dd402f8aa762569.sol#438-500) uses literals with too many digits:
	- _eventData_.compressedData = _eventData_.compressedData + (_now * 1000000000000000000) (0x125365069020439b830c9eac9dd402f8aa762569.sol#470)
RatScam.getBuyPrice() (0x125365069020439b830c9eac9dd402f8aa762569.sol#582-595) uses literals with too many digits:
	- ((round_.keys.add(1000000000000000000)).ethRec(1000000000000000000)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#592)
RatScam.getBuyPrice() (0x125365069020439b830c9eac9dd402f8aa762569.sol#582-595) uses literals with too many digits:
	- (75000000000000) (0x125365069020439b830c9eac9dd402f8aa762569.sol#594)
RatScam.getPlayerVaultsHelper(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#668-674) uses literals with too many digits:
	- (((((round_.mask).add(((((round_.pot).mul(potSplit_)) / 100).mul(1000000000000000000)) / (round_.keys))).mul(plyrRnds_[_pID].keys)) / 1000000000000000000)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#673)
RatScam.buyCore(uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#750-794) uses literals with too many digits:
	- _eventData_.compressedData = _eventData_.compressedData + (_now * 1000000000000000000) (0x125365069020439b830c9eac9dd402f8aa762569.sol#772)
RatScam.reLoadCore(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#800-841) uses literals with too many digits:
	- _eventData_.compressedData = _eventData_.compressedData + (_now * 1000000000000000000) (0x125365069020439b830c9eac9dd402f8aa762569.sol#824)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- round_.eth < 100000000000000000000 && plyrRnds_[_pID].eth.add(_eth) > 10000000000000000000 (0x125365069020439b830c9eac9dd402f8aa762569.sol#855)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- _availableLimit = (10000000000000000000).sub(plyrRnds_[_pID].eth) (0x125365069020439b830c9eac9dd402f8aa762569.sol#857)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- _eth > 1000000000 (0x125365069020439b830c9eac9dd402f8aa762569.sol#864)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- _keys >= 1000000000000000000 (0x125365069020439b830c9eac9dd402f8aa762569.sol#871)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- _eth >= 100000000000000000 (0x125365069020439b830c9eac9dd402f8aa762569.sol#884)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- _eth >= 10000000000000000000 (0x125365069020439b830c9eac9dd402f8aa762569.sol#891)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- _eventData_.compressedData += 300000000000000000000000000000000 (0x125365069020439b830c9eac9dd402f8aa762569.sol#901)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- _eth >= 1000000000000000000 && _eth < 10000000000000000000 (0x125365069020439b830c9eac9dd402f8aa762569.sol#902)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- _eventData_.compressedData += 200000000000000000000000000000000 (0x125365069020439b830c9eac9dd402f8aa762569.sol#911)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- _eth >= 100000000000000000 && _eth < 1000000000000000000 (0x125365069020439b830c9eac9dd402f8aa762569.sol#912)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- _eventData_.compressedData += 100000000000000000000000000000000 (0x125365069020439b830c9eac9dd402f8aa762569.sol#921)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- _eventData_.compressedData += 10000000000000000000000000000000 (0x125365069020439b830c9eac9dd402f8aa762569.sol#924)
RatScam.core(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#847-951) uses literals with too many digits:
	- _eventData_.compressedData += _prize * 1000000000000000000000000000000000 (0x125365069020439b830c9eac9dd402f8aa762569.sol#926)
RatScam.calcUnMaskedEarnings(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#960-966) uses literals with too many digits:
	- ((((round_.mask).mul(plyrRnds_[_pID].keys)) / (1000000000000000000)).sub(plyrRnds_[_pID].mask)) (0x125365069020439b830c9eac9dd402f8aa762569.sol#965)
RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148) uses literals with too many digits:
	- _ppt = (_gen.mul(1000000000000000000)) / (round_.keys) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1117)
RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148) uses literals with too many digits:
	- _dust = _gen.sub((_ppt.mul(round_.keys)) / 1000000000000000000) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1118)
RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148) uses literals with too many digits:
	- _eventData_.compressedData = _eventData_.compressedData + (round_.end * 1000000) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1139)
RatScam.endRound(RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1099-1148) uses literals with too many digits:
	- _eventData_.compressedIDs = _eventData_.compressedIDs + (_winPID * 100000000000000000000000000) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1140)
RatScam.updateTimer(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1169-1187) uses literals with too many digits:
	- _newTime = (((_keys) / (1000000000000000000)).mul(rndInc_)).add(_now) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1178)
RatScam.updateTimer(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1169-1187) uses literals with too many digits:
	- _newTime = (((_keys) / (1000000000000000000)).mul(rndInc_)).add(round_.end) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1180)
RatScam.updateMasks(uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1288-1314) uses literals with too many digits:
	- _ppt = (_gen.mul(1000000000000000000)) / (round_.keys) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1304)
RatScam.updateMasks(uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1288-1314) uses literals with too many digits:
	- _pearn = (_ppt.mul(_keys)) / (1000000000000000000) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1309)
RatScam.updateMasks(uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1288-1314) uses literals with too many digits:
	- plyrRnds_[_pID].mask = (((round_.mask.mul(_keys)) / (1000000000000000000)).sub(_pearn)).add(plyrRnds_[_pID].mask) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1310)
RatScam.updateMasks(uint256,uint256,uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1288-1314) uses literals with too many digits:
	- (_gen.sub((_ppt.mul(round_.keys)) / (1000000000000000000))) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1313)
RatScam.endTx(uint256,uint256,uint256,RSdatasets.EventReturns) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1342-1364) uses literals with too many digits:
	- _eventData_.compressedData = _eventData_.compressedData + (now * 1000000000000000000) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1345)
RSKeysCalc.keys(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1489-1495) uses literals with too many digits:
	- ((((((_eth).mul(1000000000000000000)).mul(312500000000000000000000000)).add(5624988281256103515625000000000000000000000000000000000000000000)).sqrt()).sub(74999921875000000000000000000000)) / (156250000) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1494)
RSKeysCalc.eth(uint256) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1502-1508) uses literals with too many digits:
	- ((78125000).mul(_keys.sq()).add(((149999843750000).mul(_keys.mul(1000000000000000000))) / (2))) / ((1000000000000000000).sq()) (0x125365069020439b830c9eac9dd402f8aa762569.sol#1507)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

RatScam.fees_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#145) should be constant 
RatScam.potSplit_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#146) should be constant 
RatScam.rndGap_ (0x125365069020439b830c9eac9dd402f8aa762569.sol#118) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

registerNameXID(string,uint256,bool) should be declared external:
	- RatScam.registerNameXID(string,uint256,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#526-540)
registerNameXaddr(string,address,bool) should be declared external:
	- RatScam.registerNameXaddr(string,address,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#542-556)
registerNameXname(string,bytes32,bool) should be declared external:
	- RatScam.registerNameXname(string,bytes32,bool) (0x125365069020439b830c9eac9dd402f8aa762569.sol#558-572)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
./0x125365069020439b830c9eac9dd402f8aa762569.sol analyzed (9 contracts with 94 detectors), 199 result(s) found

real	0m10.458s
user	0m10.135s
sys	0m0.322s
