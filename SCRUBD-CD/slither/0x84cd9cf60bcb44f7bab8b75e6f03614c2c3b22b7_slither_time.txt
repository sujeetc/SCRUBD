'solc --version' running
'solc ./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:118:17: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                dep.depositor.send(dep.expect); //Send money to him
                ^----------------------------^
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:125:17: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
                dep.depositor.send(money); //Send to him everything we have
                ^-----------------------^
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:165:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        LAST_FUND.send(lastFund);
        ^----------------------^
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:168:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        TECH.send(support);
        ^----------------^
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:170:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        PROMO.send(adv);
        ^-------------^
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol:203:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        maxDepositInfo.depositor.send(jackpotAmount);
        ^------------------------------------------^


ESmart (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#29-289) contract sets array length with a user-controlled value:
	- queue.push(dep) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#214)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

ESmart.getStageStartTime(int256) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#272-282) uses a dangerous strict equality:
	- lastDepositInfo.time == 0 (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#277)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

ESmart.pay() (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#105-135) ignores return value by dep.depositor.send(dep.expect) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#118)
ESmart.pay() (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#105-135) ignores return value by dep.depositor.send(money) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#125)
ESmart.addDeposit(address,uint256) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#137-172) ignores return value by LAST_FUND.send(lastFund) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#165)
ESmart.addDeposit(address,uint256) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#137-172) ignores return value by TECH.send(support) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#168)
ESmart.addDeposit(address,uint256) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#137-172) ignores return value by PROMO.send(adv) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#170)
ESmart.withdrawPrize() (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#195-206) ignores return value by maxDepositInfo.depositor.send(jackpotAmount) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#203)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

ESmart.fallback() (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#80-100) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(getStartTime() <= now,Deposits are not accepted before time) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#91)
ESmart.proceedToNewStage(int256) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#184-193) uses timestamp for comparisons
	Dangerous comparisons:
	- assert(bool)(startTime > 0) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#188)
ESmart.getCurrentStageByTime() (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#265-270) uses timestamp for comparisons
	Dangerous comparisons:
	- lastDepositInfo.time > 0 && lastDepositInfo.time + MAX_IDLE_TIME <= now (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#266)
ESmart.getStageStartTime(int256) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#272-282) uses timestamp for comparisons
	Dangerous comparisons:
	- lastDepositInfo.time == 0 (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#277)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Version constraint ^0.4.25 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x.
It is used by:
	- ^0.4.25 (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#1)
solc-0.4.25 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter ESmart.proceedToNewStage(int256)._stage (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#184) is not in mixedCase
Parameter ESmart.getStageStartTime(int256)._stage (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#272) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in ESmart.addDeposit(address,uint256) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#137-172):
	External calls:
	- depositor.transfer(value - INVESTMENT) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#142)
	State variables written after the call(s):
	- push(depositor,value,value * MULTIPLIER / 100) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#150)
		- currentQueueSize ++ (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#218)
	- depCount[depositor] ++ (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#152)
	- jackpotAmount += value * (JACKPOT_PERCENT) / 100 (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#162)
	- lastDepositInfo.index = uint128(currentQueueSize) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#146)
	- lastDepositInfo.time = uint128(now) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#147)
	- maxDepositInfo.count = count (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#157)
	- maxDepositInfo.depositor = depositor (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#158)
	- push(depositor,value,value * MULTIPLIER / 100) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#150)
		- queue.push(dep) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#214)
		- queue[currentQueueSize] = dep (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#216)
Reentrancy in ESmart.fallback() (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#80-100):
	External calls:
	- addDeposit(msg.sender,msg.value) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#93)
		- depositor.transfer(value - INVESTMENT) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#142)
		- LAST_FUND.send(lastFund) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#165)
		- TECH.send(support) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#168)
		- PROMO.send(adv) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#170)
	- pay() (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#96)
		- dep.depositor.send(dep.expect) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#118)
		- dep.depositor.send(money) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#125)
	State variables written after the call(s):
	- pay() (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#96)
		- currentReceiverIndex = i (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#134)
	- pay() (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#96)
		- delete queue[i] (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#122)
		- dep.expect -= money (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#126)
Reentrancy in ESmart.pay() (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#105-135):
	External calls:
	- dep.depositor.send(dep.expect) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#118)
	State variables written after the call(s):
	- delete queue[i] (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#122)
Reentrancy in ESmart.pay() (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#105-135):
	External calls:
	- dep.depositor.send(dep.expect) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#118)
	- dep.depositor.send(money) (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#125)
	State variables written after the call(s):
	- currentReceiverIndex = i (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#134)
	- dep.expect -= money (0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol#126)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
./0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7.sol analyzed (1 contracts with 94 detectors), 20 result(s) found

real	0m1.887s
user	0m1.648s
sys	0m0.242s
