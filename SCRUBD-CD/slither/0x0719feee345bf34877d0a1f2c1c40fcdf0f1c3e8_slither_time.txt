'solc --version' running
'solc ./0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> ./0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol:431:1:
    |
431 | contract charge is IERC20, protected, smart {
    | ^ (Relevant source part starts here and spans across multiple lines).



Reentrancy in charge.ControlSellAllTokens() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1229-1233):
	External calls:
	- _swapContractToken(192919291929192919291929192919291929) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1231)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
		- _UniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#946-952)
	External calls sending eth:
	- _swapContractToken(192919291929192919291929192919291929) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1231)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
	State variables written after the call(s):
	- sellAll = false (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1232)
	charge.sellAll (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#477) can be used in cross function reentrancies:
	- charge.ControlSellAllTokens() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1229-1233)
	- charge._swapContractToken(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#887-939)
Reentrancy in charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698):
	External calls:
	- _swapContractToken(amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#662)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
		- _UniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#946-952)
	External calls sending eth:
	- _swapContractToken(amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#662)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
	State variables written after the call(s):
	- _removeToken(sender,amount,slot) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#691)
		- _balances[addr] = newAmount (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#776)
		- _balances[addr] = newAmount (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#782)
	charge._balances (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#433) can be used in cross function reentrancies:
	- charge.ControlExcludeFromDistributing(address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1103-1113)
	- charge.ControlIncludeToDistributing(address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1116-1125)
	- charge._addToken(address,uint256,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#747-766)
	- charge._feelessTransfer(address,address,uint256,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#700-714)
	- charge._newDividentsOf(address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#789-799)
	- charge._removeToken(address,uint256,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#768-787)
	- charge._swapContractToken(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#887-939)
	- charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698)
	- charge.balanceOf(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1399-1401)
	- charge.claimFarmedToken(address,address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#840-877)
	- charge.constructor() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#498-543)
	- charge.get_paid(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#592-595)
	- _balances[address(this)] += contractToken (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#693)
	charge._balances (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#433) can be used in cross function reentrancies:
	- charge.ControlExcludeFromDistributing(address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1103-1113)
	- charge.ControlIncludeToDistributing(address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1116-1125)
	- charge._addToken(address,uint256,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#747-766)
	- charge._feelessTransfer(address,address,uint256,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#700-714)
	- charge._newDividentsOf(address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#789-799)
	- charge._removeToken(address,uint256,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#768-787)
	- charge._swapContractToken(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#887-939)
	- charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698)
	- charge.balanceOf(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1399-1401)
	- charge.claimFarmedToken(address,address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#840-877)
	- charge.constructor() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#498-543)
	- charge.get_paid(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#592-595)
	- _addToken(recipient,taxedAmount,slot) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#695)
		- _balances[addr] = newAmount (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#755)
		- _balances[addr] = newAmount (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#765)
	charge._balances (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#433) can be used in cross function reentrancies:
	- charge.ControlExcludeFromDistributing(address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1103-1113)
	- charge.ControlIncludeToDistributing(address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1116-1125)
	- charge._addToken(address,uint256,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#747-766)
	- charge._feelessTransfer(address,address,uint256,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#700-714)
	- charge._newDividentsOf(address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#789-799)
	- charge._removeToken(address,uint256,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#768-787)
	- charge._swapContractToken(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#887-939)
	- charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698)
	- charge.balanceOf(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1399-1401)
	- charge.claimFarmedToken(address,address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#840-877)
	- charge.constructor() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#498-543)
	- charge.get_paid(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#592-595)
Reentrancy in charge.claimFarmedToken(address,address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#840-877):
	External calls:
	- _UniswapRouter.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#871-873)
	State variables written after the call(s):
	- _isWithdrawing = false (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#876)
	charge._isWithdrawing (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#724) can be used in cross function reentrancies:
	- charge.claimFarmedToken(address,address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#840-877)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

charge.rescueTokens(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1330-1335) ignores return value by token.transfer(msg.sender,ourBalance) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1334)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

charge.isMarketMakerTaxFree (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#439) is never initialized. It is used in:
	- charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698)
charge.isMarketingTaxFree (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#440) is never initialized. It is used in:
	- charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698)
charge.is_slot (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#468) is never initialized. It is used in:
	- charge._transfer(address,address,uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#545-587)
	- charge.get_paid(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#592-595)
	- charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698)
charge.portionLimit (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#474) is never initialized. It is used in:
	- charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables

charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698) performs a multiplication on the result of a division:
	- portionControl = (availableSupply / 100) * portionLimit (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#625)
charge._distributeStake(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#801-835) performs a multiplication on the result of a division:
	- amount_two = (ETHamount * _stakeTax_two) / 100 (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#805)
	- profitPerShare[1] += ((amount_two * DistributionMultiplier) / totalShares_scope_0) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#829-830)
charge._distributeStake(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#801-835) performs a multiplication on the result of a division:
	- amount_one = (ETHamount * _stakeTax_one) / 100 (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#804)
	- profitPerShare[0] += ((amount_one * DistributionMultiplier) / totalShares) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#816-817)
charge._swapContractToken(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#887-939) performs a multiplication on the result of a division:
	- tokenToSwap = (sellLimit * 10) / 100 (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#894)
	- tokenForLiquidity = (tokenToSwap * _liquidityTax) / totalTax (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#915)
charge._swapContractToken(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#887-939) performs a multiplication on the result of a division:
	- tokenToSwap = (sellLimit * 10) / 100 (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#894)
	- tokenForMarketing = (tokenToSwap * _marketingTax) / totalTax (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#916)
charge._swapContractToken(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#887-939) performs a multiplication on the result of a division:
	- tokenToSwap = (sellLimit * 10) / 100 (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#894)
	- tokenForMarketMaker = (tokenToSwap * _marketMakerTax) / totalTax (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#917)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

charge.claimFarmedToken(address,address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#840-877) uses a dangerous strict equality:
	- amount == 0 (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#863)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

charge._addLiquidity(uint256,uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#955-966) ignores return value by _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

charge.ControlSetSwapTreshold(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1098-1100) should emit an event for: 
	- swapTreshold = treshold * 10 ** _decimals (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1099) 
charge.ControlSwapSetManualLiqSellTokens(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1157-1160) should emit an event for: 
	- manualQtyTokenToSwap = amount * 10 ** _decimals (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1159) 
charge.ControlSetSellLockTime(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1173-1176) should emit an event for: 
	- sellLockTime = sellLockSeconds (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1175) 
charge.ControlSetTaxes(uint8,uint8,uint8,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1180-1195) should emit an event for: 
	- _buyTax = buyTax (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1191) 
	- _sellTax = sellTax (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1192) 
	- _portionTax = portionTax (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1193) 
	- _transferTax = transferTax (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1194) 
charge.ControlSetShares(uint8,uint8,uint8,uint8,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1197-1221) should emit an event for: 
	- _marketingTax = marketingTaxes (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1216) 
	- _marketMakerTax = marketMakerTaxes (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1217) 
	- _liquidityTax = liquidityTaxes (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1218) 
	- _stakeTax_one = stakeTaxes_one (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1219) 
	- _stakeTax_two = stakeTaxes_two (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1220) 
charge.ControlUpdateLimits(uint256,uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1264-1283) should emit an event for: 
	- balanceLimit = newBalanceLimit (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1281) 
	- sellLimit = newSellLimit (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1282) 
charge.ToggleImpactTreshold(uint8,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1362-1365) should emit an event for: 
	- impactTreshold = inty (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1363) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

charge.setMarketingWallet(address).addy (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1289) lacks a zero-check on :
		- marketingWallet = addy (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1290)
charge.setMarketMakingWallet(address).addy (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1293) lacks a zero-check on :
		- marketMakerWallet = addy (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1294)
charge.setSlotOneWallet(address).addy (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1297) lacks a zero-check on :
		- rewardWallet_one = addy (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1298)
charge.setSlotTwoWallet(address).addy (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1301) lacks a zero-check on :
		- rewardWallet_two = addy (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1302)
charge.SetupLiquidityTokenAddress(address).liquidityTokenAddress (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1312) lacks a zero-check on :
		- _liquidityTokenAddress = liquidityTokenAddress (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1316)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

charge.airdropAddresses(address[],address,uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1052-1065) has external calls inside a loop: sent = airtoken.transfer(addys[i],single_drop) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1061)
charge.airdropAddressesNative(address[]) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1068-1081) has external calls inside a loop: sent = address(addys[i]).send(single_drop) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1077)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Reentrancy in charge._swapContractToken(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#887-939):
	External calls:
	- _swapTokenForETH(swapToken) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#932)
		- _UniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#946-952)
	- _addLiquidity(liqToken,liqETH) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#936)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
	External calls sending eth:
	- _addLiquidity(liqToken,liqETH) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#936)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
	State variables written after the call(s):
	- _addLiquidity(liqToken,liqETH) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#936)
		- _allowances[_owner][spender] = amount (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1437)
	- _distributeStake(address(this).balance - initialETHBalance) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#938)
		- marketMakerBalance += marketMakerSplit (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#807)
	- _distributeStake(address(this).balance - initialETHBalance) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#938)
		- marketingBalance += marketingSplit (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#806)
		- marketingBalance += amount_one (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#814)
		- marketingBalance += amount_two (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#827)
	- _distributeStake(address(this).balance - initialETHBalance) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#938)
		- oneDistributingReward += amount_one (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#811)
	- _distributeStake(address(this).balance - initialETHBalance) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#938)
		- profitPerShare[0] += ((amount_one * DistributionMultiplier) / totalShares) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#816-817)
		- profitPerShare[1] += ((amount_two * DistributionMultiplier) / totalShares_scope_0) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#829-830)
	- _distributeStake(address(this).balance - initialETHBalance) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#938)
		- rewardBalance[0] += amount_one (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#818)
		- rewardBalance[1] += amount_two (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#831)
	- _distributeStake(address(this).balance - initialETHBalance) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#938)
		- totalDistributingReward += amount_one (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#810)
		- totalDistributingReward += amount_two (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#823)
	- _distributeStake(address(this).balance - initialETHBalance) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#938)
		- twoDistributingReward += amount_two (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#824)
Reentrancy in charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698):
	External calls:
	- _swapContractToken(amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#662)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
		- _UniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#946-952)
	External calls sending eth:
	- _swapContractToken(amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#662)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
	State variables written after the call(s):
	- _removeToken(sender,amount,slot) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#691)
		- alreadyPaidShares[addr][slot] = profitPerShare[slot] * newAmount (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#784)
	- _addToken(recipient,taxedAmount,slot) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#695)
		- alreadyPaidShares[addr][slot] = profitPerShare[slot] * newAmount (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#761)
	- _removeToken(sender,amount,slot) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#691)
		- toERCaid[addr] += payment (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#786)
	- _addToken(recipient,taxedAmount,slot) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#695)
		- toERCaid[addr] += payment (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#763)
Reentrancy in charge.transferFrom(address,address,uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1441-1451):
	External calls:
	- _transfer(sender,recipient,amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1446)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
		- _UniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#946-952)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1446)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
	State variables written after the call(s):
	- _approve(sender,msg.sender,currentAllowance - amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1449)
		- _allowances[_owner][spender] = amount (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1437)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in charge._swapContractToken(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#887-939):
	External calls:
	- _swapTokenForETH(swapToken) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#932)
		- _UniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#946-952)
	- _addLiquidity(liqToken,liqETH) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#936)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
	External calls sending eth:
	- _addLiquidity(liqToken,liqETH) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#936)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
	Event emitted after the call(s):
	- Approval(_owner,spender,amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1438)
		- _addLiquidity(liqToken,liqETH) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#936)
Reentrancy in charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698):
	External calls:
	- _swapContractToken(amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#662)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
		- _UniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#946-952)
	External calls sending eth:
	- _swapContractToken(amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#662)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
	Event emitted after the call(s):
	- Transfer(sender,recipient,taxedAmount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#697)
Reentrancy in charge.claimFarmedToken(address,address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#840-877):
	External calls:
	- _UniswapRouter.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#871-873)
	Event emitted after the call(s):
	- OnWithdrawFarmedToken(amount,addr) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#875)
Reentrancy in charge.transferFrom(address,address,uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1441-1451):
	External calls:
	- _transfer(sender,recipient,amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1446)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
		- _UniswapRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#946-952)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1446)
		- _UniswapRouter.addLiquidityETH{value: ETHamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#958-965)
	Event emitted after the call(s):
	- Approval(_owner,spender,amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1438)
		- _approve(sender,msg.sender,currentAllowance - amount) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1449)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_sellLock[sender] <= block.timestamp || sellLockDisabled,Seller in sellLock) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#615-618)
	- require(bool,string)(_sellLock[sender] <= block.timestamp || sellLockDisabled,Sender in Lock) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#648-651)
charge.getAddressSellLockTimeInSeconds(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1006-1016) uses timestamp for comparisons
	Dangerous comparisons:
	- lockTime <= block.timestamp (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1012)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

charge._taxedTransfer(address,address,uint256,bool,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#598-698) has a high cyclomatic complexity (16).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

smart.create_weth_pair(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#404-407) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

smart.router (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#402) is set pre-construction with a non-constant function or state variable:
	- IUniswapRouter02(router_address)
charge.balanceLimit (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#470) is set pre-construction with a non-constant function or state variable:
	- _circulatingSupply
charge.sellLimit (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#471) is set pre-construction with a non-constant function or state variable:
	- _circulatingSupply
charge.qtyTokenToSwap (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#472) is set pre-construction with a non-constant function or state variable:
	- (sellLimit * 10) / 100
charge.swapTreshold (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#473) is set pre-construction with a non-constant function or state variable:
	- qtyTokenToSwap
charge.manualQtyTokenToSwap (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#476) is set pre-construction with a non-constant function or state variable:
	- (sellLimit * 10) / 100
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint ^0.8.4 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables.
It is used by:
	- ^0.8.4 (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#2)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in charge.ControlWithdrawMarketingETH() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1128-1133):
	- (sent,None) = marketingWallet.call{value: (amount)}() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1131)
Low level call in charge.ControlRemoveRemainingETH() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1370-1373):
	- (sent,None) = owner.call{value: (address(this).balance)}() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1371)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IUniswapERC20.DOMAIN_SEPARATOR() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#65) is not in mixedCase
Function IUniswapERC20.PERMIT_TYPEHASH() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#67) is not in mixedCase
Function IUniswapRouter01.WETH() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#240) is not in mixedCase
Contract protected (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#318-348) is not in CapWords
Function protected.set_authorized(address,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#326-328) is not in mixedCase
Variable protected.is_auth (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#320) is not in mixedCase
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#366) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#367) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#384) is not in mixedCase
Contract smart (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#400-429) is not in CapWords
Function smart.create_weth_pair(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#404-407) is not in mixedCase
Function smart.get_weth_reserve(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#409-416) is not in mixedCase
Parameter smart.get_weth_reserve(address).pair_address (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#409) is not in mixedCase
Function smart.get_weth_price_impact(address,uint256,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#418-428) is not in mixedCase
Variable smart.router_address (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#401) is not in mixedCase
Contract charge (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#431-1476) is not in CapWords
Function charge.get_paid(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#592-595) is not in mixedCase
Function charge._getTotalShares() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#741-745) is not in mixedCase
Parameter charge.getWhitelistedStatus(address).AddressToCheck (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#998) is not in mixedCase
Parameter charge.getAddressSellLockTimeInSeconds(address).AddressToCheck (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1006) is not in mixedCase
Function charge.AddressResetSellLock() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1023-1025) is not in mixedCase
Function charge.FarmedTokenWithdrawSlotOne(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1028-1030) is not in mixedCase
Function charge.FarmedTokenWithdrawSlotTwo(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1034-1036) is not in mixedCase
Function charge.ControlEnabledClaims(uint8,address,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1084-1090) is not in mixedCase
Function charge.ControlBotKiller(bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1093-1095) is not in mixedCase
Function charge.ControlSetSwapTreshold(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1098-1100) is not in mixedCase
Function charge.ControlExcludeFromDistributing(address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1103-1113) is not in mixedCase
Function charge.ControlIncludeToDistributing(address,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1116-1125) is not in mixedCase
Function charge.ControlWithdrawMarketingETH() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1128-1133) is not in mixedCase
Function charge.ControlSwapSetSellPeg(bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1136-1138) is not in mixedCase
Function charge.ControlSetRewardTaxFree(address,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1142-1144) is not in mixedCase
Function charge.ControlSetBalanceFree(address,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1147-1149) is not in mixedCase
Function charge.ControlSwapSetManualLiqSell(bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1152-1154) is not in mixedCase
Function charge.ControlSwapSetManualLiqSellTokens(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1157-1160) is not in mixedCase
Function charge.ControlSwapSwitchManualETHConversion(bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1163-1165) is not in mixedCase
Function charge.ControlDisableSellLock(bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1168-1170) is not in mixedCase
Function charge.ControlSetSellLockTime(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1173-1176) is not in mixedCase
Function charge.ControlSetTaxes(uint8,uint8,uint8,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1180-1195) is not in mixedCase
Function charge.ControlSetShares(uint8,uint8,uint8,uint8,uint8) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1197-1221) is not in mixedCase
Parameter charge.ControlSetShares(uint8,uint8,uint8,uint8,uint8).stakeTaxes_one (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1201) is not in mixedCase
Parameter charge.ControlSetShares(uint8,uint8,uint8,uint8,uint8).stakeTaxes_two (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1202) is not in mixedCase
Function charge.ControlCreateLPandETH() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1224-1226) is not in mixedCase
Function charge.ControlSellAllTokens() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1229-1233) is not in mixedCase
Function charge.ControlExcludeAccountFromFees(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1236-1238) is not in mixedCase
Function charge.ControlIncludeAccountToFees(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1241-1243) is not in mixedCase
Function charge.ControlExcludeAccountFromSellLock(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1246-1248) is not in mixedCase
Function charge.ControlIncludeAccountToSellLock(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1251-1253) is not in mixedCase
Function charge.ControlIncludeAccountToSubset(address,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1256-1261) is not in mixedCase
Function charge.ControlUpdateLimits(uint256,uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1264-1283) is not in mixedCase
Function charge.SetupEnableTrading(bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1307-1309) is not in mixedCase
Function charge.SetupLiquidityTokenAddress(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1312-1317) is not in mixedCase
Function charge.SetupAddToWhitelist(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1320-1322) is not in mixedCase
Function charge.SetupRemoveFromWhitelist(address) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1325-1327) is not in mixedCase
Function charge.ToggleImpactTreshold(uint8,bool) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1362-1365) is not in mixedCase
Function charge.ControlRemoveRemainingETH() (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1370-1373) is not in mixedCase
Parameter charge.allowance(address,address)._owner (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1412) is not in mixedCase
Variable charge._blacklist (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#449) is not in mixedCase
Constant charge._name (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#452) is not in UPPER_CASE_WITH_UNDERSCORES
Constant charge._symbol (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#453) is not in UPPER_CASE_WITH_UNDERSCORES
Constant charge._decimals (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#454) is not in UPPER_CASE_WITH_UNDERSCORES
Variable charge.is_claimable (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#459) is not in mixedCase
Variable charge.rewardWallet_one (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#463) is not in mixedCase
Variable charge.rewardWallet_two (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#464) is not in mixedCase
Variable charge.blacklist_enabled (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#467) is not in mixedCase
Variable charge.is_slot (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#468) is not in mixedCase
Variable charge._stakeTax_one (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#488) is not in mixedCase
Variable charge._stakeTax_two (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#489) is not in mixedCase
Variable charge._UniswapPairAddress (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#494) is not in mixedCase
Variable charge._UniswapRouter (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#495) is not in mixedCase
Constant charge.DistributionMultiplier (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#725) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

charge.ControlSwapSetManualLiqSellTokens(uint256) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1157-1160) uses literals with too many digits:
	- require(bool,string)(amount > 1 && amount < 100000000,Values between 1 and 100000000) (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#1158)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

charge.isWhitelisted (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#443) is never used in charge (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#431-1476)
charge.blacklist_enabled (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#467) is never used in charge (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#431-1476)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

charge._circulatingSupply (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#469) should be constant 
charge.blacklist_enabled (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#467) should be constant 
charge.portionLimit (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#474) should be constant 
smart.router_address (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#401) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

charge._UniswapPairAddress (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#494) should be immutable 
charge._UniswapRouter (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#495) should be immutable 
charge.qtyTokenToSwap (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#472) should be immutable 
protected.owner (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#335) should be immutable 
smart.router (0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol#402) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8.sol analyzed (9 contracts with 94 detectors), 132 result(s) found

real	0m4.784s
user	0m4.490s
sys	0m0.295s
