'solc --version' running
'solc ./0x04f062809b244e37e7fdc21d9409469c989c2342.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

Reentrancy in Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606):
	External calls:
	- Migratable(newContract).migrate.value(amount)(user,amount,token) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#600)
	- ERC20(token).approve(newContract,amount) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#602)
	- Migratable(newContract).migrate(user,amount,token) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#603)
	External calls sending eth:
	- Migratable(newContract).migrate.value(amount)(user,amount,token) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#600)
	State variables written after the call(s):
	- balances[joyToken][user] = balances[joyToken][user].sub(gasFee) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#587)
	Joyso.balances (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#143) can be used in cross function reentrancies:
	- Joyso.cancelByAdmin(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#527-554)
	- Joyso.collectFee(address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#282-297)
	- Joyso.depositEther() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#207-217)
	- Joyso.depositToken(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#190-202)
	- Joyso.getBalance(address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#627-629)
	- Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606)
	- Joyso.transferForAdmin(address,address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#614-620)
	- Joyso.updateUserBalance(uint256,bool,uint256,uint256,uint256,address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#758-791)
	- Joyso.withdraw(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#225-240)
	- Joyso.withdrawByAdmin_Unau(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#328-374)
	- balances[joyToken][joysoWallet] = balances[joyToken][joysoWallet].add(gasFee) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#588)
	Joyso.balances (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#143) can be used in cross function reentrancies:
	- Joyso.cancelByAdmin(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#527-554)
	- Joyso.collectFee(address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#282-297)
	- Joyso.depositEther() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#207-217)
	- Joyso.depositToken(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#190-202)
	- Joyso.getBalance(address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#627-629)
	- Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606)
	- Joyso.transferForAdmin(address,address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#614-620)
	- Joyso.updateUserBalance(uint256,bool,uint256,uint256,uint256,address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#758-791)
	- Joyso.withdraw(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#225-240)
	- Joyso.withdrawByAdmin_Unau(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#328-374)
	- balances[token][user] = balances[token][user].sub(gasFee) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#590)
	Joyso.balances (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#143) can be used in cross function reentrancies:
	- Joyso.cancelByAdmin(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#527-554)
	- Joyso.collectFee(address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#282-297)
	- Joyso.depositEther() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#207-217)
	- Joyso.depositToken(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#190-202)
	- Joyso.getBalance(address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#627-629)
	- Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606)
	- Joyso.transferForAdmin(address,address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#614-620)
	- Joyso.updateUserBalance(uint256,bool,uint256,uint256,uint256,address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#758-791)
	- Joyso.withdraw(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#225-240)
	- Joyso.withdrawByAdmin_Unau(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#328-374)
	- balances[token][joysoWallet] = balances[token][joysoWallet].add(gasFee) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#591)
	Joyso.balances (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#143) can be used in cross function reentrancies:
	- Joyso.cancelByAdmin(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#527-554)
	- Joyso.collectFee(address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#282-297)
	- Joyso.depositEther() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#207-217)
	- Joyso.depositToken(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#190-202)
	- Joyso.getBalance(address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#627-629)
	- Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606)
	- Joyso.transferForAdmin(address,address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#614-620)
	- Joyso.updateUserBalance(uint256,bool,uint256,uint256,uint256,address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#758-791)
	- Joyso.withdraw(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#225-240)
	- Joyso.withdrawByAdmin_Unau(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#328-374)
	- balances[0][user] = balances[0][user].sub(gasFee) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#593)
	Joyso.balances (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#143) can be used in cross function reentrancies:
	- Joyso.cancelByAdmin(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#527-554)
	- Joyso.collectFee(address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#282-297)
	- Joyso.depositEther() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#207-217)
	- Joyso.depositToken(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#190-202)
	- Joyso.getBalance(address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#627-629)
	- Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606)
	- Joyso.transferForAdmin(address,address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#614-620)
	- Joyso.updateUserBalance(uint256,bool,uint256,uint256,uint256,address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#758-791)
	- Joyso.withdraw(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#225-240)
	- Joyso.withdrawByAdmin_Unau(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#328-374)
	- balances[0][joysoWallet] = balances[0][joysoWallet].add(gasFee) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#594)
	Joyso.balances (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#143) can be used in cross function reentrancies:
	- Joyso.cancelByAdmin(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#527-554)
	- Joyso.collectFee(address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#282-297)
	- Joyso.depositEther() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#207-217)
	- Joyso.depositToken(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#190-202)
	- Joyso.getBalance(address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#627-629)
	- Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606)
	- Joyso.transferForAdmin(address,address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#614-620)
	- Joyso.updateUserBalance(uint256,bool,uint256,uint256,uint256,address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#758-791)
	- Joyso.withdraw(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#225-240)
	- Joyso.withdrawByAdmin_Unau(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#328-374)
	- balances[token][user] = 0 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#598)
	Joyso.balances (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#143) can be used in cross function reentrancies:
	- Joyso.cancelByAdmin(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#527-554)
	- Joyso.collectFee(address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#282-297)
	- Joyso.depositEther() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#207-217)
	- Joyso.depositToken(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#190-202)
	- Joyso.getBalance(address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#627-629)
	- Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606)
	- Joyso.transferForAdmin(address,address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#614-620)
	- Joyso.updateUserBalance(uint256,bool,uint256,uint256,uint256,address,address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#758-791)
	- Joyso.withdraw(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#225-240)
	- Joyso.withdrawByAdmin_Unau(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#328-374)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Joyso.calculateFee(uint256,uint256,uint256,bytes32,bool,bool) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#793-810) performs a multiplication on the result of a division:
	- txFee = baseGet.mul((data & MAKER_FEE_MASK) >> 192) / 10000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#804)
	- txFee = txFee * (10 ** 12) / joyPrice (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#807)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606) ignores return value by Migratable(newContract).migrate.value(amount)(user,amount,token) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#600)
Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606) ignores return value by ERC20(token).approve(newContract,amount) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#602)
Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606) ignores return value by Migratable(newContract).migrate(user,amount,token) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#603)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

Joyso.changeLockPeriod(uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#303-306) should emit an event for: 
	- lockPeriod = periodInDays * 86400 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#305) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Joyso.Joyso(address,address)._joysoWallet (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#174) lacks a zero-check on :
		- joysoWallet = _joysoWallet (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#175)
Joyso.Joyso(address,address)._joyToken (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#174) lacks a zero-check on :
		- joyToken = _joyToken (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#177)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606) has external calls inside a loop: Migratable(newContract).migrate.value(amount)(user,amount,token) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#600)
Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606) has external calls inside a loop: ERC20(token).approve(newContract,amount) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#602)
Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606) has external calls inside a loop: Migratable(newContract).migrate(user,amount,token) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#603)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Reentrancy in Joyso.depositToken(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#190-202):
	External calls:
	- require(bool)(ERC20(token).transferFrom(msg.sender,this,amount)) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#194)
	State variables written after the call(s):
	- balances[token][msg.sender] = balances[token][msg.sender].add(amount) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#195)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in Joyso.collectFee(address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#282-297):
	External calls:
	- require(bool)(ERC20(token).transfer(msg.sender,amount)) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#289)
	External calls sending eth:
	- msg.sender.transfer(amount) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#287)
	Event emitted after the call(s):
	- Withdraw(token,joysoWallet,amount,0) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#291-296)
Reentrancy in Joyso.depositToken(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#190-202):
	External calls:
	- require(bool)(ERC20(token).transferFrom(msg.sender,this,amount)) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#194)
	Event emitted after the call(s):
	- Deposit(token,msg.sender,amount,balances[token][msg.sender]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#196-201)
Reentrancy in Joyso.withdraw(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#225-240):
	External calls:
	- require(bool)(ERC20(token).transfer(msg.sender,amount)) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#232)
	External calls sending eth:
	- msg.sender.transfer(amount) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#230)
	Event emitted after the call(s):
	- Withdraw(token,msg.sender,amount,balances[token][msg.sender]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#234-239)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Joyso.withdraw(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#225-240) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(getTime() > userLock[msg.sender] && userLock[msg.sender] != 0) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#227)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Version constraint 0.4.19 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData
	- NestedArrayFunctionCallDecoder.
It is used by:
	- 0.4.19 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#1)
solc-0.4.19 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Function Joyso.withdrawByAdmin_Unau(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#328-374) is not in mixedCase
Function Joyso.matchByAdmin_TwH36(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#381-454) is not in mixedCase
Function Joyso.matchTokenOrderByAdmin_k44j(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#461-520) is not in mixedCase
Function Joyso.migrateByAdmin_DQV(uint256[]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#561-606) is not in mixedCase
Parameter Joyso.addUser(address)._address (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#696) is not in mixedCase
Parameter Joyso.internalTrade(uint256,uint256,uint256,uint256,uint256,uint256,bool,address,address,bytes32)._remainingToken (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#731) is not in mixedCase
Parameter Joyso.internalTrade(uint256,uint256,uint256,uint256,uint256,uint256,bool,address,address,bytes32)._baseExecute (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#732) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in Joyso.collectFee(address) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#282-297):
	External calls:
	- msg.sender.transfer(amount) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#287)
	Event emitted after the call(s):
	- Withdraw(token,joysoWallet,amount,0) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#291-296)
Reentrancy in Joyso.withdraw(address,uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#225-240):
	External calls:
	- msg.sender.transfer(amount) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#230)
	Event emitted after the call(s):
	- Withdraw(token,msg.sender,amount,balances[token][msg.sender]) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#234-239)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

JoysoDataDecoder.decodeOrderUserId(uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#106-108) uses literals with too many digits:
	- data & 0x00000000000000000000000000000000000000000000000000000000ffffffff (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#107)
JoysoDataDecoder.retrieveV(uint256) (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#110-113) uses literals with too many digits:
	- data & 0x000000000000000000000000f000000000000000000000000000000000000000 == 0 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#112)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- USER_MASK = 0x00000000000000000000000000000000000000000000000000000000ffffffff (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#125)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- PAYMENT_METHOD_MASK = 0x00000000000000000000000f0000000000000000000000000000000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#126)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- WITHDRAW_TOKEN_MASK = 0x0000000000000000000000000000000000000000000000000000ffff00000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#127)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- V_MASK = 0x000000000000000000000000f000000000000000000000000000000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#128)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- TOKEN_SELL_MASK = 0x000000000000000000000000000000000000000000000000ffff000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#129)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- TOKEN_BUY_MASK = 0x0000000000000000000000000000000000000000000000000000ffff00000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#130)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- SIGN_MASK = 0xffffffffffffffffffffffff0000000000000000000000000000000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#131)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- MATCH_SIGN_MASK = 0xfffffffffffffffffffffff00000000000000000000000000000000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#132)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- TOKEN_JOY_PRICE_MASK = 0x0000000000000000000000000fffffffffffffffffffffff0000000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#133)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- JOY_PRICE_MASK = 0x0000000000000000fffffff00000000000000000000000000000000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#134)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- IS_BUY_MASK = 0x00000000000000000000000f0000000000000000000000000000000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#135)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- TAKER_FEE_MASK = 0x00000000ffff0000000000000000000000000000000000000000000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#136)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- MAKER_FEE_MASK = 0x000000000000ffff000000000000000000000000000000000000000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#137)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- PAY_BY_TOKEN = 0x0000000000000000000000020000000000000000000000000000000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#139)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- PAY_BY_JOY = 0x0000000000000000000000010000000000000000000000000000000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#140)
Joyso.slitherConstructorConstantVariables() (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#122-838) uses literals with too many digits:
	- ORDER_ISBUY = 0x0000000000000000000000010000000000000000000000000000000000000000 (0x04f062809b244e37e7fdc21d9409469c989c2342.sol#141)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits
./0x04f062809b244e37e7fdc21d9409469c989c2342.sol analyzed (7 contracts with 94 detectors), 45 result(s) found

real	0m4.232s
user	0m4.014s
sys	0m0.219s
