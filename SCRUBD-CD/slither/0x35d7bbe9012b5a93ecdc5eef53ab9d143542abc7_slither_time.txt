'solc --version' running
'solc ./0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

Reentrancy in DoublePoggerino.fogRollingIn(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#873-910):
	External calls:
	- fogLockSwap(fogToLockAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#885)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
		- IWETH(wethAddress).deposit.value(_ethReceived)() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#983)
		- IUniswapV2Pair(uniswapV2Pair).sync() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#978)
		- ERC20(wethAddress).transfer(uniswapV2Pair,_ethReceived) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#984)
		- IUniswapV2Pair(uniswapV2Pair).sync() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#985)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	External calls sending eth:
	- fogLockSwap(fogToLockAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#885)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
	- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
		- IWETH(wethAddress).deposit.value(_ethReceived)() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#983)
	State variables written after the call(s):
	- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
		- _balances[sender] = _balances[sender].sub(amount,ERC20: transfer amount exceeds balance) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#480)
		- _balances[recipient] = _balances[recipient].add(amount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#481)
	ERC20._balances (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#356) can be used in cross function reentrancies:
	- ERC20._transfer(address,address,uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#476-483)
	- ERC20.balanceOf(address) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#372-374)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

DoublePoggerino._rewardLiquidityProvidersETH(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#982-987) ignores return value by ERC20(wethAddress).transfer(uniswapV2Pair,_ethReceived) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#984)
DoublePoggerino.burnLiquidity() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#989-994) ignores return value by ERC20(uniswapV2Pair).transfer(address(0),balance) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#992)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

DoublePoggerino.lockedSupply() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1074-1082) performs a multiplication on the result of a division:
	- percentOfLpTotalSupply = lpBalance.mul(1e12).div(lpTotalSupply) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1077)
	- _lockedSupply = uniswapBalance.mul(percentOfLpTotalSupply).div(1e12) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1080)
DoublePoggerino.burnedSupply() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1085-1093) performs a multiplication on the result of a division:
	- percentOfLpTotalSupply = lpBalance.mul(1e12).div(lpTotalSupply) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1088)
	- _burnedSupply = uniswapBalance.mul(percentOfLpTotalSupply).div(1e12) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1091)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

Governance._writeCheckpoint(address,uint32,uint256,uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1410-1428) uses a dangerous strict equality:
	- nCheckpoints > 0 && checkpoints[delegatee][nCheckpoints - 1].fromBlock == blockNumber (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1420)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

DoublePoggerino.swapEthForERC20token(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1013-1029) ignores return value by ERC20(wethAddress).approve(uniswapV2Router,ethAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1018)
DoublePoggerino.addLiquidity(uint256,uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1032-1046) ignores return value by IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
DoublePoggerino.addERC20liquidity(uint256,uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1048-1062) ignores return value by ERC20(wethAddress).approve(uniswapV2Router,ethAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1049)
DoublePoggerino.addERC20liquidity(uint256,uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1048-1062) ignores return value by ERC20(tokenAddress).approve(uniswapV2Router,tokenAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1050)
DoublePoggerino.addERC20liquidity(uint256,uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1048-1062) ignores return value by IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(tokenAddress,tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1052-1061)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

ERC20Detailed.constructor(string,string,uint8).name (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#572) shadows:
	- ERC20Detailed.name() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#581-583) (function)
ERC20Detailed.constructor(string,string,uint8).symbol (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#572) shadows:
	- ERC20Detailed.symbol() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#589-591) (function)
ERC20Detailed.constructor(string,string,uint8).decimals (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#572) shadows:
	- ERC20Detailed.decimals() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#605-607) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

FOG.setUniswapV2Router(address)._uniswapV2Router (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1566) lacks a zero-check on :
		- uniswapV2Router = _uniswapV2Router (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1568)
FOG.setUniswapV2Pair(address)._uniswapV2Pair (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1571) lacks a zero-check on :
		- uniswapV2Pair = _uniswapV2Pair (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1573)
FOG.setErc20TokenAddress(address)._tokenAddress (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1577) lacks a zero-check on :
		- tokenAddress = _tokenAddress (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1578)
FOG.setErc20TokenPairAddress(address)._tokenAddressPair (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1582) lacks a zero-check on :
		- tokenAddressPair = _tokenAddressPair (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1583)
FOG.setWethAddress(address)._wethAddress (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1587) lacks a zero-check on :
		- wethAddress = _wethAddress (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1588)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in DoublePoggerino.fogLockSwap(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#915-926):
	External calls:
	- swapFogTokensForEth(fogLockSplitEth) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#920)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	- addLiquidity(otherHalfOfFogPair,newBalance) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#923)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
	External calls sending eth:
	- addLiquidity(otherHalfOfFogPair,newBalance) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#923)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
	State variables written after the call(s):
	- addLiquidity(otherHalfOfFogPair,newBalance) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#923)
		- _allowances[owner][spender] = amount (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#538)
Reentrancy in DoublePoggerino.fogRollingIn(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#873-910):
	External calls:
	- fogLockSwap(fogToLockAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#885)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
		- IWETH(wethAddress).deposit.value(_ethReceived)() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#983)
		- IUniswapV2Pair(uniswapV2Pair).sync() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#978)
		- ERC20(wethAddress).transfer(uniswapV2Pair,_ethReceived) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#984)
		- IUniswapV2Pair(uniswapV2Pair).sync() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#985)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	External calls sending eth:
	- fogLockSwap(fogToLockAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#885)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
	- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
		- IWETH(wethAddress).deposit.value(_ethReceived)() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#983)
	State variables written after the call(s):
	- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
		- _allowances[owner][spender] = amount (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#538)
Reentrancy in DoublePoggerino.fogRollingIn(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#873-910):
	External calls:
	- fogLockSwap(fogToLockAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#885)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
		- IWETH(wethAddress).deposit.value(_ethReceived)() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#983)
		- IUniswapV2Pair(uniswapV2Pair).sync() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#978)
		- ERC20(wethAddress).transfer(uniswapV2Pair,_ethReceived) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#984)
		- IUniswapV2Pair(uniswapV2Pair).sync() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#985)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	- buyAndLockToken(tokenBuyAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#907)
		- ERC20(wethAddress).approve(uniswapV2Router,ethAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1049)
		- ERC20(tokenAddress).approve(uniswapV2Router,tokenAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1050)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(tokenAddress,tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1052-1061)
		- ERC20(wethAddress).approve(uniswapV2Router,ethAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1018)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
		- IUniswapV2Router02(uniswapV2Router).swapExactETHForTokensSupportingFeeOnTransferTokens.value(ethAmount)(0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1021-1028)
	External calls sending eth:
	- fogLockSwap(fogToLockAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#885)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
	- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
		- IWETH(wethAddress).deposit.value(_ethReceived)() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#983)
	- buyAndLockToken(tokenBuyAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#907)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(tokenAddress,tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1052-1061)
		- IUniswapV2Router02(uniswapV2Router).swapExactETHForTokensSupportingFeeOnTransferTokens.value(ethAmount)(0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1021-1028)
	State variables written after the call(s):
	- buyAndLockToken(tokenBuyAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#907)
		- _allowances[owner][spender] = amount (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#538)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in DoublePoggerino._rewardLiquidityProviders(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#976-980):
	External calls:
	- IUniswapV2Pair(uniswapV2Pair).sync() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#978)
	Event emitted after the call(s):
	- RewardedFog(_fogToRewards) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#979)
Reentrancy in DoublePoggerino.burnLiquidity() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#989-994):
	External calls:
	- ERC20(uniswapV2Pair).transfer(address(0),balance) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#992)
	Event emitted after the call(s):
	- BurnLiquidity(balance) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#993)
Reentrancy in DoublePoggerino.buyAndLockToken(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#945-965):
	External calls:
	- swapFogTokensForEth(amountToSwapEth) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#950)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	- swapEthForERC20token(amountToBuyToken) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#958)
		- ERC20(wethAddress).approve(uniswapV2Router,ethAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1018)
		- IUniswapV2Router02(uniswapV2Router).swapExactETHForTokensSupportingFeeOnTransferTokens.value(ethAmount)(0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1021-1028)
	- addERC20liquidity(tokenRecieved,amountEthForTokenLP) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#962)
		- ERC20(wethAddress).approve(uniswapV2Router,ethAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1049)
		- ERC20(tokenAddress).approve(uniswapV2Router,tokenAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1050)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(tokenAddress,tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1052-1061)
	External calls sending eth:
	- swapEthForERC20token(amountToBuyToken) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#958)
		- IUniswapV2Router02(uniswapV2Router).swapExactETHForTokensSupportingFeeOnTransferTokens.value(ethAmount)(0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1021-1028)
	- addERC20liquidity(tokenRecieved,amountEthForTokenLP) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#962)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(tokenAddress,tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1052-1061)
	Event emitted after the call(s):
	- BoughtTokenLP(tokenRecieved,amountEthForTokenLP) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#963)
Reentrancy in DoublePoggerino.divideRewards(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#930-942):
	External calls:
	- swapFogTokensForEth(fogSwapEth) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#935)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	- _rewardLiquidityProviders(otherHalfFog) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#938)
		- IUniswapV2Pair(uniswapV2Pair).sync() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#978)
	Event emitted after the call(s):
	- RewardedFog(_fogToRewards) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#979)
		- _rewardLiquidityProviders(otherHalfFog) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#938)
	- Transfer(sender,recipient,amount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#482)
		- _rewardLiquidityProviders(otherHalfFog) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#938)
Reentrancy in DoublePoggerino.fogLockSwap(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#915-926):
	External calls:
	- swapFogTokensForEth(fogLockSplitEth) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#920)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	- addLiquidity(otherHalfOfFogPair,newBalance) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#923)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
	External calls sending eth:
	- addLiquidity(otherHalfOfFogPair,newBalance) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#923)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#539)
		- addLiquidity(otherHalfOfFogPair,newBalance) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#923)
	- LockLiquidity(otherHalfOfFogPair,newBalance) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#924)
Reentrancy in DoublePoggerino.fogRollingIn(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#873-910):
	External calls:
	- fogLockSwap(fogToLockAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#885)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
		- IWETH(wethAddress).deposit.value(_ethReceived)() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#983)
		- IUniswapV2Pair(uniswapV2Pair).sync() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#978)
		- ERC20(wethAddress).transfer(uniswapV2Pair,_ethReceived) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#984)
		- IUniswapV2Pair(uniswapV2Pair).sync() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#985)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	External calls sending eth:
	- fogLockSwap(fogToLockAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#885)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
	- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
		- IWETH(wethAddress).deposit.value(_ethReceived)() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#983)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#539)
		- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
	- RewardedFog(_fogToRewards) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#979)
		- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
	- Transfer(sender,recipient,amount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#482)
		- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
Reentrancy in DoublePoggerino.fogRollingIn(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#873-910):
	External calls:
	- fogLockSwap(fogToLockAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#885)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
		- IWETH(wethAddress).deposit.value(_ethReceived)() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#983)
		- IUniswapV2Pair(uniswapV2Pair).sync() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#978)
		- ERC20(wethAddress).transfer(uniswapV2Pair,_ethReceived) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#984)
		- IUniswapV2Pair(uniswapV2Pair).sync() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#985)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
	- buyAndLockToken(tokenBuyAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#907)
		- ERC20(wethAddress).approve(uniswapV2Router,ethAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1049)
		- ERC20(tokenAddress).approve(uniswapV2Router,tokenAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1050)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(tokenAddress,tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1052-1061)
		- ERC20(wethAddress).approve(uniswapV2Router,ethAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1018)
		- IUniswapV2Router02(uniswapV2Router).swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1003-1010)
		- IUniswapV2Router02(uniswapV2Router).swapExactETHForTokensSupportingFeeOnTransferTokens.value(ethAmount)(0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1021-1028)
	External calls sending eth:
	- fogLockSwap(fogToLockAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#885)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(address(this),tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1035-1044)
	- divideRewards(fogRewardsAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#896)
		- IWETH(wethAddress).deposit.value(_ethReceived)() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#983)
	- buyAndLockToken(tokenBuyAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#907)
		- IUniswapV2Router02(uniswapV2Router).addLiquidityETH.value(ethAmount)(tokenAddress,tokenAmount,0,0,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1052-1061)
		- IUniswapV2Router02(uniswapV2Router).swapExactETHForTokensSupportingFeeOnTransferTokens.value(ethAmount)(0,uniswapPairPath,address(this),block.timestamp) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1021-1028)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#539)
		- buyAndLockToken(tokenBuyAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#907)
	- BoughtTokenLP(tokenRecieved,amountEthForTokenLP) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#963)
		- buyAndLockToken(tokenBuyAmount) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#907)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Governance.delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1276-1317) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(now <= expiry,ERC20Governance::delegateBySig: signature expired) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1315)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Governance.getChainId() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1435-1439) uses assembly
	- INLINE ASM (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1437)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

2 different versions of Solidity are used:
	- Version constraint ^0.5.0 is used by:
		-^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#56)
		-^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#86)
		-^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#165)
		-^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#324)
		-^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#556)
		-^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#612)
		-^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#651)
		-^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#697)
		-^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#773)
		-^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1444)
	- Version constraint ^0.5.17 is used by:
		-^0.5.17 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#809)
		-^0.5.17 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1188)
		-^0.5.17 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1543)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used

Context._msgData() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#78-81) is never used and should be removed
ERC20._burn(address,uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#513-519) is never used and should be removed
ERC20._burnFrom(address,uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#548-551) is never used and should be removed
Governance._burn(address,uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1205-1208) is never used and should be removed
Governance._transfer(address,address,uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1195-1198) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Version constraint ^0.5.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor
	- IncorrectEventSignatureInLibraries
	- ABIEncoderV2PackedStorage.
It is used by:
	- ^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#56)
	- ^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#86)
	- ^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#165)
	- ^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#324)
	- ^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#556)
	- ^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#612)
	- ^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#651)
	- ^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#697)
	- ^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#773)
	- ^0.5.0 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1444)
Version constraint ^0.5.17 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow.
It is used by:
	- ^0.5.17 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#809)
	- ^0.5.17 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1188)
	- ^0.5.17 (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1543)
solc-0.5.17 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter DoublePoggerino.fogRollingIn(uint256)._fogDensity (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#873) is not in mixedCase
Parameter DoublePoggerino.divideRewards(uint256)._fogRewardsAmount (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#930) is not in mixedCase
Parameter DoublePoggerino.buyAndLockToken(uint256)._tokenBuyAmount (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#945) is not in mixedCase
Function DoublePoggerino._rewardLiquidityProvidersETH(uint256) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#982-987) is not in mixedCase
Parameter DoublePoggerino._rewardLiquidityProvidersETH(uint256)._ethReceived (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#982) is not in mixedCase
Function DoublePoggerino.ERC20LpSupply() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1069-1071) is not in mixedCase
Parameter DoublePoggerino.calculateVisabilityFee(uint256,uint8,uint32)._amount (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1113) is not in mixedCase
Parameter DoublePoggerino.calculateVisabilityFee(uint256,uint8,uint32)._feeDecimals (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1114) is not in mixedCase
Parameter DoublePoggerino.calculateVisabilityFee(uint256,uint8,uint32)._percentage (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1115) is not in mixedCase
Function IUniswapV2Router02.WETH() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1124) is not in mixedCase
Parameter FOG.setUniswapV2Router(address)._uniswapV2Router (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1566) is not in mixedCase
Parameter FOG.setUniswapV2Pair(address)._uniswapV2Pair (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1571) is not in mixedCase
Parameter FOG.setErc20TokenAddress(address)._tokenAddress (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1577) is not in mixedCase
Parameter FOG.setErc20TokenPairAddress(address)._tokenAddressPair (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1582) is not in mixedCase
Parameter FOG.setWethAddress(address)._wethAddress (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1587) is not in mixedCase
Parameter FOG.updateFees(uint8,uint32)._feeDecimals (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1592) is not in mixedCase
Parameter FOG.updateFees(uint8,uint32)._feePercentage (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1592) is not in mixedCase
Parameter FOG.updateRewardsSplit(uint32)._fogRewardPercentage (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1601) is not in mixedCase
Parameter FOG.updateLpSplits(uint32,uint32)._fogLockPercentage (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1609) is not in mixedCase
Parameter FOG.updateLpSplits(uint32,uint32)._tokenLockPercentage (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1609) is not in mixedCase
Parameter FOG.withdrawForeignTokens(address,address)._tokenContract (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1620) is not in mixedCase
Parameter FOG.withdrawForeignTokens(address,address)._to (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1620) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#79)" inContext (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#68-82)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

FOG.constructor() (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1559-1563) uses literals with too many digits:
	- _mint(msg.sender,1000000 * 10 ** 18) (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#1562)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

DoublePoggerino.liquidityRewardPercentage (0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol#837) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
./0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7.sol analyzed (17 contracts with 94 detectors), 65 result(s) found

real	0m5.866s
user	0m5.490s
sys	0m0.374s
