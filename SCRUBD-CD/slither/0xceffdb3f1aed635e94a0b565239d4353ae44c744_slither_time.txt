'solc --version' running
'solc ./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

BancorBuyer.fallback() (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#56-80) ignores return value by ERC20(token).transfer(msg.sender,amount - fee) (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#75)
BancorBuyer.fallback() (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#56-80) ignores return value by ERC20(token).transfer(developer,fee) (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#76)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

BancorBuyer.fallback() (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#56-80) uses timestamp for comparisons
	Dangerous comparisons:
	- now > time_bought + 3600 (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#71)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Version constraint ^0.4.11 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput
	- SkipEmptyStringLiteral.
It is used by:
	- ^0.4.11 (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#1)
solc-0.4.11 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Variable BancorBuyer.bought_tokens (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#22) is not in mixedCase
Variable BancorBuyer.time_bought (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#24) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in BancorBuyer.buy() (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#45-54):
	External calls:
	- sale.transfer(this.balance) (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#49)
	State variables written after the call(s):
	- bought_tokens = true (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#51)
	- time_bought = now (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#53)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

BancorBuyer.developer (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#31) should be constant 
BancorBuyer.sale (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#27) should be constant 
BancorBuyer.token (0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol#29) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol analyzed (2 contracts with 94 detectors), 11 result(s) found

real	0m1.494s
user	0m1.210s
sys	0m0.286s
