{"error": null, "issues": [{"address": 81, "code": "require(_releaseTime > now)", "contract": "TokenTimelock", "description": "A control flow decision is made based on The block.timestamp environment variable.\nThe block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.", "filename": "./0x0acbcc45dde258b18c11b16b06bdc64fd91913ac.sol", "function": "constructor", "lineno": 267, "max_gas_used": 3047, "min_gas_used": 181, "severity": "Low", "sourceMap": "6579:27", "swc-id": "116", "title": "Dependence on predictable environment variable", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000f57600080fd5b60405160608061052f833981016040528080519060200190919080519060200190919080519060200190919050505b428167ffffffffffffffff1611151561005657600080fd5b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5050505b61041b806101146000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806338af3eed1461005f57806386d1a69f146100b4578063b91d4001146100c9578063fc0c546a14610106575b600080fd5b341561006a57600080fd5b61007261015b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100bf57600080fd5b6100c7610181565b005b34156100d457600080fd5b6100dc6103b0565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b341561011157600080fd5b6101196103ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1642101515156101b257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561027657600080fd5b6102c65a03f1151561028757600080fd5b5050506040518051905090506000811115156102a257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561039057600080fd5b6102c65a03f115156103a157600080fd5b50505060405180519050505b50565b600160149054906101000a900467ffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820b10b527c38e234824ee9a815d2f6546a10a27ae27e235a56db79686aa36aa58f0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 429, "code": "require(now >= releaseTime)", "contract": "TokenTimelock", "description": "A control flow decision is made based on The block.timestamp environment variable.\nThe block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.", "filename": "./0x0acbcc45dde258b18c11b16b06bdc64fd91913ac.sol", "function": "release()", "lineno": 274, "max_gas_used": 1410, "min_gas_used": 985, "severity": "Low", "sourceMap": "6746:27", "swc-id": "116", "title": "Dependence on predictable environment variable", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008", "input": "0x6060604052341561000f57600080fd5b60405160608061052f833981016040528080519060200190919080519060200190919080519060200190919050505b428167ffffffffffffffff1611151561005657600080fd5b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5050505b61041b806101146000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806338af3eed1461005f57806386d1a69f146100b4578063b91d4001146100c9578063fc0c546a14610106575b600080fd5b341561006a57600080fd5b61007261015b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100bf57600080fd5b6100c7610181565b005b34156100d457600080fd5b6100dc6103b0565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b341561011157600080fd5b6101196103ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1642101515156101b257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561027657600080fd5b6102c65a03f1151561028757600080fd5b5050506040518051905090506000811115156102a257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561039057600080fd5b6102c65a03f115156103a157600080fd5b50505060405180519050505b50565b600160149054906101000a900467ffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820b10b527c38e234824ee9a815d2f6546a10a27ae27e235a56db79686aa36aa58f00290000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000008", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x86d1a69f", "input": "0x86d1a69f", "name": "release()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 636, "code": "token.balanceOf(this)", "contract": "TokenTimelock", "description": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.", "filename": "./0x0acbcc45dde258b18c11b16b06bdc64fd91913ac.sol", "function": "release()", "lineno": 276, "max_gas_used": 77802, "min_gas_used": 6792, "severity": "Low", "sourceMap": "6799:21", "swc-id": "107", "title": "External Call To User-Supplied Address", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004", "input": "0x6060604052341561000f57600080fd5b60405160608061052f833981016040528080519060200190919080519060200190919080519060200190919050505b428167ffffffffffffffff1611151561005657600080fd5b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5050505b61041b806101146000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806338af3eed1461005f57806386d1a69f146100b4578063b91d4001146100c9578063fc0c546a14610106575b600080fd5b341561006a57600080fd5b61007261015b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100bf57600080fd5b6100c7610181565b005b34156100d457600080fd5b6100dc6103b0565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b341561011157600080fd5b6101196103ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1642101515156101b257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561027657600080fd5b6102c65a03f1151561028757600080fd5b5050506040518051905090506000811115156102a257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561039057600080fd5b6102c65a03f115156103a157600080fd5b50505060405180519050505b50565b600160149054906101000a900467ffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820b10b527c38e234824ee9a815d2f6546a10a27ae27e235a56db79686aa36aa58f0029000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x86d1a69f", "input": "0x86d1a69f", "name": "release()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 679, "code": "token", "contract": "TokenTimelock", "description": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0x0acbcc45dde258b18c11b16b06bdc64fd91913ac.sol", "function": "release()", "lineno": 279, "max_gas_used": 77802, "min_gas_used": 6792, "severity": "Medium", "sourceMap": "6855:5", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001", "input": "0x6060604052341561000f57600080fd5b60405160608061052f833981016040528080519060200190919080519060200190919080519060200190919050505b428167ffffffffffffffff1611151561005657600080fd5b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5050505b61041b806101146000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806338af3eed1461005f57806386d1a69f146100b4578063b91d4001146100c9578063fc0c546a14610106575b600080fd5b341561006a57600080fd5b61007261015b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100bf57600080fd5b6100c7610181565b005b34156100d457600080fd5b6100dc6103b0565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b341561011157600080fd5b6101196103ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1642101515156101b257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561027657600080fd5b6102c65a03f1151561028757600080fd5b5050506040518051905090506000811115156102a257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561039057600080fd5b6102c65a03f115156103a157600080fd5b50505060405180519050505b50565b600160149054906101000a900467ffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820b10b527c38e234824ee9a815d2f6546a10a27ae27e235a56db79686aa36aa58f0029000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x86d1a69f", "input": "0x86d1a69f", "name": "release()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}}, {"address": 741, "code": "beneficiary", "contract": "TokenTimelock", "description": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0x0acbcc45dde258b18c11b16b06bdc64fd91913ac.sol", "function": "release()", "lineno": 279, "max_gas_used": 77802, "min_gas_used": 6792, "severity": "Medium", "sourceMap": "6870:11", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001", "input": "0x6060604052341561000f57600080fd5b60405160608061052f833981016040528080519060200190919080519060200190919080519060200190919050505b428167ffffffffffffffff1611151561005657600080fd5b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5050505b61041b806101146000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806338af3eed1461005f57806386d1a69f146100b4578063b91d4001146100c9578063fc0c546a14610106575b600080fd5b341561006a57600080fd5b61007261015b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100bf57600080fd5b6100c7610181565b005b34156100d457600080fd5b6100dc6103b0565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b341561011157600080fd5b6101196103ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1642101515156101b257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561027657600080fd5b6102c65a03f1151561028757600080fd5b5050506040518051905090506000811115156102a257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561039057600080fd5b6102c65a03f115156103a157600080fd5b50505060405180519050505b50565b600160149054906101000a900467ffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820b10b527c38e234824ee9a815d2f6546a10a27ae27e235a56db79686aa36aa58f0029000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x86d1a69f", "input": "0x86d1a69f", "name": "release()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}}, {"address": 918, "code": "token.transfer(beneficiary, amount)", "contract": "TokenTimelock", "description": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.", "filename": "./0x0acbcc45dde258b18c11b16b06bdc64fd91913ac.sol", "function": "release()", "lineno": 279, "max_gas_used": 77802, "min_gas_used": 6792, "severity": "Low", "sourceMap": "6855:35", "swc-id": "107", "title": "External Call To User-Supplied Address", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004", "input": "0x6060604052341561000f57600080fd5b60405160608061052f833981016040528080519060200190919080519060200190919080519060200190919050505b428167ffffffffffffffff1611151561005657600080fd5b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5050505b61041b806101146000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806338af3eed1461005f57806386d1a69f146100b4578063b91d4001146100c9578063fc0c546a14610106575b600080fd5b341561006a57600080fd5b61007261015b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100bf57600080fd5b6100c7610181565b005b34156100d457600080fd5b6100dc6103b0565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b341561011157600080fd5b6101196103ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1642101515156101b257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561027657600080fd5b6102c65a03f1151561028757600080fd5b5050506040518051905090506000811115156102a257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561039057600080fd5b6102c65a03f115156103a157600080fd5b50505060405180519050505b50565b600160149054906101000a900467ffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820b10b527c38e234824ee9a815d2f6546a10a27ae27e235a56db79686aa36aa58f0029000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x86d1a69f", "input": "0x86d1a69f", "name": "release()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 918, "code": "token.transfer(beneficiary, amount)", "contract": "TokenTimelock", "description": "Multiple calls are executed in the same transaction.\nThis call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\u2019re part of your own codebase).", "filename": "./0x0acbcc45dde258b18c11b16b06bdc64fd91913ac.sol", "function": "release()", "lineno": 279, "max_gas_used": 77802, "min_gas_used": 6792, "severity": "Low", "sourceMap": "6855:35", "swc-id": "113", "title": "Multiple Calls in a Single Transaction", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001", "input": "0x6060604052341561000f57600080fd5b60405160608061052f833981016040528080519060200190919080519060200190919080519060200190919050505b428167ffffffffffffffff1611151561005657600080fd5b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5050505b61041b806101146000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806338af3eed1461005f57806386d1a69f146100b4578063b91d4001146100c9578063fc0c546a14610106575b600080fd5b341561006a57600080fd5b61007261015b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100bf57600080fd5b6100c7610181565b005b34156100d457600080fd5b6100dc6103b0565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b341561011157600080fd5b6101196103ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1642101515156101b257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561027657600080fd5b6102c65a03f1151561028757600080fd5b5050506040518051905090506000811115156102a257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561039057600080fd5b6102c65a03f115156103a157600080fd5b50505060405180519050505b50565b600160149054906101000a900467ffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820b10b527c38e234824ee9a815d2f6546a10a27ae27e235a56db79686aa36aa58f00290000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x86d1a69f", "input": "0x86d1a69f", "name": "release()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 918, "code": "token.transfer(beneficiary, amount)", "contract": "TokenTimelock", "description": "Write to persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0x0acbcc45dde258b18c11b16b06bdc64fd91913ac.sol", "function": "release()", "lineno": 279, "max_gas_used": 77802, "min_gas_used": 6792, "severity": "Medium", "sourceMap": "6855:35", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001", "input": "0x6060604052341561000f57600080fd5b60405160608061052f833981016040528080519060200190919080519060200190919080519060200190919050505b428167ffffffffffffffff1611151561005657600080fd5b826000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160146101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505b5050505b61041b806101146000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806338af3eed1461005f57806386d1a69f146100b4578063b91d4001146100c9578063fc0c546a14610106575b600080fd5b341561006a57600080fd5b61007261015b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100bf57600080fd5b6100c7610181565b005b34156100d457600080fd5b6100dc6103b0565b604051808267ffffffffffffffff1667ffffffffffffffff16815260200191505060405180910390f35b341561011157600080fd5b6101196103ca565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160149054906101000a900467ffffffffffffffff1667ffffffffffffffff1642101515156101b257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306000604051602001526040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b151561027657600080fd5b6102c65a03f1151561028757600080fd5b5050506040518051905090506000811115156102a257600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561039057600080fd5b6102c65a03f115156103a157600080fd5b50505060405180519050505b50565b600160149054906101000a900467ffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16815600a165627a7a72305820b10b527c38e234824ee9a815d2f6546a10a27ae27e235a56db79686aa36aa58f0029000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x86d1a69f", "input": "0x86d1a69f", "name": "release()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}}, {"address": 2521, "code": "function setTokenPriceAsRatio(uint _tokenCount) public\r\n        onlyOwner\r\n        notClosed\r\n    {\r\n        currentPrice = WEI_DECIMALS / _tokenCount;\r\n    }", "contract": "Crowdsale", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x0acbcc45dde258b18c11b16b06bdc64fd91913ac.sol", "function": "setTokenPriceAsRatio(uint256)", "lineno": 124, "max_gas_used": 2905, "min_gas_used": 2150, "severity": "Medium", "sourceMap": "2803:158", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052600080556000600460006101000a81548160ff0219169083600381111561002757fe5b02179055506000600555600060065560a6670de0b6b3a764000081151561004a57fe5b046007556000600955341561005e57600080fd5b6040516020806114ca833981016040528080519060200190919050505b5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505b6113b9806101116000396000f3006060604052361561011b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c3f6acf1461016157806318160ddd146101985780632cd046eb146101c15780632e0f2625146101ea5780632e1a7d4d1461021357806332cb6b0c1461023657806338af3eed1461025f578063412664ae146102b45780634f871922146102f657806356de96db1461031957806366b5e2d81461033f5780636a61e5fc1461036857806379ba50971461038b5780638da5cb5b146103a0578063968ed600146103f55780639d1b464a1461041e578063c4d66de814610447578063d387cad914610480578063d4ee1d90146104a9578063f2fde38b146104fe578063fc0c546a14610537575b61015f5b6001600381111561012c57fe5b600460009054906101000a900460ff16600381111561014757fe5b14151561015357600080fd5b61015b61058c565b5b5b565b005b341561016c57600080fd5b6101746106ce565b6040518082600381111561018457fe5b60ff16815260200191505060405180910390f35b34156101a357600080fd5b6101ab6106e1565b6040518082815260200191505060405180910390f35b34156101cc57600080fd5b6101d46106e7565b6040518082815260200191505060405180910390f35b34156101f557600080fd5b6101fd6106ed565b6040518082815260200191505060405180910390f35b341561021e57600080fd5b61023460048080359060200190919050506106f9565b005b341561024157600080fd5b610249610834565b6040518082815260200191505060405180910390f35b341561026a57600080fd5b610272610846565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102bf57600080fd5b6102f4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061086c565b005b341561030157600080fd5b6103176004808035906020019091905050610936565b005b341561032457600080fd5b61033d600480803560ff169060200190919050506109e7565b005b341561034a57600080fd5b610352610c12565b6040518082815260200191505060405180910390f35b341561037357600080fd5b6103896004808035906020019091905050610c1d565b005b341561039657600080fd5b61039e610cbb565b005b34156103ab57600080fd5b6103b3610e1c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561040057600080fd5b610408610e42565b6040518082815260200191505060405180910390f35b341561042957600080fd5b610431610e48565b6040518082815260200191505060405180910390f35b341561045257600080fd5b61047e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610e4e565b005b341561048b57600080fd5b610493610f63565b6040518082815260200191505060405180910390f35b34156104b457600080fd5b6104bc610f6f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561050957600080fd5b610535600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610f95565b005b341561054257600080fd5b61054a611037565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000806000341415151561059f57600080fd5b3491506105d16007546105c3670de0b6b3a76400008561105d90919063ffffffff16565b61109190919063ffffffff16565b90506105dc816110ad565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156106a45761064560016009546110e290919063ffffffff16565b6009819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6106b9826006546110e290919063ffffffff16565b6006819055506106c93382611101565b5b5050565b600460009054906101000a900460ff1681565b60055481565b60095481565b670de0b6b3a764000081565b6000805490506000811115151561070f57600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561079257600080fd5b6000821180156107b957503073ffffffffffffffffffffffffffffffffffffffff16318211155b15156107c457600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151561082657600080fd5b5b5b806000819055505b5050565b670de0b6b3a764000063caa7e2000281565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108ca57600080fd5b600160038111156108d757fe5b600460009054906101000a900460ff1660038111156108f257fe5b1415156108fe57600080fd5b610919670de0b6b3a76400008361105d90919063ffffffff16565b9050610924816110ad565b61092e8382611101565b5b5b5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561099257600080fd5b6002600381111561099f57fe5b600460009054906101000a900460ff1660038111156109ba57fe5b141515156109c757600080fd5b80670de0b6b3a76400008115156109da57fe5b046007819055505b5b5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a4357600080fd5b60026003811115610a5057fe5b600460009054906101000a900460ff166003811115610a6b57fe5b14151515610a7857600080fd5b60006003811115610a8557fe5b600460009054906101000a900460ff166003811115610aa057fe5b148015610ac3575060016003811115610ab557fe5b816003811115610ac157fe5b145b80610b15575060016003811115610ad657fe5b600460009054906101000a900460ff166003811115610af157fe5b148015610b14575060026003811115610b0657fe5b816003811115610b1257fe5b145b5b80610b66575060016003811115610b2857fe5b600460009054906101000a900460ff166003811115610b4357fe5b148015610b655750600380811115610b5757fe5b816003811115610b6357fe5b145b5b80610bb75750600380811115610b7857fe5b600460009054906101000a900460ff166003811115610b9357fe5b148015610bb6575060016003811115610ba857fe5b816003811115610bb457fe5b145b5b1515610bc257600080fd5b60026003811115610bcf57fe5b816003811115610bdb57fe5b1415610bea57610be961128c565b5b80600460006101000a81548160ff02191690836003811115610c0857fe5b02179055505b5b50565b600060095490505b90565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c7957600080fd5b60026003811115610c8657fe5b600460009054906101000a900460ff166003811115610ca157fe5b14151515610cae57600080fd5b806007819055505b5b5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d1757600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60075481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610eaa57600080fd5b6000806003811115610eb857fe5b600460009054906101000a900460ff166003811115610ed357fe5b141515610edf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f1b57600080fd5b81600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b505b50565b670de0b6b3a764000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ff157600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808284029050600084148061107e575082848281151561107b57fe5b04145b151561108657fe5b8091505b5092915050565b600080828481151561109f57fe5b0490508091505b5092915050565b670de0b6b3a764000063caa7e200026110d1826005546110e290919063ffffffff16565b111515156110de57600080fd5b5b50565b60008082840190508381101515156110f657fe5b8091505b5092915050565b6000805490506000811115151561111757600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000819055506111478261136e565b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561121457600080fd5b6102c65a03f1151561122557600080fd5b50505060405180519050508273ffffffffffffffffffffffffffffffffffffffff167f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de2836040518082815260200191505060405180910390a25b806000819055505b505050565b600080549050600081111515156112a257600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600081905550600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663be9a65556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b151561134e57600080fd5b6102c65a03f1151561135f57600080fd5b5050505b806000819055505b50565b611383816005546110e290919063ffffffff16565b6005819055505b505600a165627a7a723058204853c99167cec466280fe7acae52fa0caef041fb1c1ec29deffaf137bbe969c90029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x4f871922", "input": "0x4f871922", "name": "setTokenPriceAsRatio(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}, {"address": 2752, "code": "function setState(State _newState)\r\n        public\r\n        onlyOwner\r\n    {\r\n        require(currentState != State.CLOSED);\r\n        require(\r\n            (currentState == State.INIT && _newState == State.ICO ||\r\n             currentState == State.ICO && _newState == State.CLOSED ||\r\n            currentState == State.ICO && _newState == State.PAUSE ||\r\n            currentState == State.PAUSE && _newState == State.ICO)\r\n        );\r\n\r\n        if(_newState == State.CLOSED){\r\n            _finish();\r\n        }\r\n        currentState = _newState;\r\n    }", "contract": "Crowdsale", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x0acbcc45dde258b18c11b16b06bdc64fd91913ac.sol", "function": "setState(uint8)", "lineno": 131, "max_gas_used": 4210, "min_gas_used": 3125, "severity": "Medium", "sourceMap": "2969:553", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052600080556000600460006101000a81548160ff0219169083600381111561002757fe5b02179055506000600555600060065560a6670de0b6b3a764000081151561004a57fe5b046007556000600955341561005e57600080fd5b6040516020806114ca833981016040528080519060200190919050505b5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505b6113b9806101116000396000f3006060604052361561011b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630c3f6acf1461016157806318160ddd146101985780632cd046eb146101c15780632e0f2625146101ea5780632e1a7d4d1461021357806332cb6b0c1461023657806338af3eed1461025f578063412664ae146102b45780634f871922146102f657806356de96db1461031957806366b5e2d81461033f5780636a61e5fc1461036857806379ba50971461038b5780638da5cb5b146103a0578063968ed600146103f55780639d1b464a1461041e578063c4d66de814610447578063d387cad914610480578063d4ee1d90146104a9578063f2fde38b146104fe578063fc0c546a14610537575b61015f5b6001600381111561012c57fe5b600460009054906101000a900460ff16600381111561014757fe5b14151561015357600080fd5b61015b61058c565b5b5b565b005b341561016c57600080fd5b6101746106ce565b6040518082600381111561018457fe5b60ff16815260200191505060405180910390f35b34156101a357600080fd5b6101ab6106e1565b6040518082815260200191505060405180910390f35b34156101cc57600080fd5b6101d46106e7565b6040518082815260200191505060405180910390f35b34156101f557600080fd5b6101fd6106ed565b6040518082815260200191505060405180910390f35b341561021e57600080fd5b61023460048080359060200190919050506106f9565b005b341561024157600080fd5b610249610834565b6040518082815260200191505060405180910390f35b341561026a57600080fd5b610272610846565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102bf57600080fd5b6102f4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061086c565b005b341561030157600080fd5b6103176004808035906020019091905050610936565b005b341561032457600080fd5b61033d600480803560ff169060200190919050506109e7565b005b341561034a57600080fd5b610352610c12565b6040518082815260200191505060405180910390f35b341561037357600080fd5b6103896004808035906020019091905050610c1d565b005b341561039657600080fd5b61039e610cbb565b005b34156103ab57600080fd5b6103b3610e1c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561040057600080fd5b610408610e42565b6040518082815260200191505060405180910390f35b341561042957600080fd5b610431610e48565b6040518082815260200191505060405180910390f35b341561045257600080fd5b61047e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610e4e565b005b341561048b57600080fd5b610493610f63565b6040518082815260200191505060405180910390f35b34156104b457600080fd5b6104bc610f6f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561050957600080fd5b610535600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610f95565b005b341561054257600080fd5b61054a611037565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000806000341415151561059f57600080fd5b3491506105d16007546105c3670de0b6b3a76400008561105d90919063ffffffff16565b61109190919063ffffffff16565b90506105dc816110ad565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615156106a45761064560016009546110e290919063ffffffff16565b6009819055506001600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b6106b9826006546110e290919063ffffffff16565b6006819055506106c93382611101565b5b5050565b600460009054906101000a900460ff1681565b60055481565b60095481565b670de0b6b3a764000081565b6000805490506000811115151561070f57600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561079257600080fd5b6000821180156107b957503073ffffffffffffffffffffffffffffffffffffffff16318211155b15156107c457600080fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050151561082657600080fd5b5b5b806000819055505b5050565b670de0b6b3a764000063caa7e2000281565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156108ca57600080fd5b600160038111156108d757fe5b600460009054906101000a900460ff1660038111156108f257fe5b1415156108fe57600080fd5b610919670de0b6b3a76400008361105d90919063ffffffff16565b9050610924816110ad565b61092e8382611101565b5b5b5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561099257600080fd5b6002600381111561099f57fe5b600460009054906101000a900460ff1660038111156109ba57fe5b141515156109c757600080fd5b80670de0b6b3a76400008115156109da57fe5b046007819055505b5b5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610a4357600080fd5b60026003811115610a5057fe5b600460009054906101000a900460ff166003811115610a6b57fe5b14151515610a7857600080fd5b60006003811115610a8557fe5b600460009054906101000a900460ff166003811115610aa057fe5b148015610ac3575060016003811115610ab557fe5b816003811115610ac157fe5b145b80610b15575060016003811115610ad657fe5b600460009054906101000a900460ff166003811115610af157fe5b148015610b14575060026003811115610b0657fe5b816003811115610b1257fe5b145b5b80610b66575060016003811115610b2857fe5b600460009054906101000a900460ff166003811115610b4357fe5b148015610b655750600380811115610b5757fe5b816003811115610b6357fe5b145b5b80610bb75750600380811115610b7857fe5b600460009054906101000a900460ff166003811115610b9357fe5b148015610bb6575060016003811115610ba857fe5b816003811115610bb457fe5b145b5b1515610bc257600080fd5b60026003811115610bcf57fe5b816003811115610bdb57fe5b1415610bea57610be961128c565b5b80600460006101000a81548160ff02191690836003811115610c0857fe5b02179055505b5b50565b600060095490505b90565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610c7957600080fd5b60026003811115610c8657fe5b600460009054906101000a900460ff166003811115610ca157fe5b14151515610cae57600080fd5b806007819055505b5b5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610d1757600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60065481565b60075481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610eaa57600080fd5b6000806003811115610eb857fe5b600460009054906101000a900460ff166003811115610ed357fe5b141515610edf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610f1b57600080fd5b81600460016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b505b50565b670de0b6b3a764000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515610ff157600080fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b50565b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808284029050600084148061107e575082848281151561107b57fe5b04145b151561108657fe5b8091505b5092915050565b600080828481151561109f57fe5b0490508091505b5092915050565b670de0b6b3a764000063caa7e200026110d1826005546110e290919063ffffffff16565b111515156110de57600080fd5b5b50565b60008082840190508381101515156110f657fe5b8091505b5092915050565b6000805490506000811115151561111757600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6000819055506111478261136e565b600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1984846000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561121457600080fd5b6102c65a03f1151561122557600080fd5b50505060405180519050508273ffffffffffffffffffffffffffffffffffffffff167f69ca02dd4edd7bf0a4abb9ed3b7af3f14778db5d61921c7dc7cd545266326de2836040518082815260200191505060405180910390a25b806000819055505b505050565b600080549050600081111515156112a257600080fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600081905550600460019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663be9a65556040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b151561134e57600080fd5b6102c65a03f1151561135f57600080fd5b5050505b806000819055505b50565b611383816005546110e290919063ffffffff16565b6005819055505b505600a165627a7a723058204853c99167cec466280fe7acae52fa0caef041fb1c1ec29deffaf137bbe969c90029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x56de96dbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdb04", "input": "0x56de96dbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdbdb04", "name": "setState(uint8)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}], "success": true}
