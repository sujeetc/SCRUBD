{"error": null, "issues": [{"address": 153, "code": "function AddMessage(address _adr,uint _val,string _data)\r\n    public\r\n    {\r\n        LastMsg.Sender = _adr;\r\n        LastMsg.Time = now;\r\n        LastMsg.Val = _val;\r\n        LastMsg.Data = _data;\r\n        History.push(LastMsg);\r\n    }", "contract": "Log", "description": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. ", "filename": "./0x8c7777c45481dba411450c228cb692ac3d550344.sol", "function": "AddMessage(address,uint256,string)", "lineno": 62, "max_gas_used": 341187, "min_gas_used": 76761, "severity": "High", "sourceMap": "1132:235", "swc-id": "101", "title": "Integer Arithmetic Bugs", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a7230582051206ccdebd457e6aa24abe5ec38089c06129c685b2b73f29885a51b13ee5ea80029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x4c2f04a4ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc", "input": "0x4c2f04a4ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc", "name": "AddMessage(address,uint256,string)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}, {"address": 364, "code": "Message[] public History", "contract": "Log", "description": "The arithmetic operator can underflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. ", "filename": "./0x8c7777c45481dba411450c228cb692ac3d550344.sol", "function": "History(uint256)", "lineno": 58, "max_gas_used": 8739, "min_gas_used": 7273, "severity": "High", "sourceMap": "1067:24", "swc-id": "101", "title": "Integer Arithmetic Bugs", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a7230582051206ccdebd457e6aa24abe5ec38089c06129c685b2b73f29885a51b13ee5ea80029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000030", "input": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000030", "name": "AddMessage(address,uint256,string)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xa21f0368", "input": "0xa21f0368", "name": "History(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}, {"address": 397, "code": "msg.sender.call.value(_am)()", "contract": "ETH_VAULT", "description": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.", "filename": "./0x8c7777c45481dba411450c228cb692ac3d550344.sol", "function": "CashOut(uint256)", "lineno": 35, "max_gas_used": 100059, "min_gas_used": 10312, "severity": "Low", "sourceMap": "668:28", "swc-id": "107", "title": "External Call To User-Supplied Address", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x200000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052670de0b6b3a7640000600255341561001b57600080fd5b6040516020806105168339810160405280805190602001909190505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061048e806100886000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461006457806327e235e31461008d5780639ffa0711146100da578063ed21248c146100f2575b005b341561006f57600080fd5b6100776100fc565b6040518082815260200191505060405180910390f35b341561009857600080fd5b6100c4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610102565b6040518082815260200191505060405180910390f35b6100f0600480803590602001909190505061011a565b005b6100fa6102f8565b005b60025481565b60006020528060005260406000206000915090505481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115156102f5573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f192505050156102f457806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156102df57600080fd5b6102c65a03f115156102f057600080fd5b5050505b5b50565b60025434111561046057346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561044b57600080fd5b6102c65a03f1151561045c57600080fd5b5050505b5600a165627a7a7230582006f1d65a2fa040bc941cce46f37557744582e33dba892c6cd26bb64888bf43b10029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x9ffa0711", "input": "0x9ffa0711", "name": "CashOut(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 474, "code": "balances[msg.sender]-=_am", "contract": "ETH_VAULT", "description": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0x8c7777c45481dba411450c228cb692ac3d550344.sol", "function": "CashOut(uint256)", "lineno": 37, "max_gas_used": 100059, "min_gas_used": 10312, "severity": "Medium", "sourceMap": ":25", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x2000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052670de0b6b3a7640000600255341561001b57600080fd5b6040516020806105168339810160405280805190602001909190505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061048e806100886000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461006457806327e235e31461008d5780639ffa0711146100da578063ed21248c146100f2575b005b341561006f57600080fd5b6100776100fc565b6040518082815260200191505060405180910390f35b341561009857600080fd5b6100c4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610102565b6040518082815260200191505060405180910390f35b6100f0600480803590602001909190505061011a565b005b6100fa6102f8565b005b60025481565b60006020528060005260406000206000915090505481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115156102f5573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f192505050156102f457806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156102df57600080fd5b6102c65a03f115156102f057600080fd5b5050505b5b50565b60025434111561046057346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561044b57600080fd5b6102c65a03f1151561045c57600080fd5b5050505b5600a165627a7a7230582006f1d65a2fa040bc941cce46f37557744582e33dba892c6cd26bb64888bf43b10029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x9ffa0711", "input": "0x9ffa0711", "name": "CashOut(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 481, "code": "balances[msg.sender]-=_am", "contract": "ETH_VAULT", "description": "Write to persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0x8c7777c45481dba411450c228cb692ac3d550344.sol", "function": "CashOut(uint256)", "lineno": 37, "max_gas_used": 100059, "min_gas_used": 10312, "severity": "Medium", "sourceMap": ":25", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x2000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052670de0b6b3a7640000600255341561001b57600080fd5b6040516020806105168339810160405280805190602001909190505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061048e806100886000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461006457806327e235e31461008d5780639ffa0711146100da578063ed21248c146100f2575b005b341561006f57600080fd5b6100776100fc565b6040518082815260200191505060405180910390f35b341561009857600080fd5b6100c4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610102565b6040518082815260200191505060405180910390f35b6100f0600480803590602001909190505061011a565b005b6100fa6102f8565b005b60025481565b60006020528060005260406000206000915090505481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115156102f5573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f192505050156102f457806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156102df57600080fd5b6102c65a03f115156102f057600080fd5b5050505b5b50565b60025434111561046057346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561044b57600080fd5b6102c65a03f1151561045c57600080fd5b5050505b5600a165627a7a7230582006f1d65a2fa040bc941cce46f37557744582e33dba892c6cd26bb64888bf43b10029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x9ffa0711", "input": "0x9ffa0711", "name": "CashOut(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 488, "code": "TransferLog", "contract": "ETH_VAULT", "description": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0x8c7777c45481dba411450c228cb692ac3d550344.sol", "function": "CashOut(uint256)", "lineno": 38, "max_gas_used": 100059, "min_gas_used": 10312, "severity": "Medium", "sourceMap": "774:11", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x2000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052670de0b6b3a7640000600255341561001b57600080fd5b6040516020806105168339810160405280805190602001909190505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061048e806100886000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461006457806327e235e31461008d5780639ffa0711146100da578063ed21248c146100f2575b005b341561006f57600080fd5b6100776100fc565b6040518082815260200191505060405180910390f35b341561009857600080fd5b6100c4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610102565b6040518082815260200191505060405180910390f35b6100f0600480803590602001909190505061011a565b005b6100fa6102f8565b005b60025481565b60006020528060005260406000206000915090505481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115156102f5573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f192505050156102f457806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156102df57600080fd5b6102c65a03f115156102f057600080fd5b5050505b5b50565b60025434111561046057346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561044b57600080fd5b6102c65a03f1151561045c57600080fd5b5050505b5600a165627a7a7230582006f1d65a2fa040bc941cce46f37557744582e33dba892c6cd26bb64888bf43b10029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x9ffa0711", "input": "0x9ffa0711", "name": "CashOut(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 741, "code": "TransferLog.AddMessage(msg.sender,_am,\"CashOut\")", "contract": "ETH_VAULT", "description": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.", "filename": "./0x8c7777c45481dba411450c228cb692ac3d550344.sol", "function": "CashOut(uint256)", "lineno": 38, "max_gas_used": 100059, "min_gas_used": 10312, "severity": "Low", "sourceMap": "774:48", "swc-id": "107", "title": "External Call To User-Supplied Address", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x200000000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "111111111111111111111111deadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "input": "0x6060604052670de0b6b3a7640000600255341561001b57600080fd5b6040516020806105168339810160405280805190602001909190505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061048e806100886000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461006457806327e235e31461008d5780639ffa0711146100da578063ed21248c146100f2575b005b341561006f57600080fd5b6100776100fc565b6040518082815260200191505060405180910390f35b341561009857600080fd5b6100c4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610102565b6040518082815260200191505060405180910390f35b6100f0600480803590602001909190505061011a565b005b6100fa6102f8565b005b60025481565b60006020528060005260406000206000915090505481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115156102f5573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f192505050156102f457806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156102df57600080fd5b6102c65a03f115156102f057600080fd5b5050505b5b50565b60025434111561046057346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561044b57600080fd5b6102c65a03f1151561045c57600080fd5b5050505b5600a165627a7a7230582006f1d65a2fa040bc941cce46f37557744582e33dba892c6cd26bb64888bf43b10029111111111111111111111111deadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x9ffa0711", "input": "0x9ffa0711", "name": "CashOut(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 741, "code": "TransferLog.AddMessage(msg.sender,_am,\"CashOut\")", "contract": "ETH_VAULT", "description": "Multiple calls are executed in the same transaction.\nThis call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\u2019re part of your own codebase).", "filename": "./0x8c7777c45481dba411450c228cb692ac3d550344.sol", "function": "CashOut(uint256)", "lineno": 38, "max_gas_used": 100059, "min_gas_used": 10312, "severity": "Low", "sourceMap": "774:48", "swc-id": "113", "title": "Multiple Calls in a Single Transaction", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0xc0003", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052670de0b6b3a7640000600255341561001b57600080fd5b6040516020806105168339810160405280805190602001909190505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061048e806100886000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461006457806327e235e31461008d5780639ffa0711146100da578063ed21248c146100f2575b005b341561006f57600080fd5b6100776100fc565b6040518082815260200191505060405180910390f35b341561009857600080fd5b6100c4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610102565b6040518082815260200191505060405180910390f35b6100f0600480803590602001909190505061011a565b005b6100fa6102f8565b005b60025481565b60006020528060005260406000206000915090505481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115156102f5573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f192505050156102f457806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156102df57600080fd5b6102c65a03f115156102f057600080fd5b5050505b5b50565b60025434111561046057346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561044b57600080fd5b6102c65a03f1151561045c57600080fd5b5050505b5600a165627a7a7230582006f1d65a2fa040bc941cce46f37557744582e33dba892c6cd26bb64888bf43b10029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x9ffa0711", "input": "0x9ffa0711", "name": "CashOut(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 741, "code": "TransferLog.AddMessage(msg.sender,_am,\"CashOut\")", "contract": "ETH_VAULT", "description": "Write to persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0x8c7777c45481dba411450c228cb692ac3d550344.sol", "function": "CashOut(uint256)", "lineno": 38, "max_gas_used": 100059, "min_gas_used": 10312, "severity": "Medium", "sourceMap": "774:48", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x2000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052670de0b6b3a7640000600255341561001b57600080fd5b6040516020806105168339810160405280805190602001909190505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061048e806100886000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461006457806327e235e31461008d5780639ffa0711146100da578063ed21248c146100f2575b005b341561006f57600080fd5b6100776100fc565b6040518082815260200191505060405180910390f35b341561009857600080fd5b6100c4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610102565b6040518082815260200191505060405180910390f35b6100f0600480803590602001909190505061011a565b005b6100fa6102f8565b005b60025481565b60006020528060005260406000206000915090505481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115156102f5573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f192505050156102f457806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156102df57600080fd5b6102c65a03f115156102f057600080fd5b5050505b5b50565b60025434111561046057346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561044b57600080fd5b6102c65a03f1151561045c57600080fd5b5050505b5600a165627a7a7230582006f1d65a2fa040bc941cce46f37557744582e33dba892c6cd26bb64888bf43b10029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x9ffa0711", "input": "0x9ffa0711", "name": "CashOut(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 746, "code": "History.push(LastMsg)", "contract": "Log", "description": "The arithmetic operator can underflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. ", "filename": "./0x8c7777c45481dba411450c228cb692ac3d550344.sol", "function": "AddMessage(address,uint256,string)", "lineno": 69, "max_gas_used": 341187, "min_gas_used": 76761, "severity": "High", "sourceMap": "1338:21", "swc-id": "101", "title": "Integer Arithmetic Bugs", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a7230582051206ccdebd457e6aa24abe5ec38089c06129c685b2b73f29885a51b13ee5ea80029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000030", "input": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000030", "name": "AddMessage(address,uint256,string)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 805, "code": "Message[] public History", "contract": "Log", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x8c7777c45481dba411450c228cb692ac3d550344.sol", "function": "History(uint256)", "lineno": 58, "max_gas_used": 1104, "min_gas_used": 1009, "severity": "Medium", "sourceMap": "1067:24", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a7230582051206ccdebd457e6aa24abe5ec38089c06129c685b2b73f29885a51b13ee5ea80029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xa21f0368", "input": "0xa21f0368", "name": "History(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}}, {"address": 900, "contract": "Log", "description": "The arithmetic operator can underflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.", "function": "AddMessage(address,uint256,string)", "max_gas_used": 341187, "min_gas_used": 76761, "severity": "Low", "sourceMap": "912:458::-", "swc-id": "101", "title": "Integer Arithmetic Bugs", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a7230582051206ccdebd457e6aa24abe5ec38089c06129c685b2b73f29885a51b13ee5ea80029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000024", "input": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000024", "name": "AddMessage(address,uint256,string)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000040", "input": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000040", "name": "AddMessage(address,uint256,string)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}, {"address": 1105, "code": "TransferLog.AddMessage(msg.sender,msg.value,\"Deposit\")", "contract": "ETH_VAULT", "description": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.", "filename": "./0x8c7777c45481dba411450c228cb692ac3d550344.sol", "function": "Deposit()", "lineno": 24, "max_gas_used": 64796, "min_gas_used": 9425, "severity": "Low", "sourceMap": "444:54", "swc-id": "107", "title": "External Call To User-Supplied Address", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x10003cc3c7840040", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "242424242424242424242424deadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "input": "0x6060604052670de0b6b3a7640000600255341561001b57600080fd5b6040516020806105168339810160405280805190602001909190505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061048e806100886000396000f300606060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461006457806327e235e31461008d5780639ffa0711146100da578063ed21248c146100f2575b005b341561006f57600080fd5b6100776100fc565b6040518082815260200191505060405180910390f35b341561009857600080fd5b6100c4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610102565b6040518082815260200191505060405180910390f35b6100f0600480803590602001909190505061011a565b005b6100fa6102f8565b005b60025481565b60006020528060005260406000206000915090505481565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811115156102f5573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f192505050156102f457806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156102df57600080fd5b6102c65a03f115156102f057600080fd5b5050505b5b50565b60025434111561046057346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561044b57600080fd5b6102c65a03f1151561045c57600080fd5b5050505b5600a165627a7a7230582006f1d65a2fa040bc941cce46f37557744582e33dba892c6cd26bb64888bf43b10029242424242424242424242424deadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xed21248c", "input": "0xed21248c", "name": "Deposit()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0xde0b6b3a7640001"}]}}], "success": true}
