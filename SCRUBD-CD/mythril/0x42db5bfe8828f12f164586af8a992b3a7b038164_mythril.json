{"error": null, "issues": [{"address": 131, "code": "function kill() {\r\n        require(msg.sender == Owner);\r\n        selfdestruct(msg.sender);\r\n    }", "contract": "firstTest", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "kill()", "lineno": 26, "max_gas_used": 195, "min_gas_used": 100, "severity": "Medium", "sourceMap": "612:98", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x41c0e1b5", "input": "0x41c0e1b5", "name": "kill()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x1"}]}}, {"address": 193, "code": "contract firstTest\r\n{\r\n    address Owner = 0x46Feeb381e90f7e30635B4F33CE3F6fA8EA6ed9b;\r\n    address emails = 0x25df6e3da49f41ef5b99e139c87abc12c3583d13;\r\n    address adr;\r\n    uint256 public Limit= 1000000000000000000;\r\n    \r\n    function Set(address dataBase, uint256 limit) \r\n    {\r\n        require(msg.sender == Owner); //checking the owner\r\n        Limit = limit;\r\n        emails = dataBase;\r\n    }\r\n    \r\n    function changeOwner(address adr){\r\n        // update Owner=msg.sender;\r\n    }\r\n    \r\n    function()payable{\r\n        //if owner\r\n        withdrawal();\r\n    }\r\n    \r\n    function kill() {\r\n        require(msg.sender == Owner);\r\n        selfdestruct(msg.sender);\r\n    }\r\n    \r\n    function withdrawal()\r\n    payable public\r\n    {\r\n        adr=msg.sender;\r\n        if(msg.value>Limit)\r\n        {  \r\n            emails.delegatecall(bytes4(sha3(\"logEvent()\")));\r\n            adr.send(this.balance);\r\n            \r\n        }\r\n    }\r\n    \r\n}", "contract": "firstTest", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "constructor", "lineno": 3, "max_gas_used": 77531, "min_gas_used": 16776, "severity": "Medium", "sourceMap": "28:949", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}}, {"address": 606, "code": "withdrawal()", "contract": "firstTest", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "fallback", "lineno": 23, "max_gas_used": 64013, "min_gas_used": 8508, "severity": "Medium", "sourceMap": ":12::i", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x", "input": "0x", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0xde0b6b3a7640001"}]}}, {"address": 606, "code": "function withdrawal()\r\n    payable public\r\n    {\r\n        adr=msg.sender;\r\n        if(msg.value>Limit)\r\n        {  \r\n            emails.delegatecall(bytes4(sha3(\"logEvent()\")));\r\n            adr.send(this.balance);\r\n            \r\n        }\r\n    }", "contract": "firstTest", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "withdrawal()", "lineno": 31, "max_gas_used": 64120, "min_gas_used": 8615, "severity": "Medium", "sourceMap": "722:246", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xd4e93292", "input": "0xd4e93292", "name": "withdrawal()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0xde0b6b3a7640001"}]}}, {"address": 624, "code": "adr", "contract": "firstTest", "description": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "fallback", "lineno": 38, "max_gas_used": 101225, "min_gas_used": 11018, "severity": "Low", "sourceMap": "913:3", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x10dc0b7204e0d7013", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00", "input": "0x00", "name": "unknown", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0xde0b6b3a7640001"}]}}, {"address": 624, "code": "adr", "contract": "firstTest", "description": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "withdrawal()", "lineno": 38, "max_gas_used": 101189, "min_gas_used": 10982, "severity": "Low", "sourceMap": "913:3", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xd4e93292", "input": "0xd4e93292", "name": "withdrawal()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0xde0b6b3a7640001"}]}}, {"address": 726, "code": "adr.send(this.balance)", "contract": "firstTest", "description": "Multiple calls are executed in the same transaction.\nThis call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\u2019re part of your own codebase).", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "fallback", "lineno": 38, "max_gas_used": 101092, "min_gas_used": 10885, "severity": "Low", "sourceMap": "913:22", "swc-id": "113", "title": "Multiple Calls in a Single Transaction", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x", "input": "0x", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0xde0b6b3a7640001"}]}}, {"address": 726, "code": "adr.send(this.balance)", "contract": "firstTest", "description": "Write to persistent state following external call\nThe contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "fallback", "lineno": 38, "max_gas_used": 101092, "min_gas_used": 10885, "severity": "Low", "sourceMap": "913:22", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x", "input": "0x", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0xde0b6b3a7640001"}]}}, {"address": 726, "code": "adr.send(this.balance)", "contract": "firstTest", "description": "The value of the call is dependent on balance or storage write\nThis can lead to race conditions. An attacker may be able to run a transaction after our transaction which can change the value of the call", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "fallback", "lineno": 38, "max_gas_used": 101092, "min_gas_used": 10885, "severity": "Medium", "sourceMap": "913:22", "swc-id": "114", "title": "Transaction Order Dependence", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x21c10c0542040002", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x", "input": "0x", "name": "unknown", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0xde0b6b3a7640001"}]}}, {"address": 726, "code": "adr.send(this.balance)", "contract": "firstTest", "description": "The return value of a message call is not checked.\nExternal calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "fallback", "lineno": 38, "max_gas_used": 101225, "min_gas_used": 11018, "severity": "Medium", "sourceMap": "913:22", "swc-id": "104", "title": "Unchecked return value from external call.", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x40800003820860000", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00", "input": "0x00", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0xde0b6b3a7640001"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00", "input": "0x00", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0xde0b6b3a7640001"}]}}, {"address": 726, "code": "adr.send(this.balance)", "contract": "firstTest", "description": "The return value of a message call is not checked.\nExternal calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "withdrawal()", "lineno": 38, "max_gas_used": 101189, "min_gas_used": 10982, "severity": "Medium", "sourceMap": "913:22", "swc-id": "104", "title": "Unchecked return value from external call.", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x4e78c67447f48c262", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00", "input": "0x00", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0xde0b6b3a7640001"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xd4e93292", "input": "0xd4e93292", "name": "withdrawal()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0xde0b6b3a7640001"}]}}, {"address": 726, "code": "adr.send(this.balance)", "contract": "firstTest", "description": "Any sender can withdraw Ether from the contract account.\nArbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "fallback", "lineno": 38, "max_gas_used": 101225, "min_gas_used": 11018, "severity": "High", "sourceMap": "913:22", "swc-id": "105", "title": "Unprotected Ether Withdrawal", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1ce0000000000000", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x48217eff66c0000e", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00", "input": "0x00", "name": "unknown", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0xde0b6b3a7640001"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00", "input": "0x00", "name": "unknown", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0xde0b6b3a7640001"}]}}, {"address": 726, "code": "adr.send(this.balance)", "contract": "firstTest", "description": "Any sender can withdraw Ether from the contract account.\nArbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.", "filename": "./0x42db5bfe8828f12f164586af8a992b3a7b038164.sol", "function": "withdrawal()", "lineno": 38, "max_gas_used": 101189, "min_gas_used": 10982, "severity": "High", "sourceMap": "913:22", "swc-id": "105", "title": "Unprotected Ether Withdrawal", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x10120ffe7c8a44000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x60606040527346feeb381e90f7e30635b4f33ce3f6fa8ea6ed9b600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507325df6e3da49f41ef5b99e139c87abc12c3583d13600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550670de0b6b3a764000060035534156100c257fe5b5b610438806100d26000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806341c0e1b51461007c5780634f0575061461008e578063a6f9dae1146100b4578063d4e93292146100ea578063fd28ec3e146100f4575b61007a5b610077610133565b5b565b005b341561008457fe5b61008c6102e0565b005b341561009657fe5b61009e610358565b6040518082815260200191505060405180910390f35b34156100bc57fe5b6100e8600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061035e565b005b6100f2610133565b005b34156100fc57fe5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050610362565b005b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003543411156102dd57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f6c6f674576656e74282900000000000000000000000000000000000000000000815250600a01905060405180910390207c010000000000000000000000000000000000000000000000000000000090046000604051602001526040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401809050602060405180830381866102c65a03f4151561025f57fe5b5050506040518051905050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f19350505050505b5b565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561033d5760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff16ff5b565b60035481565b5b50565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156103bf5760006000fd5b8060038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50505600a165627a7a7230582083b15a0ef9b25a73095a01b41c7caaddad83b64bf5ce25ca9ba2f705aafda58c0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00", "input": "0x00", "name": "unknown", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0xde0b6b3a7640001"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xd4e93292", "input": "0xd4e93292", "name": "withdrawal()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0xde0b6b3a7640001"}]}}], "success": true}
