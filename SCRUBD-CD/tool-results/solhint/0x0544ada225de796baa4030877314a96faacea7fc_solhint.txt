./0x0544ada225de796baa4030877314a96faacea7fc.sol:5:1: Found more than One contract per file. 9 contracts found! [Warning/one-contract-per-file]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:9:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:9:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:14:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:14:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:23:5: Function order is incorrect, external  function can not go after external view function (line 14) [Warning/ordering]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:23:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:23:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:32:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:32:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:48:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:48:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:59:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:59:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:67:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:73:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:82:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:85:9: Provide an error message for require [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:85:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:86:9: Provide an error message for require [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:86:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:90:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:92:9: Provide an error message for require [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:92:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:97:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:99:9: Provide an error message for require [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:99:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:99:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:99:28: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:103:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:105:9: Provide an error message for require [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:105:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:105:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:105:28: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:109:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:110:9: Provide an error message for require [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:110:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:114:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:115:9: Provide an error message for require [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:115:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:115:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:121:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:123:9: Provide an error message for require [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:123:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:123:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:152:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:154:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:154:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:169:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:183:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:184:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:184:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:200:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:209:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:209:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:209:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:226:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:242:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:243:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:262:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:278:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:279:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:286:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:290:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:291:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:318:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:343:2: Line length must be no more than 120 but current length is 160. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:345:5: Function order is incorrect, internal  function can not go after internal view function (line 318) [Warning/ordering]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:346:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:346:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:350:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:350:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:350:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:362:2: Line length must be no more than 120 but current length is 156. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:371:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:381:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:381:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:396:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:397:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:406:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:406:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:407:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:407:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:407:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:407:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:411:2: Line length must be no more than 120 but current length is 149. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:411:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:412:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:455:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:464:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:464:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:464:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:471:5: Function order is incorrect, modifier definition can not go after public view function (line 464) [Warning/ordering]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:472:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:483:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:483:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:492:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:492:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:493:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:493:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:493:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:501:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:505:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:506:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:507:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:510:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:512:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:512:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:513:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:513:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:513:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:514:5: Function order is incorrect, external view function can not go after external pure function (line 513) [Warning/ordering]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:514:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:514:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:514:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:517:1: Contract has 29 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:521:5: GC: [enabled] on Event [SwapAndLiquifyEnabledUpdated] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:522:5: GC: [tokensSwapped] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:522:5: GC: [ethReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:522:5: GC: [tokensIntoLiqudity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:533:5: Function order is incorrect, state variable declaration can not go after modifier definition (line 528) [Warning/ordering]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:535:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:535:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:536:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:537:5: Main key parameter in mapping botWallets is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:537:5: Value parameter in mapping botWallets is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:537:5: 'botWallets' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:538:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:538:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:539:5: Main key parameter in mapping isExchangeWallet is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:539:5: Value parameter in mapping isExchangeWallet is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:539:5: 'isExchangeWallet' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:540:5: Main key parameter in mapping _isExcludedFromRewards is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:540:5: Value parameter in mapping _isExcludedFromRewards is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:545:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:545:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:547:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:547:5: 'isTaxFreeTransfer' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:549:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:550:5: '_maxBuyAmount' should not start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:551:5: '_maxWalletAmount' should not start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:557:2: Line length must be no more than 120 but current length is 171. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:557:5: GC: [iterations] on Event [ProcessedExclusiveDividendTracker] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:557:5: GC: [claims] on Event [ProcessedExclusiveDividendTracker] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:557:5: GC: [lastProcessedIndex] on Event [ProcessedExclusiveDividendTracker] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:557:5: GC: [gas] on Event [ProcessedExclusiveDividendTracker] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:558:25: Function param name must be in mixedCase [Warning/func-param-name-mixedcase]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:558:5: GC: [EthAmount] on Event [SendDividends] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:558:25: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:573:5: 'doTakeFees' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:574:5: 'isSellTxn' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:577:5: 'dividendTracker' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:579:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:600:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:600:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:600:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:604:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:604:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:604:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:608:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:608:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:608:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:612:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:612:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:616:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:616:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:620:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:620:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:625:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:625:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:629:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:629:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:634:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:634:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:636:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:636:40: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:640:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:640:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:640:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:645:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:645:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:645:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:646:2: Line length must be no more than 120 but current length is 138. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:646:41: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:651:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:651:5: Function airDrops() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:653:9: Error message for require is too long: 45 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:653:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:653:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:654:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:654:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:654:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:655:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:656:13: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:657:13: GC: For [ iterator ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:661:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:661:5: Function setMaxWalletAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:665:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:665:5: Function excludeIncludeFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:669:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:669:5: Function addRemoveExchange() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:673:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:673:5: Function excludeIncludeFromRewards() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:677:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:677:5: Function isExcludedFromRewards() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:677:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:681:5: 'addRemoveRewards' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:682:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:682:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:688:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:688:5: Function setEthSwapSellSettings() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:688:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:693:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:693:5: Function createV2Pair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:694:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:694:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:694:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:699:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:699:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:705:5: 'addRemoveFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:706:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:706:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:712:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:712:5: Function setMaxBuyAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:716:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:716:5: Function setTaxFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:722:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:722:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:722:5: Function setDistribution() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:729:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:729:5: Function setWalletAddresses() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:735:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:735:5: Function isAddressBlocked() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:735:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:739:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:739:5: Function blockAddresses() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:739:5: GC: [addresses] argument on Function [blockAddresses] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:743:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:743:5: Function unblockAddresses() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:743:5: GC: [addresses] argument on Function [unblockAddresses] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:747:5: 'blockUnblockAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:748:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:748:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:758:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:758:5: Function setSwapAndLiquifyEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:763:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:765:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:765:5: Function getEthPrice() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:765:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:765:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:765:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:772:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:772:5: Function isExcludedFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:772:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:776:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:776:5: Function enableDisableTaxFreeTransfers() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:781:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:781:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:781:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:782:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:782:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:782:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:789:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:789:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:789:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:790:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:790:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:790:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:791:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:791:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:791:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:792:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:798:13: Error message for require is too long: 47 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:798:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:798:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:801:13: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:801:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:801:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:801:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:802:13: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:802:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:802:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:802:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:804:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:814:13: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:814:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:814:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:814:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:816:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:819:5: 'sellTaxTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:822:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:823:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:830:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:830:5: Function updateGasForProcessing() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:831:9: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:831:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:831:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:835:5: 'distributeShares' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:849:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:849:5: Function setExclusiveDividendTracker() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:853:5: 'sendEthDividends' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:860:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:867:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:872:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:877:2: Line length must be no more than 120 but current length is 140. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:882:17: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:883:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:895:57: Code contains empty blocks [Warning/no-empty-blocks]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:895:65: Code contains empty blocks [Warning/no-empty-blocks]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:896:60: Code contains empty blocks [Warning/no-empty-blocks]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:896:68: Code contains empty blocks [Warning/no-empty-blocks]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:897:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:898:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:898:22: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:898:120: Avoid to use tx.origin [Warning/avoid-tx-origin]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:899:20: Code contains empty blocks [Warning/no-empty-blocks]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:908:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:909:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:913:5: 'map' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:915:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:915:5: Function get() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:915:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:915:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:919:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:919:5: Function keyExists() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:919:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:923:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:923:5: Function getIndexOfKey() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:923:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:923:62: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:930:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:930:5: Function getKeyAtIndex() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:930:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:930:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:934:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:934:5: Function size() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:934:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:934:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:938:5: Function order is incorrect, public  function can not go after public view function (line 934) [Warning/ordering]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:938:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:938:5: Function set() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:938:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:949:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:949:5: Function remove() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:955:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:956:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:965:1: Contract has 18 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:969:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:969:5: 'magnitude' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:970:5: 'magnifiedDividendPerShare' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:971:5: Main key parameter in mapping magnifiedDividendCorrections is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:971:5: Value parameter in mapping magnifiedDividendCorrections is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:971:5: 'magnifiedDividendCorrections' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:972:5: Main key parameter in mapping withdrawnDividends is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:972:5: Value parameter in mapping withdrawnDividends is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:972:5: 'withdrawnDividends' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:973:5: Main key parameter in mapping claimedDividends is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:973:5: Value parameter in mapping claimedDividends is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:973:5: 'claimedDividends' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:974:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:974:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:975:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:981:5: 'tokenHoldersMap' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:983:5: 'adrenalineexclusive' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:985:5: Event name must be in CamelCase [Warning/event-name-camelcase]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:985:5: GC: [addr] on Event [updateBalance] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:985:5: GC: [amount] on Event [updateBalance] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:986:5: GC: [weiAmount] on Event [DividendsDistributed] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:987:5: GC: [weiAmount] on Event [DividendWithdrawn] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:989:5: Function order is incorrect, state variable declaration can not go after event definition (line 987) [Warning/ordering]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:990:5: Main key parameter in mapping lastClaimTimes is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:990:5: Value parameter in mapping lastClaimTimes is not named [Warning/named-parameters-mapping]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:995:5: GC: [amount] on Event [Claim] could be Indexed [Warning/gas-indexed-events]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:997:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1001:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1001:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1001:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1005:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1005:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1005:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1009:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1009:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1009:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1013:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1013:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1016:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1016:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1020:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1020:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1020:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1021:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1021:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1021:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1025:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1025:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1026:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1026:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1026:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1030:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1030:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1034:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1034:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1039:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1039:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1039:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1044:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1044:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1044:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1045:2: Line length must be no more than 120 but current length is 138. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1045:41: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1050:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1050:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1050:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1051:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1051:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1051:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1057:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1057:5: Function setTokenBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1060:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1078:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1087:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1087:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1087:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1089:30: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1097:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1101:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1101:5: Function setERC20Contract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1105:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1105:5: Function excludeFromDividends() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1111:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1111:5: Function distributeDividends() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1112:9: Provide an error message for require [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1112:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1123:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1123:5: Function withdrawDividend() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1127:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1142:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1142:5: Function dividendOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1142:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1146:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1146:5: Function withdrawableDividendOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1146:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1150:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1150:5: Function withdrawnDividendOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1150:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1154:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1154:5: Function accumulativeDividendOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1154:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1159:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1159:5: Function setMinimumTokenBalanceForDividends() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1163:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1163:5: Function updateClaimWait() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1164:9: Error message for require is too long: 51 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1164:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1164:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1164:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1164:41: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1165:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1165:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1165:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1170:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1170:5: Function getLastProcessedIndex() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1170:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1174:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1174:5: Function minimumTokenLimit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1174:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1178:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1178:5: Function getNumberOfTokenHolders() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1178:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1182:2: Line length must be no more than 120 but current length is 126. [Error/max-line-length]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1182:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1182:5: Function getAccount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1188:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1202:58: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1202:94: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1205:5: 'canAutoClaim' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1205:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1206:29: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1209:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1209:16: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1223:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1223:5: Function process() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1223:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1223:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1223:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1235:13: GC: For [ _lastProcessedIndex ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1236:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1242:21: GC: For [ claims ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1245:13: GC: For [ iterations ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1256:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1256:5: Function processAccountByDeployer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1260:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1260:5: Function totalDividendClaimed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1260:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1263:5: 'processAccount' should start with _ [Warning/private-vars-leading-underscore]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1263:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1268:39: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1275:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1275:5: Function mintDividends() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1276:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1276:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1276:56: GC: For [ index ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1279:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1287:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0544ada225de796baa4030877314a96faacea7fc.sol:1287:5: Function sendEthBack() must match Foundry test naming convention [Warning/foundry-test-functions]

505 problem/s (16 error/s, 489 warning/s)
