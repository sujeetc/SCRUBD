./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:6:2: Line length must be no more than 120 but current length is 182. [Error/max-line-length]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:9:1: Found more than One contract per file. 5 contracts found! [Warning/one-contract-per-file]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:11:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:18:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:23:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:23:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:23:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:26:5: Function order is incorrect, modifier definition can not go after public view function (line 23) [Warning/ordering]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:27:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:27:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:27:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:30:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:30:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:34:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:34:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:35:9: Error message for require is too long: 43 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:35:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:35:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:40:1: Function order is incorrect, library definition can not go after contract definition (line 15) [Warning/ordering]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:41:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:41:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:48:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:48:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:54:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:54:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:65:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:65:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:71:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:71:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:77:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:80:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:83:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:86:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:89:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:92:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:94:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:94:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:98:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:100:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:104:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:106:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:112:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:112:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:113:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:113:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:114:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:114:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:115:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:115:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:116:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:116:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:117:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:117:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:117:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:118:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:118:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:118:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:119:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:119:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:119:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:120:5: Function order is incorrect, external  function can not go after external view function (line 119) [Warning/ordering]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:120:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:120:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:120:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:121:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:121:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:121:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:122:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:122:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:122:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:125:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:125:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:126:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:126:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:126:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:127:5: Function order is incorrect, external  function can not go after external pure function (line 126) [Warning/ordering]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:127:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:130:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:131:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:132:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:133:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:135:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:136:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:136:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:136:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:137:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:139:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:140:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:141:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:143:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:144:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:144:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:144:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:145:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:148:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:149:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:150:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:152:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:153:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:153:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:154:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:156:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:157:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:158:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:160:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:161:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:161:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:162:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:165:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:166:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:167:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:169:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:171:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:171:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:172:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:174:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:175:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:176:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:178:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:180:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:180:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:181:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:182:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:183:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:186:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:187:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:188:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:189:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:190:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:193:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:194:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:195:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:195:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:195:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:198:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:199:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:199:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:199:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:199:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:201:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:202:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:202:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:202:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:202:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:204:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:205:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:205:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:205:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:208:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:209:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:209:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:209:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:209:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:209:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:210:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:210:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:210:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:210:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:210:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:211:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:211:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:211:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:211:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:211:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:212:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:212:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:212:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:213:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:213:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:213:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:216:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:216:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:217:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:217:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:217:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:218:5: Function order is incorrect, external  function can not go after external pure function (line 217) [Warning/ordering]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:218:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:219:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:220:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:223:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:225:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:228:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:229:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:230:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:231:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:233:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:234:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:234:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:234:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:235:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:237:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:238:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:239:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:241:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:242:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:242:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:242:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:243:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:246:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:247:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:248:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:250:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:251:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:251:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:252:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:254:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:255:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:256:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:258:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:259:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:259:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:260:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:263:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:264:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:265:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:267:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:269:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:269:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:270:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:272:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:273:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:274:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:276:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:278:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:278:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:279:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:280:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:281:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:284:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:285:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:286:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:287:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:288:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:291:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:292:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:293:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:294:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:297:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:299:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:299:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:299:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:302:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:303:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:303:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:303:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:303:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:305:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:306:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:306:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:306:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:306:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:308:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:309:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:309:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:309:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:312:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:313:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:313:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:313:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:313:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:313:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:314:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:314:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:314:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:314:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:314:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:315:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:315:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:315:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:315:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:315:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:316:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:316:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:316:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:317:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:317:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:317:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:320:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:320:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:320:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:321:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:321:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:322:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:322:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:323:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:324:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:324:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:325:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:325:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:325:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:326:5: Function order is incorrect, external  function can not go after external view function (line 325) [Warning/ordering]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:326:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:327:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:328:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:331:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:343:5: Function order is incorrect, internal  function can not go after internal view function (line 331) [Warning/ordering]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:344:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:345:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:351:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:351:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:351:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:356:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:362:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:369:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:375:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:382:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:388:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:388:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:388:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:389:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:394:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:400:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:409:17: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:420:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:421:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:422:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:422:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:423:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:423:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:424:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:424:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:425:5: Function order is incorrect, external view function can not go after external pure function (line 424) [Warning/ordering]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:425:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:425:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:426:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:426:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:427:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:427:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:428:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:428:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:429:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:429:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:430:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:430:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:431:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:431:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:431:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:432:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:432:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:432:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:433:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:433:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:434:2: Line length must be no more than 120 but current length is 125. [Error/max-line-length]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:434:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:435:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:435:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:436:2: Line length must be no more than 120 but current length is 137. [Error/max-line-length]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:436:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:436:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:436:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:436:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:437:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:437:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:438:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:438:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:438:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:439:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:439:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:440:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:440:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:441:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:441:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:442:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:443:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:443:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:444:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:444:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:445:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:445:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:446:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:447:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:448:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:449:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:450:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:453:1: Contract has 35 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:457:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:457:5: 'tokenName' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:458:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:458:5: 'tokenSymbol' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:459:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:459:5: 'tokenDecimal' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:460:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:460:5: 'tokenSupply' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:462:5: Main key parameter in mapping tokenAllowances is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:462:5: 'tokenAllowances' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:463:5: Main key parameter in mapping tokenBalance is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:463:5: Value parameter in mapping tokenBalance is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:463:5: 'tokenBalance' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:464:5: Main key parameter in mapping isContractsExcluded is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:464:5: Value parameter in mapping isContractsExcluded is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:464:5: 'isContractsExcluded' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:465:5: Main key parameter in mapping isMaxWalletExcluded is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:465:5: Value parameter in mapping isMaxWalletExcluded is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:465:5: 'isMaxWalletExcluded' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:466:5: Main key parameter in mapping isTaxExcluded is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:466:5: Value parameter in mapping isTaxExcluded is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:466:5: 'isTaxExcluded' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:467:5: Main key parameter in mapping isSniper is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:467:5: Value parameter in mapping isSniper is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:468:5: Main key parameter in mapping isBot is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:468:5: Value parameter in mapping isBot is not named [Warning/named-parameters-mapping]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:470:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:470:5: 'liquidityAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:471:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:471:5: 'marketingAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:472:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:472:5: 'devAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:473:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:473:5: 'dead' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:478:5: 'maxWallet' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:479:5: 'minTaxSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:480:5: 'marketingTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:481:5: 'liquidityTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:482:2: 'totalBurnedTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:484:5: 'marketingTax' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:485:5: 'liquidityTax' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:486:5: 'divForSplitTax' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:487:5: 'taxBuyMarketing' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:488:5: 'taxBuyLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:489:5: 'taxSellMarketing' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:490:5: 'taxSellTreasury' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:491:5: 'taxSellLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:500:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:500:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:501:5: 'swapAndLiquifyStatus' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:507:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:536:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:537:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:537:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:540:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:540:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:543:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:543:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:546:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:546:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:549:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:549:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:552:5: Function order is incorrect, external view function can not go after public view function (line 549) [Warning/ordering]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:552:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:552:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:555:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:555:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:556:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:556:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:556:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:557:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:557:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:557:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:562:5: 'internalApprove' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:563:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:563:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:563:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:564:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:564:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:564:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:568:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:568:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:572:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:572:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:575:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:578:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:578:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:578:5: Function AirDrop() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:578:5: GC: [wallets] argument on Function [AirDrop] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:578:5: GC: [percent] argument on Function [AirDrop] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:579:9: Error message for require is too long: 54 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:579:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:579:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:580:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:580:48: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:586:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:586:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:586:5: Function GoLive() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:586:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:587:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:589:28: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:600:9: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:600:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:600:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:609:5: Function body contains 58 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:609:5: 'internalTransfer' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:609:5: Function has cyclomatic complexity 13 but allowed no more than 7 [Warning/code-complexity]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:610:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:610:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:610:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:611:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:611:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:611:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:612:9: Error message for require is too long: 48 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:612:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:612:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:613:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:615:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:618:13: Error message for require is too long: 46 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:618:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:618:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:618:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:622:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:622:41: GC: For [ x ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:630:13: Provide an error message for require [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:630:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:639:40: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:640:2: Line length must be no more than 120 but current length is 201. [Error/max-line-length]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:656:38: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:656:58: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:662:2: Line length must be no more than 120 but current length is 141. [Error/max-line-length]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:662:17: Error message for require is too long: 57 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:662:17: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:662:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:662:44: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:662:64: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:669:5: 'taxTokenSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:689:5: 'swapTokensForETH' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:694:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:699:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:702:5: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:704:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:710:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:713:5: 'calculateTax' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:713:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:716:5: 'splitTaxTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:720:5: 'tokenTransfer' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:735:40: Function param name must be in mixedCase [Warning/func-param-name-mixedcase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:735:5: 'launchSetLiquidityAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:735:40: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:739:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:739:5: Function isContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:739:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:742:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:747:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:747:5: Function addRemoveContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:750:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:750:5: Function isExcludedContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:750:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:753:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:753:5: Function withdrawStuckETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:757:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:757:5: Function withdrawStuckTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:760:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:760:5: Function manualBurnTokensFromLP() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:760:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:761:9: Error message for require is too long: 49 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:761:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:761:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:761:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:768:9: Error message for require is too long: 43 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:768:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:768:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:768:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:773:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:773:5: Function manualSwapTax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:775:2: Line length must be no more than 120 but current length is 142. [Error/max-line-length]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:775:9: Error message for require is too long: 72 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:775:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:775:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:775:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:778:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:778:5: Function addBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:779:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:782:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:782:2: Function removeBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:783:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:786:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:786:2: Function removeSniper() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:787:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:790:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:790:5: Function setExcludedContractAccount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:793:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:793:5: Function setExcludedFromTax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:796:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:796:5: Function setExcludedFromMaxWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:799:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:799:5: Function setMaxWalletAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:801:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:801:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:801:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:801:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:803:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:803:5: Function setStatusLimits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:806:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:806:5: Function setStatusMaxWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:809:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:809:5: Function setStatusContractBlocker() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:812:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:812:5: Function setSwapAndLiquifyStatus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:815:2: Line length must be no more than 120 but current length is 144. [Error/max-line-length]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:815:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:815:5: Function setTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:821:2: Line length must be no more than 120 but current length is 136. [Error/max-line-length]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:821:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0030f75e27f6df16383f47ae11ae34abc21f5f2c.sol:821:5: Function viewTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]

591 problem/s (8 error/s, 583 warning/s)
