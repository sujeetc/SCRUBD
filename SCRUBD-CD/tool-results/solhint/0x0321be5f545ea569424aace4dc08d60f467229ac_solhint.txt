./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:13:1: Found more than One contract per file. 6 contracts found! [Warning/one-contract-per-file]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:17:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:21:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:28:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:30:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:32:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:32:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:34:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:34:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:36:5: Function order is incorrect, external  function can not go after external view function (line 34) [Warning/ordering]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:36:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:36:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:38:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:38:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:40:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:40:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:42:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:42:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:51:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:51:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:53:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:53:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:55:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:55:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:62:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:66:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:70:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:72:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:72:47: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:78:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:80:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:80:47: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:86:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:95:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:124:46: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:125:54: GC: For [ leafPos ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:125:74: GC: For [ hashPos ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:127:49: GC: For [ leafPos ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:127:69: GC: For [ hashPos ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:128:25: GC: For [ proofPos ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:169:46: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:170:54: GC: For [ leafPos ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:170:74: GC: For [ hashPos ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:172:49: GC: For [ leafPos ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:172:69: GC: For [ hashPos ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:173:25: GC: For [ proofPos ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:188:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:194:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:208:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:212:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 208) [Warning/ordering]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:217:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:217:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:222:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:225:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:229:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:230:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:230:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:230:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:242:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:242:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:244:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:251:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:256:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:256:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:260:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:260:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:264:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:264:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:268:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:268:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:272:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:272:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:276:5: Function order is incorrect, public  function can not go after public view function (line 272) [Warning/ordering]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:276:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:276:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:283:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:283:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:287:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:287:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:293:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:293:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:305:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:305:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:305:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:311:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:311:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:311:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:314:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:314:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:314:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:314:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:327:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:327:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:327:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:328:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:328:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:328:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:333:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:333:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:333:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:333:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:347:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:362:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:362:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:362:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:367:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:367:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:367:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:367:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:384:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:384:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:384:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:385:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:385:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:385:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:398:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:398:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:409:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:415:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:423:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:427:5: Function order is incorrect, internal  function can not go after internal view function (line 423) [Warning/ordering]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:429:13: GC: For [ counter ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:435:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:448:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:448:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:449:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:449:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:449:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:451:5: Function order is incorrect, external  function can not go after external pure function (line 449) [Warning/ordering]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:451:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:454:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:455:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:456:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:457:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:459:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:460:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:460:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:460:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:461:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:463:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:464:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:465:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:467:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:468:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:468:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:468:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:469:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:472:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:473:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:474:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:476:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:477:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:477:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:478:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:480:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:481:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:482:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:484:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:485:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:485:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:486:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:489:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:490:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:491:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:493:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:495:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:495:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:496:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:498:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:499:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:500:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:502:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:504:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:504:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:505:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:506:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:507:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:510:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:511:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:512:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:513:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:514:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:517:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:518:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:519:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:519:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:519:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:522:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:523:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:523:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:523:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:523:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:525:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:526:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:526:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:526:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:526:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:528:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:529:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:529:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:529:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:532:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:534:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:534:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:534:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:534:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:534:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:535:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:535:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:535:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:535:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:535:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:536:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:536:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:536:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:536:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:536:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:537:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:537:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:537:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:538:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:538:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:538:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:543:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:545:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:546:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:547:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:549:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:550:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:551:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:553:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:554:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:555:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:557:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:559:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:561:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:562:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:563:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:566:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:568:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:569:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:572:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:574:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:575:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:576:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:579:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:585:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:585:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:586:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:586:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:588:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:588:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:589:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:589:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:590:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:590:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:591:5: Function order is incorrect, external view function can not go after external pure function (line 590) [Warning/ordering]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:591:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:591:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:591:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:592:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:592:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:592:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:593:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:593:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:593:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:595:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:595:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:595:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:596:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:596:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:596:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:597:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:597:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:597:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:599:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:599:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:599:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:600:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:600:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:600:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:601:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:601:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:601:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:603:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:603:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:603:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:605:5: GC: [amount0] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:605:5: GC: [amount1] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:605:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:605:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:606:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:606:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:606:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:606:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:607:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:607:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:607:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:607:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:609:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:610:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:611:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:612:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:615:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:615:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:617:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:617:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:617:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:617:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:618:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:618:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:619:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:619:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:620:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:620:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:621:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:622:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:622:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:622:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:623:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:623:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:623:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:624:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:624:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:624:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:626:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:626:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:627:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:627:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:627:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:628:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:628:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:628:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:629:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:630:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:632:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:637:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:637:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:637:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:639:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:639:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:640:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:640:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:642:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:643:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:643:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:644:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:644:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:644:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:646:5: Function order is incorrect, external  function can not go after external view function (line 644) [Warning/ordering]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:646:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:648:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:649:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:653:5: Function deposit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:654:5: Function withdraw() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:655:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:655:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:656:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:656:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:657:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:657:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:658:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:658:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:662:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:662:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:663:5: Function tokenOfOwnerByIndex() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:664:5: Function tokenByIndex() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:664:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:668:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:668:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:672:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:672:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:675:1: Interface name 'BercAirdrop' must start with "I" [Warning/interface-starts-with-i]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:676:2: Line length must be no more than 120 but current length is 171. [Error/max-line-length]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:676:5: Function createAirdrop() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:679:1: Interface name 'Berc20Store' must start with "I" [Warning/interface-starts-with-i]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:680:5: Function createTokenInfo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:691:1: Contract has 39 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:693:5: 'DECIMAL_MULTIPLIER' should start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:694:5: 'blackHole' should start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:697:5: '_maxMintCount' should not start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:698:5: '_mintPrice' should not start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:699:5: '_maxMintPerAddress' should not start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:701:5: Main key parameter in mapping _mintCounts is not named [Warning/named-parameters-mapping]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:701:5: Value parameter in mapping _mintCounts is not named [Warning/named-parameters-mapping]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:701:5: '_mintCounts' should not start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:702:5: '_mintedCounts' should not start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:707:5: '_devAddress' should not start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:708:5: '_deplyAddress' should not start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:710:5: '_maxPro' should not start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:721:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:751:5: Main key parameter in mapping tokenExists is not named [Warning/named-parameters-mapping]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:751:5: Value parameter in mapping tokenExists is not named [Warning/named-parameters-mapping]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:753:5: Function order is incorrect, enum definition can not go after state variable declaration (line 751) [Warning/ordering]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:763:5: Function body contains 67 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:763:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:763:5: Function has cyclomatic complexity 8 but allowed no more than 7 [Warning/code-complexity]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:789:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:793:22: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:833:5: Function body contains 55 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:833:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:833:5: Function mintProof() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:833:5: Function has cyclomatic complexity 9 but allowed no more than 7 [Warning/code-complexity]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:834:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:835:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:836:9: Error message for require is too long: 39 counted / 32 allowed [Warning/reason-string]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:836:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:836:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:836:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:837:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:837:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:838:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:838:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:842:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:842:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:842:21: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:843:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:843:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:843:21: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:845:17: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:846:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:846:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:848:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:853:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:854:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:854:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:859:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:863:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:863:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:868:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:872:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:872:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:875:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:875:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:878:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:878:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:891:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:891:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:896:5: 'isContract' should start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:896:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:898:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:905:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:905:5: Function setContractAuth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:905:5: GC: [params] argument on Function [setContractAuth] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:905:5: GC: [authContracts] argument on Function [setContractAuth] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:934:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:934:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:952:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:952:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:968:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:968:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:968:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:968:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:974:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:974:5: Function setLPContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:978:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:978:5: Function setWlRoot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:982:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:982:5: Function devAwardEth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:983:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:984:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:985:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:987:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:992:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:996:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:999:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:999:5: Function deployAwardEth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1000:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1001:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1002:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1004:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1009:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1013:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1016:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1016:5: Function deployAwardToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1017:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1018:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1019:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1019:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1020:36: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1022:2: Line length must be no more than 120 but current length is 134. [Error/max-line-length]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1025:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1029:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1037:5: 'getERC721TokenCount' should start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1037:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1042:5: 'getERC20TokenCount' should start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1042:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1047:5: 'getERC1155TokenCount' should start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1047:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1052:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1052:5: Function getMintedCounts() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1052:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1056:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1056:5: Function getContractAuthsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1056:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1060:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1060:5: Function getAllContractAuths() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1060:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1064:5: 'isZero' should start with _ [Warning/private-vars-leading-underscore]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1064:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1068:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1068:5: Function getAllContractTypes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1068:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1073:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0321be5f545ea569424aace4dc08d60f467229ac.sol:1073:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]

505 problem/s (3 error/s, 502 warning/s)
