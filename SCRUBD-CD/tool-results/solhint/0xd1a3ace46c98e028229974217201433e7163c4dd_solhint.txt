./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:1:1: Found more than One contract per file. 3 contracts found! [Warning/one-contract-per-file]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:1:1: Compiler version ^0.4.18 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:7:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:7:3: Function Ownable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:10:3: Function order is incorrect, modifier definition can not go after constructor/initializer (line 7) [Warning/ordering]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:11:5: Provide an error message for require [Warning/reason-string]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:14:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:14:3: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:15:5: Provide an error message for require [Warning/reason-string]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:24:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:24:5: Function thankYou() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:24:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:25:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:25:5: Function stopIt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:25:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:35:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:36:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:37:5: Main key parameter in mapping thank_you is not named [Warning/named-parameters-mapping]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:37:5: Value parameter in mapping thank_you is not named [Warning/named-parameters-mapping]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:37:5: Explicitly mark visibility of state [Warning/state-visibility]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:37:5: 'thank_you' should start with _ [Warning/private-vars-leading-underscore]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:37:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:38:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:41:9: Provide an error message for require [Warning/reason-string]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:53:5: Function order is incorrect, event definition can not go after modifier definition (line 40) [Warning/ordering]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:53:5: GC: [tokens] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:53:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:55:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:55:5: Function setHelpMeTokenParts() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:55:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:60:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:60:5: Fallback function must be simple [Warning/no-complex-fallback]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:62:9: Provide an error message for require [Warning/reason-string]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:66:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:68:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:68:26: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:68:53: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:74:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:74:5: Function thankYou() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:74:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:76:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:76:26: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:76:53: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:85:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:85:5: Function stopIt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:85:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:88:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:88:26: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:88:53: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:94:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:94:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:101:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:101:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:101:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:101:36: Variable "_value" is unused [Warning/no-unused-vars]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:105:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:105:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:105:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:105:55: Variable "_value" is unused [Warning/no-unused-vars]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:109:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:109:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:109:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:109:22: Variable "_spender" is unused [Warning/no-unused-vars]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:109:40: Variable "_value" is unused [Warning/no-unused-vars]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:112:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:112:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:112:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:112:24: Variable "_owner" is unused [Warning/no-unused-vars]
./0xd1a3ace46c98e028229974217201433e7163c4dd.sol:112:40: Variable "_spender" is unused [Warning/no-unused-vars]

69 problem/s (1 error/s, 68 warning/s)
