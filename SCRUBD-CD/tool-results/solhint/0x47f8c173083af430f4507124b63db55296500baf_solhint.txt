./0x47f8c173083af430f4507124b63db55296500baf.sol:1:1: Found more than One contract per file. 2 contracts found! [Warning/one-contract-per-file]
./0x47f8c173083af430f4507124b63db55296500baf.sol:1:1: Compiler version ^0.4.21 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x47f8c173083af430f4507124b63db55296500baf.sol:4:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:5:5: 'balanceOf' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:5:5: Explicitly mark visibility in function [Warning/func-visibility]
./0x47f8c173083af430f4507124b63db55296500baf.sol:5:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x47f8c173083af430f4507124b63db55296500baf.sol:5:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:6:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x47f8c173083af430f4507124b63db55296500baf.sol:6:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x47f8c173083af430f4507124b63db55296500baf.sol:6:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:7:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x47f8c173083af430f4507124b63db55296500baf.sol:7:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x47f8c173083af430f4507124b63db55296500baf.sol:7:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:8:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x47f8c173083af430f4507124b63db55296500baf.sol:8:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x47f8c173083af430f4507124b63db55296500baf.sol:8:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:9:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x47f8c173083af430f4507124b63db55296500baf.sol:9:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:10:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x47f8c173083af430f4507124b63db55296500baf.sol:10:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:20:5: Function order is incorrect, struct definition can not go after event definition (line 18) [Warning/ordering]
./0x47f8c173083af430f4507124b63db55296500baf.sol:22:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:23:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:33:5: Main key parameter in mapping campaigns is not named [Warning/named-parameters-mapping]
./0x47f8c173083af430f4507124b63db55296500baf.sol:33:5: Value parameter in mapping campaigns is not named [Warning/named-parameters-mapping]
./0x47f8c173083af430f4507124b63db55296500baf.sol:36:9: Provide an error message for require [Warning/reason-string]
./0x47f8c173083af430f4507124b63db55296500baf.sol:40:5: 'Deal' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:40:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x47f8c173083af430f4507124b63db55296500baf.sol:46:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x47f8c173083af430f4507124b63db55296500baf.sol:46:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x47f8c173083af430f4507124b63db55296500baf.sol:52:5: 'safeMul' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:52:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x47f8c173083af430f4507124b63db55296500baf.sol:52:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:52:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:52:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:53:7: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:58:5: 'safeDiv' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:58:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x47f8c173083af430f4507124b63db55296500baf.sol:58:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:58:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:58:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:60:7: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:65:5: 'safeSub' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:65:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x47f8c173083af430f4507124b63db55296500baf.sol:65:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:65:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:65:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:66:14: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x47f8c173083af430f4507124b63db55296500baf.sol:70:5: 'safeAdd' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:70:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x47f8c173083af430f4507124b63db55296500baf.sol:70:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:70:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:70:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:71:7: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:72:14: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x47f8c173083af430f4507124b63db55296500baf.sol:72:22: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x47f8c173083af430f4507124b63db55296500baf.sol:76:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x47f8c173083af430f4507124b63db55296500baf.sol:76:5: Function sum() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x47f8c173083af430f4507124b63db55296500baf.sol:76:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x47f8c173083af430f4507124b63db55296500baf.sol:76:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:76:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:77:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:78:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x47f8c173083af430f4507124b63db55296500baf.sol:78:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:78:40: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x47f8c173083af430f4507124b63db55296500baf.sol:84:5: 'changeFeeAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:84:5: Explicitly mark visibility in function [Warning/func-visibility]
./0x47f8c173083af430f4507124b63db55296500baf.sol:88:5: 'createCampaign' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:88:5: Explicitly mark visibility in function [Warning/func-visibility]
./0x47f8c173083af430f4507124b63db55296500baf.sol:88:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x47f8c173083af430f4507124b63db55296500baf.sol:88:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:88:97: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:89:8: Provide an error message for require [Warning/reason-string]
./0x47f8c173083af430f4507124b63db55296500baf.sol:95:5: 'addTokensToCampaign' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:95:5: Explicitly mark visibility in function [Warning/func-visibility]
./0x47f8c173083af430f4507124b63db55296500baf.sol:95:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:101:5: 'updateTokenAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:101:5: Explicitly mark visibility in function [Warning/func-visibility]
./0x47f8c173083af430f4507124b63db55296500baf.sol:105:5: 'destroyCampaign' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:105:5: Explicitly mark visibility in function [Warning/func-visibility]
./0x47f8c173083af430f4507124b63db55296500baf.sol:107:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x47f8c173083af430f4507124b63db55296500baf.sol:108:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x47f8c173083af430f4507124b63db55296500baf.sol:111:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x47f8c173083af430f4507124b63db55296500baf.sol:111:5: Function checkStatus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x47f8c173083af430f4507124b63db55296500baf.sol:115:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x47f8c173083af430f4507124b63db55296500baf.sol:115:5: Function getAddressCreatorById() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x47f8c173083af430f4507124b63db55296500baf.sol:115:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x47f8c173083af430f4507124b63db55296500baf.sol:119:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x47f8c173083af430f4507124b63db55296500baf.sol:119:5: Function getTokenAmountForCampaign() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x47f8c173083af430f4507124b63db55296500baf.sol:119:77: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:123:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x47f8c173083af430f4507124b63db55296500baf.sol:123:5: Function getCurrentBalanceForCampaign() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x47f8c173083af430f4507124b63db55296500baf.sol:123:80: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:127:5: 'finishCampaign' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:127:5: Explicitly mark visibility in function [Warning/func-visibility]
./0x47f8c173083af430f4507124b63db55296500baf.sol:130:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x47f8c173083af430f4507124b63db55296500baf.sol:133:5: 'sendCoin' should start with _ [Warning/private-vars-leading-underscore]
./0x47f8c173083af430f4507124b63db55296500baf.sol:133:5: Explicitly mark visibility in function [Warning/func-visibility]
./0x47f8c173083af430f4507124b63db55296500baf.sol:133:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x47f8c173083af430f4507124b63db55296500baf.sol:134:9: Provide an error message for require [Warning/reason-string]
./0x47f8c173083af430f4507124b63db55296500baf.sol:135:9: Provide an error message for require [Warning/reason-string]
./0x47f8c173083af430f4507124b63db55296500baf.sol:136:9: Provide an error message for require [Warning/reason-string]
./0x47f8c173083af430f4507124b63db55296500baf.sol:136:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x47f8c173083af430f4507124b63db55296500baf.sol:138:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x47f8c173083af430f4507124b63db55296500baf.sol:138:44: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x47f8c173083af430f4507124b63db55296500baf.sol:142:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]

106 problem/s (1 error/s, 105 warning/s)
