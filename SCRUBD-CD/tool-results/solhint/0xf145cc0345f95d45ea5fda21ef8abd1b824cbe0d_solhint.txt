./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:1:1: Found more than One contract per file. 3 contracts found! [Warning/one-contract-per-file]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:1:1: Compiler version ^0.4.18 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:11:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:11:3: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:12:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:12:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:15:3: Function order is incorrect, external  function can not go after public view function (line 12) [Warning/ordering]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:15:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:15:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:19:3: GC: [from] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:19:3: GC: [to] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:19:3: GC: [tokenId] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:32:3: 'contractOwner' should start with _ [Warning/private-vars-leading-underscore]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:35:3: Main key parameter in mapping participationStorage is not named [Warning/named-parameters-mapping]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:35:3: Value parameter in mapping participationStorage is not named [Warning/named-parameters-mapping]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:35:3: Explicitly mark visibility of state [Warning/state-visibility]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:35:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:35:3: 'participationStorage' should start with _ [Warning/private-vars-leading-underscore]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:38:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:40:3: Explicitly mark visibility of state [Warning/state-visibility]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:40:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:40:3: 'firstCommonsForumId' should start with _ [Warning/private-vars-leading-underscore]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:43:3: Main key parameter in mapping ownerToTokenShare is not named [Warning/named-parameters-mapping]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:43:3: Explicitly mark visibility of state [Warning/state-visibility]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:43:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:43:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:43:3: 'ownerToTokenShare' should start with _ [Warning/private-vars-leading-underscore]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:46:3: Main key parameter in mapping tokenToOwnersHoldings is not named [Warning/named-parameters-mapping]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:46:3: Explicitly mark visibility of state [Warning/state-visibility]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:46:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:46:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:46:3: 'tokenToOwnersHoldings' should start with _ [Warning/private-vars-leading-underscore]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:49:3: Main key parameter in mapping firstCommonsForumCreated is not named [Warning/named-parameters-mapping]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:49:3: Value parameter in mapping firstCommonsForumCreated is not named [Warning/named-parameters-mapping]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:49:3: Explicitly mark visibility of state [Warning/state-visibility]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:49:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:49:3: 'firstCommonsForumCreated' should start with _ [Warning/private-vars-leading-underscore]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:57:3: Function order is incorrect, struct definition can not go after state variable declaration (line 54) [Warning/ordering]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:62:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:62:3: Function DivisibleFirstCommonsForumToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:77:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:77:3: Contract [DivisibleFirstCommonsForumToken] Fallback should be payable and external (code a receive() function is recommended!) [Warning/payable-fallback]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:78:5: Provide an error message for revert [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:81:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:81:3: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:85:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:85:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:90:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:90:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:93:5: Provide an error message for require [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:94:5: Provide an error message for require [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:95:5: Provide an error message for require [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:101:5: Provide an error message for require [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:101:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:116:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:116:3: Function assignSharedOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:116:80: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:118:5: Provide an error message for require [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:119:5: Provide an error message for require [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:120:5: Provide an error message for require [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:123:5: Provide an error message for require [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:123:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:139:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:139:3: Function getFirstCommonsForum() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:144:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:144:3: Function turnOnTradable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:151:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:151:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:156:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:156:71: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:161:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:161:69: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:166:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:166:77: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:171:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:171:3: Function withdrawEther() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:171:38: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:171:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:172:12: Check result of "send" call [Warning/check-send-result]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:177:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:178:5: Provide an error message for require [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:183:5: Provide an error message for require [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:198:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:200:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:201:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:202:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:203:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:204:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:205:3: GC: [value] on Event [Deposit] could be Indexed [Warning/gas-indexed-events]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:205:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:208:3: GC: [required] on Event [RequirementChange] could be Indexed [Warning/gas-indexed-events]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:208:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:209:3: GC: [coin] on Event [CoinCreation] could be Indexed [Warning/gas-indexed-events]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:211:3: Function order is incorrect, state variable declaration can not go after event definition (line 209) [Warning/ordering]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:211:3: Main key parameter in mapping transactions is not named [Warning/named-parameters-mapping]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:211:3: Value parameter in mapping transactions is not named [Warning/named-parameters-mapping]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:211:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:212:3: Main key parameter in mapping confirmations is not named [Warning/named-parameters-mapping]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:212:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:213:3: Main key parameter in mapping isOwner is not named [Warning/named-parameters-mapping]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:213:3: Value parameter in mapping isOwner is not named [Warning/named-parameters-mapping]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:215:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:216:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:217:3: Explicitly mark visibility of state [Warning/state-visibility]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:217:3: 'flag' should start with _ [Warning/private-vars-leading-underscore]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:221:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:228:5: Provide an error message for revert [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:234:5: Provide an error message for revert [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:240:5: Provide an error message for revert [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:244:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:246:5: Provide an error message for revert [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:250:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:252:5: Provide an error message for revert [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:256:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:258:5: Provide an error message for revert [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:262:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:264:5: Provide an error message for revert [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:270:5: Provide an error message for revert [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:274:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:274:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:276:7: Provide an error message for revert [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:283:3: Explicitly mark visibility in function [Warning/func-visibility]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:295:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:295:3: Function MultiSigWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:295:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:296:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:296:10: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:296:38: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:298:7: Provide an error message for revert [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:309:2: Line length must be no more than 120 but current length is 140. [Error/max-line-length]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:309:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:309:3: Function addOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:319:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:319:3: Function removeOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:321:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:321:10: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:321:41: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:327:5: GC: For [ owners ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:339:2: Line length must be no more than 120 but current length is 123. [Error/max-line-length]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:339:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:339:3: Function replaceOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:340:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:340:10: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:340:37: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:355:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:355:3: Function changeRequirement() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:355:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:367:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:367:3: Function submitTransaction() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:367:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:367:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:376:2: Line length must be no more than 120 but current length is 155. [Error/max-line-length]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:376:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:376:3: Function confirmTransaction() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:376:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:386:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:386:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:386:3: Function revokeConfirmation() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:386:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:395:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:395:3: Function executeTransaction() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:395:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:399:11: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:399:11: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:413:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:413:3: Function isConfirmed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:413:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:413:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:414:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:415:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:415:10: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:415:37: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:417:7: GC: For [ count ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:432:2: Line length must be no more than 120 but current length is 131. [Error/max-line-length]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:432:3: 'addTransaction' should start with _ [Warning/private-vars-leading-underscore]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:432:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:432:111: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:440:5: GC: For [ transactionCount ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:451:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:451:3: Function getConfirmationCount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:451:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:451:78: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:452:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:452:10: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:452:37: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:454:5: GC: For [ count ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:463:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:463:3: Function getTransactionCount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:463:86: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:464:10: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:464:40: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:466:7: GC: For [ count ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:473:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:473:3: Function getOwners() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:473:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:482:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:482:3: Function getConfirmations() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:482:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:484:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:485:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:486:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:486:32: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:489:7: GC: For [ count ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:492:24: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:504:2: Line length must be no more than 120 but current length is 128. [Error/max-line-length]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:504:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:504:3: Function getTransactionIds() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:504:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:504:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:504:104: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:505:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:505:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:506:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:507:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:508:35: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:511:9: GC: For [ count ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:513:7: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:514:26: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:519:5: Provide an error message for require [Warning/reason-string]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:526:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:526:3: Function createFirstCommonsForum() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xf145cc0345f95d45ea5fda21ef8abd1b824cbe0d.sol:527:5: Provide an error message for require [Warning/reason-string]

222 problem/s (7 error/s, 215 warning/s)
