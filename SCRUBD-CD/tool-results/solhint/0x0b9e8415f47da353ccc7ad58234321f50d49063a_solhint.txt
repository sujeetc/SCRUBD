./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:3:1: Found more than One contract per file. 5 contracts found! [Warning/one-contract-per-file]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:28:5: Function supportsInterface() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:28:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:39:5: GC: [approved] on Event [ApprovalForAll] could be Indexed [Warning/gas-indexed-events]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:42:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:51:5: Function ownerOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:62:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:63:2: Line length must be no more than 120 but current length is 136. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:67:5: Function order is incorrect, external  function can not go after external view function (line 51) [Warning/ordering]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:67:5: Function safeTransferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:83:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:98:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:107:5: Function getApproved() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:118:5: Function setApprovalForAll() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:121:5: Function isApprovedForAll() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:121:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:132:2: Line length must be no more than 120 but current length is 136. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:136:5: Function safeTransferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:141:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:141:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:144:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:144:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:147:5: Function tokenURI() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:147:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:156:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:160:2: Line length must be no more than 120 but current length is 126. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:160:5: Function onERC721Received() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:160:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:181:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:187:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:207:2: Line length must be no more than 120 but current length is 160. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:209:5: Function order is incorrect, internal  function can not go after internal view function (line 181) [Warning/ordering]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:210:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:210:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:213:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:213:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:213:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:225:2: Line length must be no more than 120 but current length is 156. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:234:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:244:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:263:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:268:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:277:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:283:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:283:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:283:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:283:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:284:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:296:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:297:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:306:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:311:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:311:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:311:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:323:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:324:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:333:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:338:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:338:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:338:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:340:51: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:344:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:356:17: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:368:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:372:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:385:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:392:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:392:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:399:5: Function order is incorrect, modifier definition can not go after public view function (line 392) [Warning/ordering]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:400:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:411:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:419:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:420:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:420:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:420:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:437:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:447:13: GC: For [ digits ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:452:13: GC: For [ digits ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:462:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:469:13: GC: For [ length ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:478:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:486:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:491:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:492:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:493:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:495:1: Contract has 17 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:508:5: Main key parameter in mapping _owners is not named [Warning/named-parameters-mapping]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:508:5: Value parameter in mapping _owners is not named [Warning/named-parameters-mapping]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:510:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:510:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:512:5: Main key parameter in mapping _tokenApprovals is not named [Warning/named-parameters-mapping]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:512:5: Value parameter in mapping _tokenApprovals is not named [Warning/named-parameters-mapping]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:514:5: Main key parameter in mapping _operatorApprovals is not named [Warning/named-parameters-mapping]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:524:5: Main key parameter in mapping percPayout is not named [Warning/named-parameters-mapping]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:524:5: Value parameter in mapping percPayout is not named [Warning/named-parameters-mapping]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:524:5: 'percPayout' should start with _ [Warning/private-vars-leading-underscore]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:525:5: Main key parameter in mapping payoutAmount is not named [Warning/named-parameters-mapping]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:525:5: Value parameter in mapping payoutAmount is not named [Warning/named-parameters-mapping]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:525:5: 'payoutAmount' should start with _ [Warning/private-vars-leading-underscore]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:526:5: 'payees' should start with _ [Warning/private-vars-leading-underscore]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:528:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:528:5: 'reentrancyLock' should start with _ [Warning/private-vars-leading-underscore]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:529:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:529:5: 'orderLock' should start with _ [Warning/private-vars-leading-underscore]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:531:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:534:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:560:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:560:5: Function orderEmeejis() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:561:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:561:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:562:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:562:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:563:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:563:9: Error message for require is too long: 53 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:563:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:563:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:564:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:566:9: Provide an error message for require [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:566:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:579:43: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:584:28: Variable "data" is unused [Warning/no-unused-vars]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:585:13: Error message for require is too long: 43 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:585:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:585:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:590:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:590:5: Function giveawayEmeeji() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:591:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:591:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:591:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:592:9: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:592:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:592:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:595:43: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:596:13: GC: For [ numberMinted ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:598:17: GC: For [ _reserveTokens ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:604:5: Function order is incorrect, external view function can not go after public  function (line 590) [Warning/ordering]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:604:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:604:5: Function checkMyWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:604:35: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:604:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:609:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:609:5: Function checkWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:609:53: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:609:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:615:5: 'approvePayouts' should start with _ [Warning/private-vars-leading-underscore]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:617:6: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:617:41: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:622:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:622:5: Function withdraw() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:627:24: Variable "data" is unused [Warning/no-unused-vars]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:628:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:628:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:628:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:633:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:633:5: Function lockOrders() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:637:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:637:5: Function unlockOrders() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:641:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:641:5: Function setTokenPrice() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:645:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:645:5: Function setPurchaseLimit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:649:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:649:5: Function setBaseURI() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:653:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:653:5: Function setReserveTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:653:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:657:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:657:5: Function setTotalTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:661:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:661:5: Function tokensRemaining() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:661:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:665:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:665:5: Function checkOrderLock() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:665:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:669:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:669:5: Function checkReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:669:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:673:2: Line length must be no more than 120 but current length is 126. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:674:2: Line length must be no more than 120 but current length is 126. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:675:2: Line length must be no more than 120 but current length is 126. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:679:5: Function supportsInterface() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:679:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:689:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:689:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:690:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:690:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:690:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:697:5: Function ownerOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:697:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:699:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:699:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:699:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:706:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:708:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:708:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:708:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:710:9: Error message for require is too long: 56 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:710:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:710:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:721:5: Function getApproved() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:721:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:722:9: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:722:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:722:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:730:5: Function setApprovalForAll() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:731:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:740:5: Function isApprovedForAll() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:740:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:747:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:753:9: Error message for require is too long: 49 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:753:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:753:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:761:5: Function safeTransferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:772:5: Function safeTransferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:778:9: Error message for require is too long: 49 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:778:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:778:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:796:2: Line length must be no more than 120 but current length is 136. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:807:9: Error message for require is too long: 50 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:807:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:807:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:818:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:829:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:830:9: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:830:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:830:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:841:2: Line length must be no more than 120 but current length is 136. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:859:9: Error message for require is too long: 50 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:859:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:859:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:878:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:879:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:883:9: GC: For [ _balances ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:890:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:890:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:891:9: Provide an error message for require [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:891:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:913:9: GC: For [ _balances ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:935:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:935:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:935:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:936:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:936:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:936:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:943:9: GC: For [ _balances ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:944:9: GC: For [ _balances ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:970:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:981:21: Error message for revert is too long: 50 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:981:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:981:21: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:983:21: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:999:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1003:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1003:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1003:5: Function onERC721Received() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1003:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1003:31: Variable "_operator" is unused [Warning/no-unused-vars]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1003:50: Variable "_from" is unused [Warning/no-unused-vars]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1003:65: Variable "_tokenId" is unused [Warning/no-unused-vars]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1003:83: Variable "_data" is unused [Warning/no-unused-vars]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1027:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1031:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1031:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1031:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1036:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1036:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1036:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1041:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1041:5: Function tokenURI() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1041:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1042:9: Error message for require is too long: 47 counted / 32 allowed [Warning/reason-string]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1042:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1042:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1049:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b9e8415f47da353ccc7ad58234321f50d49063a.sol:1053:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]

275 problem/s (18 error/s, 257 warning/s)
