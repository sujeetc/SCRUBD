./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:33:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:36:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:42:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:42:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:43:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:43:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:44:5: Function order is incorrect, external  function can not go after external view function (line 43) [Warning/ordering]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:44:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:44:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:45:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:45:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:46:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:46:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:47:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:47:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:48:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:49:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:53:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:55:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:55:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:59:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:63:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:64:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:64:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:69:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:74:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:74:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:74:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:78:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:82:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:83:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:94:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:100:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:100:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:100:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:104:5: Function order is incorrect, modifier definition can not go after public view function (line 100) [Warning/ordering]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:105:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:109:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:109:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:114:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:114:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:115:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:115:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:115:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:124:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:128:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:129:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:130:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:133:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:135:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:135:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:136:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:136:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:136:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:137:5: Function order is incorrect, external payable function can not go after external pure function (line 136) [Warning/ordering]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:137:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:139:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:140:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:141:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:143:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:144:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:144:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:144:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:147:1: Contract has 21 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:149:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:149:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:150:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:151:5: Main key parameter in mapping isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:151:5: Value parameter in mapping isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:152:5: Main key parameter in mapping boughtAtLaunch is not named [Warning/named-parameters-mapping]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:152:5: Value parameter in mapping boughtAtLaunch is not named [Warning/named-parameters-mapping]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:153:5: Main key parameter in mapping hasSold is not named [Warning/named-parameters-mapping]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:153:5: Value parameter in mapping hasSold is not named [Warning/named-parameters-mapping]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:165:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:166:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:167:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:168:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:178:5: 'inInternalSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:183:5: GC: [value] on Event [ConfigurationChange] could be Indexed [Warning/gas-indexed-events]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:184:5: GC: [value] on Event [ConfigurationChange] could be Indexed [Warning/gas-indexed-events]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:185:5: GC: [value] on Event [ConfigurationChange] could be Indexed [Warning/gas-indexed-events]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:194:2: Line length must be no more than 120 but current length is 133. [Error/max-line-length]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:194:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:210:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:212:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:212:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:212:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:216:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:216:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:216:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:220:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:220:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:220:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:224:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:224:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:228:5: Function order is incorrect, public view function can not go after public pure function (line 224) [Warning/ordering]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:228:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:228:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:232:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:232:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:237:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:237:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:241:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:241:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:246:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:246:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:248:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:248:40: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:253:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:253:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:253:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:254:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:254:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:254:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:260:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:261:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:261:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:261:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:262:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:262:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:262:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:270:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:277:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:277:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:278:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:278:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:282:2: Line length must be no more than 120 but current length is 138. [Error/max-line-length]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:301:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:306:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:310:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:310:5: Function setTxLimits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:311:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:318:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:318:5: Function removeLimits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:325:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:325:5: Function enableTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:326:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:333:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:333:5: Function setAutoTaxDistributionEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:338:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:338:5: Function reduceFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:339:9: Provide an error message for require [Warning/reason-string]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:339:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:339:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:344:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:344:5: Function setSplits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:345:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:354:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:354:5: Function setTaxThreshold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:359:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:359:5: Function setExcludeFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:365:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:365:5: Function setLaunchContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:371:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:371:5: Function setTreasuryAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:376:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:376:5: Function setRewardsAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:381:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:381:5: Function distributeTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:405:21: Variable "data" is unused [Warning/no-unused-vars]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:406:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:409:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:409:5: Function manualSendToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:413:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:413:5: Function withdrawERC20() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:416:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:419:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2fd4f0569896b4009ffad793ac6308bfd79b4c35.sol:419:5: Function withdrawETH() must match Foundry test naming convention [Warning/foundry-test-functions]

168 problem/s (3 error/s, 165 warning/s)
