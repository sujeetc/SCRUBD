./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:5:1: Found more than One contract per file. 6 contracts found! [Warning/one-contract-per-file]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:9:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:9:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:10:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:10:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:11:5: Function order is incorrect, external  function can not go after external view function (line 10) [Warning/ordering]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:11:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:11:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:12:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:12:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:13:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:13:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:14:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:14:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:16:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:17:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:22:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:24:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:24:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:29:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:33:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:34:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:34:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:40:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:49:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:49:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:49:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:54:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:58:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:59:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:66:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:70:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:71:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:78:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:82:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:84:2: Line length must be no more than 120 but current length is 126. [Error/max-line-length]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:91:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:102:5: Function order is incorrect, internal  function can not go after internal view function (line 91) [Warning/ordering]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:103:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:103:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:107:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:107:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:107:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:110:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:114:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:114:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:118:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:119:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:122:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:122:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:123:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:123:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:123:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:123:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:127:2: Line length must be no more than 120 but current length is 149. [Error/max-line-length]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:127:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:128:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:156:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:162:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:162:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:162:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:166:5: Function order is incorrect, modifier definition can not go after public view function (line 162) [Warning/ordering]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:167:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:171:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:171:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:176:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:176:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:177:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:177:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:177:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:186:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:191:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:193:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:193:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:195:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:195:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:197:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:197:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:199:5: Function order is incorrect, external view function can not go after external pure function (line 197) [Warning/ordering]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:199:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:199:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:201:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:201:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:203:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:203:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:208:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:208:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:210:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:210:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:212:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:212:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:218:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:218:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:218:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:220:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:220:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:220:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:222:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:222:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:224:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:234:5: GC: [amount0] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:234:5: GC: [amount1] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:235:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:235:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:241:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:241:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:241:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:241:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:249:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:249:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:251:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:251:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:251:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:253:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:253:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:255:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:255:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:257:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:257:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:259:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:268:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:268:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:270:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:270:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:272:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:272:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:274:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:276:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:280:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:287:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:289:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:291:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:295:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:296:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:296:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:300:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:300:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:301:5: Function order is incorrect, external view function can not go after external pure function (line 300) [Warning/ordering]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:301:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:301:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:301:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:302:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:303:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:304:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:307:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:309:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:310:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:311:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:314:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:316:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:316:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:316:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:317:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:318:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:320:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:321:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:322:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:324:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:325:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:325:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:325:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:326:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:329:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:330:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:331:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:333:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:334:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:334:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:335:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:335:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:335:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:338:1: Contract has 25 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:346:5: Function order is incorrect, event definition can not go after modifier definition (line 341) [Warning/ordering]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:346:5: GC: [null] on Event [TokensBurned] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:346:5: GC: [null] on Event [TokensBurned] could be Indexed [Warning/gas-indexed-events]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:347:5: 'botSnipingMap' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:350:5: 'v2Pair' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:351:5: 'feeOne' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:352:5: 'feeTwo' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:353:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:353:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:354:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:355:5: Main key parameter in mapping botWallets is not named [Warning/named-parameters-mapping]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:355:5: Value parameter in mapping botWallets is not named [Warning/named-parameters-mapping]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:355:5: 'botWallets' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:356:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:356:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:361:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:361:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:371:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:374:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:374:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:377:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:386:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:386:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:386:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:390:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:390:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:390:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:394:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:394:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:394:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:398:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:398:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:402:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:402:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:406:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:406:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:411:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:411:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:415:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:415:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:420:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:420:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:422:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:422:40: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:426:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:426:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:426:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:431:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:431:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:431:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:432:2: Line length must be no more than 120 but current length is 138. [Error/max-line-length]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:432:41: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:436:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:436:5: Function setTaxFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:441:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:441:5: Function disableBotProtectionPermanently() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:442:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:442:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:442:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:447:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:447:6: Function isAddressBlocked() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:447:6: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:451:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:451:5: Function blockAddresses() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:451:5: GC: [addresses] argument on Function [blockAddresses] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:455:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:455:5: Function unblockAddresses() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:455:5: GC: [addresses] argument on Function [unblockAddresses] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:459:5: 'blockUnblockAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:460:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:460:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:469:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:469:5: Function excludeIncludeFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:473:4: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:473:4: Function setBurnSettings() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:478:5: 'burnTokensFromLiquidityPool' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:479:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:480:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:486:42: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:491:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:491:5: Function enableDisableBurnToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:495:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:495:5: Function burnTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:496:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:496:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:496:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:496:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:496:17: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:497:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:497:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:497:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:501:5: 'addRemoveFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:502:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:502:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:509:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:509:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:509:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:515:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:515:5: Function openTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:516:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:516:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:516:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:519:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:525:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:526:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:528:38: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:532:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:532:5: Function isExcludedFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:532:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:537:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:537:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:537:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:538:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:538:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:538:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:544:5: Function has cyclomatic complexity 10 but allowed no more than 7 [Warning/code-complexity]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:545:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:545:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:545:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:546:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:546:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:546:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:547:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:547:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:547:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:556:47: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:562:21: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:562:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:562:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:564:24: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:564:24: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:570:37: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:577:21: Error message for require is too long: 39 counted / 32 allowed [Warning/reason-string]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:577:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:577:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:588:5: 'snipeBalances' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:590:57: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:602:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:602:5: Function numberOfSnipedBots() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:602:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:604:53: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:606:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:607:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:607:16: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:608:17: GC: For [ count ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:613:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:613:5: Function manualSnipeBots() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:616:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:616:5: Function manualSwap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:625:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:631:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:636:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:644:5: 'a' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:645:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:645:5: Function getTokenPrice() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:645:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:652:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:652:5: Function setEthPriceToSwap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:656:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:658:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:658:5: Function sendEth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:663:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:663:5: Function sendERC20Tokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:675:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:676:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:680:5: 'map' should start with _ [Warning/private-vars-leading-underscore]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:682:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:682:5: Function get() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:682:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:682:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:686:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:686:5: Function keyExists() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:686:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:690:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:690:5: Function getIndexOfKey() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:690:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:690:62: Rule is set with explicit type [var/s: int] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:697:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:697:5: Function getKeyAtIndex() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:697:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:697:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:701:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:701:5: Function size() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:701:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:701:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:705:5: Function order is incorrect, public  function can not go after public view function (line 701) [Warning/ordering]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:705:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:705:5: Function set() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:705:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:716:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:716:5: Function remove() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:722:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0164529a49f0cbdc6dee4aa19d014ff60e1bc1f4.sol:723:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

365 problem/s (7 error/s, 358 warning/s)
