./0x099764910a38190bbd317857e635e6f461b11119.sol:1:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x099764910a38190bbd317857e635e6f461b11119.sol:1:1: Compiler version ^0.4.21 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x099764910a38190bbd317857e635e6f461b11119.sol:20:2: Line length must be no more than 120 but current length is 125. [Error/max-line-length]
./0x099764910a38190bbd317857e635e6f461b11119.sol:67:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:67:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:72:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:72:5: Function buy() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:72:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x099764910a38190bbd317857e635e6f461b11119.sol:73:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:73:5: Function withdraw() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:74:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:74:5: Function myTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:74:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x099764910a38190bbd317857e635e6f461b11119.sol:75:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:75:5: Function myDividends() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:75:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x099764910a38190bbd317857e635e6f461b11119.sol:82:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:82:5: Function Owned() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:86:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 82) [Warning/ordering]
./0x099764910a38190bbd317857e635e6f461b11119.sol:87:9: Provide an error message for require [Warning/reason-string]
./0x099764910a38190bbd317857e635e6f461b11119.sol:91:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:91:5: Function changeOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:95:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:95:5: Function acceptOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:96:9: Provide an error message for require [Warning/reason-string]
./0x099764910a38190bbd317857e635e6f461b11119.sol:112:9: Provide an error message for require [Warning/reason-string]
./0x099764910a38190bbd317857e635e6f461b11119.sol:120:9: Provide an error message for require [Warning/reason-string]
./0x099764910a38190bbd317857e635e6f461b11119.sol:127:5: Function order is incorrect, event definition can not go after modifier definition (line 119) [Warning/ordering]
./0x099764910a38190bbd317857e635e6f461b11119.sol:127:5: GC: [amount] on Event [Deposit] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:127:5: GC: [depositer] on Event [Deposit] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:128:5: GC: [amountSpent] on Event [Purchase] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:128:5: GC: [tokensReceived] on Event [Purchase] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:129:5: GC: [amount] on Event [Payout] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:129:5: GC: [creditor] on Event [Payout] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:130:5: GC: [amount] on Event [Dividends] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:131:5: GC: [amount] on Event [Donation] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:131:5: GC: [donator] on Event [Donation] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:132:5: GC: [position] on Event [ContinuityBreak] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:132:5: GC: [skipped] on Event [ContinuityBreak] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:132:5: GC: [amount] on Event [ContinuityBreak] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:133:5: GC: [oldPosition] on Event [ContinuityAppeal] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:133:5: GC: [newPosition] on Event [ContinuityAppeal] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:133:5: GC: [appealer] on Event [ContinuityAppeal] could be Indexed [Warning/gas-indexed-events]
./0x099764910a38190bbd317857e635e6f461b11119.sol:144:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x099764910a38190bbd317857e635e6f461b11119.sol:144:5: 'throughput' should start with _ [Warning/private-vars-leading-underscore]
./0x099764910a38190bbd317857e635e6f461b11119.sol:146:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x099764910a38190bbd317857e635e6f461b11119.sol:146:5: 'dividends' should start with _ [Warning/private-vars-leading-underscore]
./0x099764910a38190bbd317857e635e6f461b11119.sol:156:5: Main key parameter in mapping creditRemaining is not named [Warning/named-parameters-mapping]
./0x099764910a38190bbd317857e635e6f461b11119.sol:156:5: Value parameter in mapping creditRemaining is not named [Warning/named-parameters-mapping]
./0x099764910a38190bbd317857e635e6f461b11119.sol:158:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x099764910a38190bbd317857e635e6f461b11119.sol:158:5: 'weak_hands' should start with _ [Warning/private-vars-leading-underscore]
./0x099764910a38190bbd317857e635e6f461b11119.sol:158:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x099764910a38190bbd317857e635e6f461b11119.sol:163:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:163:5: Function IronHands() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:163:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x099764910a38190bbd317857e635e6f461b11119.sol:173:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:173:24: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x099764910a38190bbd317857e635e6f461b11119.sol:181:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:181:5: Function deposit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:181:32: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x099764910a38190bbd317857e635e6f461b11119.sol:183:9: Provide an error message for require [Warning/reason-string]
./0x099764910a38190bbd317857e635e6f461b11119.sol:183:40: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x099764910a38190bbd317857e635e6f461b11119.sol:207:5: Function body contains 51 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x099764910a38190bbd317857e635e6f461b11119.sol:207:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:207:5: Function payout() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:209:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x099764910a38190bbd317857e635e6f461b11119.sol:211:9: Provide an error message for require [Warning/reason-string]
./0x099764910a38190bbd317857e635e6f461b11119.sol:215:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x099764910a38190bbd317857e635e6f461b11119.sol:225:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x099764910a38190bbd317857e635e6f461b11119.sol:237:20: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./0x099764910a38190bbd317857e635e6f461b11119.sol:237:20: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./0x099764910a38190bbd317857e635e6f461b11119.sol:252:17: GC: For [ payoutOrder ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x099764910a38190bbd317857e635e6f461b11119.sol:255:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x099764910a38190bbd317857e635e6f461b11119.sol:264:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:264:5: Function myTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:264:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x099764910a38190bbd317857e635e6f461b11119.sol:271:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:271:5: Function myDividends() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:271:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x099764910a38190bbd317857e635e6f461b11119.sol:278:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:278:5: Function totalDividends() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:278:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x099764910a38190bbd317857e635e6f461b11119.sol:286:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:286:5: Function withdraw() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:297:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:297:5: Function donate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:297:31: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x099764910a38190bbd317857e635e6f461b11119.sol:304:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:304:5: Function backlogLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:304:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x099764910a38190bbd317857e635e6f461b11119.sol:311:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:311:5: Function backlogAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:311:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x099764910a38190bbd317857e635e6f461b11119.sol:318:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:318:5: Function totalParticipants() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:318:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x099764910a38190bbd317857e635e6f461b11119.sol:325:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:325:5: Function totalSpent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:325:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x099764910a38190bbd317857e635e6f461b11119.sol:332:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:332:5: Function amountOwed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:332:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x099764910a38190bbd317857e635e6f461b11119.sol:339:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:339:5: Function amountIAmOwed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:339:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x099764910a38190bbd317857e635e6f461b11119.sol:344:2: Line length must be no more than 120 but current length is 125. [Error/max-line-length]
./0x099764910a38190bbd317857e635e6f461b11119.sol:346:2: Line length must be no more than 120 but current length is 153. [Error/max-line-length]
./0x099764910a38190bbd317857e635e6f461b11119.sol:346:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x099764910a38190bbd317857e635e6f461b11119.sol:346:5: Function transferAnyERC20Token() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x099764910a38190bbd317857e635e6f461b11119.sol:346:78: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

110 problem/s (4 error/s, 106 warning/s)
