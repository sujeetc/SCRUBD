./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:1:1: Found more than One contract per file. 11 contracts found! [Warning/one-contract-per-file]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:1:1: Compiler version ^0.4.18 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:8:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:17:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:24:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:25:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:29:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:31:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:43:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:43:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:43:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:44:3: Function order is incorrect, public  function can not go after public view function (line 43) [Warning/ordering]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:44:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:44:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:44:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:45:3: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:55:3: Main key parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:55:3: Value parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:55:3: Explicitly mark visibility of state [Warning/state-visibility]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:55:3: 'balances' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:62:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:62:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:62:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:63:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:64:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:64:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:78:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:78:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:89:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:89:3: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:89:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:90:3: Function order is incorrect, public  function can not go after public view function (line 89) [Warning/ordering]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:90:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:90:3: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:90:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:91:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:91:3: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:91:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:92:3: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:100:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:104:3: Main key parameter in mapping allowed is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:104:3: 'allowed' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:113:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:113:3: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:113:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:114:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:115:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:115:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:116:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:116:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:135:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:135:3: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:135:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:147:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:147:3: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:147:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:157:3: Function order is incorrect, public  function can not go after public view function (line 147) [Warning/ordering]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:157:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:157:3: Function increaseApproval() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:157:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:157:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:163:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:163:3: Function decreaseApproval() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:163:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:163:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:164:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:184:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:185:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:186:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:193:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:193:3: Function OpportyToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:216:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:216:3: Function Ownable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:224:3: Function order is incorrect, modifier definition can not go after constructor/initializer (line 216) [Warning/ordering]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:225:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:234:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:234:3: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:235:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:250:3: Function order is incorrect, state variable declaration can not go after event definition (line 248) [Warning/ordering]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:257:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:265:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:272:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:272:3: Function pause() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:272:44: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:280:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:280:3: Function unpause() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:280:43: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:289:3: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:290:3: 'presaleCont' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:292:3: Function order is incorrect, struct definition can not go after state variable declaration (line 290) [Warning/ordering]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:294:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:296:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:300:3: Main key parameter in mapping holderList is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:300:3: Value parameter in mapping holderList is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:301:3: Main key parameter in mapping holderIndexes is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:301:3: Value parameter in mapping holderIndexes is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:301:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:301:3: 'holderIndexes' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:303:3: Main key parameter in mapping assetOwners is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:303:3: Value parameter in mapping assetOwners is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:303:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:303:3: 'assetOwners' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:304:3: Main key parameter in mapping assetOwnersIndex is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:304:3: Value parameter in mapping assetOwnersIndex is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:304:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:304:3: 'assetOwnersIndex' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:305:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:307:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:307:3: 'holderIndex' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:309:3: GC: [contributor] on Event [TokensTransfered] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:309:3: GC: [amount] on Event [TokensTransfered] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:309:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:310:3: GC: [sender] on Event [Hold] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:310:3: GC: [contributor] on Event [Hold] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:310:3: GC: [amount] on Event [Hold] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:310:3: GC: [holdPeriod] on Event [Hold] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:310:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:313:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:318:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:318:32: Function param name must be in mixedCase [Warning/func-param-name-mixedcase]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:318:3: Function HoldPresaleContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:318:32: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:322:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:322:3: Function setPresaleCont() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:327:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:327:3: Function addHolder() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:327:94: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:327:38: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:327:64: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:334:7: GC: For [ holderIndex ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:343:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:343:3: Function getBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:343:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:343:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:347:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:347:3: Function unlockTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:351:11: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:351:11: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:353:11: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:357:9: Provide an error message for revert [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:360:7: Provide an error message for revert [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:364:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:364:3: Function addAssetsOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:365:5: GC: For [ assetOwnersIndexes ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:369:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:369:3: Function removeAssetsOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:370:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:373:5: GC: For [ assetOwnersIndexes ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:375:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:375:3: Function getAssetsOwners() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:375:51: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:375:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:375:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:387:3: Function order is incorrect, enum definition can not go after state variable declaration (line 385) [Warning/ordering]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:390:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:391:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:394:3: 'wallet' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:397:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:399:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:399:3: 'price' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:401:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:405:3: GC: [blockNumber] on Event [SaleStarted] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:405:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:406:3: GC: [blockNumber] on Event [SaleEnded] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:406:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:407:3: GC: [contrib] on Event [FundTransfered] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:407:3: GC: [amount] on Event [FundTransfered] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:407:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:408:3: GC: [amount] on Event [WithdrawedEthToWallet] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:408:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:409:3: GC: [beforeDate] on Event [ManualChangeEndDate] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:409:3: GC: [afterDate] on Event [ManualChangeEndDate] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:409:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:409:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:410:3: GC: [hold] on Event [TokensTransferedToHold] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:410:3: GC: [amount] on Event [TokensTransferedToHold] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:410:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:411:3: GC: [inv] on Event [AddedToWhiteList] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:411:3: GC: [amount] on Event [AddedToWhiteList] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:411:3: GC: [holdPeriod] on Event [AddedToWhiteList] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:411:3: GC: [bonus] on Event [AddedToWhiteList] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:411:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:412:3: GC: [sender] on Event [AddedToHolder] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:412:3: GC: [tokenAmount] on Event [AddedToHolder] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:412:3: GC: [holdPeriod] on Event [AddedToHolder] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:412:3: GC: [holdTimestamp] on Event [AddedToHolder] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:412:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:412:76: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:416:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:418:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:423:3: Main key parameter in mapping whiteList is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:423:3: Value parameter in mapping whiteList is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:424:3: Main key parameter in mapping whitelistIndexes is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:424:3: Value parameter in mapping whitelistIndexes is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:424:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:424:3: 'whitelistIndexes' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:425:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:425:3: 'whitelistIndex' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:428:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:428:3: Function OpportyPresale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:431:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:432:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:446:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:446:3: Function startPresale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:447:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:452:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:452:3: Function endPresale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:453:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:458:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:458:3: Function addToWhitelist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:458:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:459:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:460:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:468:7: GC: For [ whitelistIndex ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:483:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:483:28: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:483:3: Fallback function must be simple [Warning/no-complex-fallback]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:484:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:485:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:485:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:486:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:488:9: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:495:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:495:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:498:7: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:501:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:503:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:504:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:505:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:507:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:514:3: 'getBalanceContract' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:514:38: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:514:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:514:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:518:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:518:3: Function sendTokensToHold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:519:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:521:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:521:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:524:7: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:529:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:529:3: Function getTokensBack() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:530:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:531:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:532:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:537:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:537:3: Function withdrawEth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:538:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:539:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:540:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:541:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:542:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:547:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:547:3: Function setEndSaleDate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:547:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:548:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:549:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:549:20: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:550:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:555:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:555:3: Function setEndDate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:555:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:556:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:557:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:557:20: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:558:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:563:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:563:3: Function getTokenBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:563:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:563:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:567:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:567:3: Function getEthRaised() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:567:36: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:567:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:567:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:572:1: Contract has 19 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:580:3: Function order is incorrect, enum definition can not go after state variable declaration (line 578) [Warning/ordering]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:583:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:584:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:585:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:588:3: 'wallet' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:590:3: 'preSaleOld' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:593:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:595:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:595:3: 'price' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:597:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:601:3: GC: [blockNumber] on Event [SaleStarted] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:601:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:602:3: GC: [blockNumber] on Event [SaleEnded] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:602:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:603:3: GC: [contrib] on Event [FundTransfered] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:603:3: GC: [amount] on Event [FundTransfered] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:603:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:604:3: GC: [amount] on Event [WithdrawedEthToWallet] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:604:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:605:3: GC: [beforeDate] on Event [ManualChangeEndDate] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:605:3: GC: [afterDate] on Event [ManualChangeEndDate] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:605:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:605:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:606:3: GC: [hold] on Event [TokensTransferedToHold] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:606:3: GC: [amount] on Event [TokensTransferedToHold] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:606:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:607:3: GC: [inv] on Event [AddedToWhiteList] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:607:3: GC: [amount] on Event [AddedToWhiteList] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:607:3: GC: [holdPeriod] on Event [AddedToWhiteList] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:607:3: GC: [bonus] on Event [AddedToWhiteList] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:607:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:608:3: GC: [sender] on Event [AddedToHolder] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:608:3: GC: [tokenAmount] on Event [AddedToHolder] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:608:3: GC: [holdPeriod] on Event [AddedToHolder] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:608:3: GC: [holdTimestamp] on Event [AddedToHolder] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:608:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:608:75: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:609:3: GC: [oldMinAmount] on Event [ChangeMinAmount] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:609:3: GC: [minAmount] on Event [ChangeMinAmount] could be Indexed [Warning/gas-indexed-events]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:609:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:609:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:613:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:615:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:620:3: Main key parameter in mapping whiteList is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:620:3: Value parameter in mapping whiteList is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:621:3: Main key parameter in mapping whitelistIndexes is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:621:3: Value parameter in mapping whitelistIndexes is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:621:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:621:3: 'whitelistIndexes' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:622:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:622:3: 'whitelistIndex' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:624:3: Main key parameter in mapping assetOwners is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:624:3: Value parameter in mapping assetOwners is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:624:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:624:3: 'assetOwners' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:625:3: Main key parameter in mapping assetOwnersIndex is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:625:3: Value parameter in mapping assetOwnersIndex is not named [Warning/named-parameters-mapping]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:625:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:625:3: 'assetOwnersIndex' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:626:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:629:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:634:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:634:3: Function OpportyPresale2() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:637:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:638:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:656:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:656:3: Function startPresale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:657:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:662:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:662:3: Function endPresale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:663:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:668:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:668:3: Function addToWhitelist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:668:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:669:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:670:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:671:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:671:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:677:7: GC: For [ whitelistIndex ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:692:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:692:28: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:692:3: Fallback function must be simple [Warning/no-complex-fallback]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:693:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:694:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:694:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:695:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:697:9: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:704:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:704:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:707:7: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:710:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:712:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:713:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:714:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:716:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:730:3: 'forwardFunds' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:735:3: 'getBalanceContract' should start with _ [Warning/private-vars-leading-underscore]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:735:38: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:735:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:735:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:739:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:739:3: Function sendTokensToHold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:740:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:742:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:742:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:745:7: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:750:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:750:3: Function getTokensBack() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:751:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:752:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:753:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:758:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:758:3: Function withdrawEth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:759:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:760:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:761:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:762:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:763:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:768:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:768:3: Function setEndSaleDate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:768:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:769:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:770:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:770:20: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:771:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:776:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:776:3: Function setEndDate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:776:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:777:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:778:5: Provide an error message for require [Warning/reason-string]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:778:20: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:779:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:784:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:784:3: Function setMinimalContribution() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:784:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:785:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:790:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:790:3: Function getTokenBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:790:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:790:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:794:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:794:3: Function getEthRaised() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:794:36: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:794:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:794:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:795:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:799:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:799:3: Function addAssetsOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:800:5: GC: For [ assetOwnersIndexes ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:804:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:804:3: Function removeAssetsOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:805:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:808:5: GC: For [ assetOwnersIndexes ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:810:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:810:3: Function getAssetsOwners() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:810:51: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:810:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x94554c78bd90dc7047f1a400dd3c5730991d9484.sol:810:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

434 problem/s (2 error/s, 432 warning/s)
