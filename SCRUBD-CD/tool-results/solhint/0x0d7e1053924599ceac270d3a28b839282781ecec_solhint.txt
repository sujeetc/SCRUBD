./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:1:1: Found more than One contract per file. 2 contracts found! [Warning/one-contract-per-file]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:1:1: Compiler version ^0.4.24 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:3:2: Line length must be no more than 120 but current length is 162. [Error/max-line-length]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:3:5: Function calculatePurchaseReturn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:3:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:4:2: Line length must be no more than 120 but current length is 155. [Error/max-line-length]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:4:5: Function calculateSaleReturn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:4:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:8:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:8:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:9:5: Function order is incorrect, external  function can not go after external view function (line 8) [Warning/ordering]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:9:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:9:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:10:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:10:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:11:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:11:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:12:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:13:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:13:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:16:2: Line length must be no more than 120 but current length is 128. [Error/max-line-length]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:16:1: Interface name 'tokenRecipient' must start with "I" [Warning/interface-starts-with-i]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:16:1: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:16:28: Function receiveApproval() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:21:5: Main key parameter in mapping admins is not named [Warning/named-parameters-mapping]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:21:5: Value parameter in mapping admins is not named [Warning/named-parameters-mapping]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:23:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:28:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 23) [Warning/ordering]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:29:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:34:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:38:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:38:5: Function grantAdmin() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:38:54: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:47:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:47:5: Function changeOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:47:54: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:51:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:51:5: Function revokeAdminStatus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:51:56: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:67:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:68:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:70:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:73:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:73:33: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:80:5: Function order is incorrect, event definition can not go after constructor/initializer (line 70) [Warning/ordering]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:80:5: GC: [amountInWei] on Event [Buy] could be Indexed [Warning/gas-indexed-events]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:80:5: GC: [amountInToken] on Event [Buy] could be Indexed [Warning/gas-indexed-events]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:81:5: GC: [amountInToken] on Event [Sell] could be Indexed [Warning/gas-indexed-events]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:81:5: GC: [amountInWei] on Event [Sell] could be Indexed [Warning/gas-indexed-events]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:83:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:83:5: Function depositTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:83:51: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:83:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:87:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:87:5: Function depositEther() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:87:39: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:87:54: Code contains empty blocks [Warning/no-empty-blocks]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:91:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:91:5: Function withdrawTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:91:52: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:91:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:95:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:95:5: Function withdrawEther() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:95:56: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:95:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:99:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:99:5: Function extractFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:99:54: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:99:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:100:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:100:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:104:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:104:5: Function enable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:104:33: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:108:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:108:5: Function disable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:108:34: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:112:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:112:5: Function setReserveWeight() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:112:51: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:112:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:113:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:113:27: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:117:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:117:5: Function setFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:117:41: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:117:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:118:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:118:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:118:30: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:122:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:122:5: Function setUncirculatedSupplyCount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:122:66: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:122:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:123:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:127:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:127:5: Function setVirtualReserveBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:127:70: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:131:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:131:5: Function getReserveBalances() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:131:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:131:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:135:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:135:5: Function getPurchasePrice() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:135:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:135:72: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:151:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:151:5: Function getSalePrice() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:151:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:151:69: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:165:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:165:5: Function buy() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:165:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:166:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:173:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:174:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:174:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:175:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:175:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:178:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:180:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:183:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:189:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:189:5: Function sell() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:189:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:189:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:190:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:198:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:199:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:199:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:200:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:200:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:201:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:209:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:209:5: Function receiveApproval() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:209:61: Variable "_token" is unused [Warning/no-unused-vars]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:209:77: Variable "_extraData" is unused [Warning/no-unused-vars]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:213:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:213:5: Function sellOneStep() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:213:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:213:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:214:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:222:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:223:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:223:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:224:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:224:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:225:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:233:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:233:5: Function setSendToSafeWalletPercentage() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:233:69: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:233:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:234:9: Provide an error message for require [Warning/reason-string]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:235:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:238:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:238:5: Function setThresholdSendToSafeWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d7e1053924599ceac270d3a28b839282781ecec.sol:238:74: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]

157 problem/s (4 error/s, 153 warning/s)
