./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:1:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:1:1: Compiler version ^0.4.21 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:5:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:5:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:5:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:6:5: Function order is incorrect, public  function can not go after public constant function (line 5) [Warning/ordering]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:6:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:6:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:6:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:10:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:10:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:10:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:11:5: Function order is incorrect, public  function can not go after public constant function (line 10) [Warning/ordering]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:11:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:11:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:11:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:19:3: 'Ownable' should start with _ [Warning/private-vars-leading-underscore]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:19:3: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:24:3: Function order is incorrect, modifier definition can not go after constructor/initializer (line 19) [Warning/ordering]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:25:5: Provide an error message for require [Warning/reason-string]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:30:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:30:3: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:30:58: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:31:5: Provide an error message for require [Warning/reason-string]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:46:5: Main key parameter in mapping donatorReward is not named [Warning/named-parameters-mapping]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:46:5: Value parameter in mapping donatorReward is not named [Warning/named-parameters-mapping]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:46:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:46:5: 'donatorReward' should start with _ [Warning/private-vars-leading-underscore]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:47:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:47:5: 'donatorRewardLevels' should start with _ [Warning/private-vars-leading-underscore]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:49:5: Main key parameter in mapping participants is not named [Warning/named-parameters-mapping]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:49:5: Value parameter in mapping participants is not named [Warning/named-parameters-mapping]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:49:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:49:5: 'participants' should start with _ [Warning/private-vars-leading-underscore]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:53:5: 'KittenSelfDrop2' should start with _ [Warning/private-vars-leading-underscore]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:53:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:72:5: Explicitly mark visibility in function [Warning/func-visibility]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:72:5: Fallback function must be simple [Warning/no-complex-fallback]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:73:9: Provide an error message for require [Warning/reason-string]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:79:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:81:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:87:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:88:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:89:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:90:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:90:9: GC: For [ totalDropTransactions ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:94:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:94:5: Function participant() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:100:5: Function order is incorrect, public  function can not go after public constant function (line 94) [Warning/ordering]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:100:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:100:5: Function setDropNumber() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:107:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:107:5: Function setHolderAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:113:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:113:5: Function setRewards() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:119:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:119:5: Function setDonatorReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:125:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:125:5: Function withdrawAll() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:131:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:131:5: Function withdrawKittenCoins() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:133:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:138:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:138:5: Function withdrawToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:144:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:144:5: Function updateKittenCoinsRemainingToDrop() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:150:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:150:5: Function donatorBonus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:150:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x3f513977cd827428e0459fdef7217cd6272dc893.sol:151:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]

70 problem/s (2 error/s, 68 warning/s)
