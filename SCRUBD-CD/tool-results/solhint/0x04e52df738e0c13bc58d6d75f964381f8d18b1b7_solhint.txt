./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:5:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:14:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:14:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:19:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:19:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:28:5: Function order is incorrect, external  function can not go after external view function (line 19) [Warning/ordering]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:28:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:28:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:37:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:37:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:53:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:53:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:64:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:64:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:76:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:82:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:89:1: Function order is incorrect, pragma directive can not go after interface (line 10) [Warning/ordering]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:107:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:107:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:120:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:120:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:132:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:132:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:149:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:149:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:161:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:161:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:178:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:192:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:206:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:220:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:236:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:253:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:259:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:259:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:276:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:282:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:302:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:308:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:331:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:335:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:366:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:373:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:373:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:380:5: Function order is incorrect, modifier definition can not go after public view function (line 373) [Warning/ordering]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:381:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:392:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:400:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:401:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:401:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:401:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:418:1: Compiler version >=0.6.2 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:421:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:421:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:422:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:422:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:422:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:424:5: Function order is incorrect, external  function can not go after external pure function (line 422) [Warning/ordering]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:424:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:427:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:428:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:429:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:430:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:432:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:433:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:433:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:433:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:434:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:436:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:437:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:438:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:440:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:441:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:441:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:441:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:442:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:445:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:446:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:447:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:449:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:450:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:450:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:451:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:453:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:454:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:455:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:457:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:458:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:458:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:459:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:462:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:463:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:464:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:466:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:468:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:468:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:469:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:471:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:472:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:473:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:475:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:477:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:477:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:478:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:479:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:480:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:483:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:484:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:485:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:486:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:487:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:490:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:491:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:492:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:492:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:492:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:495:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:496:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:496:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:496:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:496:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:498:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:499:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:499:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:499:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:499:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:501:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:502:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:502:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:502:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:505:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:507:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:507:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:507:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:507:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:507:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:508:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:508:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:508:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:508:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:508:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:509:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:509:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:509:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:509:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:509:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:510:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:510:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:510:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:511:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:511:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:511:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:516:1: Compiler version >=0.6.2 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:519:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:521:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:522:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:523:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:525:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:526:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:527:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:529:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:530:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:531:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:533:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:535:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:537:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:538:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:539:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:542:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:544:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:545:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:548:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:550:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:551:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:552:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:555:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:561:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:564:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:564:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:564:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:566:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:566:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:567:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:567:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:569:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:570:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:570:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:571:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:571:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:571:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:573:5: Function order is incorrect, external  function can not go after external view function (line 571) [Warning/ordering]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:573:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:575:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:576:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:588:1: Contract has 22 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:591:2: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:592:2: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:593:2: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:595:2: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:613:2: Main key parameter in mapping _botList is not named [Warning/named-parameters-mapping]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:613:2: Value parameter in mapping _botList is not named [Warning/named-parameters-mapping]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:615:2: Main key parameter in mapping _balanceOf is not named [Warning/named-parameters-mapping]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:615:2: Value parameter in mapping _balanceOf is not named [Warning/named-parameters-mapping]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:616:2: Main key parameter in mapping _allowance is not named [Warning/named-parameters-mapping]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:617:2: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:617:2: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:619:2: 'uniswapV2Router' should start with _ [Warning/private-vars-leading-underscore]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:620:5: 'uniswapV2Pair' should start with _ [Warning/private-vars-leading-underscore]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:622:2: 'isOpen' should start with _ [Warning/private-vars-leading-underscore]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:623:2: 'inSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:632:2: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:648:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:648:2: Function open() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:649:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:654:3: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:660:4: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:661:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:666:2: Function order is incorrect, receive function can not go after external  function (line 648) [Warning/ordering]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:666:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:668:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:668:2: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:668:2: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:672:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:672:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:672:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:676:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:676:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:676:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:680:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:680:2: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:680:2: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:684:2: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:684:2: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:684:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:689:2: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:689:2: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:689:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:690:3: Provide an error message for require [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:690:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:691:3: Provide an error message for require [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:691:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:697:2: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:697:2: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:697:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:698:3: Provide an error message for require [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:698:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:699:3: Provide an error message for require [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:699:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:705:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:705:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:705:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:709:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:709:2: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:709:2: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:713:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:713:2: Function has cyclomatic complexity 11 but allowed no more than 7 [Warning/code-complexity]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:714:3: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:714:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:714:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:715:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:715:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:715:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:716:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:716:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:716:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:721:17: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:721:17: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:721:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:721:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:723:4: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:726:5: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:726:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:726:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:727:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:728:5: Provide an error message for require [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:728:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:728:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:767:2: 'getFee' should start with _ [Warning/private-vars-leading-underscore]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:767:2: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:772:2: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:776:2: 'splitFee' should start with _ [Warning/private-vars-leading-underscore]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:776:2: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:776:2: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:776:2: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:777:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:778:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:779:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:783:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:784:3: Error message for require is too long: 39 counted / 32 allowed [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:784:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:784:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:785:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:785:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:785:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:790:2: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:797:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:802:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:806:2: 'sendETHToFee' should start with _ [Warning/private-vars-leading-underscore]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:810:3: Provide an error message for require [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:810:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:812:3: Provide an error message for require [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:812:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:814:3: Provide an error message for require [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:814:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:817:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:817:2: Function excludeFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:821:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:821:2: Function includeToFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:825:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:825:2: Function setMarketingWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:831:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:831:2: Function setSminemWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:837:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:837:2: Function setDevWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:843:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:843:2: Function setMarketingFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:848:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:848:2: Function setSminemFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:853:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:853:2: Function setDevFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:858:2: 'restoreAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:866:2: 'removeAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:878:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:878:2: Function setBots() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:879:3: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:879:8: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:879:37: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:886:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:886:2: Function manualswap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:887:9: Provide an error message for require [Warning/reason-string]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:887:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:887:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:891:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:891:5: Function manualsend() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:896:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:896:2: Function setMaxTxPercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:900:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:900:2: Function setMaxOwnedPercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:904:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:904:2: Function setTokensInWalletPercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:908:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:908:2: Function setFloor() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:913:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:913:2: Function unbot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:917:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:917:5: Function isBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x04e52df738e0c13bc58d6d75f964381f8d18b1b7.sol:917:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]

347 problem/s (3 error/s, 344 warning/s)
