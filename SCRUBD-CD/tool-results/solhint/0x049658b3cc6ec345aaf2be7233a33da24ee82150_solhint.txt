./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:10:1: Found more than One contract per file. 5 contracts found! [Warning/one-contract-per-file]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:12:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:19:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:24:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:24:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:24:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:27:5: Function order is incorrect, modifier definition can not go after public view function (line 24) [Warning/ordering]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:28:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:28:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:28:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:31:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:31:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:35:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:35:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:36:9: Error message for require is too long: 43 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:36:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:36:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:41:1: Function order is incorrect, library definition can not go after contract definition (line 16) [Warning/ordering]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:42:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:42:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:49:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:49:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:55:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:55:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:66:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:66:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:72:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:72:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:78:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:81:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:84:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:87:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:90:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:93:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:95:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:95:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:99:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:101:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:105:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:107:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:113:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:113:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:114:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:114:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:115:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:115:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:116:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:116:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:117:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:117:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:118:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:118:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:118:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:119:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:119:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:119:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:120:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:120:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:120:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:121:5: Function order is incorrect, external  function can not go after external view function (line 120) [Warning/ordering]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:121:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:121:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:121:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:122:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:122:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:122:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:123:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:123:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:123:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:126:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:126:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:127:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:127:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:127:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:128:5: Function order is incorrect, external  function can not go after external pure function (line 127) [Warning/ordering]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:128:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:131:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:132:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:133:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:134:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:136:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:137:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:137:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:137:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:138:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:140:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:141:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:142:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:144:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:145:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:145:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:145:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:146:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:149:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:150:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:151:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:153:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:154:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:154:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:155:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:157:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:158:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:159:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:161:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:162:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:162:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:163:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:166:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:167:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:168:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:170:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:172:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:172:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:173:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:175:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:176:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:177:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:179:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:181:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:181:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:182:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:183:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:184:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:187:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:188:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:189:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:190:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:191:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:194:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:195:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:196:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:196:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:196:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:199:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:200:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:200:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:200:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:200:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:202:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:203:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:203:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:203:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:203:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:205:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:206:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:206:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:206:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:209:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:210:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:210:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:210:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:210:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:210:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:211:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:211:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:211:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:211:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:211:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:212:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:212:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:212:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:212:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:212:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:213:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:213:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:213:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:214:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:214:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:214:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:217:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:217:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:218:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:218:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:218:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:219:5: Function order is incorrect, external  function can not go after external pure function (line 218) [Warning/ordering]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:219:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:220:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:221:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:224:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:226:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:229:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:230:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:231:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:232:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:234:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:235:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:235:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:235:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:236:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:238:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:239:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:240:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:242:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:243:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:243:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:243:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:244:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:247:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:248:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:249:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:251:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:252:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:252:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:253:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:255:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:256:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:257:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:259:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:260:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:260:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:261:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:264:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:265:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:266:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:268:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:270:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:270:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:271:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:273:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:274:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:275:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:277:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:279:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:279:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:280:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:281:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:282:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:285:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:286:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:287:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:288:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:289:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:292:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:293:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:294:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:295:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:298:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:300:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:300:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:300:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:303:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:304:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:304:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:304:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:304:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:306:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:307:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:307:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:307:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:307:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:309:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:310:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:310:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:310:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:313:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:314:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:314:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:314:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:314:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:314:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:315:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:315:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:315:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:315:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:315:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:316:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:316:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:316:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:316:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:316:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:317:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:317:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:317:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:318:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:318:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:318:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:321:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:321:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:321:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:322:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:322:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:323:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:323:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:324:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:325:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:325:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:326:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:326:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:326:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:327:5: Function order is incorrect, external  function can not go after external view function (line 326) [Warning/ordering]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:327:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:328:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:329:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:332:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:344:5: Function order is incorrect, internal  function can not go after internal view function (line 332) [Warning/ordering]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:345:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:346:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:352:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:352:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:352:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:357:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:363:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:370:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:376:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:383:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:389:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:389:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:389:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:390:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:395:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:401:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:410:17: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:421:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:422:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:423:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:423:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:424:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:424:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:425:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:425:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:426:5: Function order is incorrect, external view function can not go after external pure function (line 425) [Warning/ordering]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:426:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:426:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:427:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:427:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:428:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:428:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:429:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:429:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:430:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:430:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:431:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:431:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:432:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:432:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:432:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:433:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:433:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:433:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:434:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:434:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:435:2: Line length must be no more than 120 but current length is 125. [Error/max-line-length]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:435:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:436:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:436:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:437:2: Line length must be no more than 120 but current length is 137. [Error/max-line-length]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:437:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:437:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:437:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:437:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:438:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:438:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:439:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:439:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:439:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:440:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:440:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:441:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:441:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:442:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:442:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:443:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:444:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:444:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:445:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:445:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:446:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:446:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:447:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:448:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:449:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:450:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:451:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:454:1: Contract has 35 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:458:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:458:5: 'tokenName' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:459:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:459:5: 'tokenSymbol' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:460:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:460:5: 'tokenDecimal' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:461:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:461:5: 'tokenSupply' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:463:5: Main key parameter in mapping tokenAllowances is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:463:5: 'tokenAllowances' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:464:5: Main key parameter in mapping tokenBalance is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:464:5: Value parameter in mapping tokenBalance is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:464:5: 'tokenBalance' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:465:5: Main key parameter in mapping isContractsExcluded is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:465:5: Value parameter in mapping isContractsExcluded is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:465:5: 'isContractsExcluded' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:466:5: Main key parameter in mapping isMaxWalletExcluded is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:466:5: Value parameter in mapping isMaxWalletExcluded is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:466:5: 'isMaxWalletExcluded' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:467:5: Main key parameter in mapping isTaxExcluded is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:467:5: Value parameter in mapping isTaxExcluded is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:467:5: 'isTaxExcluded' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:468:5: Main key parameter in mapping isSniper is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:468:5: Value parameter in mapping isSniper is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:469:5: Main key parameter in mapping isBot is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:469:5: Value parameter in mapping isBot is not named [Warning/named-parameters-mapping]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:471:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:471:5: 'liquidityAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:472:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:472:5: 'marketingAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:473:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:473:5: 'devAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:474:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:474:5: 'dead' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:479:5: 'maxWallet' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:480:5: 'minTaxSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:481:5: 'marketingTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:482:5: 'liquidityTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:483:2: 'totalBurnedTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:485:5: 'marketingTax' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:486:5: 'liquidityTax' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:487:5: 'divForSplitTax' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:488:5: 'taxBuyMarketing' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:489:5: 'taxBuyLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:490:5: 'taxSellMarketing' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:491:5: 'taxSellTreasury' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:492:5: 'taxSellLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:501:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:501:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:502:5: 'swapAndLiquifyStatus' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:508:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:537:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:538:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:538:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:541:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:541:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:544:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:544:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:547:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:547:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:550:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:550:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:553:5: Function order is incorrect, external view function can not go after public view function (line 550) [Warning/ordering]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:553:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:553:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:556:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:556:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:557:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:557:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:557:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:558:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:558:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:558:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:563:5: 'internalApprove' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:564:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:564:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:564:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:565:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:565:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:565:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:569:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:569:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:573:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:573:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:576:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:579:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:579:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:579:5: Function AirDrop() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:579:5: GC: [wallets] argument on Function [AirDrop] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:579:5: GC: [percent] argument on Function [AirDrop] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:580:9: Error message for require is too long: 54 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:580:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:580:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:581:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:581:48: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:587:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:587:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:587:5: Function GoLive() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:587:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:588:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:590:28: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:601:9: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:601:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:601:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:610:5: Function body contains 58 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:610:5: 'internalTransfer' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:610:5: Function has cyclomatic complexity 13 but allowed no more than 7 [Warning/code-complexity]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:611:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:611:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:611:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:612:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:612:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:612:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:613:9: Error message for require is too long: 48 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:613:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:613:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:614:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:616:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:619:13: Error message for require is too long: 46 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:619:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:619:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:619:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:623:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:623:41: GC: For [ x ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:631:13: Provide an error message for require [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:631:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:640:40: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:641:2: Line length must be no more than 120 but current length is 201. [Error/max-line-length]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:657:38: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:657:58: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:663:2: Line length must be no more than 120 but current length is 141. [Error/max-line-length]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:663:17: Error message for require is too long: 57 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:663:17: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:663:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:663:44: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:663:64: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:670:5: 'taxTokenSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:690:5: 'swapTokensForETH' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:695:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:700:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:703:5: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:705:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:711:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:714:5: 'calculateTax' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:714:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:717:5: 'splitTaxTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:721:5: 'tokenTransfer' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:736:40: Function param name must be in mixedCase [Warning/func-param-name-mixedcase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:736:5: 'launchSetLiquidityAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:736:40: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:740:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:740:5: Function isContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:740:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:743:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:748:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:748:5: Function addRemoveContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:751:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:751:5: Function isExcludedContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:751:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:754:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:754:5: Function withdrawStuckETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:758:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:758:5: Function withdrawStuckTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:761:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:761:5: Function manualBurnTokensFromLP() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:761:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:762:9: Error message for require is too long: 49 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:762:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:762:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:762:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:769:9: Error message for require is too long: 43 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:769:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:769:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:769:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:774:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:774:5: Function manualSwapTax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:776:2: Line length must be no more than 120 but current length is 142. [Error/max-line-length]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:776:9: Error message for require is too long: 72 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:776:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:776:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:776:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:779:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:779:5: Function addBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:780:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:783:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:783:2: Function removeBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:784:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:787:2: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:787:2: Function removeSniper() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:788:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:791:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:791:5: Function setExcludedContractAccount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:794:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:794:5: Function setExcludedFromTax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:797:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:797:5: Function setExcludedFromMaxWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:800:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:800:5: Function setMaxWalletAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:802:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:802:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:802:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:802:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:804:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:804:5: Function setStatusLimits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:807:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:807:5: Function setStatusMaxWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:810:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:810:5: Function setStatusContractBlocker() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:813:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:813:5: Function setSwapAndLiquifyStatus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:816:2: Line length must be no more than 120 but current length is 144. [Error/max-line-length]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:816:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:816:5: Function setTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:822:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:822:5: Function normalTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:828:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:828:5: Function botTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:834:2: Line length must be no more than 120 but current length is 136. [Error/max-line-length]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:834:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x049658b3cc6ec345aaf2be7233a33da24ee82150.sol:834:5: Function viewTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]

594 problem/s (7 error/s, 587 warning/s)
