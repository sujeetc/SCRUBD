./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:1:1: Found more than One contract per file. 10 contracts found! [Warning/one-contract-per-file]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:1:1: Compiler version ^0.4.18 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:12:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:24:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:34:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:35:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:42:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:44:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:55:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:55:3: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:55:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:56:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:56:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:56:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:57:3: Function order is incorrect, public  function can not go after public view function (line 56) [Warning/ordering]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:57:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:57:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:57:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:58:3: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:69:3: Main key parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:69:3: Value parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:69:3: Explicitly mark visibility of state [Warning/state-visibility]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:69:3: 'balances' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:71:3: Explicitly mark visibility of state [Warning/state-visibility]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:71:3: 'totalSupply_' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:76:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:76:3: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:76:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:85:3: Function order is incorrect, public  function can not go after public view function (line 76) [Warning/ordering]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:85:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:85:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:85:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:86:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:87:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:87:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:101:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:101:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:112:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:112:3: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:112:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:113:3: Function order is incorrect, public  function can not go after public view function (line 112) [Warning/ordering]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:113:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:113:3: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:113:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:114:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:114:3: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:114:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:115:3: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:123:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:127:3: Main key parameter in mapping allowed is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:127:3: 'allowed' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:136:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:136:3: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:136:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:137:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:138:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:138:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:139:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:139:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:158:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:158:3: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:158:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:170:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:170:3: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:170:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:184:3: Function order is incorrect, public  function can not go after public view function (line 170) [Warning/ordering]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:184:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:184:3: Function increaseApproval() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:184:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:184:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:200:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:200:3: Function decreaseApproval() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:200:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:200:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:201:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:221:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:222:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:223:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:230:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:230:3: Function OpportyToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:254:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:254:3: Function Ownable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:261:3: Function order is incorrect, modifier definition can not go after constructor/initializer (line 254) [Warning/ordering]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:262:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:270:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:270:3: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:271:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:281:3: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:283:3: Function order is incorrect, struct definition can not go after state variable declaration (line 281) [Warning/ordering]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:285:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:287:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:291:3: Main key parameter in mapping holderList is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:291:3: Value parameter in mapping holderList is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:292:3: Main key parameter in mapping holderIndexes is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:292:3: Value parameter in mapping holderIndexes is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:292:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:292:3: 'holderIndexes' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:294:3: Main key parameter in mapping assetOwners is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:294:3: Value parameter in mapping assetOwners is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:294:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:294:3: 'assetOwners' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:295:3: Main key parameter in mapping assetOwnersIndex is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:295:3: Value parameter in mapping assetOwnersIndex is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:295:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:295:3: 'assetOwnersIndex' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:296:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:298:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:298:3: 'holderIndex' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:300:3: GC: [contributor] on Event [TokensTransfered] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:300:3: GC: [amount] on Event [TokensTransfered] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:300:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:301:3: GC: [sender] on Event [Hold] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:301:3: GC: [contributor] on Event [Hold] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:301:3: GC: [amount] on Event [Hold] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:301:3: GC: [holdPeriod] on Event [Hold] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:301:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:302:3: GC: [sender] on Event [ChangeHold] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:302:3: GC: [contributor] on Event [ChangeHold] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:302:3: GC: [amount] on Event [ChangeHold] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:302:3: GC: [holdPeriod] on Event [ChangeHold] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:302:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:303:3: GC: [newAddress] on Event [TokenChanged] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:304:3: GC: [beforePrice] on Event [ManualPriceChange] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:304:3: GC: [afterPrice] on Event [ManualPriceChange] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:304:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:304:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:307:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:311:3: 'getBalanceContract' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:311:38: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:311:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:311:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:315:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:315:3: Function setToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:320:2: Line length must be no more than 120 but current length is 128. [Error/max-line-length]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:320:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:320:3: Function changeHold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:320:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:320:66: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:330:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:330:3: Function addHolder() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:330:94: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:330:38: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:330:64: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:337:7: GC: For [ holderIndex ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:346:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:346:3: Function getBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:346:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:346:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:350:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:350:3: Function returnTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:350:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:350:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:351:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:351:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:357:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:357:3: Function unlockTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:357:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:358:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:359:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:360:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:360:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:360:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:363:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:368:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:368:3: Function addAssetsOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:369:5: GC: For [ assetOwnersIndexes ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:373:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:373:3: Function removeAssetsOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:374:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:377:5: GC: For [ assetOwnersIndexes ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:379:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:379:3: Function getAssetsOwners() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:379:51: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:379:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:379:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:392:3: Function order is incorrect, state variable declaration can not go after event definition (line 390) [Warning/ordering]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:399:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:407:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:414:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:414:3: Function pause() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:414:44: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:422:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:422:3: Function unpause() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:422:43: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:428:1: Contract has 18 states declarations but allowed no more than 15 [Warning/max-states-count]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:435:3: Function order is incorrect, enum definition can not go after state variable declaration (line 433) [Warning/ordering]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:438:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:439:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:440:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:443:3: 'wallet' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:445:3: 'preSaleOld' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:448:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:450:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:450:3: 'price' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:452:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:456:3: GC: [blockNumber] on Event [SaleStarted] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:456:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:457:3: GC: [blockNumber] on Event [SaleEnded] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:457:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:458:3: GC: [contrib] on Event [FundTransfered] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:458:3: GC: [amount] on Event [FundTransfered] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:458:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:459:3: GC: [amount] on Event [WithdrawedEthToWallet] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:459:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:460:3: GC: [beforeDate] on Event [ManualChangeEndDate] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:460:3: GC: [afterDate] on Event [ManualChangeEndDate] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:460:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:460:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:461:3: GC: [hold] on Event [TokensTransferedToHold] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:461:3: GC: [amount] on Event [TokensTransferedToHold] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:461:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:462:3: GC: [inv] on Event [AddedToWhiteList] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:462:3: GC: [amount] on Event [AddedToWhiteList] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:462:3: GC: [holdPeriod] on Event [AddedToWhiteList] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:462:3: GC: [bonus] on Event [AddedToWhiteList] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:462:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:463:3: GC: [sender] on Event [AddedToHolder] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:463:3: GC: [tokenAmount] on Event [AddedToHolder] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:463:3: GC: [holdPeriod] on Event [AddedToHolder] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:463:3: GC: [holdTimestamp] on Event [AddedToHolder] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:463:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:463:75: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:464:3: GC: [beforePrice] on Event [ManualPriceChange] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:464:3: GC: [afterPrice] on Event [ManualPriceChange] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:464:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:464:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:465:3: GC: [oldMinAmount] on Event [ChangeMinAmount] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:465:3: GC: [minAmount] on Event [ChangeMinAmount] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:465:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:465:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:467:3: GC: [newAddress] on Event [TokenChanged] could be Indexed [Warning/gas-indexed-events]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:471:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:473:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:478:3: Main key parameter in mapping whiteList is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:478:3: Value parameter in mapping whiteList is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:479:3: Main key parameter in mapping whitelistIndexes is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:479:3: Value parameter in mapping whitelistIndexes is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:479:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:479:3: 'whitelistIndexes' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:480:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:480:3: 'whitelistIndex' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:482:3: Main key parameter in mapping assetOwners is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:482:3: Value parameter in mapping assetOwners is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:482:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:482:3: 'assetOwners' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:483:3: Main key parameter in mapping assetOwnersIndex is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:483:3: Value parameter in mapping assetOwnersIndex is not named [Warning/named-parameters-mapping]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:483:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:483:3: 'assetOwnersIndex' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:484:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:487:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:492:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:492:3: Function OpportyWhiteList() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:494:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:495:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:509:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:509:3: Function setToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:514:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:514:3: Function startPresale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:519:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:519:3: Function endPresale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:524:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:524:3: Function addToWhitelist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:524:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:525:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:526:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:526:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:527:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:527:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:533:7: GC: For [ whitelistIndex ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:545:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:545:28: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:545:3: Fallback function must be simple [Warning/no-complex-fallback]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:546:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:547:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:547:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:548:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:550:9: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:557:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:557:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:560:7: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:563:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:565:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:566:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:567:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:569:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:583:3: 'forwardFunds' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:588:3: 'getBalanceContract' should start with _ [Warning/private-vars-leading-underscore]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:588:38: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:588:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:588:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:592:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:592:3: Function sendTokensToHold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:593:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:595:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:595:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:598:7: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:603:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:603:3: Function getTokensBack() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:604:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:605:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:606:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:611:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:611:3: Function withdrawEth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:612:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:613:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:614:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:615:5: Provide an error message for require [Warning/reason-string]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:616:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:621:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:621:3: Function setPrice() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:621:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:622:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:627:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:627:3: Function setEndSaleDate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:627:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:628:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:633:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:633:3: Function setEndDate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:633:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:634:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:639:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:639:3: Function setMinimalContribution() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:639:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:640:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:645:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:645:3: Function getTokenBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:645:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:645:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:649:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:649:3: Function getEthRaised() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:649:36: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:649:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:649:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:653:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:653:3: Function addAssetsOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:654:5: GC: For [ assetOwnersIndexes ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:658:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:658:3: Function removeAssetsOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:659:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:662:5: GC: For [ assetOwnersIndexes ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:664:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:664:3: Function getAssetsOwners() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:664:51: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:664:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xe85083dec29ca5287a00a29f667a8c5489cdf297.sol:664:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

346 problem/s (3 error/s, 343 warning/s)
