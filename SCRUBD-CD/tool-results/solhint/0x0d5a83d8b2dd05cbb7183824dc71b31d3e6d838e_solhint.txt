./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:9:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:11:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:14:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:19:1: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:19:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:20:1: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:20:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:21:1: Function order is incorrect, external  function can not go after external view function (line 20) [Warning/ordering]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:21:1: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:21:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:22:1: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:22:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:23:1: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:23:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:24:1: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:24:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:25:1: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:26:1: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:29:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:39:1: Function order is incorrect, internal  function can not go after internal view function (line 29) [Warning/ordering]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:40:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:40:11: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:43:3: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:43:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:43:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:45:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:48:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:51:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:52:10: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:54:2: Line length must be no more than 120 but current length is 142. [Error/max-line-length]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:54:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:55:3: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:55:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:55:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:55:11: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:58:2: Line length must be no more than 120 but current length is 145. [Error/max-line-length]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:58:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:59:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:65:11: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:81:1: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:87:1: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:87:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:93:1: Function order is incorrect, modifier definition can not go after public view function (line 87) [Warning/ordering]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:94:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:104:1: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:111:1: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:112:3: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:112:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:112:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:121:1: Contract has 40 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:126:1: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:126:1: 'totalFeeFortx' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:127:1: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:127:1: 'maxWalletTreshold' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:128:1: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:128:1: 'maxTxTreshold' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:129:1: 'swapTreshold' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:130:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:130:1: 'currentThreshold' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:133:1: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:133:1: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:134:1: Main key parameter in mapping _excludedFromFees is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:134:1: Value parameter in mapping _excludedFromFees is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:135:1: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:136:1: Main key parameter in mapping automatedMarketMakerPairs is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:136:1: Value parameter in mapping automatedMarketMakerPairs is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:137:1: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:139:1: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:139:1: 'maxWalletAmount' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:140:1: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:140:1: 'maxTxAmount' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:141:1: Main key parameter in mapping botWallets is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:141:1: Value parameter in mapping botWallets is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:141:1: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:141:1: 'botWallets' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:142:1: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:142:1: 'botTradeEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:143:1: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:143:1: 'checkWalletSize' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:144:1: Main key parameter in mapping _liquidityHolders is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:144:1: Value parameter in mapping _liquidityHolders is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:145:1: Main key parameter in mapping presaleAddresses is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:145:1: Value parameter in mapping presaleAddresses is not named [Warning/named-parameters-mapping]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:145:1: 'presaleAddresses' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:147:1: 'buyliqFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:148:1: 'buyprevLiqFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:149:1: 'buymktFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:150:1: 'buyPrevmktFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:151:1: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:151:1: 'SEISHICOINDaycooldown' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:151:1: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:152:1: 'tradeEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:153:1: 'sellliqFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:154:1: 'sellprevLiqFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:155:1: 'sellmktFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:156:1: 'sellPrevmktFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:157:1: 'maxFeeSet' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:160:1: Immutable variables name are set to be in capitalized SNAKE_CASE [Warning/immutable-vars-naming]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:161:1: 'mktTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:162:1: 'liqTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:163:1: GC: [tokensSwapped] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:163:1: GC: [ethReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:163:1: GC: [tokensIntoLiquidity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:167:1: Event name must be in CamelCase [Warning/event-name-camelcase]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:167:1: GC: [amount] on Event [tokensSwappedDuringTokenomics] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:170:1: Function order is incorrect, state variable declaration can not go after event definition (line 168) [Warning/ordering]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:170:1: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:178:1: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:193:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:195:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:195:1: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:195:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:198:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:198:1: Function currentmktTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:198:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:201:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:201:1: Function currentLiqTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:201:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:204:1: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:204:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:207:1: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:207:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:210:1: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:210:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:214:1: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:214:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:217:1: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:217:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:221:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:221:1: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:221:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:224:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:224:1: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:224:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:227:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:227:1: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:227:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:230:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:230:3: Function updateMaxTxTreshold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:231:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:235:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:235:1: Function updateMaxWalletTreshold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:236:4: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:240:1: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:240:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:245:3: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:245:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:245:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:245:11: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:251:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:251:1: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:251:1: Function COINDay() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:252:4: Error message for require is too long: 52 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:252:4: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:252:4: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:252:12: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:258:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:258:1: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:258:1: Function SEISHICOINCoinDayOver() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:261:28: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:263:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:263:1: Function addBotWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:266:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:266:1: Function currentbuyliqFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:266:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:269:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:269:1: Function currentbuymktfee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:269:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:272:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:272:1: Function currentsellLiqFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:272:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:275:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:275:1: Function currentsellmktfee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:275:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:278:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:278:1: Function currentThresholdInt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:278:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:281:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:281:1: Function isExcluded() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:281:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:284:1: Function body contains 67 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:284:1: Function has cyclomatic complexity 12 but allowed no more than 7 [Warning/code-complexity]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:285:4: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:285:4: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:285:4: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:286:3: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:286:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:286:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:287:3: Error message for require is too long: 50 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:287:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:287:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:289:3: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:289:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:289:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:289:11: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:291:7: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:294:3: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:294:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:294:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:294:11: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:296:11: Provide an error message for require [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:296:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:296:19: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:300:6: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:304:14: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:323:15: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:353:1: 'swapForTokenomics' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:360:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:360:1: Function addLimitExempt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:363:1: 'swapTokensForETHmkt' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:368:4: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:373:7: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:376:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:376:1: Function unstuckTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:380:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:380:1: Function unstuckETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:384:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:384:1: Function tradeStatus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:387:1: 'swapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:396:1: 'swapTokensForETH' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:401:4: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:406:7: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:409:1: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:411:3: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:417:7: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:421:3: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:421:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:421:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:422:3: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:422:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:422:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:427:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:427:1: Function addToExcluded() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:430:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:430:1: Function removeFromExcluded() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:433:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:433:1: Function excludePresaleAddresses() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:439:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:439:1: Function endPresaleStatus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:446:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:446:1: Function updateThreshold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:446:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:449:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:449:1: Function setSwapAndLiquify() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:453:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:453:1: Function setMktAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:456:1: 'transferAssetsETH' should start with _ [Warning/private-vars-leading-underscore]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:459:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:459:1: Function setAutomatedMarketMakerPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:460:3: Error message for require is too long: 57 counted / 32 allowed [Warning/reason-string]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:460:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:460:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:467:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:467:1: Function updatecurrentbuyliqFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:468:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:471:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:471:1: Function updatecurrentbuymktfee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:472:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:475:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:475:1: Function updatecurrentsellLiqFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:476:4: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:479:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:479:1: Function updatecurrentsellmktfee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:480:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:483:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:483:1: Function currentMaxWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:483:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:486:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:486:1: Function currentMaxTx() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:486:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:489:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:489:1: Function updateSwapTreshold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:493:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:493:1: Function currentTradeStatus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:493:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:496:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:496:1: Function currentSwapTreshold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:496:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:499:1: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:499:1: Function currentTokensToSwap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:499:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:504:1: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:504:1: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:504:81: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:505:1: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:505:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:506:1: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:506:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:507:1: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:508:1: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:508:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:509:1: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:509:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:509:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:510:1: Function order is incorrect, external  function can not go after external view function (line 509) [Warning/ordering]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:510:1: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:511:1: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:512:1: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:515:1: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:515:64: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:516:1: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:516:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:517:1: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:517:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:518:1: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:518:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:519:1: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:519:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:520:1: Function order is incorrect, external view function can not go after external pure function (line 519) [Warning/ordering]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:520:1: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:520:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:520:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:521:1: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:521:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:521:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:522:1: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:522:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:522:75: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:523:1: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:523:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:523:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:524:1: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:524:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:524:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:525:1: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:525:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:525:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:526:1: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:526:1: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:526:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:527:1: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:527:1: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:527:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:528:1: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:528:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:528:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:529:1: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:529:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:529:61: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:530:1: GC: [amount0] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:530:1: GC: [amount1] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:530:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:530:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:531:1: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:531:1: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:531:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:531:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:532:1: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:532:1: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:532:1: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:532:1: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:534:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:535:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:536:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:537:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:540:1: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:540:1: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:541:1: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:541:1: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:541:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:541:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:542:1: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:542:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:543:1: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:543:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:544:1: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:544:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:545:1: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:546:1: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:546:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:546:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:547:1: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:547:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:547:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:548:1: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:548:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:548:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:549:1: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:549:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:550:1: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:550:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:550:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:551:1: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:551:15: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:551:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:552:1: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:553:1: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:554:1: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:557:1: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:557:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:558:1: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:558:1: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:558:1: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:559:1: Function order is incorrect, external  function can not go after external pure function (line 558) [Warning/ordering]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:559:1: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:562:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:563:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:564:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:565:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:567:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:568:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:568:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:568:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:569:1: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:571:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:572:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:573:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:575:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:576:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:576:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:576:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:577:1: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:580:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:581:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:582:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:584:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:585:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:585:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:586:1: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:588:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:589:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:590:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:592:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:593:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:593:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:594:1: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:597:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:598:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:599:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:601:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:603:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:603:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:604:1: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:606:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:607:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:608:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:610:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:612:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:612:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:613:1: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:614:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:615:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:618:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:619:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:620:1: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:621:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:622:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:625:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:626:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:627:1: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:627:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:627:88: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:630:12: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:631:1: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:631:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:631:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:631:103: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:633:12: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:634:1: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:634:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:634:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:634:103: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:636:12: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:637:1: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:637:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:637:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:640:12: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:641:1: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:641:16: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:641:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:641:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:641:83: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:642:1: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:642:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:642:38: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:642:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:642:94: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:643:1: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:643:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:643:38: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:643:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:643:94: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:644:1: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:644:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:644:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:645:1: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:645:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:645:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:648:1: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:650:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:651:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:652:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:654:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:655:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:656:1: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:658:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:659:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:660:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:662:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:664:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:665:1: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:666:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:667:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:670:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:672:1: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:673:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:676:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:678:1: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:679:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:680:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol:683:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

511 problem/s (3 error/s, 508 warning/s)
