./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:1:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:1:1: Compiler version ^0.4.24 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:8:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:20:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:30:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:31:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:38:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:40:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:49:3: GC: [_value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:50:3: GC: [_value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:52:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:52:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:53:3: Function order is incorrect, public  function can not go after public constant function (line 52) [Warning/ordering]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:53:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:53:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:54:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:54:3: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:55:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:55:3: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:56:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:56:3: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:66:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:70:3: Function order is incorrect, modifier definition can not go after constructor/initializer (line 66) [Warning/ordering]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:71:5: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:75:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:75:3: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:76:5: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:80:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:80:3: Function acceptOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:81:5: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:94:3: Main key parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:94:3: Value parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:95:3: Main key parameter in mapping ethBalances is not named [Warning/named-parameters-mapping]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:95:3: Value parameter in mapping ethBalances is not named [Warning/named-parameters-mapping]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:95:3: Explicitly mark visibility of state [Warning/state-visibility]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:95:3: 'ethBalances' should start with _ [Warning/private-vars-leading-underscore]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:98:3: Explicitly mark visibility of state [Warning/state-visibility]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:98:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:98:3: 'tokenDecMult' should start with _ [Warning/private-vars-leading-underscore]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:114:3: GC: [_tokenSold] on Event [SaleClosedSuccess] could be Indexed [Warning/gas-indexed-events]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:115:3: GC: [_tokenSold] on Event [SaleClosedFail] could be Indexed [Warning/gas-indexed-events]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:117:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:117:85: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:118:5: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:119:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:119:43: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:120:7: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:122:18: Code contains empty blocks [Warning/no-empty-blocks]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:132:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:132:3: Function tokensLeft() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:136:3: Function order is incorrect, fallback function can not go after public view function (line 132) [Warning/ordering]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:136:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:136:23: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:147:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:147:3: Function buy() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:147:26: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:149:5: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:150:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:153:25: Use double quotes for string literals [Error/quotes]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:162:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:162:3: Function getBonus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:164:23: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:165:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:165:42: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:173:3: 'addBonus' should start with _ [Warning/private-vars-leading-underscore]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:182:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:182:3: Function canBuy() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:186:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:186:3: Function refund() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:188:5: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:191:5: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:196:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:197:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:198:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:201:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:201:3: Function withdraw() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:201:33: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:203:5: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:205:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:206:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:209:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:209:3: Function withdrawTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:210:5: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:211:5: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:215:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:215:3: Function open() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:215:29: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:216:5: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:221:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:221:3: Function closeSuccess() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:221:37: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:223:5: Provide an error message for require [Warning/reason-string]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:228:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:228:3: Function closeFail() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:228:34: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x1da73fc09ea07781482994036a0eecc7e6952dfb.sol:230:5: Provide an error message for require [Warning/reason-string]

96 problem/s (2 error/s, 94 warning/s)
