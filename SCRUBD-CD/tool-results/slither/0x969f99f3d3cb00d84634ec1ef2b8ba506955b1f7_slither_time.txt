'solc --version' running
'solc ./0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

WeSendReserve.deposit(uint256) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#178-183) ignores return value by token.transferFrom(msg.sender,address(this),_amount) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#179)
WeSendReserve.release(address,uint256) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#189-194) ignores return value by token.transfer(_address,_amount) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#191)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

WeSendReserve.setMinRelease(uint256) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#171-173) should emit an event for: 
	- minRelease = amount (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#172) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Reentrancy in WeSendReserve.deposit(uint256) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#178-183):
	External calls:
	- token.transferFrom(msg.sender,address(this),_amount) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#179)
	State variables written after the call(s):
	- deposits[msg.sender] = deposits[msg.sender].add(_amount) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#180)
Reentrancy in WeSendReserve.release(address,uint256) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#189-194):
	External calls:
	- token.transfer(_address,_amount) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#191)
	State variables written after the call(s):
	- releases[_address] = releases[_address].add(_amount) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#192)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in WeSendReserve.deposit(uint256) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#178-183):
	External calls:
	- token.transferFrom(msg.sender,address(this),_amount) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#179)
	Event emitted after the call(s):
	- Deposit(msg.sender,_amount) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#181)
Reentrancy in WeSendReserve.release(address,uint256) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#189-194):
	External calls:
	- token.transfer(_address,_amount) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#191)
	Event emitted after the call(s):
	- Release(_address,_amount) (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#193)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Version constraint ^0.4.18 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData
	- NestedArrayFunctionCallDecoder.
It is used by:
	- ^0.4.18 (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#1)
solc-0.4.18 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter WeSendReserve.setAuthorized(address)._address (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#142) is not in mixedCase
Parameter WeSendReserve.revokeAuthorized(address)._address (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#149) is not in mixedCase
Parameter WeSendReserve.getDeposits(address)._address (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#156) is not in mixedCase
Parameter WeSendReserve.getWithdraws(address)._address (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#164) is not in mixedCase
Parameter WeSendReserve.deposit(uint256)._amount (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#178) is not in mixedCase
Parameter WeSendReserve.release(address,uint256)._address (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#189) is not in mixedCase
Parameter WeSendReserve.release(address,uint256)._amount (0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol#189) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
./0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7.sol analyzed (5 contracts with 94 detectors), 16 result(s) found

real	0m1.352s
user	0m1.145s
sys	0m0.210s
