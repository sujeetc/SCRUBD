'solc --version' running
'solc ./0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

EIP20Wrapper.eip20TransferFrom(address,address,address,uint256) (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#139-164) uses arbitrary from in transferFrom: NonCompliantEIP20(token).transferFrom(from,to,value) (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#147)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#arbitrary-from-in-transferfrom

NonCompliantEIP20 (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#105-109) has incorrect ERC20 function interface:NonCompliantEIP20.transfer(address,uint256) (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#106)
NonCompliantEIP20 (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#105-109) has incorrect ERC20 function interface:NonCompliantEIP20.transferFrom(address,address,uint256) (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#107)
NonCompliantEIP20 (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#105-109) has incorrect ERC20 function interface:NonCompliantEIP20.approve(address,uint256) (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#108)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

BZxVault.withdrawEther(address,uint256).to (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#199) lacks a zero-check on :
		- (to.send(amount)) (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#210)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

EIP20Wrapper.eip20Transfer(address,address,uint256) (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#113-137) uses assembly
	- INLINE ASM (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#122-136)
EIP20Wrapper.eip20TransferFrom(address,address,address,uint256) (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#139-164) uses assembly
	- INLINE ASM (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#149-163)
EIP20Wrapper.eip20Approve(address,address,uint256) (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#166-190) uses assembly
	- INLINE ASM (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#175-189)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

EIP20Wrapper.eip20Approve(address,address,uint256) (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#166-190) is never used and should be removed
Ownable._transferOwnership(address) (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#64-68) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Version constraint 0.5.2 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor
	- IncorrectEventSignatureInLibraries
	- ABIEncoderV2PackedStorage.
It is used by:
	- 0.5.2 (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#6)
solc-0.5.2 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter Ownable.transferOwnership(address)._newOwner (0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol#56) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
./0x8b3d70d628ebd30d4a2ea82db95ba2e906c71633.sol analyzed (5 contracts with 94 detectors), 13 result(s) found

real	0m1.494s
user	0m1.273s
sys	0m0.224s
