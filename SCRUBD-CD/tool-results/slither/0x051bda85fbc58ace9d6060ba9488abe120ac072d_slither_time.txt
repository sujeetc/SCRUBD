'solc --version' running
'solc ./0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> 0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol:598:1:
    |
598 | contract CRYPTOVATOR is Context, IERC20, Ownable {
    | ^ (Relevant source part starts here and spans across multiple lines).



Reentrancy in CRYPTOVATOR._transfer(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#997-1120):
	External calls:
	- swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1078)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1171-1177)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
	External calls sending eth:
	- swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1078)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
		- _liquidityTokensToSwap += tLiquidity * _buyLiquidityFee / _liquidityFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1393)
		- _liquidityTokensToSwap += tLiquidity * _sellLiquidityFee / _liquidityFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1396)
	CRYPTOVATOR._liquidityTokensToSwap (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#664) can be used in cross function reentrancies:
	- CRYPTOVATOR._liquidityTokensToSwap (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#664)
	- CRYPTOVATOR._takeLiquidity(uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1391-1404)
	- CRYPTOVATOR._transfer(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#997-1120)
	- CRYPTOVATOR.swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1122-1156)
	- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
		- _marketingTokensToSwap += tLiquidity * _buyMarketingFee / _liquidityFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1394)
		- _marketingTokensToSwap += tLiquidity * _sellMarketingFee / _liquidityFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1397)
	CRYPTOVATOR._marketingTokensToSwap (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#665) can be used in cross function reentrancies:
	- CRYPTOVATOR._marketingTokensToSwap (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#665)
	- CRYPTOVATOR._takeLiquidity(uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1391-1404)
	- CRYPTOVATOR._transfer(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#997-1120)
	- CRYPTOVATOR.swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1122-1156)
	- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1226)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1246)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1268)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1227)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1289)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1248)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1269)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1291)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1401)
	CRYPTOVATOR._rOwned (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#611) can be used in cross function reentrancies:
	- CRYPTOVATOR._getCurrentSupply() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1376-1389)
	- CRYPTOVATOR._takeLiquidity(uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1391-1404)
	- CRYPTOVATOR._transferBothExcluded(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1275-1295)
	- CRYPTOVATOR._transferFromExcluded(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1254-1273)
	- CRYPTOVATOR._transferStandard(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1213-1231)
	- CRYPTOVATOR._transferToExcluded(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1233-1252)
	- CRYPTOVATOR.balanceOf(address) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#776-779)
	- CRYPTOVATOR.constructor() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#732-758)
	- CRYPTOVATOR.excludeFromReward(address) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#962-970)
	- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
		- _rTotal = _rTotal.sub(rFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1298)
	CRYPTOVATOR._rTotal (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#627) can be used in cross function reentrancies:
	- CRYPTOVATOR._getCurrentSupply() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1376-1389)
	- CRYPTOVATOR._reflectFee(uint256,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1297-1300)
	- CRYPTOVATOR.constructor() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#732-758)
	- CRYPTOVATOR.tokenFromReflection(uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#949-960)
	- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1288)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1267)
		- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1247)
		- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1290)
		- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1403)
	CRYPTOVATOR._tOwned (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#612) can be used in cross function reentrancies:
	- CRYPTOVATOR._getCurrentSupply() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1376-1389)
	- CRYPTOVATOR._takeLiquidity(uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1391-1404)
	- CRYPTOVATOR._transferBothExcluded(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1275-1295)
	- CRYPTOVATOR._transferFromExcluded(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1254-1273)
	- CRYPTOVATOR._transferToExcluded(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1233-1252)
	- CRYPTOVATOR.balanceOf(address) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#776-779)
	- CRYPTOVATOR.excludeFromReward(address) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#962-970)
	- CRYPTOVATOR.includeInReward(address) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#972-983)
Reentrancy in CRYPTOVATOR.launch() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#893-910):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#901)
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#905)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
	External calls sending eth:
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#905)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
	State variables written after the call(s):
	- transferOwnership(_owner) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#906)
		- _owner = newOwner (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#242)
	Ownable._owner (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#207) can be used in cross function reentrancies:
	- Ownable.onlyOwner() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#226-229)
	- Ownable.owner() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#222-224)
	- Ownable.renounceOwnership() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#231-234)
	- Ownable.transferOwnership(address) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#236-243)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

CRYPTOVATOR._owner (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#608) shadows:
	- Ownable._owner (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#207)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing

CRYPTOVATOR.constructor() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#732-758) performs a multiplication on the result of a division:
	- _rOwned[_owner] = _rTotal / 1000 * 700 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#733)
CRYPTOVATOR.constructor() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#732-758) performs a multiplication on the result of a division:
	- _rOwned[address(this)] = _rTotal / 1000 * 300 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#734)
CRYPTOVATOR._transfer(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#997-1120) performs a multiplication on the result of a division:
	- _charityFee = Tokenamount.div(100).mul(charityFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1008)
CRYPTOVATOR.swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1122-1156) performs a multiplication on the result of a division:
	- ethForMarketing = ethBalance.mul(_marketingTokensToSwap).div(totalTokensToSwap) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1136)
	- ethForDev = ethForMarketing * 2 / 7 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1140)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

CRYPTOVATOR._transfer(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#997-1120) uses a dangerous strict equality:
	- from != owner() && to != uniswapV2Pair && block.number == tradingActiveBlock (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1027)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Reentrancy in CRYPTOVATOR.swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1122-1156):
	External calls:
	- swapTokensForETH(amountToSwapForETH) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1132)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1171-1177)
	State variables written after the call(s):
	- _liquidityTokensToSwap = 0 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1143)
	CRYPTOVATOR._liquidityTokensToSwap (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#664) can be used in cross function reentrancies:
	- CRYPTOVATOR._liquidityTokensToSwap (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#664)
	- CRYPTOVATOR._takeLiquidity(uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1391-1404)
	- CRYPTOVATOR._transfer(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#997-1120)
	- CRYPTOVATOR.swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1122-1156)
	- _marketingTokensToSwap = 0 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1144)
	CRYPTOVATOR._marketingTokensToSwap (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#665) can be used in cross function reentrancies:
	- CRYPTOVATOR._marketingTokensToSwap (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#665)
	- CRYPTOVATOR._takeLiquidity(uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1391-1404)
	- CRYPTOVATOR._transfer(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#997-1120)
	- CRYPTOVATOR.swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1122-1156)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

CRYPTOVATOR._transfer(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#997-1120) uses tx.origin for authorization: require(bool,string)(_holderLastTransferTimestamp[to] < block.number && _holderLastTransferTimestamp[tx.origin] < block.number,_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1040)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-usage-of-txorigin

CRYPTOVATOR.addLiquidity(uint256,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1180-1190) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

CRYPTOVATOR.swapBack().success (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146) is written in both
	(success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
	(success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#write-after-write

CRYPTOVATOR.allowance(address,address).owner (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#790) shadows:
	- Ownable.owner() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#222-224) (function)
CRYPTOVATOR._approve(address,address,uint256).owner (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#986) shadows:
	- Ownable.owner() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#222-224) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

CRYPTOVATOR.setGasPriceLimit(uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#929-932) should emit an event for: 
	- gasPriceLimit = gas * 1000000000 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#931) 
CRYPTOVATOR.setBuyLimit(uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1508-1510) should emit an event for: 
	- maxAmountCanBuy = amount (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1509) 
CRYPTOVATOR.setCharityFee(uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1531-1533) should emit an event for: 
	- charityFee = _fee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1532) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

CRYPTOVATOR.setCharityAddress(address).account (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1527) lacks a zero-check on :
		- _charityAdd = account (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1528)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in CRYPTOVATOR._transfer(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#997-1120):
	External calls:
	- swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1078)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1171-1177)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
	External calls sending eth:
	- swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1078)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
	State variables written after the call(s):
	- removeAllFee() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1090)
		- _liquidityFee = 0 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1425)
	- _liquidityFee = _buyLiquidityFee + _buyMarketingFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1092)
	- removeAllFee() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1097)
		- _liquidityFee = 0 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1425)
	- _liquidityFee = _sellLiquidityFee + _sellMarketingFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1099)
	- _liquidityFee = _liquidityFee * 5 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1104)
	- removeAllFee() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1109)
		- _liquidityFee = 0 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1425)
	- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
		- _liquidityFee = _previousLiquidityFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1430)
		- _liquidityFee = 0 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1425)
	- removeAllFee() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1090)
		- _previousLiquidityFee = _liquidityFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1422)
	- removeAllFee() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1097)
		- _previousLiquidityFee = _liquidityFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1422)
	- removeAllFee() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1109)
		- _previousLiquidityFee = _liquidityFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1422)
	- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
		- _previousLiquidityFee = _liquidityFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1422)
	- removeAllFee() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1090)
		- _previousTaxFee = _taxFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1421)
	- removeAllFee() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1097)
		- _previousTaxFee = _taxFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1421)
	- removeAllFee() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1109)
		- _previousTaxFee = _taxFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1421)
	- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
		- _previousTaxFee = _taxFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1421)
	- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
		- _tFeeTotal = _tFeeTotal.add(tFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1299)
	- removeAllFee() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1090)
		- _taxFee = 0 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1424)
	- _taxFee = _buyTaxFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1091)
	- removeAllFee() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1097)
		- _taxFee = 0 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1424)
	- _taxFee = _sellTaxFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1098)
	- _taxFee = _taxFee * 5 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1103)
	- removeAllFee() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1109)
		- _taxFee = 0 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1424)
	- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
		- _taxFee = _previousTaxFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1429)
		- _taxFee = 0 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1424)
	- buyOrSellSwitch = TRANSFER (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1086)
	- buyOrSellSwitch = BUY (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1093)
	- buyOrSellSwitch = SELL (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1100)
	- buyOrSellSwitch = TRANSFER (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1110)
Reentrancy in CRYPTOVATOR.launch() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#893-910):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#901)
	State variables written after the call(s):
	- _setAutomatedMarketMakerPair(address(uniswapV2Pair),true) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#903)
		- _excluded[i] = _excluded[_excluded.length - 1] (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#976)
		- _excluded.push(account) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#969)
		- _excluded.pop() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#979)
	- _setAutomatedMarketMakerPair(address(uniswapV2Pair),true) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#903)
		- _isExcluded[account] = true (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#968)
		- _isExcluded[account] = false (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#978)
	- excludeFromMaxTransaction(address(uniswapV2Pair),true) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#902)
		- _isExcludedMaxTransactionAmount[updAds] = isEx (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#881)
	- _setAutomatedMarketMakerPair(address(uniswapV2Pair),true) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#903)
		- _isExcludedMaxTransactionAmount[pair] = value (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#924)
	- _setAutomatedMarketMakerPair(address(uniswapV2Pair),true) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#903)
		- _tOwned[account] = tokenFromReflection(_rOwned[account]) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#966)
		- _tOwned[account] = 0 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#977)
	- _setAutomatedMarketMakerPair(address(uniswapV2Pair),true) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#903)
		- automatedMarketMakerPairs[pair] = value (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#923)
Reentrancy in CRYPTOVATOR.launch() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#893-910):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#901)
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#905)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
	External calls sending eth:
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#905)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
	State variables written after the call(s):
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#905)
		- _allowances[owner][spender] = amount (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#993)
	- charityFee = 1 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#908)
	- launchTime = block.timestamp (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#907)
Reentrancy in CRYPTOVATOR.swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1122-1156):
	External calls:
	- swapTokensForETH(amountToSwapForETH) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1132)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1171-1177)
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
	- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1149)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
	External calls sending eth:
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
	- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1149)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
	State variables written after the call(s):
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1149)
		- _allowances[owner][spender] = amount (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#993)
Reentrancy in CRYPTOVATOR.transferFrom(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#808-823):
	External calls:
	- _transfer(sender,recipient,amount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#813)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1171-1177)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#813)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#814-821)
		- _allowances[owner][spender] = amount (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#993)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in CRYPTOVATOR._transfer(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#997-1120):
	External calls:
	- swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1078)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1171-1177)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
	External calls sending eth:
	- swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1078)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1230)
		- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
	- Transfer(sender,recipient,tTransferAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1272)
		- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
	- Transfer(sender,recipient,tTransferAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1251)
		- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
	- Transfer(sender,recipient,tTransferAmount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1294)
		- _tokenTransfer(from,to,amount,takeFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1114)
	- Transfer(from,_charityAdd,_charityFee) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1117)
Reentrancy in CRYPTOVATOR.forceSwapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1159-1164):
	External calls:
	- swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1162)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1171-1177)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
	External calls sending eth:
	- swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1162)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
	Event emitted after the call(s):
	- OwnerForcedSwapBack(block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1163)
Reentrancy in CRYPTOVATOR.launch() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#893-910):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#901)
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#905)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
	External calls sending eth:
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#905)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#994)
		- addLiquidity(balanceOf(address(this)),address(this).balance) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#905)
	- OwnershipTransferred(_owner,newOwner) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#241)
		- transferOwnership(_owner) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#906)
Reentrancy in CRYPTOVATOR.swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1122-1156):
	External calls:
	- swapTokensForETH(amountToSwapForETH) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1132)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1171-1177)
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
	- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1149)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
	External calls sending eth:
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
	- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1149)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#994)
		- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1149)
	- SwapAndLiquify(amountToSwapForETH,ethForLiquidity,tokensForLiquidity) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1150)
Reentrancy in CRYPTOVATOR.transferForeignToken(address,address) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1515-1525):
	External calls:
	- _sent = IERC20(_token).transfer(_to,_contractBalance) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1523)
	Event emitted after the call(s):
	- TransferForeignToken(_token,_contractBalance) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1524)
Reentrancy in CRYPTOVATOR.transferFrom(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#808-823):
	External calls:
	- _transfer(sender,recipient,amount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#813)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1171-1177)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#813)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1182-1189)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#994)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#814-821)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

CRYPTOVATOR._transfer(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#997-1120) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp > launchTime + 60 || amount <= maxAmountCanBuy,You can't buy large amount.) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1012)
	- boughtEarly[from] && earlyBuyPenaltyEnd > block.timestamp (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1102)
	- require(bool,string)(! boughtEarly[from] || earlyBuyPenaltyEnd <= block.timestamp,Snipers can't transfer tokens to sell cheaper until penalty timeframe is over.  DM a Mod.) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1108)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Address.isContract(address) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#111-122) uses assembly
	- INLINE ASM (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#118-120)
Address._functionCallWithValue(address,bytes,uint256,string) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#180-203) uses assembly
	- INLINE ASM (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#195-198)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

CRYPTOVATOR.includeInReward(address) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#972-983) has costly operations inside a loop:
	- _excluded.pop() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#979)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop

CRYPTOVATOR._transfer(address,address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#997-1120) has a high cyclomatic complexity (17).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

Context._msgData() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#10-13) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

CRYPTOVATOR._previousTaxFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#636) is set pre-construction with a non-constant function or state variable:
	- _taxFee
CRYPTOVATOR._previousLiquidityFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#641) is set pre-construction with a non-constant function or state variable:
	- _liquidityFee
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint ^0.8.9 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation.
It is used by:
	- ^0.8.9 (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#124-136):
	- (success,None) = recipient.call{value: amount}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#131)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#180-203):
	- (success,returndata) = target.call{value: weiValue}(data) (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#188-190)
Low level call in CRYPTOVATOR.swapBack() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1122-1156):
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1146)
	- (success,None) = address(devAddress).call{value: ethForDev}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1147)
	- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1154)
Low level call in CRYPTOVATOR.withdrawStuckETH() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1536-1540):
	- (success,None) = address(msg.sender).call{value: address(this).balance}() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1539)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IUniswapV2Pair.DOMAIN_SEPARATOR() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#319) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#321) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#351) is not in mixedCase
Function IUniswapV2Router01.WETH() (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#395) is not in mixedCase
Parameter CRYPTOVATOR.calculateTaxFee(uint256)._amount (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1406) is not in mixedCase
Parameter CRYPTOVATOR.calculateLiquidityFee(uint256)._amount (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1410) is not in mixedCase
Parameter CRYPTOVATOR.setMarketingAddress(address)._marketingAddress (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1475) is not in mixedCase
Parameter CRYPTOVATOR.setLiquidityAddress(address)._liquidityAddress (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1483) is not in mixedCase
Parameter CRYPTOVATOR.setSwapAndLiquifyEnabled(bool)._enabled (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1490) is not in mixedCase
Parameter CRYPTOVATOR.transferForeignToken(address,address)._token (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1515) is not in mixedCase
Parameter CRYPTOVATOR.transferForeignToken(address,address)._to (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1515) is not in mixedCase
Parameter CRYPTOVATOR.setCharityFee(uint256)._fee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1531) is not in mixedCase
Variable CRYPTOVATOR._charityAdd (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#609) is not in mixedCase
Constant CRYPTOVATOR._tTotal (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#626) is not in UPPER_CASE_WITH_UNDERSCORES
Constant CRYPTOVATOR._name (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#630) is not in UPPER_CASE_WITH_UNDERSCORES
Constant CRYPTOVATOR._symbol (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#631) is not in UPPER_CASE_WITH_UNDERSCORES
Constant CRYPTOVATOR._decimals (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#632) is not in UPPER_CASE_WITH_UNDERSCORES
Variable CRYPTOVATOR._buyTaxFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#650) is not in mixedCase
Variable CRYPTOVATOR._buyLiquidityFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#651) is not in mixedCase
Variable CRYPTOVATOR._buyMarketingFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#652) is not in mixedCase
Variable CRYPTOVATOR._sellTaxFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#654) is not in mixedCase
Variable CRYPTOVATOR._sellLiquidityFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#655) is not in mixedCase
Variable CRYPTOVATOR._sellMarketingFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#656) is not in mixedCase
Variable CRYPTOVATOR._liquidityTokensToSwap (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#664) is not in mixedCase
Variable CRYPTOVATOR._marketingTokensToSwap (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#665) is not in mixedCase
Variable CRYPTOVATOR._isExcludedMaxTransactionAmount (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#669) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#11)" inContext (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#5-14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

CRYPTOVATOR._marketingFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#638) is never used in CRYPTOVATOR (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#598-1542)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

Loop condition i < _excluded.length (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#1379) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length

CRYPTOVATOR._marketingFee (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#638) should be constant 
CRYPTOVATOR._owner (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#608) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

CRYPTOVATOR.devAddress (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#604) should be immutable 
CRYPTOVATOR.maxTransactionAmount (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#667) should be immutable 
CRYPTOVATOR.maxWalletAmount (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#668) should be immutable 
CRYPTOVATOR.minimumTokensBeforeSwap (0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol#679) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x051bda85fbc58ace9d6060ba9488abe120ac072d.sol analyzed (10 contracts with 94 detectors), 77 result(s) found

real	0m5.621s
user	0m5.419s
sys	0m0.202s
