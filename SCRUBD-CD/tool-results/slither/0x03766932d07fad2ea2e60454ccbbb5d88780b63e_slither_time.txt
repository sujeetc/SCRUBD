'solc --version' running
'solc ./0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol:
Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
   --> 0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol:260:38:
    |
260 |     function owner_updateSwapEnabled(bool _swapEnable) external {
    |                                      ^^^^^^^^^^^^^^^^



Reentrancy in STS._transfer(address,address,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#282-310):
	External calls:
	- swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#298)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).sendValue(ethAmount - ethFromLiquidity) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#394)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	External calls sending eth:
	- swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#298)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	State variables written after the call(s):
	- _tOwned[from] -= amount (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#301)
	STS._tOwned (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#108) can be used in cross function reentrancies:
	- STS._getTaxValues(uint256,address,bool) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#312-334)
	- STS._transfer(address,address,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#282-310)
	- STS.balanceOf(address) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#192-194)
	- STS.constructor() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#158-173)
	- transferAmount = _getTaxValues(amount,from,to == pair) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#305)
		- _tOwned[address(this)] += totalTaxedTokens (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#330)
	STS._tOwned (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#108) can be used in cross function reentrancies:
	- STS._getTaxValues(uint256,address,bool) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#312-334)
	- STS._transfer(address,address,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#282-310)
	- STS.balanceOf(address) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#192-194)
	- STS.constructor() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#158-173)
	- _tOwned[to] += transferAmount (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#308)
	STS._tOwned (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#108) can be used in cross function reentrancies:
	- STS._getTaxValues(uint256,address,bool) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#312-334)
	- STS._transfer(address,address,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#282-310)
	- STS.balanceOf(address) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#192-194)
	- STS.constructor() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#158-173)
	- transferAmount = _getTaxValues(amount,from,to == pair) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#305)
		- totalTokensFromTax.marketingTokens += tokensForMarketing (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#323)
		- totalTokensFromTax.lpTokens += tokensForLP (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#326)
	STS.totalTokensFromTax (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#150) can be used in cross function reentrancies:
	- STS._getTaxValues(uint256,address,bool) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#312-334)
	- STS.owner_rescueExcessTokens() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#268-275)
	- STS.swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#354-375)
	- STS.totalTokensFromTax (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#150)
Reentrancy in STS.swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#354-375):
	External calls:
	- ethSwapped = swapTokensForETH(totalTokensFromTax.marketingTokens) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#356)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	External calls sending eth:
	- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	State variables written after the call(s):
	- totalTokensFromTax.marketingTokens = 0 (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#359)
	STS.totalTokensFromTax (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#150) can be used in cross function reentrancies:
	- STS._getTaxValues(uint256,address,bool) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#312-334)
	- STS.owner_rescueExcessTokens() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#268-275)
	- STS.swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#354-375)
	- STS.totalTokensFromTax (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#150)
Reentrancy in STS.swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#354-375):
	External calls:
	- ethSwapped = swapTokensForETH(totalTokensFromTax.marketingTokens) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#356)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	- balAutoLP = swapTokensForETH(half) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#366)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	- addLiquidity(otherHalf,balAutoLP) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#368)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).sendValue(ethAmount - ethFromLiquidity) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#394)
	External calls sending eth:
	- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	- addLiquidity(otherHalf,balAutoLP) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#368)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
	State variables written after the call(s):
	- totalTokensFromTax.lpTokens = 0 (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#369)
	STS.totalTokensFromTax (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#150) can be used in cross function reentrancies:
	- STS._getTaxValues(uint256,address,bool) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#312-334)
	- STS.owner_rescueExcessTokens() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#268-275)
	- STS.swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#354-375)
	- STS.totalTokensFromTax (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#150)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

STS.enableTrading() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#239-252) ignores return value by router.addLiquidityETH{value: address(this).balance}(address(this),balanceOf(address(this)),0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#244-251)
STS.addLiquidity(uint256,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#381-395) ignores return value by (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

STS.allowance(address,address).owner (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#201) shadows:
	- Ownable.owner() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#43-45) (function)
STS._approve(address,address,uint256).owner (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#220) shadows:
	- Ownable.owner() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#43-45) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

STS.owner_setMaxLimits(uint256,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#254-258) should emit an event for: 
	- maxTransAmount = maxTX_EXACT * (10 ** _decimals) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#257) 
	- maxWalletSize = maxWallet_EXACT * (10 ** _decimals) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#257) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Reentrancy in STS.enableTrading() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#239-252):
	External calls:
	- pair = IFactory(router.factory()).createPair(address(this),router.WETH()) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#240)
	State variables written after the call(s):
	- _approve(address(this),address(router),type()(uint256).max) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#242)
		- _allowances[owner][spender] = amount (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#223)
	- _isExcludedFromMaxBalance[pair] = true (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#241)
Reentrancy in STS.swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#354-375):
	External calls:
	- ethSwapped = swapTokensForETH(totalTokensFromTax.marketingTokens) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#356)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	- balAutoLP = swapTokensForETH(half) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#366)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	External calls sending eth:
	- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	State variables written after the call(s):
	- balAutoLP = swapTokensForETH(half) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#366)
		- _allowances[owner][spender] = amount (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#223)
Reentrancy in STS.swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#354-375):
	External calls:
	- ethSwapped = swapTokensForETH(totalTokensFromTax.marketingTokens) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#356)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	- balAutoLP = swapTokensForETH(half) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#366)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	- addLiquidity(otherHalf,balAutoLP) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#368)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).sendValue(ethAmount - ethFromLiquidity) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#394)
	External calls sending eth:
	- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	- addLiquidity(otherHalf,balAutoLP) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#368)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
	State variables written after the call(s):
	- addLiquidity(otherHalf,balAutoLP) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#368)
		- _allowances[owner][spender] = amount (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#223)
	- _lastSwap = block.timestamp (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#374)
Reentrancy in STS.transferFrom(address,address,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#227-231):
	External calls:
	- _transfer(sender,recipient,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#228)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).sendValue(ethAmount - ethFromLiquidity) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#394)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#228)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#229)
		- _allowances[owner][spender] = amount (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#223)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in STS._transfer(address,address,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#282-310):
	External calls:
	- swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#298)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).sendValue(ethAmount - ethFromLiquidity) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#394)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	External calls sending eth:
	- swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#298)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	Event emitted after the call(s):
	- Transfer(from,address(this),totalTaxedTokens) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#331)
		- transferAmount = _getTaxValues(amount,from,to == pair) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#305)
	- Transfer(from,to,transferAmount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#309)
Reentrancy in STS.enableTrading() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#239-252):
	External calls:
	- pair = IFactory(router.factory()).createPair(address(this),router.WETH()) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#240)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#224)
		- _approve(address(this),address(router),type()(uint256).max) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#242)
Reentrancy in STS.swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#354-375):
	External calls:
	- ethSwapped = swapTokensForETH(totalTokensFromTax.marketingTokens) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#356)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	- balAutoLP = swapTokensForETH(half) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#366)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	External calls sending eth:
	- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#224)
		- balAutoLP = swapTokensForETH(half) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#366)
Reentrancy in STS.swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#354-375):
	External calls:
	- ethSwapped = swapTokensForETH(totalTokensFromTax.marketingTokens) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#356)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	- balAutoLP = swapTokensForETH(half) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#366)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	- addLiquidity(otherHalf,balAutoLP) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#368)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).sendValue(ethAmount - ethFromLiquidity) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#394)
	External calls sending eth:
	- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	- addLiquidity(otherHalf,balAutoLP) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#368)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#224)
		- addLiquidity(otherHalf,balAutoLP) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#368)
	- SwapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#372)
Reentrancy in STS.transferFrom(address,address,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#227-231):
	External calls:
	- _transfer(sender,recipient,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#228)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).sendValue(ethAmount - ethFromLiquidity) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#394)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#344-350)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#228)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#224)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#229)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

STS._transfer(address,address,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#282-310) uses timestamp for comparisons
	Dangerous comparisons:
	- balanceOf(address(this)) >= swapLimit && swapEnabled && block.timestamp >= (_lastSwap + _swapCooldown) && ! swapping && from != pair && from != owner() && to != owner() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#291-297)
STS.addLiquidity(uint256,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#381-395) uses timestamp for comparisons
	Dangerous comparisons:
	- ethAmount - ethFromLiquidity > 0 (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#393)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Context._msgData() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#28-31) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

STS.swapLimit (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#126) is set pre-construction with a non-constant function or state variable:
	- _tTotal / 5000
STS.maxTransAmount (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#127) is set pre-construction with a non-constant function or state variable:
	- _tTotal * 25 / 1000
STS.maxWalletSize (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#128) is set pre-construction with a non-constant function or state variable:
	- _tTotal * 25 / 1000
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint ^0.8.17 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess.
It is used by:
	- ^0.8.17 (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#12)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#15-20):
	- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IRouter.WETH() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#84) is not in mixedCase
Function STS.owner_setMaxLimits(uint256,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#254-258) is not in mixedCase
Parameter STS.owner_setMaxLimits(uint256,uint256).maxTX_EXACT (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#254) is not in mixedCase
Parameter STS.owner_setMaxLimits(uint256,uint256).maxWallet_EXACT (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#254) is not in mixedCase
Function STS.owner_updateSwapEnabled(bool) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#260-262) is not in mixedCase
Function STS.owner_setDogSellTimeForAddress(address,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#264-266) is not in mixedCase
Function STS.owner_rescueExcessTokens() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#268-275) is not in mixedCase
Function STS.owner_rescueETH(uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#277-280) is not in mixedCase
Constant STS._name (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#114) is not in UPPER_CASE_WITH_UNDERSCORES
Constant STS._symbol (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#115) is not in UPPER_CASE_WITH_UNDERSCORES
Variable STS._isExcludedFromFee (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#117) is not in mixedCase
Variable STS._isExcludedFromMaxBalance (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#118) is not in mixedCase
Constant STS._decimals (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#122) is not in UPPER_CASE_WITH_UNDERSCORES
Variable STS._dogSellTime (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#135) is not in mixedCase
Variable STS._caughtDogs (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#137) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#29)" inContext (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#23-32)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

Reentrancy in STS._transfer(address,address,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#282-310):
	External calls:
	- swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#298)
		- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	External calls sending eth:
	- swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#298)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	State variables written after the call(s):
	- _tOwned[from] -= amount (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#301)
	- transferAmount = _getTaxValues(amount,from,to == pair) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#305)
		- _tOwned[address(this)] += totalTaxedTokens (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#330)
	- _tOwned[to] += transferAmount (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#308)
	- transferAmount = _getTaxValues(amount,from,to == pair) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#305)
		- totalTokensFromTax.marketingTokens += tokensForMarketing (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#323)
		- totalTokensFromTax.lpTokens += tokensForLP (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#326)
	Event emitted after the call(s):
	- Transfer(from,address(this),totalTaxedTokens) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#331)
		- transferAmount = _getTaxValues(amount,from,to == pair) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#305)
	- Transfer(from,to,transferAmount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#309)
Reentrancy in STS.swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#354-375):
	External calls:
	- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	State variables written after the call(s):
	- balAutoLP = swapTokensForETH(half) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#366)
		- _allowances[owner][spender] = amount (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#223)
	- totalTokensFromTax.marketingTokens = 0 (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#359)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#224)
		- balAutoLP = swapTokensForETH(half) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#366)
Reentrancy in STS.swapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#354-375):
	External calls:
	- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	External calls sending eth:
	- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	- addLiquidity(otherHalf,balAutoLP) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#368)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
	State variables written after the call(s):
	- addLiquidity(otherHalf,balAutoLP) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#368)
		- _allowances[owner][spender] = amount (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#223)
	- _lastSwap = block.timestamp (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#374)
	- totalTokensFromTax.lpTokens = 0 (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#369)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#224)
		- addLiquidity(otherHalf,balAutoLP) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#368)
	- SwapAndLiquify() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#372)
Reentrancy in STS.transferFrom(address,address,uint256) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#227-231):
	External calls:
	- _transfer(sender,recipient,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#228)
		- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#228)
		- (None,ethFromLiquidity,None) = router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,owner(),block.timestamp) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#384-391)
		- (success,None) = recipient.call{value: amount}() (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#18)
		- address(feeWallet).transfer(ethSwapped) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#358)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#229)
		- _allowances[owner][spender] = amount (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#223)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#224)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount) (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#229)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

STS._dogSellTimeOffset (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#136) is never used in STS (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#105-401)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

STS._caughtDogs (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#137) should be constant 
STS._dogSellTimeOffset (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#136) should be constant 
STS._swapCooldown (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#132) should be constant 
STS._tTotal (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#125) should be constant 
STS.feeDenominator (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#123) should be constant 
STS.feeWallet (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#120) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

STS.router (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#111) should be immutable 
STS.swapLimit (0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol#126) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x03766932d07fad2ea2e60454ccbbb5d88780b63e.sol analyzed (7 contracts with 94 detectors), 54 result(s) found

real	0m3.021s
user	0m2.777s
sys	0m0.245s
