'solc --version' running
'solc ./0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol:
./0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol:30:13: Warning: Unused local variable
            bool isSuccess = whale.send(stake);
            ^------------^
./0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol:39:13: Warning: Unused local variable
            bool isOtherSuccess = msg.sender.send(stake);
            ^-----------------^


Deprecated standard detected THROW (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#38):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Version constraint ^0.4.4 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput
	- SkipEmptyStringLiteral
	- ConstantOptimizerSubtraction
	- IdentityPrecompileReturnIgnored.
It is used by:
	- ^0.4.4 (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#1)
solc-0.4.11 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Reentrancy in Mattew.fallback() (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#28-43):
	External calls:
	- isSuccess = whale.send(stake) (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#30)
	State variables written after the call(s):
	- setFacts() (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#32)
		- blockheight = block.number (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#23)
	- setFacts() (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#32)
		- stake = msg.value (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#22)
	- setFacts() (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#32)
		- whale = msg.sender (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#24)
	Event emitted after the call(s):
	- MattewWon(Mattew won (mattew, stake, blockheight),whale,stake,block.number) (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#31)
Reentrancy in Mattew.fallback() (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#28-43):
	External calls:
	- isOtherSuccess = msg.sender.send(stake) (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#39)
	State variables written after the call(s):
	- setFacts() (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#40)
		- blockheight = block.number (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#23)
	- setFacts() (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#40)
		- stake = msg.value (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#22)
	- setFacts() (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#40)
		- whale = msg.sender (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#24)
	Event emitted after the call(s):
	- StakeIncreased(stake increased (whale, stake, blockheight),whale,stake,blockheight) (0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol#41)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4
./0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d.sol analyzed (1 contracts with 94 detectors), 5 result(s) found

real	0m1.465s
user	0m1.206s
sys	0m0.262s
