'solc --version' running
'solc ./0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol:
Warning: Contract code size is 29164 bytes and exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> 0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol:748:1:
    |
748 | contract Infernu is IERC20, Ownable
    | ^ (Relevant source part starts here and spans across multiple lines).



Reentrancy in Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988):
	External calls:
	- claimETH(sender) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#944)
		- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	- _swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#967)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
		- _uniswapv2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1221-1227)
	External calls sending eth:
	- claimETH(sender) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#944)
		- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	- _swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#967)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
	State variables written after the call(s):
	- _removeToken(sender,amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#976)
		- _balances[addr] = newAmount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1083)
		- _balances[addr] = newAmount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1090)
	Infernu._balances (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#755) can be used in cross function reentrancies:
	- Infernu._addToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1057-1074)
	- Infernu._feelessTransfer(address,address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#991-1001)
	- Infernu._getTotalShares() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1046-1054)
	- Infernu._newDividentsOf(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1100-1106)
	- Infernu._removeToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1078-1095)
	- Infernu._swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1183-1213)
	- Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988)
	- Infernu.balanceOf(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1546-1548)
	- Infernu.claimETH(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1131-1165)
	- Infernu.constructor() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#821-861)
	- _balances[address(this)] += contractToken (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#979)
	Infernu._balances (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#755) can be used in cross function reentrancies:
	- Infernu._addToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1057-1074)
	- Infernu._feelessTransfer(address,address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#991-1001)
	- Infernu._getTotalShares() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1046-1054)
	- Infernu._newDividentsOf(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1100-1106)
	- Infernu._removeToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1078-1095)
	- Infernu._swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1183-1213)
	- Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988)
	- Infernu.balanceOf(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1546-1548)
	- Infernu.claimETH(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1131-1165)
	- Infernu.constructor() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#821-861)
	- _addToken(recipient,taxedAmount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#984)
		- _balances[addr] = newAmount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1062)
		- _balances[addr] = newAmount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1073)
	Infernu._balances (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#755) can be used in cross function reentrancies:
	- Infernu._addToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1057-1074)
	- Infernu._feelessTransfer(address,address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#991-1001)
	- Infernu._getTotalShares() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1046-1054)
	- Infernu._newDividentsOf(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1100-1106)
	- Infernu._removeToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1078-1095)
	- Infernu._swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1183-1213)
	- Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988)
	- Infernu.balanceOf(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1546-1548)
	- Infernu.claimETH(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1131-1165)
	- Infernu.constructor() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#821-861)
	- _circulatingSupply -= tokensToBeBurnt (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#981)
	Infernu._circulatingSupply (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#795) can be used in cross function reentrancies:
	- Infernu.TeamUpdateLimits(uint256,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1411-1428)
	- Infernu._getTotalShares() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1046-1054)
	- Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988)
	- Infernu.constructor() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#821-861)
	- Infernu.getBurnedTokens() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1252-1254)
	- Infernu.totalSupply() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1542-1544)
	- _removeToken(sender,amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#976)
		- alreadyPaidShares[addr] = profitPerShare * newAmount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1092)
	Infernu.alreadyPaidShares (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1030) can be used in cross function reentrancies:
	- Infernu._addToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1057-1074)
	- Infernu._newDividentsOf(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1100-1106)
	- Infernu._removeToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1078-1095)
	- Infernu.claimETH(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1131-1165)
	- _addToken(recipient,taxedAmount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#984)
		- alreadyPaidShares[addr] = profitPerShare * newAmount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1069)
	Infernu.alreadyPaidShares (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1030) can be used in cross function reentrancies:
	- Infernu._addToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1057-1074)
	- Infernu._newDividentsOf(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1100-1106)
	- Infernu._removeToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1078-1095)
	- Infernu.claimETH(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1131-1165)
	- _swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#967)
		- profitPerShare += ((amount * DistributionMultiplier) / totalShares) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1124)
	Infernu.profitPerShare (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1018) can be used in cross function reentrancies:
	- Infernu._addToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1057-1074)
	- Infernu._distributeStake(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1109-1127)
	- Infernu._newDividentsOf(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1100-1106)
	- Infernu._removeToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1078-1095)
	- Infernu.claimETH(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1131-1165)
	- Infernu.profitPerShare (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1018)
	- _removeToken(sender,amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#976)
		- toBePaid[addr] += payment (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1094)
	Infernu.toBePaid (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1032) can be used in cross function reentrancies:
	- Infernu._addToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1057-1074)
	- Infernu._removeToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1078-1095)
	- Infernu.claimETH(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1131-1165)
	- Infernu.getDividents(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1311-1314)
	- _addToken(recipient,taxedAmount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#984)
		- toBePaid[addr] += payment (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1071)
	Infernu.toBePaid (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1032) can be used in cross function reentrancies:
	- Infernu._addToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1057-1074)
	- Infernu._removeToken(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1078-1095)
	- Infernu.claimETH(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1131-1165)
	- Infernu.getDividents(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1311-1314)
Reentrancy in Infernu.claimETH(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1131-1165):
	External calls:
	- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	State variables written after the call(s):
	- _isWithdrawing = false (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1164)
	Infernu._isWithdrawing (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1014) can be used in cross function reentrancies:
	- Infernu.claimETH(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1131-1165)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Infernu.REL() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1469-1479) ignores return value by liquidityToken.transfer(Development,amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1477)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

Infernu.claimETH(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1131-1165) uses a dangerous strict equality:
	- amount == 0 (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1148)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Infernu.constructor() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#821-861) ignores return value by _excluded.add(Development) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#852)
Infernu.constructor() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#821-861) ignores return value by _excluded.add(Marketing) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#853)
Infernu.constructor() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#821-861) ignores return value by _excluded.add(msg.sender) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#854)
Infernu.constructor() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#821-861) ignores return value by _excludedFromStaking.add(address(_uniswapv2Router)) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#856)
Infernu.constructor() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#821-861) ignores return value by _excludedFromStaking.add(_uniswapv2PairAddress) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#857)
Infernu.constructor() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#821-861) ignores return value by _excludedFromStaking.add(address(this)) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#858)
Infernu.constructor() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#821-861) ignores return value by _excludedFromStaking.add(0x000000000000000000000000000000000000dEaD) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#859)
Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988) ignores return value by _isBlacklisted.add(sender) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#914)
Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988) ignores return value by _isBlacklisted.add(recipient) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#934)
Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988) ignores return value by _isBlacklisted.add(sender) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#956)
Infernu._addLiquidity(uint256,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1230-1241) ignores return value by _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
Infernu.AddWalletExclusion(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1382-1384) ignores return value by _excluded.add(exclusionAdd) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1383)
Infernu.addAddressToBlacklist(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1431-1433) ignores return value by _isBlacklisted.add(blacklistedAddress) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1432)
Infernu.removeAddressFromBlacklist(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1436-1438) ignores return value by _isBlacklisted.remove(blacklistedAddress) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1437)
Infernu.REM(bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1481-1510) ignores return value by liquidityToken.approve(address(_uniswapv2Router),amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1488)
Infernu.REM(bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1481-1510) ignores return value by _uniswapv2Router.removeLiquidityETHSupportingFeeOnTransferTokens(address(this),amount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1494-1501)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

Infernu.allowance(address,address)._owner (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1555) shadows:
	- Ownable._owner (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#216) (state variable)
Infernu._approve(address,address,uint256).owner (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1563) shadows:
	- Ownable.owner() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#232-234) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

Infernu.TeamCollectXMarketingETH(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1330-1335) should emit an event for: 
	- marketingBalance -= amount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1332) 
Infernu.TeamChangeMaxBuy(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1342-1344) should emit an event for: 
	- MaxBuy = newMaxBuy * 10 ** _decimals (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1343) 
Infernu.TeamSetSellLockTime(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1365-1368) should emit an event for: 
	- sellLockTime = sellLockSeconds (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1367) 
Infernu.TeamSetBuyLockTime(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1371-1374) should emit an event for: 
	- buyLockTime = buyLockSeconds (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1373) 
Infernu.TeamUpdateAmountToSwap(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1377-1379) should emit an event for: 
	- currentAmountToSwap = newSwapAmount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1378) 
Infernu.TeamSetTaxes(uint8,uint8,uint8,uint8,uint8,uint8) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1387-1398) should emit an event for: 
	- _burnTax = burnTaxes (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1391) 
	- _liquidityTax = liquidityTaxes (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1392) 
	- _stakingTax = stakingTaxes (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1393) 
	- _buyTax = buyTax (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1395) 
	- _sellTax = sellTax (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1396) 
	- _transferTax = transferTax (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1397) 
Infernu.TeamChangeMarketingShare(uint8) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1401-1404) should emit an event for: 
	- marketingShare = newShare (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1403) 
Infernu.TeamUpdateLimits(uint256,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1411-1428) should emit an event for: 
	- balanceLimit = newBalanceLimit (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1426) 
	- sellLimit = newSellLimit (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1427) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Infernu.TeamChangeDevelopment(address).newDevelopment (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1346) lacks a zero-check on :
		- Development = address(newDevelopment) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1347)
Infernu.TeamChangeMarketing(address).newMarketing (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1350) lacks a zero-check on :
		- Marketing = address(newMarketing) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1351)
Infernu.SetupLiquidityTokenAddress(address).liquidityTokenAddress (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1451) lacks a zero-check on :
		- _liquidityTokenAddress = liquidityTokenAddress (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1452)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in Infernu.REM(bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1481-1510):
	External calls:
	- liquidityToken.approve(address(_uniswapv2Router),amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1488)
	- _uniswapv2Router.removeLiquidityETHSupportingFeeOnTransferTokens(address(this),amount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1494-1501)
	State variables written after the call(s):
	- _distributeStake(newETHBalance) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1504)
		- marketingBalance += marketingSplit (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1114)
		- marketingBalance += amount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1121)
	- marketingBalance += newETHBalance (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1507)
	- _distributeStake(newETHBalance) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1504)
		- profitPerShare += ((amount * DistributionMultiplier) / totalShares) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1124)
	- _distributeStake(newETHBalance) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1504)
		- totalStakingReward += amount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1117)
Reentrancy in Infernu._swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1183-1213):
	External calls:
	- _swapTokenForETH(swapToken) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1203)
		- _uniswapv2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1221-1227)
	- _addLiquidity(liqToken,liqETH) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1207)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
	External calls sending eth:
	- _addLiquidity(liqToken,liqETH) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1207)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
	State variables written after the call(s):
	- _addLiquidity(liqToken,liqETH) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1207)
		- _allowances[owner][spender] = amount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1567)
	- _distributeStake(distributeETH) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1212)
		- marketingBalance += marketingSplit (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1114)
		- marketingBalance += amount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1121)
	- _distributeStake(distributeETH) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1212)
		- profitPerShare += ((amount * DistributionMultiplier) / totalShares) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1124)
	- _distributeStake(distributeETH) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1212)
		- totalStakingReward += amount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1117)
Reentrancy in Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988):
	External calls:
	- claimETH(sender) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#944)
		- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	- _swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#967)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
		- _uniswapv2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1221-1227)
	External calls sending eth:
	- claimETH(sender) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#944)
		- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	- _swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#967)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
	State variables written after the call(s):
	- _swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#967)
		- _allowances[owner][spender] = amount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1567)
Reentrancy in Infernu.transferFrom(address,address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1571-1579):
	External calls:
	- _transfer(sender,recipient,amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1572)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
		- _uniswapv2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1221-1227)
		- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1572)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
		- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	State variables written after the call(s):
	- _approve(sender,msg.sender,currentAllowance - amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1577)
		- _allowances[owner][spender] = amount (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1567)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in Infernu._swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1183-1213):
	External calls:
	- _swapTokenForETH(swapToken) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1203)
		- _uniswapv2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1221-1227)
	- _addLiquidity(liqToken,liqETH) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1207)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
	External calls sending eth:
	- _addLiquidity(liqToken,liqETH) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1207)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1568)
		- _addLiquidity(liqToken,liqETH) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1207)
Reentrancy in Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988):
	External calls:
	- claimETH(sender) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#944)
		- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	Event emitted after the call(s):
	- antiBotBan(sender) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#957)
Reentrancy in Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988):
	External calls:
	- claimETH(sender) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#944)
		- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	- _swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#967)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
		- _uniswapv2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1221-1227)
	External calls sending eth:
	- claimETH(sender) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#944)
		- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	- _swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#967)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1568)
		- _swapContractToken() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#967)
	- Transfer(sender,recipient,taxedAmount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#986)
Reentrancy in Infernu.claimETH(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1131-1165):
	External calls:
	- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	Event emitted after the call(s):
	- OnWithdrawETH(amount,addr) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1163)
Reentrancy in Infernu.transferFrom(address,address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1571-1579):
	External calls:
	- _transfer(sender,recipient,amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1572)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
		- _uniswapv2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1221-1227)
		- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1572)
		- _uniswapv2Router.addLiquidityETH{value: ethamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1233-1240)
		- _uniswapv2Router.swapExactETHForTokensSupportingFeeOnTransferTokens{value: amount}(0,path,addr,block.timestamp) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1157-1161)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1568)
		- _approve(sender,msg.sender,currentAllowance - amount) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1577)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_sellLock[sender] <= block.timestamp || sellLockDisabled,Seller in sellLock) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#905)
	- block.timestamp <= tradingEnabledAt + autoBanTime && enableAutoBlacklist == 1 (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#913)
	- require(bool,string)(_buyLock[recipient] <= block.timestamp || buyLockDisabled,Buyer in buyLock) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#924)
	- block.timestamp <= tradingEnabledAt + autoBanTime && enableAutoBlacklist == 1 (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#933)
	- require(bool,string)(_sellLock[sender] <= block.timestamp || sellLockDisabled,Sender in Lock) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#950)
	- block.timestamp <= tradingEnabledAt + autoBanTime && enableAutoBlacklist == 1 (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#955)
Infernu.getLiquidityReleaseTimeInSeconds() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1245-1250) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp < _liquidityUnlockTime (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1246)
Infernu.getAddressSellLockTimeInSeconds(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1265-1272) uses timestamp for comparisons
	Dangerous comparisons:
	- lockTime <= block.timestamp (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1267)
Infernu.getAddressBuyLockTimeInSeconds(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1282-1289) uses timestamp for comparisons
	Dangerous comparisons:
	- lockTime <= block.timestamp (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1284)
Infernu._prolongLiquidityLock(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1462-1466) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(newUnlockTime > _liquidityUnlockTime) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1464)
Infernu.REL() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1469-1479) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= _liquidityUnlockTime,Not yet unlocked) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1471)
Infernu.REM(bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1481-1510) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= _liquidityUnlockTime,Not yet unlocked) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1483)
Infernu.TeamCollectRemainingETH() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1512-1517) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp >= _liquidityUnlockTime,Not yet unlocked) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1513)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Address.isContract(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#288-297) uses assembly
	- INLINE ASM (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#295)
Address._verifyCallResult(bool,bytes,string) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#433-450) uses assembly
	- INLINE ASM (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#442-445)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988) compares to a boolean constant:
	-require(bool,string)(_isBlacklisted.contains(sender) == false,Address blacklisted!) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#911)
Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988) compares to a boolean constant:
	-require(bool,string)(_isBlacklisted.contains(recipient) == false,Address blacklisted!) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#931)
Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988) compares to a boolean constant:
	-require(bool,string)(_isBlacklisted.contains(recipient) == false,Recipient address blacklisted!) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#953)
Infernu._taxedTransfer(address,address,uint256,bool,bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#896-988) compares to a boolean constant:
	-require(bool,string)(_isBlacklisted.contains(sender) == false,Sender address blacklisted!) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#952)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality

Infernu._isTeam(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#815-817) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Infernu.balanceLimit (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#796) is set pre-construction with a non-constant function or state variable:
	- _circulatingSupply
Infernu.sellLimit (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#797) is set pre-construction with a non-constant function or state variable:
	- _circulatingSupply
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint ^0.8.13 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- StorageWriteRemovalBeforeConditionalTermination
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- InlineAssemblyMemorySideEffects
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation.
It is used by:
	- ^0.8.13 (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#315-321):
	- (success,None) = recipient.call{value: amount}() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#319)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#376-383):
	- (success,returndata) = target.call{value: value}(data) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#381)
Low level call in Address.functionStaticCall(address,bytes,string) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#401-407):
	- (success,returndata) = target.staticcall(data) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#405)
Low level call in Address.functionDelegateCall(address,bytes,string) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#425-431):
	- (success,returndata) = target.delegatecall(data) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#429)
Low level call in Infernu.TeamCollectRemainingETH() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1512-1517):
	- (sent,None) = Development.call{value: (address(this).balance)}() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1515)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IUniswapV2ERC20.DOMAIN_SEPARATOR() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#49) is not in mixedCase
Function IUniswapV2ERC20.PERMIT_TYPEHASH() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#50) is not in mixedCase
Function IUniswapV2Router01.WETH() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#153) is not in mixedCase
Event Infernu.antiBotBan(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#753) is not in CapWords
Function Infernu._getTotalShares() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1046-1054) is not in mixedCase
Parameter Infernu.getAddressSellLockTimeInSeconds(address).AddressToCheck (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1265) is not in mixedCase
Parameter Infernu.getAddressBuyLockTimeInSeconds(address).AddressToCheck (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1282) is not in mixedCase
Function Infernu.AddressResetSellLock() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1296-1298) is not in mixedCase
Function Infernu.AddressResetBuyLock() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1301-1304) is not in mixedCase
Function Infernu.Rewards() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1307-1309) is not in mixedCase
Function Infernu.CollectMarketingETH() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1324-1329) is not in mixedCase
Function Infernu.TeamCollectXMarketingETH(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1330-1335) is not in mixedCase
Function Infernu.TeamSwitchManualETHConversion(bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1338-1340) is not in mixedCase
Function Infernu.TeamChangeMaxBuy(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1342-1344) is not in mixedCase
Function Infernu.TeamChangeDevelopment(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1346-1348) is not in mixedCase
Function Infernu.TeamChangeMarketing(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1350-1352) is not in mixedCase
Function Infernu.TeamDisableSellLock(bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1355-1357) is not in mixedCase
Function Infernu.TeamDisableBuyLock(bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1360-1362) is not in mixedCase
Function Infernu.TeamSetSellLockTime(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1365-1368) is not in mixedCase
Function Infernu.TeamSetBuyLockTime(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1371-1374) is not in mixedCase
Function Infernu.TeamUpdateAmountToSwap(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1377-1379) is not in mixedCase
Function Infernu.AddWalletExclusion(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1382-1384) is not in mixedCase
Function Infernu.TeamSetTaxes(uint8,uint8,uint8,uint8,uint8,uint8) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1387-1398) is not in mixedCase
Function Infernu.TeamChangeMarketingShare(uint8) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1401-1404) is not in mixedCase
Function Infernu.TeamCreateLPandETH() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1406-1408) is not in mixedCase
Function Infernu.TeamUpdateLimits(uint256,uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1411-1428) is not in mixedCase
Function Infernu.SetupEnableTrading() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1445-1448) is not in mixedCase
Function Infernu.SetupLiquidityTokenAddress(address) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1451-1453) is not in mixedCase
Function Infernu.TeamExtendLiquidityLock(uint256) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1459-1461) is not in mixedCase
Function Infernu.REL() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1469-1479) is not in mixedCase
Function Infernu.REM(bool) (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1481-1510) is not in mixedCase
Function Infernu.TeamCollectRemainingETH() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1512-1517) is not in mixedCase
Parameter Infernu.allowance(address,address)._owner (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1555) is not in mixedCase
Constant Infernu._name (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#768) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Infernu._symbol (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#769) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Infernu._decimals (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#770) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Infernu.DefaultLiquidityLockTime (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#786) is not in UPPER_CASE_WITH_UNDERSCORES
Variable Infernu.Development (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#788) is not in mixedCase
Variable Infernu.Marketing (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#789) is not in mixedCase
Constant Infernu.UniswapV2Router (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#791) is not in UPPER_CASE_WITH_UNDERSCORES
Variable Infernu.MaxBuy (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#798) is not in mixedCase
Constant Infernu.DistributionMultiplier (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#1016) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Infernu.slitherConstructorVariables() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#748-1597) uses literals with too many digits:
	- MaxBuy = 1000000 * 10 ** _decimals (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#798)
Infernu.slitherConstructorConstantVariables() (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#748-1597) uses literals with too many digits:
	- InitialSupply = 100000000 * 10 ** _decimals (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#771)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Infernu.autoBanTime (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#775) should be constant 
Infernu.enableAutoBlacklist (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#776) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

Infernu._uniswapv2PairAddress (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#810) should be immutable 
Infernu._uniswapv2Router (0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol#811) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x2638a23a9118d5786b6a6529bf3c09c922d3cdad.sol analyzed (9 contracts with 94 detectors), 113 result(s) found

real	0m8.685s
user	0m8.400s
sys	0m0.285s
