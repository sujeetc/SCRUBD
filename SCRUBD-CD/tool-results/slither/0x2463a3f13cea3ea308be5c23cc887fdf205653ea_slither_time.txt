'solc --version' running
'solc ./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

Reentrancy in ADAMPROJECT._transfer(address,address,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#331-357):
	External calls:
	- swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#346)
		- router.addLiquidityETH{value: ETHAmount}(address(this),tokenAmount,0,0,liquidityPool,block.timestamp) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#424-431)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#414-420)
	External calls sending eth:
	- swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#346)
		- router.addLiquidityETH{value: ETHAmount}(address(this),tokenAmount,0,0,liquidityPool,block.timestamp) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#424-431)
		- address(marketingWallet).transfer(ETHForMkt) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#452)
		- address(devWallet).transfer(ETHForDev) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#460)
	State variables written after the call(s):
	- _balances[sender] = _balances[sender] - amount (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#349)
	ADAMPROJECT._balances (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#164) can be used in cross function reentrancies:
	- ADAMPROJECT._basicTransfer(address,address,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#385-390)
	- ADAMPROJECT._transfer(address,address,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#331-357)
	- ADAMPROJECT.balanceOf(address) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#298)
	- ADAMPROJECT.constructor() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#205-227)
	- ADAMPROJECT.swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#434-464)
	- ADAMPROJECT.takeFee(address,address,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#359-383)
	- _balances[recipient] = _balances[recipient] + finalAmount (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#353)
	ADAMPROJECT._balances (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#164) can be used in cross function reentrancies:
	- ADAMPROJECT._basicTransfer(address,address,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#385-390)
	- ADAMPROJECT._transfer(address,address,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#331-357)
	- ADAMPROJECT.balanceOf(address) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#298)
	- ADAMPROJECT.constructor() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#205-227)
	- ADAMPROJECT.swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#434-464)
	- ADAMPROJECT.takeFee(address,address,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#359-383)
	- finalAmount = takeFee(sender,recipient,amount) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#351)
		- _balances[address(this)] = _balances[address(this)] + taxToGet (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#379)
	ADAMPROJECT._balances (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#164) can be used in cross function reentrancies:
	- ADAMPROJECT._basicTransfer(address,address,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#385-390)
	- ADAMPROJECT._transfer(address,address,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#331-357)
	- ADAMPROJECT.balanceOf(address) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#298)
	- ADAMPROJECT.constructor() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#205-227)
	- ADAMPROJECT.swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#434-464)
	- ADAMPROJECT.takeFee(address,address,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#359-383)
	- finalAmount = takeFee(sender,recipient,amount) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#351)
		- taxesCollected[0] += mkt (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#314)
		- taxesCollected[1] += lp (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#315)
		- taxesCollected[2] += dev (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#316)
	ADAMPROJECT.taxesCollected (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#173) can be used in cross function reentrancies:
	- ADAMPROJECT.addTaxCollected(uint256,uint256,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#313-317)
	- ADAMPROJECT.swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#434-464)
Reentrancy in ADAMPROJECT.swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#434-464):
	External calls:
	- swapTokensForETH(amountToSwap) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#444)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#414-420)
	- addLiquidity(tokensForLiquidity,ETHForLiquidity) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#456)
		- router.addLiquidityETH{value: ETHAmount}(address(this),tokenAmount,0,0,liquidityPool,block.timestamp) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#424-431)
	External calls sending eth:
	- address(marketingWallet).transfer(ETHForMkt) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#452)
	- addLiquidity(tokensForLiquidity,ETHForLiquidity) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#456)
		- router.addLiquidityETH{value: ETHAmount}(address(this),tokenAmount,0,0,liquidityPool,block.timestamp) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#424-431)
	- address(devWallet).transfer(ETHForDev) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#460)
	State variables written after the call(s):
	- delete taxesCollected (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#463)
	ADAMPROJECT.taxesCollected (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#173) can be used in cross function reentrancies:
	- ADAMPROJECT.addTaxCollected(uint256,uint256,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#313-317)
	- ADAMPROJECT.swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#434-464)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

ADAMPROJECT.clearStuckTokens(address) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#477-481) ignores return value by erc20Token.transfer(marketingWallet,balance) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#480)
ADAMPROJECT.massDistributeTokens(address[],uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#483-487) ignores return value by IERC20(address(this)).transfer(_airdropAddresses[i],amtPerAddress) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#485)
ADAMPROJECT.distributeTokensByAmount(address[],uint256[]) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#489-493) ignores return value by IERC20(address(this)).transfer(_airdropAddresses[i],_airdropAmounts[i]) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#491)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

ADAMPROJECT.takeFee(address,address,uint256).taxToGet (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#367) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

ADAMPROJECT.addLiquidity(uint256,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#423-432) ignores return value by router.addLiquidityETH{value: ETHAmount}(address(this),tokenAmount,0,0,liquidityPool,block.timestamp) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#424-431)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

ADAMPROJECT.updateBuyFees(uint256,uint256,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#392-397) should emit an event for: 
	- buyMkt = newBuyMktFee (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#394) 
	- buyLP = newBuyLpFee (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#395) 
	- buyDev = newBuyDev (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#396) 
ADAMPROJECT.updateSellFees(uint256,uint256,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#399-404) should emit an event for: 
	- sellMkt = newSellMktFee (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#401) 
	- sellLP = newSellLpFee (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#402) 
	- sellDev = newSellDev (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#403) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

ADAMPROJECT.setMarketingWallet(address).newMarketingWallet (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#272) lacks a zero-check on :
		- marketingWallet = address(newMarketingWallet) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#273)
ADAMPROJECT.setDevWallet(address).newDevWallet (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#276) lacks a zero-check on :
		- devWallet = address(newDevWallet) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#277)
ADAMPROJECT.setLiquidityPool(address).newLiquidityPool (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#280) lacks a zero-check on :
		- liquidityPool = newLiquidityPool (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#281)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

ADAMPROJECT.massDistributeTokens(address[],uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#483-487) has external calls inside a loop: IERC20(address(this)).transfer(_airdropAddresses[i],amtPerAddress) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#485)
ADAMPROJECT.distributeTokensByAmount(address[],uint256[]) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#489-493) has external calls inside a loop: IERC20(address(this)).transfer(_airdropAddresses[i],_airdropAmounts[i]) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#491)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Reentrancy in ADAMPROJECT._transfer(address,address,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#331-357):
	External calls:
	- swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#346)
		- router.addLiquidityETH{value: ETHAmount}(address(this),tokenAmount,0,0,liquidityPool,block.timestamp) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#424-431)
		- router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#414-420)
	External calls sending eth:
	- swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#346)
		- router.addLiquidityETH{value: ETHAmount}(address(this),tokenAmount,0,0,liquidityPool,block.timestamp) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#424-431)
		- address(marketingWallet).transfer(ETHForMkt) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#452)
		- address(devWallet).transfer(ETHForDev) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#460)
	Event emitted after the call(s):
	- Transfer(sender,address(this),taxToGet) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#380)
		- finalAmount = takeFee(sender,recipient,amount) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#351)
	- Transfer(sender,recipient,finalAmount) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#355)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Context._msgData() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#49-51) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

ADAMPROJECT.maxWallet (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#157) is set pre-construction with a non-constant function or state variable:
	- _totalSupply / 50
ADAMPROJECT.maxTransaction (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#158) is set pre-construction with a non-constant function or state variable:
	- _totalSupply / 50
ADAMPROJECT.swapThreshold (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#159) is set pre-construction with a non-constant function or state variable:
	- _totalSupply / 1000
ADAMPROJECT.maxBuy (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#161) is set pre-construction with a non-constant function or state variable:
	- _totalSupply / 50
ADAMPROJECT.liquidityPool (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#176) is set pre-construction with a non-constant function or state variable:
	- DEAD
ADAMPROJECT._baseBuyFee (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#186) is set pre-construction with a non-constant function or state variable:
	- buyMkt + buyLP + buyDev
ADAMPROJECT._baseSellFee (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#187) is set pre-construction with a non-constant function or state variable:
	- sellMkt + sellLP + sellDev
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint 0.8.13 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- StorageWriteRemovalBeforeConditionalTermination
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- InlineAssemblyMemorySideEffects
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation.
It is used by:
	- 0.8.13 (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Function IDEXRouter.WETH() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#101) is not in mixedCase
Parameter ADAMPROJECT.toggleTrade(bool)._switch (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#249) is not in mixedCase
Parameter ADAMPROJECT.toggleMaxBuy(bool)._switch (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#253) is not in mixedCase
Parameter ADAMPROJECT.changeMaxBuyAmount(uint256)._amt (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#257) is not in mixedCase
Parameter ADAMPROJECT.changeMaxWallet(uint256)._amt (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#262) is not in mixedCase
Parameter ADAMPROJECT.changeMaxTransaction(uint256)._amt (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#267) is not in mixedCase
Parameter ADAMPROJECT.addLiquidity(uint256,uint256).ETHAmount (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#423) is not in mixedCase
Parameter ADAMPROJECT.massDistributeTokens(address[],uint256)._airdropAddresses (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#483) is not in mixedCase
Parameter ADAMPROJECT.distributeTokensByAmount(address[],uint256[])._airdropAddresses (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#489) is not in mixedCase
Parameter ADAMPROJECT.distributeTokensByAmount(address[],uint256[])._airdropAmounts (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#489) is not in mixedCase
Variable ADAMPROJECT.WETH (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#150) is not in mixedCase
Constant ADAMPROJECT._name (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#152) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ADAMPROJECT._symbol (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#153) is not in UPPER_CASE_WITH_UNDERSCORES
Constant ADAMPROJECT._decimals (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#154) is not in UPPER_CASE_WITH_UNDERSCORES
Variable ADAMPROJECT.DEAD (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#170) is not in mixedCase
Variable ADAMPROJECT.ZERO (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#171) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in ADAMPROJECT._transfer(address,address,uint256) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#331-357):
	External calls:
	- swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#346)
		- address(marketingWallet).transfer(ETHForMkt) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#452)
		- address(devWallet).transfer(ETHForDev) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#460)
	External calls sending eth:
	- swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#346)
		- router.addLiquidityETH{value: ETHAmount}(address(this),tokenAmount,0,0,liquidityPool,block.timestamp) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#424-431)
		- address(marketingWallet).transfer(ETHForMkt) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#452)
		- address(devWallet).transfer(ETHForDev) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#460)
	State variables written after the call(s):
	- _balances[sender] = _balances[sender] - amount (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#349)
	- _balances[recipient] = _balances[recipient] + finalAmount (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#353)
	- finalAmount = takeFee(sender,recipient,amount) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#351)
		- _balances[address(this)] = _balances[address(this)] + taxToGet (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#379)
	- finalAmount = takeFee(sender,recipient,amount) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#351)
		- taxesCollected[0] += mkt (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#314)
		- taxesCollected[1] += lp (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#315)
		- taxesCollected[2] += dev (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#316)
	Event emitted after the call(s):
	- Transfer(sender,address(this),taxToGet) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#380)
		- finalAmount = takeFee(sender,recipient,amount) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#351)
	- Transfer(sender,recipient,finalAmount) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#355)
Reentrancy in ADAMPROJECT.swapBack() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#434-464):
	External calls:
	- address(marketingWallet).transfer(ETHForMkt) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#452)
	- address(devWallet).transfer(ETHForDev) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#460)
	External calls sending eth:
	- address(marketingWallet).transfer(ETHForMkt) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#452)
	- addLiquidity(tokensForLiquidity,ETHForLiquidity) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#456)
		- router.addLiquidityETH{value: ETHAmount}(address(this),tokenAmount,0,0,liquidityPool,block.timestamp) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#424-431)
	- address(devWallet).transfer(ETHForDev) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#460)
	State variables written after the call(s):
	- delete taxesCollected (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#463)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

ADAMPROJECT.slitherConstructorVariables() (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#148-495) uses literals with too many digits:
	- _totalSupply = 10000000 * (10 ** _decimals) (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#156)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

ADAMPROJECT.DEAD (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#170) should be constant 
ADAMPROJECT.ZERO (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#171) should be constant 
ADAMPROJECT._totalSupply (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#156) should be constant 
ADAMPROJECT.factory (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#191) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

ADAMPROJECT.WETH (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#150) should be immutable 
ADAMPROJECT._baseBuyFee (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#186) should be immutable 
ADAMPROJECT._baseSellFee (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#187) should be immutable 
ADAMPROJECT.pair (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#190) should be immutable 
ADAMPROJECT.router (0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol#189) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol analyzed (6 contracts with 94 detectors), 52 result(s) found

real	0m2.512s
user	0m2.266s
sys	0m0.250s
