'solc --version' running
'solc ./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

Reentrancy in SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352):
	External calls:
	- swapForTokenomics(inContractBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#306)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,marketingAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#368-374)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#401-407)
	External calls sending eth:
	- swapForTokenomics(inContractBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#306)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
	State variables written after the call(s):
	- _balances[from] = senderBalance - amount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#342)
	SEISHI._balances (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#133) can be used in cross function reentrancies:
	- SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352)
	- SEISHI.balanceOf(address) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#207-209)
	- SEISHI.constructor() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#178-192)
	- _balances[to] += amount - mktAmount - liqAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#343)
	SEISHI._balances (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#133) can be used in cross function reentrancies:
	- SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352)
	- SEISHI.balanceOf(address) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#207-209)
	- SEISHI.constructor() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#178-192)
	- _balances[address(this)] += totalFeeFortx (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#345)
	SEISHI._balances (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#133) can be used in cross function reentrancies:
	- SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352)
	- SEISHI.balanceOf(address) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#207-209)
	- SEISHI.constructor() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#178-192)
	- liqTokens += liqAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#347)
	SEISHI.liqTokens (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#162) can be used in cross function reentrancies:
	- SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352)
	- SEISHI.currentLiqTokens() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#201-203)
	- SEISHI.swapForTokenomics(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#353-359)
	- mktTokens += mktAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#348)
	SEISHI.mktTokens (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#161) can be used in cross function reentrancies:
	- SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352)
	- SEISHI.currentmktTokens() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#198-200)
	- SEISHI.swapForTokenomics(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#353-359)
Reentrancy in SEISHI.swapForTokenomics(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#353-359):
	External calls:
	- swapAndLiquify(liqTokens) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#354)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#401-407)
	- swapTokensForETHmkt(mktTokens) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#355)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,marketingAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#368-374)
	External calls sending eth:
	- swapAndLiquify(liqTokens) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#354)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
	State variables written after the call(s):
	- liqTokens = 0 (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#358)
	SEISHI.liqTokens (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#162) can be used in cross function reentrancies:
	- SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352)
	- SEISHI.currentLiqTokens() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#201-203)
	- SEISHI.swapForTokenomics(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#353-359)
	- mktTokens = 0 (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#357)
	SEISHI.mktTokens (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#161) can be used in cross function reentrancies:
	- SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352)
	- SEISHI.currentmktTokens() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#198-200)
	- SEISHI.swapForTokenomics(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#353-359)
Reentrancy in SEISHI.transferFrom(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#240-249):
	External calls:
	- _transfer(sender,recipient,amount) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#246)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,marketingAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#368-374)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#401-407)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#246)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#247)
		- _allowances[owner][spender] = amount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#423)
	SEISHI._allowances (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#135) can be used in cross function reentrancies:
	- SEISHI._approve(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#420-425)
	- SEISHI.allowance(address,address) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#214-216)
	- SEISHI.transferFrom(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#240-249)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

SEISHI._owner (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#137) shadows:
	- Ownable._owner (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#76)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing

SEISHI.unstuckTokens(IERC20,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#376-379) ignores return value by tokenToClear.transfer(destination,amount) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#378)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

SEISHI.addLiquidity(uint256,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#409-419) ignores return value by _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

SEISHI.totalFeeFortx (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#126) is written in both
	totalFeeFortx = 0 (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#327)
	totalFeeFortx = mktAmount + liqAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#330)
SEISHI.totalFeeFortx (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#126) is written in both
	totalFeeFortx = 0 (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#335)
	totalFeeFortx = mktAmount + liqAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#338)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#write-after-write

SEISHI.allowance(address,address).owner (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#214) shadows:
	- Ownable.owner() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#87-89) (function)
SEISHI._approve(address,address,uint256).owner (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#420) shadows:
	- Ownable.owner() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#87-89) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

SEISHI.updateMaxTxTreshold(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#230-234) should emit an event for: 
	- maxTxTreshold = newVal (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#232) 
	- maxTxAmount = _totalSupply * maxTxTreshold / 100 (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#233) 
SEISHI.updateMaxWalletTreshold(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#235-239) should emit an event for: 
	- maxWalletTreshold = newVal (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#237) 
	- maxWalletAmount = _totalSupply * maxWalletTreshold / 100 (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#238) 
SEISHI.updateThreshold(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#446-448) should emit an event for: 
	- currentThreshold = newThreshold (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#447) 
SEISHI.updatecurrentbuyliqFee(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#467-470) should emit an event for: 
	- buyliqFee = newAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#469) 
SEISHI.updatecurrentbuymktfee(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#471-474) should emit an event for: 
	- buymktFee = newAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#473) 
SEISHI.updatecurrentsellLiqFee(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#475-478) should emit an event for: 
	- sellliqFee = newAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#477) 
SEISHI.updatecurrentsellmktfee(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#479-482) should emit an event for: 
	- sellmktFee = newAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#481) 
SEISHI.updateSwapTreshold(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#489-492) should emit an event for: 
	- swapTreshold = newVal (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#490) 
	- requiredTokensToSwap = _totalSupply * swapTreshold / 1000 (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#491) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

SEISHI.unstuckETH(address).destination (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#380) lacks a zero-check on :
		- address(destination).transfer(ethBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#382)
SEISHI.setMktAddress(address).newAddress (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#453) lacks a zero-check on :
		- marketingAddress = address(newAddress) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#454)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352):
	External calls:
	- swapForTokenomics(inContractBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#306)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,marketingAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#368-374)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#401-407)
	External calls sending eth:
	- swapForTokenomics(inContractBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#306)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
	State variables written after the call(s):
	- totalFeeFortx = 0 (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#312)
	- totalFeeFortx = 0 (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#327)
	- totalFeeFortx = mktAmount + liqAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#330)
	- totalFeeFortx = 0 (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#335)
	- totalFeeFortx = mktAmount + liqAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#338)
Reentrancy in SEISHI.swapAndLiquify(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#387-395):
	External calls:
	- swapTokensForETH(half) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#391)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#401-407)
	- addLiquidity(otherHalf,newBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#393)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
	External calls sending eth:
	- addLiquidity(otherHalf,newBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#393)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
	State variables written after the call(s):
	- addLiquidity(otherHalf,newBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#393)
		- _allowances[owner][spender] = amount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#423)
Reentrancy in SEISHI.swapForTokenomics(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#353-359):
	External calls:
	- swapAndLiquify(liqTokens) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#354)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#401-407)
	- swapTokensForETHmkt(mktTokens) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#355)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,marketingAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#368-374)
	External calls sending eth:
	- swapAndLiquify(liqTokens) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#354)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
	State variables written after the call(s):
	- swapTokensForETHmkt(mktTokens) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#355)
		- _allowances[owner][spender] = amount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#423)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352):
	External calls:
	- swapForTokenomics(inContractBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#306)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,marketingAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#368-374)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#401-407)
	External calls sending eth:
	- swapForTokenomics(inContractBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#306)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
	Event emitted after the call(s):
	- Transfer(from,address(this),totalFeeFortx) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#349)
	- Transfer(from,to,amount - totalFeeFortx) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#351)
Reentrancy in SEISHI.swapAndLiquify(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#387-395):
	External calls:
	- swapTokensForETH(half) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#391)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#401-407)
	- addLiquidity(otherHalf,newBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#393)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
	External calls sending eth:
	- addLiquidity(otherHalf,newBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#393)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#424)
		- addLiquidity(otherHalf,newBalance) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#393)
	- SwapAndLiquify(half,newBalance,otherHalf) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#394)
Reentrancy in SEISHI.swapForTokenomics(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#353-359):
	External calls:
	- swapAndLiquify(liqTokens) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#354)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#401-407)
	- swapTokensForETHmkt(mktTokens) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#355)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,marketingAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#368-374)
	External calls sending eth:
	- swapAndLiquify(liqTokens) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#354)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#424)
		- swapTokensForETHmkt(mktTokens) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#355)
	- tokensSwappedDuringTokenomics(balanceToswap) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#356)
Reentrancy in SEISHI.transferFrom(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#240-249):
	External calls:
	- _transfer(sender,recipient,amount) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#246)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,marketingAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#368-374)
		- _router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#401-407)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#246)
		- _router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,deadAddress,block.timestamp) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#411-418)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#424)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()] - amount) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#247)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

SEISHI.COINDay() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#251-257) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp > SEISHICOINDaycooldown,You cant call SEISHICOINCoinDay more than once a day) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#252)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Address.isContract(address) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#29-38) uses assembly
	- INLINE ASM (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#36)
Address._functionCallWithValue(address,bytes,uint256,string) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#58-73) uses assembly
	- INLINE ASM (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#65-68)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352) compares to a boolean constant:
	-botWallets[from] == true || botWallets[to] == true (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#322)
SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352) compares to a boolean constant:
	-tradeEnabled == false (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#290)
SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352) compares to a boolean constant:
	-_liquidityHolders[to] == false && _liquidityHolders[from] == false (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#293)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality

SEISHI._transfer(address,address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#284-352) has a high cyclomatic complexity (12).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

Context._msgData() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#14-16) is never used and should be removed
SEISHI.transferAssetsETH(address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#456-458) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

SEISHI._totalSupply (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#131) is set pre-construction with a non-constant function or state variable:
	- (10000000 * 10 ** 4) * 10 ** _decimals
SEISHI.requiredTokensToSwap (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#132) is set pre-construction with a non-constant function or state variable:
	- _totalSupply * swapTreshold / 1000
SEISHI.maxWalletAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#139) is set pre-construction with a non-constant function or state variable:
	- _totalSupply * maxWalletTreshold / 200
SEISHI.maxTxAmount (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#140) is set pre-construction with a non-constant function or state variable:
	- _totalSupply * maxTxTreshold / 100
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint ^0.8.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching.
It is used by:
	- ^0.8.0 (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#9)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#39-44):
	- (success,None) = recipient.call{value: amount}() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#42)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#58-73):
	- (success,returndata) = target.call{value: weiValue}(data) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#60)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Event SEISHI.tokensSwappedDuringTokenomics(uint256) (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#167) is not in CapWords
Function SEISHI.COINDay() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#251-257) is not in mixedCase
Function SEISHI.SEISHICOINCoinDayOver() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#258-262) is not in mixedCase
Parameter SEISHI.setSwapAndLiquify(bool)._enabled (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#449) is not in mixedCase
Variable SEISHI.SEISHICOINDaycooldown (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#151) is not in mixedCase
Function IUniswapV2Pair.DOMAIN_SEPARATOR() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#526) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#527) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#541) is not in mixedCase
Function IUniswapV2Router01.WETH() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#558) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

SEISHI.slitherConstructorVariables() (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#121-502) uses literals with too many digits:
	- _totalSupply = (10000000 * 10 ** 4) * 10 ** _decimals (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#131)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

SEISHI._owner (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#137) is never used in SEISHI (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#121-502)
SEISHI.botTradeEnabled (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#142) is never used in SEISHI (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#121-502)
SEISHI.checkWalletSize (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#143) is never used in SEISHI (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#121-502)
SEISHI.sellprevLiqFee (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#154) is never used in SEISHI (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#121-502)
SEISHI.sellPrevmktFee (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#156) is never used in SEISHI (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#121-502)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

SEISHI._decimals (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#125) should be constant 
SEISHI._name (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#123) should be constant 
SEISHI._owner (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#137) should be constant 
SEISHI._symbol (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#124) should be constant 
SEISHI.botTradeEnabled (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#142) should be constant 
SEISHI.checkWalletSize (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#143) should be constant 
SEISHI.maxFeeSet (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#157) should be constant 
SEISHI.sellPrevmktFee (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#156) should be constant 
SEISHI.sellprevLiqFee (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#154) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

SEISHI._router (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#170) should be immutable 
SEISHI._totalSupply (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#131) should be immutable 
SEISHI.uniswapV2Pair (0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol#171) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e.sol analyzed (9 contracts with 94 detectors), 70 result(s) found

real	0m5.583s
user	0m5.388s
sys	0m0.197s
