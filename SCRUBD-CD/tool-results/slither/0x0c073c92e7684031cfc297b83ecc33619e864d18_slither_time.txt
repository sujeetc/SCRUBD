'solc --version' running
'solc ./0x0c073c92e7684031cfc297b83ecc33619e864d18.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running

Reentrancy in XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303):
	External calls:
	- sendDividends() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#288)
		- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#254)
	State variables written after the call(s):
	- bet.amount = amount (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#296)
	XetherGames.bets (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#96) can be used in cross function reentrancies:
	- XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303)
	- XetherGames.refundBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#868-883)
	- XetherGames.settleBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#602-619)
	- bet.modulo = uint32(modulo) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#297)
	XetherGames.bets (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#96) can be used in cross function reentrancies:
	- XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303)
	- XetherGames.refundBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#868-883)
	- XetherGames.settleBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#602-619)
	- bet.rollUnder = uint8(rollUnder) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#298)
	XetherGames.bets (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#96) can be used in cross function reentrancies:
	- XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303)
	- XetherGames.refundBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#868-883)
	- XetherGames.settleBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#602-619)
	- bet.placeBlockNumber = uint40(block.number) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#299)
	XetherGames.bets (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#96) can be used in cross function reentrancies:
	- XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303)
	- XetherGames.refundBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#868-883)
	- XetherGames.settleBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#602-619)
	- bet.mask = uint40(mask) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#300)
	XetherGames.bets (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#96) can be used in cross function reentrancies:
	- XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303)
	- XetherGames.refundBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#868-883)
	- XetherGames.settleBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#602-619)
	- bet.clientSeed = clientSeed (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#301)
	XetherGames.bets (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#96) can be used in cross function reentrancies:
	- XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303)
	- XetherGames.refundBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#868-883)
	- XetherGames.settleBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#602-619)
	- bet.gambler = msg.sender (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#302)
	XetherGames.bets (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#96) can be used in cross function reentrancies:
	- XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303)
	- XetherGames.refundBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#868-883)
	- XetherGames.settleBet(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#602-619)
	- (mask,rollUnder,bet.locked) = prepareBet(betMask,modulo,amount,commit,clientSeed,msg.sender) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#294)
		- totalDividends += amount * DIVIDENDS_PERCENT / PERCENTAGES_BASE (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#927)
	XetherGames.totalDividends (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#60) can be used in cross function reentrancies:
	- XetherGames.getDiceWinAmount(uint256,uint32,uint8,address,bool) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#907-950)
	- XetherGames.getRouletteWinAmount(uint256,uint32,uint8,uint8,bool) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#952-973)
	- XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303)
	- XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#305-346)
	- XetherGames.sendDividends() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#251-259)
	- XetherGames.totalDividends (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#60)
Reentrancy in XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#305-346):
	External calls:
	- sendDividends() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#326)
		- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#254)
	State variables written after the call(s):
	- (betRoulette.betsCount,betRoulette.locked) = placeBetRouletteProcess(commit,betMask,betAmount) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#329)
		- betRoulette.amount[tmpBetCount] = betAmount[tmpBetCount] / 4 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#373)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 4 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#377)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 4 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#383)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 4 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#389)
		- betRoulette.amount[tmpBetCount] = betAmount[tmpBetCount] / 9 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#405)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 9 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#410)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 9 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#417)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 9 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#424)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 9 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#431)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] * 2 / 9 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#438)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] * 2 / 9 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#445)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 5 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#461)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 5 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#467)
		- betRoulette.amount[tmpBetCount] = betAmount[tmpBetCount] / 5 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#473)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 5 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#480)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 5 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#487)
		- betRoulette.amount[tmpBetCount] = betAmount[tmpBetCount] / 6 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#503)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 6 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#508)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 6 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#515)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 6 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#522)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 6 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#529)
		- betRoulette.amount[addBets] = betAmount[tmpBetCount] / 6 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#536)
		- betRoulette.amount[tmpBetCount] = betAmount[tmpBetCount] (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#559)
	XetherGames.betsRoulette (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#97) can be used in cross function reentrancies:
	- XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#305-346)
	- XetherGames.placeBetRouletteProcess(uint256,uint256[],uint256[]) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#348-566)
	- XetherGames.refundBetRoulette(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#885-905)
	- XetherGames.settleBetRoulette(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#621-632)
	- betRoulette.totalBetAmount = msg.value (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#338)
	XetherGames.betsRoulette (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#97) can be used in cross function reentrancies:
	- XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#305-346)
	- XetherGames.placeBetRouletteProcess(uint256,uint256[],uint256[]) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#348-566)
	- XetherGames.refundBetRoulette(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#885-905)
	- XetherGames.settleBetRoulette(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#621-632)
	- betRoulette.placeBlockNumber = uint40(block.number) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#339)
	XetherGames.betsRoulette (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#97) can be used in cross function reentrancies:
	- XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#305-346)
	- XetherGames.placeBetRouletteProcess(uint256,uint256[],uint256[]) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#348-566)
	- XetherGames.refundBetRoulette(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#885-905)
	- XetherGames.settleBetRoulette(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#621-632)
	- betRoulette.clientSeed = clientSeed (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#340)
	XetherGames.betsRoulette (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#97) can be used in cross function reentrancies:
	- XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#305-346)
	- XetherGames.placeBetRouletteProcess(uint256,uint256[],uint256[]) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#348-566)
	- XetherGames.refundBetRoulette(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#885-905)
	- XetherGames.settleBetRoulette(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#621-632)
	- betRoulette.gambler = msg.sender (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#341)
	XetherGames.betsRoulette (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#97) can be used in cross function reentrancies:
	- XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#305-346)
	- XetherGames.placeBetRouletteProcess(uint256,uint256[],uint256[]) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#348-566)
	- XetherGames.refundBetRoulette(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#885-905)
	- XetherGames.settleBetRoulette(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#621-632)
	- (betRoulette.betsCount,betRoulette.locked) = placeBetRouletteProcess(commit,betMask,betAmount) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#329)
		- totalDividends += amount * DIVIDENDS_PERCENT / PERCENTAGES_BASE (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#960)
	XetherGames.totalDividends (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#60) can be used in cross function reentrancies:
	- XetherGames.getDiceWinAmount(uint256,uint32,uint8,address,bool) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#907-950)
	- XetherGames.getRouletteWinAmount(uint256,uint32,uint8,uint8,bool) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#952-973)
	- XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303)
	- XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#305-346)
	- XetherGames.sendDividends() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#251-259)
	- XetherGames.totalDividends (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#60)
Reentrancy in XetherGames.sendDividends() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#251-259):
	External calls:
	- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#254)
	State variables written after the call(s):
	- totalDividends = 0 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#255)
	XetherGames.totalDividends (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#60) can be used in cross function reentrancies:
	- XetherGames.getDiceWinAmount(uint256,uint32,uint8,address,bool) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#907-950)
	- XetherGames.getRouletteWinAmount(uint256,uint32,uint8,uint8,bool) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#952-973)
	- XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303)
	- XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#305-346)
	- XetherGames.sendDividends() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#251-259)
	- XetherGames.totalDividends (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#60)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

XetherGames._slotsWinAmount(bytes32,uint256,address) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#771-789) performs a multiplication on the result of a division:
	- winAmount = (amount - houseEdge - jackpotFee) / 100 * SLOTSWinsRatios[wins] (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#787)
XetherGames._slotsWinAmount(bytes32,uint256,address) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#771-789) performs a multiplication on the result of a division:
	- winAmount += (amount - houseEdge - jackpotFee) / 100 * SLOTSWildRatios[wild] (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#788)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

XetherGames.setNewRoulettePercents(uint8) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#158-161) contains a tautology or contradiction:
	- require(bool)(0 <= newRoulettePercent && newRoulettePercent <= 10) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#159)
XetherGames.setNewPlinkoPercents(uint8) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#163-166) contains a tautology or contradiction:
	- require(bool)(0 <= newPlinkoPercent && newPlinkoPercent <= 10) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#164)
XetherGames.placeBetRouletteProcess(uint256,uint256[],uint256[]) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#348-566) contains a tautology or contradiction:
	- 0 <= tmpBetCount (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#361)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#tautology-or-contradiction

XetherGames._slotsCheckWin(bytes32).prevNum (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#793) is a local variable never initialized
XetherGames.settleBetCommon(XetherGames.Bet,uint256).diceWin (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#646) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

XetherGames.setAddresses(address,address,address) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#172-176) should emit an event for: 
	- croupier = newCroupier (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#174) 
	- moderator = newModerator (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#175) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

XetherGames.setNewPercents(uint8,uint8,uint8) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#143-156) should emit an event for: 
	- HOUSE_EDGE_PERCENT = newHouseEdgePercent (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#153) 
	- ADVERTISE_PERCENT = newAdvertPercent (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#154) 
	- DIVIDENDS_PERCENT = newDividendsPercent (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#155) 
XetherGames.setNewRoulettePercents(uint8) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#158-161) should emit an event for: 
	- ROULETTE_PERCENT = newRoulettePercent (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#160) 
XetherGames.setNewPlinkoPercents(uint8) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#163-166) should emit an event for: 
	- PLINKO_PERCENT = newPlinkoPercent (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#165) 
XetherGames.changeDividendsLimit(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#178-180) should emit an event for: 
	- DIVIDENDS_LIMIT = _newDividendsLimit (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#179) 
XetherGames.setMaxProfitPlinko(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#187-190) should emit an event for: 
	- maxProfitPlinko = _maxProfitPlinko (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#189) 
XetherGames.setMaxProfitRoulette(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#192-195) should emit an event for: 
	- maxProfitRoulette = _maxProfitRoulette (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#194) 
XetherGames.setRouletteTableLimit(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#197-200) should emit an event for: 
	- rouletteTableLimit = _newRouletteTableLimit (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#199) 
XetherGames.setComissionState(uint8,uint8) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#202-205) should emit an event for: 
	- rouletteSkipComission = _newRouletteState (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#203) 
	- plinkoSkipComission = _newPlinkoState (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#204) 
XetherGames.increaseJackpot(uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#211-215) should emit an event for: 
	- jackpotSize += uint128(increaseAmount) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#214) 
XetherGames.withdrawAdvertiseFunds(address,uint256) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#223-227) should emit an event for: 
	- totalAdvertise -= withdrawAmount (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#225) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

XetherGames.setAddresses(address,address,address).newSecretSigner (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#172) lacks a zero-check on :
		- secretSigner = newSecretSigner (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#173)
XetherGames.setAddresses(address,address,address).newCroupier (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#172) lacks a zero-check on :
		- croupier = newCroupier (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#174)
XetherGames.setAddresses(address,address,address).newModerator (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#172) lacks a zero-check on :
		- moderator = newModerator (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#175)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303):
	External calls:
	- sendDividends() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#288)
		- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#254)
	State variables written after the call(s):
	- (mask,rollUnder,bet.locked) = prepareBet(betMask,modulo,amount,commit,clientSeed,msg.sender) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#294)
		- bonusProgrammAccumulated[gambler] += amount (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#582)
	- (mask,rollUnder,bet.locked) = prepareBet(betMask,modulo,amount,commit,clientSeed,msg.sender) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#294)
		- jackpotSize += uint128(jackpotFee) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#584)
	- (mask,rollUnder,bet.locked) = prepareBet(betMask,modulo,amount,commit,clientSeed,msg.sender) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#294)
		- lockedInBets += uint128(possibleWinAmount) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#583)
	- (mask,rollUnder,bet.locked) = prepareBet(betMask,modulo,amount,commit,clientSeed,msg.sender) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#294)
		- totalAdvertise += amount * ADVERTISE_PERCENT / PERCENTAGES_BASE (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#928)
Reentrancy in XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#305-346):
	External calls:
	- sendDividends() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#326)
		- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#254)
	State variables written after the call(s):
	- bonusProgrammAccumulated[msg.sender] += msg.value (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#335)
	- jackpotSize += uint128(JACKPOT_FEE) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#343)
	- jackpotSize += 0 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#343)
	- lockedInBets += betRoulette.locked (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#331)
	- (betRoulette.betsCount,betRoulette.locked) = placeBetRouletteProcess(commit,betMask,betAmount) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#329)
		- totalAdvertise += amount * ADVERTISE_PERCENT / PERCENTAGES_BASE (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#961)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in XetherGames.placeBet(uint256,uint32,uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#261-303):
	External calls:
	- sendDividends() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#288)
		- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#254)
	Event emitted after the call(s):
	- Commit(commit,clientSeed,amount) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#588)
		- (mask,rollUnder,bet.locked) = prepareBet(betMask,modulo,amount,commit,clientSeed,msg.sender) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#294)
Reentrancy in XetherGames.placeBetRoulette(uint256[],uint256[],uint256,uint256,uint256,bytes32,bytes32) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#305-346):
	External calls:
	- sendDividends() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#326)
		- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#254)
	Event emitted after the call(s):
	- Commit(commit,clientSeed,msg.value) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#345)
Reentrancy in XetherGames.sendDividends() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#251-259):
	External calls:
	- xEtherTokensContract.ecosystemDividends.value(tmpDividends)() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#254)
	Event emitted after the call(s):
	- PayDividendsSuccess(now,tmpDividends) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#257)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

XetherGames.placeBetRouletteProcess(uint256,uint256[],uint256[]) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#348-566) has a high cyclomatic complexity (26).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

XetherGames.PLINKO_PERCENT (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#48) is set pre-construction with a non-constant function or state variable:
	- HOUSE_EDGE_PERCENT
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint 0.5.6 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- ABIEncoderV2CalldataStructsWithStaticallySizedAndDynamicallyEncodedMembers
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor
	- IncorrectEventSignatureInLibraries
	- ABIEncoderV2PackedStorage
	- IncorrectByteInstructionOptimization.
It is used by:
	- 0.5.6 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#1)
solc-0.5.6 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract xEtherTokensContractInterface (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#12-14) is not in CapWords
Parameter XetherGames.approveNextOwner(address)._nextOwner (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#130) is not in mixedCase
Parameter XetherGames.changeDividendsLimit(uint256)._newDividendsLimit (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#178) is not in mixedCase
Parameter XetherGames.setMaxProfit(uint256)._maxProfit (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#182) is not in mixedCase
Parameter XetherGames.setMaxProfitPlinko(uint256)._maxProfitPlinko (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#187) is not in mixedCase
Parameter XetherGames.setMaxProfitRoulette(uint256)._maxProfitRoulette (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#192) is not in mixedCase
Parameter XetherGames.setRouletteTableLimit(uint256)._newRouletteTableLimit (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#197) is not in mixedCase
Parameter XetherGames.setComissionState(uint8,uint8)._newRouletteState (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#202) is not in mixedCase
Parameter XetherGames.setComissionState(uint8,uint8)._newPlinkoState (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#202) is not in mixedCase
Variable XetherGames.DIVIDENDS_LIMIT (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#27) is not in mixedCase
Variable XetherGames.DIVIDENDS_PERCENT (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#32) is not in mixedCase
Variable XetherGames.ADVERTISE_PERCENT (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#33) is not in mixedCase
Variable XetherGames.HOUSE_EDGE_PERCENT (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#34) is not in mixedCase
Variable XetherGames.ROULETTE_PERCENT (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#40) is not in mixedCase
Variable XetherGames.PLINKO1Ratios (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#44) is not in mixedCase
Variable XetherGames.PLINKO2Ratios (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#45) is not in mixedCase
Variable XetherGames.PLINKO3Ratios (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#46) is not in mixedCase
Variable XetherGames.PLINKO_PERCENT (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#48) is not in mixedCase
Variable XetherGames.SLOTSWinsRatios (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#52) is not in mixedCase
Variable XetherGames.SLOTSWildRatios (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#53) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in XetherGames.sendFunds(address,uint256,uint256,uint256,string) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#975-981):
	External calls:
	- beneficiary.send(amount) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#976)
	Event emitted after the call(s):
	- Payment(beneficiary,commit,successLogAmount,paymentType) (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#977)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

XetherGames.slitherConstructorConstantVariables() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#16-1008) uses literals with too many digits:
	- MAX_AMOUNT = 300000000000000000000000 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#22)
XetherGames.slitherConstructorConstantVariables() (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#16-1008) uses literals with too many digits:
	- POPCNT_MULT = 0x0000000000002000000000100000000008000000000400000000020000000001 (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#995)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

XetherGames.ROULETTE_STAKES_LIMIT (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#37) is never used in XetherGames (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#16-1008)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

XetherGames.luckyNumber (0x0c073c92e7684031cfc297b83ecc33619e864d18.sol#30) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
./0x0c073c92e7684031cfc297b83ecc33619e864d18.sol analyzed (2 contracts with 94 detectors), 58 result(s) found

real	0m5.423s
user	0m5.109s
sys	0m0.316s
