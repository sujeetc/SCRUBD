[INFO] | 2024-11-10 07:37:38 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Analysis started at: 2024-11-10 07:37:38 AM
[INFO] | 2024-11-10 07:37:48 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Version constraints: ['0.5.6']
[INFO] | 2024-11-10 07:37:48 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | solc version: v0.5.6
[INFO] | 2024-11-10 07:37:54 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Callgraph generation started!
[INFO] | 2024-11-10 07:37:54 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Callgraph generation finished!
[INFO] | 2024-11-10 07:37:54 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Interprocedural CFG generation started!
[INFO] | 2024-11-10 07:37:55 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Interprocedural CFG generation finished!
[INFO] | 2024-11-10 07:37:55 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Storage dependency graph generation started!
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Storage dependency graph generation finished!
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Value Range Analysis started
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Generating return summary for slitherConstructorConstantVariables
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Return summary generated for slitherConstructorConstantVariables
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Range graph generated
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Processed function slitherConstructorConstantVariables
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Generating return summary for ecosystemDividends
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Return summary generated for ecosystemDividends
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | State variable assignement do not exist
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Processed function ecosystemDividends
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Generating return summary for constructor
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Return summary generated for constructor
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Range graph generated
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Processed function constructor
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Generating return summary for acceptNextOwner
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Return summary generated for acceptNextOwner
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Range graph generated
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Processed function acceptNextOwner
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Generating return summary for fallback
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Return summary generated for fallback
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | State variable assignement do not exist
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Processed function fallback
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Generating return summary for getBonusProgrammLevel
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Return summary generated for getBonusProgrammLevel
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | State variable assignement do not exist
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Processed function getBonusProgrammLevel
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Generating return summary for _getPlinkoCellRatio
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Return summary generated for _getPlinkoCellRatio
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | State variable assignement do not exist
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Processed function _getPlinkoCellRatio
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Generating return summary for getRouletteWinAmount
[WARNING] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | No lvalue eligible assignment, is this some bug!
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Return summary generated for getRouletteWinAmount
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Range graph generated
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Processed function getRouletteWinAmount
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Generating return summary for sendFunds
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Return summary generated for sendFunds
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | State variable assignement do not exist
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Processed function sendFunds
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Generating return summary for checkJackPotWin
[INFO] | 2024-11-10 07:37:56 AM | analyzer.0x0c073c92e7684031cfc297b83ecc33619e864d18 | Return summary generated for checkJackPotWin
Traceback (most recent call last):
  File "contractlint.py", line 100, in analyze_contracts
    generated_vrg = VRG(slither_obj, callgraph, sdg_objects, target_contracts, graph_dir, dump_graph, log)
  File "/root/sailfish/code/static_analysis/analysis/range_graph.py", line 74, in __init__
    self.setup()
  File "/root/sailfish/code/static_analysis/analysis/range_graph.py", line 160, in setup
    self.process_leaf_functions(cfg_obj)
  File "/root/sailfish/code/static_analysis/analysis/range_graph.py", line 246, in process_leaf_functions
    self.generate_range_graph(cfg_obj, parameters, return_values)
  File "/root/sailfish/code/static_analysis/analysis/range_graph.py", line 324, in generate_range_graph
    self.process_statevar_assignment(cfg_obj, parameters, return_values)
  File "/root/sailfish/code/static_analysis/analysis/range_graph.py", line 607, in process_statevar_assignment
    self.collect_conditional_pre_dominators(container_bb, cfg_obj, graph[0], graph[1], parameters)
  File "/root/sailfish/code/static_analysis/analysis/range_graph.py", line 416, in collect_conditional_pre_dominators
    s_lvar, s_rvar, type_str = process_temporary_variable(self.log, self, argument, cfg_obj, 'C', parameters, parent, node, graph)
  File "/root/sailfish/code/static_analysis/analysis/process_ir.py", line 298, in process_temporary_variable
    s_lvar, s_rvar, type_str = instruction_handler(log, vrg, instr, cfg_obj, call_type, parameters, parent, node, graph)
  File "/root/sailfish/code/static_analysis/analysis/process_ir.py", line 309, in instruction_handler
    s_lvar, s_rvar, type_str = handle_binary_statement(log, vrg, instr, cfg_obj, call_type, parameters, parent, node, graph)
  File "/root/sailfish/code/static_analysis/analysis/process_ir.py", line 523, in handle_binary_statement
    range_node = RangeNode(s_lvar, parent, s_rvar, type_str)
  File "/root/sailfish/code/static_analysis/analysis/range_node.py", line 31, in __init__
    self.setup()
  File "/root/sailfish/code/static_analysis/analysis/range_node.py", line 80, in setup
    left_expression = self.process_value_expressions(self._variable)
  File "/root/sailfish/code/static_analysis/analysis/range_node.py", line 295, in process_value_expressions
    assert real_count_or == right_count_or, "ORed count does not match, debug!"
AssertionError: ORed count does not match, debug!

real	0m19.409s
user	0m19.638s
sys	0m1.754s
