{
    "file": "0x0efef0b34638addc8833ba729ae20016b5f24ffc.sol",
    "global_structs": [
        {
            "name": "Deposit",
            "fields": {
                "block": [
                    "integer"
                ],
                "token": [
                    "integer"
                ],
                "amount": [
                    "integer"
                ],
                "canceled": [
                    "boolean"
                ]
            }
        },
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0x7ab"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0x7ac"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0x7ad"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "newOwnerCandidate",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "escapeBlacklist",
            "type": [
                "array",
                "integer",
                "boolean"
            ],
            "init": []
        },
        {
            "name": "deposits",
            "type": [
                "array",
                "Deposit"
            ],
            "init": []
        },
        {
            "name": "nextDepositToPayout",
            "type": [
                "array",
                "integer",
                "integer"
            ],
            "init": []
        },
        {
            "name": "skipDeposits",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "boolean"
                ]
            ],
            "init": []
        },
        {
            "name": "rewardToken",
            "type": [
                "integer"
            ],
            "init": [
                "0x25"
            ]
        },
        {
            "name": "owner",
            "type": [
                "integer"
            ],
            "init": [
                "0xf"
            ]
        },
        {
            "name": "escapeHatchDestination",
            "type": [
                "integer"
            ],
            "init": [
                "0x15",
                "0x24"
            ]
        },
        {
            "name": "escapeHatchCaller",
            "type": [
                "integer"
            ],
            "init": [
                "0x14",
                "0x23"
            ]
        },
        {
            "name": "ERC20",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Owned",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Escapable",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "MiniMeToken",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "WithdrawContract",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0xf",
            "instructions": [
                "owner = msg_sender"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x14",
            "instructions": [
                "escapeHatchCaller = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x15",
            "instructions": [
                "escapeHatchDestination = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x23",
            "instructions": [
                "escapeHatchCaller = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x24",
            "instructions": [
                "escapeHatchDestination = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x25",
            "instructions": [
                "rewardToken = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x53",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x54",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x55",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xc7",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xc8",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xc9",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x13b",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x13c",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x13d",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x1c0",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x1c1",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x1c2",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x245",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x246",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x247",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x2e0",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x2e1",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x2e2",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x37b",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x37c",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x37d",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x401",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x402",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x403",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x487",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x488",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x489",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x50e",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x50f",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x510",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x593",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x594",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x595",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x61a",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x61b",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x61c",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x69f",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x6a0",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x6a1",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x726",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x727",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x728",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x7ab",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x7ac",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x7ad",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "owner",
            "addrs": [
                "0x2",
                "0x11",
                "0x34",
                "0x3a"
            ]
        },
        {
            "name": "newOwnerCandidate",
            "addrs": [
                "0x2",
                "0x13",
                "0x36",
                "0x38",
                "0x3c"
            ]
        },
        {
            "name": "skipDeposits",
            "addrs": [
                "0x2",
                "0x16"
            ]
        },
        {
            "name": "deposits",
            "addrs": [
                "0x2",
                "0x18",
                "0x3e",
                "0x41",
                "0x51"
            ]
        },
        {
            "name": "escapeHatchCaller",
            "addrs": [
                "0x2",
                "0x43"
            ]
        },
        {
            "name": "nextDepositToPayout",
            "addrs": [
                "0x2",
                "0x46",
                "0x4b"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11",
            "instructions": [
                "CLR_0 = msg.sender",
                "RTMP_237 = CLR_0 == newOwnerCandidate",
                "CONDITION RTMP_237 0x10 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x10",
            "instructions": [
                "owner = newOwnerCandidate"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13",
            "instructions": [
                "CLR_1 = msg.sender",
                "RTMP_238 = CLR_1 == newOwnerCandidate",
                "CONDITION RTMP_238 0x12 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12",
            "instructions": [
                "newOwnerCandidate = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16",
            "instructions": [
                "CLR_2 = msg.sender",
                "CLR_3 = skipDeposits[CLR_2]",
                "REF_81 = CLR_3",
                "CLR_4 = REF_81[U]",
                "REF_82 = CLR_4",
                "REF_81[0] = U",
                "REF_81[1] = U",
                "REF_81[2] = U",
                "REF_81[3] = U",
                "REF_81[4] = U",
                "REF_81[5] = U",
                "REF_81[6] = U",
                "REF_81[7] = U",
                "REF_81[8] = U",
                "REF_81[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x18",
            "instructions": [
                "CLR_5 = msg.sender",
                "RTMP_240 = CLR_5 == owner",
                "CONDITION RTMP_240 0x17 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x17",
            "instructions": [
                "REF_83 = NEW_VAL integer",
                "TMP_239 = REF_83 + 1",
                "NCV_0 = NEW_VAL integer",
                "deposits.length = NCV_0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x34",
            "instructions": [
                "CLR_6 = msg.sender",
                "RTMP_253 = CLR_6 == owner",
                "CONDITION RTMP_253 0x33 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x33",
            "instructions": [
                "owner = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x36",
            "instructions": [
                "CLR_7 = msg.sender",
                "RTMP_254 = CLR_7 == owner",
                "CONDITION RTMP_254 0x35 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x35",
            "instructions": [
                "newOwnerCandidate = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x38",
            "instructions": [
                "CLR_8 = msg.sender",
                "RTMP_255 = CLR_8 == owner",
                "CONDITION RTMP_255 0x37 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x37",
            "instructions": [
                "newOwnerCandidate = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3a",
            "instructions": [
                "CLR_9 = msg.sender",
                "RTMP_256 = CLR_9 == owner",
                "CONDITION RTMP_256 0x39 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x39",
            "instructions": [
                "owner = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3c",
            "instructions": [
                "CLR_10 = msg.sender",
                "RTMP_257 = CLR_10 == owner",
                "CONDITION RTMP_257 0x3b 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3b",
            "instructions": [
                "newOwnerCandidate = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3e",
            "instructions": [
                "CLR_11 = msg.sender",
                "RTMP_259 = CLR_11 == owner",
                "CONDITION RTMP_259 0x3f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3f",
            "instructions": [
                "CLR_12 = msg.value",
                "RTMP_260 = CLR_12 > 0",
                "CONDITION RTMP_260 0x3d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3d",
            "instructions": [
                "REF_84 = NEW_VAL integer",
                "TMP_258 = REF_84 + 1",
                "NCV_1 = NEW_VAL integer",
                "deposits.length = NCV_1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x41",
            "instructions": [
                "CLR_13 = msg.sender",
                "RTMP_261 = CLR_13 == owner",
                "CONDITION RTMP_261 0x40 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x40",
            "instructions": [
                "CLR_14 = deposits[U]",
                "REF_85 = CLR_14",
                "CLR_15 = REF_85.canceled",
                "REF_86 = CLR_15",
                "REF_85.canceled = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x43",
            "instructions": [
                "CLR_16 = msg.sender",
                "RTMP_262 = CLR_16 == escapeHatchCaller",
                "CONDITION RTMP_262 0x44 0x44"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x44",
            "instructions": [
                "CLR_17 = msg.sender",
                "RTMP_263 = CLR_17 == owner",
                "CONDITION RTMP_263 0x42 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x42",
            "instructions": [
                "escapeHatchCaller = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x46",
            "instructions": [
                "CLR_18 = msg.sender",
                "CLR_19 = nextDepositToPayout[CLR_18]",
                "REF_92 = CLR_19",
                "CLR_20 = msg.sender",
                "CLR_21 = nextDepositToPayout[CLR_20]",
                "REF_93 = CLR_21",
                "REF_94 = NEW_VAL integer",
                "RTMP_266 = REF_92 < REF_94",
                "RTMP_267 = REF_93 < REF_94",
                "RTMP_268 = RTMP_266 || RTMP_267",
                "CONDITION RTMP_268 0x1 0x47"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x47",
            "instructions": [
                "CLR_22 = msg.gas",
                "REF_95 = CLR_22",
                "RTMP_269 = REF_95 > 148000",
                "CONDITION RTMP_269 0x1 0x48"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x48",
            "instructions": [
                "CLR_23 = msg.sender",
                "CLR_24 = nextDepositToPayout[CLR_23]",
                "REF_89 = CLR_24",
                "REF_90 = NEW_VAL integer",
                "RTMP_264 = REF_89 < REF_90",
                "CONDITION RTMP_264 0x49 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x49",
            "instructions": [
                "CLR_25 = msg.gas",
                "REF_91 = CLR_25",
                "RTMP_265 = REF_91 > 149000",
                "CONDITION RTMP_265 0x45 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x45",
            "instructions": [
                "CLR_26 = msg.sender",
                "CLR_27 = nextDepositToPayout[CLR_26]",
                "REF_87 = CLR_27",
                "CLR_28 = msg.sender",
                "CLR_29 = nextDepositToPayout[CLR_28]",
                "REF_88 = CLR_29",
                "CLR_30 = msg.sender",
                "nextDepositToPayout[CLR_30] = REF_87",
                "CLR_31 = msg.sender",
                "nextDepositToPayout[CLR_31] = REF_88"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4b",
            "instructions": [
                "CLR_32 = msg.sender",
                "CLR_33 = nextDepositToPayout[CLR_32]",
                "REF_101 = CLR_33",
                "CLR_34 = msg.sender",
                "CLR_35 = nextDepositToPayout[CLR_34]",
                "REF_102 = CLR_35",
                "REF_103 = NEW_VAL integer",
                "RTMP_272 = REF_101 < REF_103",
                "RTMP_273 = REF_102 < REF_103",
                "RTMP_274 = RTMP_272 || RTMP_273",
                "CONDITION RTMP_274 0x4c 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4c",
            "instructions": [
                "CLR_36 = msg.gas",
                "REF_104 = CLR_36",
                "RTMP_275 = REF_104 > 148000",
                "CONDITION RTMP_275 0x4d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4d",
            "instructions": [
                "CLR_37 = msg.sender",
                "CLR_38 = nextDepositToPayout[CLR_37]",
                "REF_98 = CLR_38",
                "REF_99 = NEW_VAL integer",
                "RTMP_270 = REF_98 < REF_99",
                "CONDITION RTMP_270 0x4e 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4e",
            "instructions": [
                "CLR_39 = msg.gas",
                "REF_100 = CLR_39",
                "RTMP_271 = REF_100 > 149000",
                "CONDITION RTMP_271 0x4f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4f",
            "instructions": [
                "CLR_40 = deposits[U]",
                "REF_105 = CLR_40",
                "CLR_41 = REF_105.token",
                "REF_106 = CLR_41",
                "CLR_42 = deposits[U]",
                "REF_107 = CLR_42",
                "CLR_43 = REF_107.token",
                "REF_108 = CLR_43",
                "CLR_44 = deposits[U]",
                "REF_109 = CLR_44",
                "CLR_45 = REF_109.token",
                "REF_110 = CLR_45",
                "RTMP_276 = REF_106 != REF_110",
                "RTMP_277 = REF_108 != REF_110",
                "RTMP_278 = RTMP_276 || RTMP_277",
                "CONDITION RTMP_278 0x4a 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4a",
            "instructions": [
                "CLR_46 = msg.sender",
                "CLR_47 = nextDepositToPayout[CLR_46]",
                "REF_96 = CLR_47",
                "CLR_48 = msg.sender",
                "CLR_49 = nextDepositToPayout[CLR_48]",
                "REF_97 = CLR_49",
                "CLR_50 = msg.sender",
                "nextDepositToPayout[CLR_50] = REF_96",
                "CLR_51 = msg.sender",
                "nextDepositToPayout[CLR_51] = REF_97"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x51",
            "instructions": [
                "CLR_52 = msg.sender",
                "RTMP_259 = CLR_52 == owner",
                "CONDITION RTMP_259 0x52 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x52",
            "instructions": [
                "CLR_53 = msg.value",
                "RTMP_260 = CLR_53 > 0",
                "CONDITION RTMP_260 0x50 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x50",
            "instructions": [
                "REF_84 = NEW_VAL integer",
                "TMP_258 = REF_84 + 1",
                "NCV_2 = NEW_VAL integer",
                "deposits.length = NCV_2"
            ]
        }
    ],
    "root_addr": "0x7ae",
    "dest_addrs": [
        "0x812",
        "0x829"
    ],
    "normal_blocks": [
        {
            "scope": "withdraw_v1",
            "addr": "0x7ae",
            "instructions": [
                "NOP",
                "i = NEW_VAL integer",
                "d = NEW_VAL Deposit",
                "currentToken = NEW_VAL integer",
                "_idDeposit = NEW_VAL integer",
                "_holder = NEW_VAL integer",
                "_dest = NEW_VAL integer",
                "acc = NEW_VAL integer",
                "_idDeposit = NEW_VAL integer",
                "_token = NEW_VAL integer",
                "_amount = NEW_VAL integer",
                "JUMP 0x7af"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7af",
            "instructions": [
                "acc = 0",
                "CLR_54 = msg.sender",
                "CLR_55 = nextDepositToPayout[CLR_54]",
                "REF_30 = CLR_55",
                "i = REF_30",
                "REF_31 = LENGTH deposits",
                "TMP_119 = i < REF_31",
                "CONDITION TMP_119 0x7af_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7af_r0",
            "instructions": [
                "JUMP 0x7b0"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7b0",
            "instructions": [
                "CLR_56 = deposits[i]",
                "REF_32 = CLR_56",
                "CLR_57 = REF_32.token",
                "REF_33 = CLR_57",
                "currentToken = REF_33",
                "CLR_58 = msg.gas",
                "TMP_121 = CLR_58 > 149000",
                "CONDITION TMP_121 0x7b0_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7b0_r0",
            "instructions": [
                "JUMP 0x7b1"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7b1",
            "instructions": [
                "NOP",
                "REF_34 = LENGTH deposits",
                "TMP_123 = i < REF_34",
                "CLR_59 = msg.gas",
                "TMP_124 = CLR_59 > 148000",
                "TMP_125 = TMP_123 && TMP_124",
                "CONDITION TMP_125 0x7b2 0x7b3"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7b4",
            "instructions": [
                "TMP_128 = ! TMP_127",
                "TMP_129 = TMP_126 && TMP_128",
                "CONDITION TMP_129 0x7b5 0x7b3"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7b5",
            "instructions": [
                "CLR_60 = d.token",
                "REF_37 = CLR_60",
                "TMP_130 = currentToken != REF_37",
                "CONDITION TMP_130 0x7b6 0x7b3"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7b7",
            "instructions": [
                "NOP",
                "JUMP 0x7b8"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7b8",
            "instructions": [
                "TMP_140 = i",
                "i = i + 1",
                "JUMP 0x7b1"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7b9",
            "instructions": [
                "NOP",
                "JUMP 0x7ba"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7ba",
            "instructions": [
                "CLR_61 = d.amount",
                "REF_41 = CLR_61",
                "CLR_62 = d.block",
                "REF_43 = CLR_62",
                "TMP_136 = NEW_VAL integer",
                "JUMP 0x7bb"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7bb",
            "instructions": [
                "TMP_137 = REF_41 * TMP_136",
                "CLR_63 = d.block",
                "REF_45 = CLR_63",
                "TMP_138 = NEW_VAL integer",
                "JUMP 0x7bc"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7bc",
            "instructions": [
                "TMP_139 = TMP_137 \/ TMP_138",
                "acc = acc + TMP_139",
                "JUMP 0x7b7"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7bd",
            "instructions": [
                "CONDITION TMP_132 0x7bd_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7bd_r0",
            "instructions": [
                "JUMP 0x7be"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7be",
            "instructions": [
                "CLR_64 = msg.sender",
                "CLR_65 = nextDepositToPayout[CLR_64]",
                "REF_39 = CLR_65",
                "TMP_134 = REF_39 == i",
                "CONDITION TMP_134 0x7be_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7be_r0",
            "instructions": [
                "JUMP 0x7bf"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7bf",
            "instructions": [
                "CLR_66 = d.token",
                "REF_40 = CLR_66",
                "currentToken = REF_40",
                "acc = 0",
                "JUMP 0x7b9"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7c0",
            "instructions": [
                "NOP",
                "JUMP 0x7c1"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7c1",
            "instructions": [
                "CLR_67 = skipDeposits[_holder]",
                "REF_73 = CLR_67",
                "CLR_68 = REF_73[_idDeposit]",
                "REF_74 = CLR_68",
                "TMP_230 = REF_74",
                "JUMP 0x7c2"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7b2",
            "instructions": [
                "CLR_69 = deposits[i]",
                "REF_35 = CLR_69",
                "d = REF_35",
                "CLR_70 = d.canceled",
                "REF_36 = CLR_70",
                "TMP_126 = ! REF_36",
                "CLR_71 = msg.sender",
                "_holder = CLR_71",
                "_idDeposit = i",
                "JUMP 0x7c0"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7c2",
            "instructions": [
                "TMP_127 = TMP_230",
                "JUMP 0x7b4"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7c3",
            "instructions": [
                "NOP",
                "JUMP 0x7c4"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7c4",
            "instructions": [
                "TMP_173 = _amount == 0",
                "CONDITION TMP_173 0x7c5 0x7c6"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7c5",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x7c7"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7c6",
            "instructions": [
                "NOP",
                "JUMP 0x7c8"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7c8",
            "instructions": [
                "TMP_174 = NEW_VAL unknown",
                "TMP_175 = TMP_174 == 0",
                "CONDITION TMP_175 0x7c9 0x7ca"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7c9",
            "instructions": [
                "CLR_72 = this.balance",
                "WRP_0 = CLR_72 - _amount",
                "this.balance = WRP_0",
                "TMP_176 = NEW_VAL unknown",
                "JUMP 0x7cb"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7ca",
            "instructions": [
                "ATTACK",
                "TMP_178 = NEW_VAL boolean",
                "JUMP 0x7cc"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7cd",
            "instructions": [
                "TMP_179 = ! TMP_178",
                "CONDITION TMP_179 0x7ce 0x7cf"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7ce",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x7c7"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7cf",
            "instructions": [
                "NOP",
                "JUMP 0x7d0"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7d0",
            "instructions": [
                "NOP",
                "JUMP 0x7d1"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7d1",
            "instructions": [
                "NOP",
                "JUMP 0x7d2"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7d2",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x7c7"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7cb",
            "instructions": [
                "TMP_177 = ! TMP_176",
                "CONDITION TMP_177 0x7d3 0x7d4"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7d3",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x7c7"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7d4",
            "instructions": [
                "NOP",
                "JUMP 0x7d0"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7b6",
            "instructions": [
                "CLR_73 = msg.sender",
                "CLR_74 = nextDepositToPayout[CLR_73]",
                "REF_38 = CLR_74",
                "CLR_75 = msg.sender",
                "nextDepositToPayout[CLR_75] = i",
                "TMP_131 = i - 1",
                "_idDeposit = TMP_131",
                "CLR_76 = msg.sender",
                "_dest = CLR_76",
                "_token = currentToken",
                "_amount = acc",
                "JUMP 0x7c3"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7c7",
            "instructions": [
                "TMP_132 = TMP_231",
                "JUMP 0x7bd"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7cc",
            "instructions": [
                "NOP",
                "i = NEW_VAL integer",
                "d = NEW_VAL Deposit",
                "currentToken = NEW_VAL integer",
                "_idDeposit = NEW_VAL integer",
                "_holder = NEW_VAL integer",
                "_dest = NEW_VAL integer",
                "acc = NEW_VAL integer",
                "_idDeposit = NEW_VAL integer",
                "_token = NEW_VAL integer",
                "_amount = NEW_VAL integer",
                "JUMP 0x7d5"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7d5",
            "instructions": [
                "acc = 0",
                "CLR_77 = msg.sender",
                "CLR_78 = nextDepositToPayout[CLR_77]",
                "REF_30 = CLR_78",
                "i = REF_30",
                "REF_31 = LENGTH deposits",
                "TMP_119 = i < REF_31",
                "CONDITION TMP_119 0x7d5_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7d5_r0",
            "instructions": [
                "JUMP 0x7d6"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7d6",
            "instructions": [
                "CLR_79 = deposits[i]",
                "REF_32 = CLR_79",
                "CLR_80 = REF_32.token",
                "REF_33 = CLR_80",
                "currentToken = REF_33",
                "CLR_81 = msg.gas",
                "TMP_121 = CLR_81 > 149000",
                "CONDITION TMP_121 0x7d6_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7d6_r0",
            "instructions": [
                "JUMP 0x7d7"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7d7",
            "instructions": [
                "NOP",
                "REF_34 = LENGTH deposits",
                "TMP_123 = i < REF_34",
                "CLR_82 = msg.gas",
                "TMP_124 = CLR_82 > 148000",
                "TMP_125 = TMP_123 && TMP_124",
                "CONDITION TMP_125 0x7d9 0x7d8"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7d8",
            "instructions": [
                "NOP",
                "JUMP 0x7da"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7db",
            "instructions": [
                "CONDITION TMP_142 0x7db_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7db_r0",
            "instructions": [
                "JUMP 0x7dc"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7dc",
            "instructions": [
                "CLR_83 = msg.sender",
                "CLR_84 = nextDepositToPayout[CLR_83]",
                "REF_47 = CLR_84",
                "TMP_144 = REF_47 == i",
                "CONDITION TMP_144 0x7dc_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7dc_r0",
            "instructions": [
                "JUMP 0x7dd"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7de",
            "instructions": [
                "TMP_128 = ! TMP_127",
                "TMP_129 = TMP_126 && TMP_128",
                "CONDITION TMP_129 0x7df 0x7b3"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7df",
            "instructions": [
                "CLR_85 = d.token",
                "REF_37 = CLR_85",
                "TMP_130 = currentToken != REF_37",
                "CONDITION TMP_130 0x7e0 0x7b3"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7e1",
            "instructions": [
                "NOP",
                "JUMP 0x7e2"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7e2",
            "instructions": [
                "TMP_140 = i",
                "i = i + 1",
                "JUMP 0x7d7"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7e3",
            "instructions": [
                "NOP",
                "JUMP 0x7e4"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7e4",
            "instructions": [
                "CLR_86 = d.amount",
                "REF_41 = CLR_86",
                "CLR_87 = d.block",
                "REF_43 = CLR_87",
                "TMP_136 = NEW_VAL integer",
                "JUMP 0x7e5"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7e5",
            "instructions": [
                "TMP_137 = REF_41 * TMP_136",
                "CLR_88 = d.block",
                "REF_45 = CLR_88",
                "TMP_138 = NEW_VAL integer",
                "JUMP 0x7e6"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7e6",
            "instructions": [
                "TMP_139 = TMP_137 \/ TMP_138",
                "acc = acc + TMP_139",
                "JUMP 0x7e1"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7e7",
            "instructions": [
                "CONDITION TMP_132 0x7e7_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7e7_r0",
            "instructions": [
                "JUMP 0x7e8"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7e8",
            "instructions": [
                "CLR_89 = msg.sender",
                "CLR_90 = nextDepositToPayout[CLR_89]",
                "REF_39 = CLR_90",
                "TMP_134 = REF_39 == i",
                "CONDITION TMP_134 0x7e8_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7e8_r0",
            "instructions": [
                "JUMP 0x7e9"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7e9",
            "instructions": [
                "CLR_91 = d.token",
                "REF_40 = CLR_91",
                "currentToken = REF_40",
                "acc = 0",
                "JUMP 0x7e3"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7ea",
            "instructions": [
                "NOP",
                "JUMP 0x7eb"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7eb",
            "instructions": [
                "TMP_173 = _amount == 0",
                "CONDITION TMP_173 0x7ec 0x7ed"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7ec",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x7ee"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7ed",
            "instructions": [
                "NOP",
                "JUMP 0x7ef"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7ef",
            "instructions": [
                "TMP_174 = NEW_VAL unknown",
                "TMP_175 = TMP_174 == 0",
                "CONDITION TMP_175 0x7f0 0x7f1"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7f0",
            "instructions": [
                "CLR_92 = this.balance",
                "WRP_1 = CLR_92 - _amount",
                "this.balance = WRP_1",
                "TMP_176 = NEW_VAL unknown",
                "JUMP 0x7f2"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7f1",
            "instructions": [
                "TMP_178 = NEW_VAL boolean",
                "JUMP 0x7f3"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7f3",
            "instructions": [
                "TMP_179 = ! TMP_178",
                "CONDITION TMP_179 0x7f4 0x7f5"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7f4",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x7ee"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7f5",
            "instructions": [
                "NOP",
                "JUMP 0x7f6"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7f6",
            "instructions": [
                "NOP",
                "JUMP 0x7f7"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7f7",
            "instructions": [
                "NOP",
                "JUMP 0x7f8"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7f8",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x7ee"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7f2",
            "instructions": [
                "TMP_177 = ! TMP_176",
                "CONDITION TMP_177 0x7f9 0x7fa"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7f9",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x7ee"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7fa",
            "instructions": [
                "NOP",
                "JUMP 0x7f6"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7da",
            "instructions": [
                "CLR_93 = msg.sender",
                "CLR_94 = nextDepositToPayout[CLR_93]",
                "REF_46 = CLR_94",
                "CLR_95 = msg.sender",
                "nextDepositToPayout[CLR_95] = i",
                "TMP_141 = i - 1",
                "_idDeposit = TMP_141",
                "CLR_96 = msg.sender",
                "_dest = CLR_96",
                "_token = currentToken",
                "_amount = acc",
                "JUMP 0x7ea"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7ee",
            "instructions": [
                "TMP_142 = TMP_231",
                "JUMP 0x7db"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7fb",
            "instructions": [
                "NOP",
                "JUMP 0x7fc"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7fc",
            "instructions": [
                "CLR_97 = skipDeposits[_holder]",
                "REF_73 = CLR_97",
                "CLR_98 = REF_73[_idDeposit]",
                "REF_74 = CLR_98",
                "TMP_230 = REF_74",
                "JUMP 0x7fd"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7d9",
            "instructions": [
                "CLR_99 = deposits[i]",
                "REF_35 = CLR_99",
                "d = REF_35",
                "CLR_100 = d.canceled",
                "REF_36 = CLR_100",
                "TMP_126 = ! REF_36",
                "CLR_101 = msg.sender",
                "_holder = CLR_101",
                "_idDeposit = i",
                "JUMP 0x7fb"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7fd",
            "instructions": [
                "TMP_127 = TMP_230",
                "JUMP 0x7de"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7fe",
            "instructions": [
                "NOP",
                "JUMP 0x7ff"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7ff",
            "instructions": [
                "TMP_173 = _amount == 0",
                "CONDITION TMP_173 0x800 0x801"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x800",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x802"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x801",
            "instructions": [
                "NOP",
                "JUMP 0x803"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x803",
            "instructions": [
                "TMP_174 = NEW_VAL unknown",
                "TMP_175 = TMP_174 == 0",
                "CONDITION TMP_175 0x804 0x805"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x804",
            "instructions": [
                "CLR_102 = this.balance",
                "WRP_2 = CLR_102 - _amount",
                "this.balance = WRP_2",
                "TMP_176 = NEW_VAL unknown",
                "JUMP 0x806"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x805",
            "instructions": [
                "TMP_178 = NEW_VAL boolean",
                "JUMP 0x807"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x807",
            "instructions": [
                "TMP_179 = ! TMP_178",
                "CONDITION TMP_179 0x808 0x809"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x808",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x802"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x809",
            "instructions": [
                "NOP",
                "JUMP 0x80a"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x80a",
            "instructions": [
                "NOP",
                "JUMP 0x80b"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x80b",
            "instructions": [
                "NOP",
                "JUMP 0x80c"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x80c",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x802"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x806",
            "instructions": [
                "TMP_177 = ! TMP_176",
                "CONDITION TMP_177 0x80d 0x80e"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x80d",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x802"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x80e",
            "instructions": [
                "NOP",
                "JUMP 0x80a"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x7e0",
            "instructions": [
                "CLR_103 = msg.sender",
                "CLR_104 = nextDepositToPayout[CLR_103]",
                "REF_38 = CLR_104",
                "CLR_105 = msg.sender",
                "nextDepositToPayout[CLR_105] = i",
                "TMP_131 = i - 1",
                "_idDeposit = TMP_131",
                "CLR_106 = msg.sender",
                "_dest = CLR_106",
                "_token = currentToken",
                "_amount = acc",
                "JUMP 0x7fe"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x802",
            "instructions": [
                "TMP_132 = TMP_231",
                "JUMP 0x7e7"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x80f",
            "instructions": [
                "NOP",
                "REF_34 = LENGTH deposits",
                "TMP_123 = i < REF_34",
                "CLR_107 = msg.gas",
                "TMP_124 = CLR_107 > 148000",
                "TMP_125 = TMP_123 && TMP_124",
                "CONDITION TMP_125 0x811 0x810"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x810",
            "instructions": [
                "NOP",
                "JUMP 0x812"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x813",
            "instructions": [
                "TMP_128 = ! TMP_127",
                "TMP_129 = TMP_126 && TMP_128",
                "CONDITION TMP_129 0x814 0x7b3"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x814",
            "instructions": [
                "CLR_108 = d.token",
                "REF_37 = CLR_108",
                "TMP_130 = currentToken != REF_37",
                "CONDITION TMP_130 0x815 0x7b3"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x816",
            "instructions": [
                "NOP",
                "JUMP 0x817"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x817",
            "instructions": [
                "TMP_140 = i",
                "i = i + 1",
                "JUMP 0x80f"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x818",
            "instructions": [
                "NOP",
                "JUMP 0x819"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x819",
            "instructions": [
                "CLR_109 = d.amount",
                "REF_41 = CLR_109",
                "CLR_110 = d.block",
                "REF_43 = CLR_110",
                "TMP_136 = NEW_VAL integer",
                "JUMP 0x81a"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x81a",
            "instructions": [
                "TMP_137 = REF_41 * TMP_136",
                "CLR_111 = d.block",
                "REF_45 = CLR_111",
                "TMP_138 = NEW_VAL integer",
                "JUMP 0x81b"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x81b",
            "instructions": [
                "TMP_139 = TMP_137 \/ TMP_138",
                "acc = acc + TMP_139",
                "JUMP 0x816"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x81c",
            "instructions": [
                "CONDITION TMP_132 0x81c_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x81c_r0",
            "instructions": [
                "JUMP 0x81d"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x81d",
            "instructions": [
                "CLR_112 = msg.sender",
                "CLR_113 = nextDepositToPayout[CLR_112]",
                "REF_39 = CLR_113",
                "TMP_134 = REF_39 == i",
                "CONDITION TMP_134 0x81d_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x81d_r0",
            "instructions": [
                "JUMP 0x81e"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x81e",
            "instructions": [
                "CLR_114 = d.token",
                "REF_40 = CLR_114",
                "currentToken = REF_40",
                "acc = 0",
                "JUMP 0x818"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x812",
            "instructions": [
                "CLR_115 = msg.sender",
                "CLR_116 = nextDepositToPayout[CLR_115]",
                "REF_46 = CLR_116",
                "CLR_117 = msg.sender",
                "nextDepositToPayout[CLR_117] = i",
                "TMP_141 = i - 1",
                "_idDeposit = TMP_141",
                "CLR_118 = msg.sender",
                "_dest = CLR_118",
                "_token = currentToken",
                "_amount = acc"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x81f",
            "instructions": [
                "NOP",
                "JUMP 0x820"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x820",
            "instructions": [
                "CLR_119 = skipDeposits[_holder]",
                "REF_73 = CLR_119",
                "CLR_120 = REF_73[_idDeposit]",
                "REF_74 = CLR_120",
                "TMP_230 = REF_74",
                "JUMP 0x821"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x811",
            "instructions": [
                "CLR_121 = deposits[i]",
                "REF_35 = CLR_121",
                "d = REF_35",
                "CLR_122 = d.canceled",
                "REF_36 = CLR_122",
                "TMP_126 = ! REF_36",
                "CLR_123 = msg.sender",
                "_holder = CLR_123",
                "_idDeposit = i",
                "JUMP 0x81f"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x821",
            "instructions": [
                "TMP_127 = TMP_230",
                "JUMP 0x813"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x822",
            "instructions": [
                "NOP",
                "JUMP 0x823"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x823",
            "instructions": [
                "TMP_173 = _amount == 0",
                "CONDITION TMP_173 0x824 0x825"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x824",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x826"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x825",
            "instructions": [
                "NOP",
                "JUMP 0x827"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x827",
            "instructions": [
                "TMP_174 = NEW_VAL unknown",
                "TMP_175 = TMP_174 == 0",
                "CONDITION TMP_175 0x828 0x829"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x828",
            "instructions": [
                "CLR_124 = this.balance",
                "WRP_3 = CLR_124 - _amount",
                "this.balance = WRP_3",
                "TMP_176 = NEW_VAL unknown",
                "JUMP 0x82a"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7dd",
            "instructions": [
                "TMP_179 = ! TMP_178",
                "CONDITION TMP_179 0x82b 0x82c"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x82b",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x826"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x82c",
            "instructions": [
                "NOP",
                "JUMP 0x82d"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x82d",
            "instructions": [
                "NOP",
                "JUMP 0x82e"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x82e",
            "instructions": [
                "NOP",
                "JUMP 0x82f"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x82f",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x826"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x82a",
            "instructions": [
                "TMP_177 = ! TMP_176",
                "CONDITION TMP_177 0x830 0x831"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x830",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x826"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x831",
            "instructions": [
                "NOP",
                "JUMP 0x82d"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x815",
            "instructions": [
                "CLR_125 = msg.sender",
                "CLR_126 = nextDepositToPayout[CLR_125]",
                "REF_38 = CLR_126",
                "CLR_127 = msg.sender",
                "nextDepositToPayout[CLR_127] = i",
                "TMP_131 = i - 1",
                "_idDeposit = TMP_131",
                "CLR_128 = msg.sender",
                "_dest = CLR_128",
                "_token = currentToken",
                "_amount = acc",
                "JUMP 0x822"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x826",
            "instructions": [
                "TMP_132 = TMP_231",
                "JUMP 0x81c"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x829",
            "instructions": [
                "TMP_178 = NEW_VAL boolean"
            ]
        },
        {
            "scope": "trap",
            "addr": "0x7b3",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}