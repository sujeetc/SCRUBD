{
    "file": "0x2cf5694906bdd80f33bac7cb80183f1c61bc5be2.sol",
    "global_structs": [
        {
            "name": "struct_State",
            "fields": {
                "Null": [
                    "integer"
                ],
                "Created": [
                    "integer"
                ],
                "Paid": [
                    "integer"
                ],
                "Finalized": [
                    "integer"
                ],
                "Refunding": [
                    "integer"
                ],
                "Refunded": [
                    "integer"
                ],
                "Cancelled": [
                    "integer"
                ]
            }
        },
        {
            "name": "Order",
            "fields": {
                "state": [
                    "integer"
                ],
                "price": [
                    "integer"
                ],
                "fee": [
                    "integer"
                ],
                "paymentAcceptor": [
                    "integer"
                ],
                "originAddress": [
                    "integer"
                ],
                "tokenAddress": [
                    "integer"
                ],
                "vouchersApply": [
                    "integer"
                ],
                "discount": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "State",
            "type": [
                "struct_State"
            ],
            "init": [
                "0xEnumInit_State"
            ]
        },
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0xc2"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0xc3"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0xc4"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "VERSION",
            "type": [
                "unknown"
            ],
            "init": [
                "0x9"
            ]
        },
        {
            "name": "FEE_PERMILLE",
            "type": [
                "integer"
            ],
            "init": [
                "0xc"
            ]
        },
        {
            "name": "PERMILLE_COEFFICIENT",
            "type": [
                "integer"
            ],
            "init": [
                "0xa"
            ]
        },
        {
            "name": "PAYBACK_PERMILLE",
            "type": [
                "integer"
            ],
            "init": [
                "0xb"
            ]
        },
        {
            "name": "contactInformation",
            "type": [
                "unknown"
            ],
            "init": []
        },
        {
            "name": "isMonethaAddress",
            "type": [
                "array",
                "integer",
                "boolean"
            ],
            "init": []
        },
        {
            "name": "monethaVault",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "admin",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "monethaVoucher",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "MaxDiscountPermille",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "merchantAccount",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "merchantFundAddress",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "profileMap",
            "type": [
                "array",
                "unknown",
                "unknown"
            ],
            "init": []
        },
        {
            "name": "paymentSettingsMap",
            "type": [
                "array",
                "unknown",
                "unknown"
            ],
            "init": []
        },
        {
            "name": "compositeReputationMap",
            "type": [
                "array",
                "unknown",
                "integer"
            ],
            "init": []
        },
        {
            "name": "REPUTATION_DECIMALS",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "orders",
            "type": [
                "array",
                "integer",
                "Order"
            ],
            "init": []
        },
        {
            "name": "merchantIdHash",
            "type": [
                "integer"
            ],
            "init": [
                "0xac"
            ]
        },
        {
            "name": "merchantHistory",
            "type": [
                "integer"
            ],
            "init": [
                "0xab"
            ]
        },
        {
            "name": "merchantWallet",
            "type": [
                "integer"
            ],
            "init": [
                "0xaa"
            ]
        },
        {
            "name": "owner",
            "type": [
                "integer"
            ],
            "init": [
                "0x1d"
            ]
        },
        {
            "name": "monethaGateway",
            "type": [
                "integer"
            ],
            "init": [
                "0xa9"
            ]
        },
        {
            "name": "paused",
            "type": [
                "boolean"
            ],
            "init": [
                "0x1e"
            ]
        },
        {
            "name": "SafeMath",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Ownable",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Pausable",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Destructible",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Contactable",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Restricted",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "IMonethaVoucher",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "GenericERC20",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "MonethaGateway",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "MerchantDealsHistory",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "SafeDestructible",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "MerchantWallet",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "PaymentProcessor",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0xEnumInit_State",
            "instructions": [
                "State.Null = 0",
                "State.Created = 1",
                "State.Paid = 2",
                "State.Finalized = 3",
                "State.Refunding = 4",
                "State.Refunded = 5",
                "State.Cancelled = 6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x9",
            "instructions": [
                "VERSION = NEW_VAL unknown"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xa",
            "instructions": [
                "PERMILLE_COEFFICIENT = 1000"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xb",
            "instructions": [
                "PAYBACK_PERMILLE = 2"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xc",
            "instructions": [
                "FEE_PERMILLE = 15"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x1d",
            "instructions": [
                "owner = msg_sender"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x1e",
            "instructions": [
                "paused = false"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xa9",
            "instructions": [
                "monethaGateway = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xaa",
            "instructions": [
                "merchantWallet = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xab",
            "instructions": [
                "merchantHistory = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xac",
            "instructions": [
                "merchantIdHash = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xc2",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xc3",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xc4",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "orders",
            "addrs": [
                "0x2",
                "0x20",
                "0x24",
                "0x45",
                "0x48",
                "0xa1",
                "0xb2",
                "0xb9",
                "0xc0"
            ]
        },
        {
            "name": "merchantHistory",
            "addrs": [
                "0x2",
                "0x6b"
            ]
        },
        {
            "name": "merchantWallet",
            "addrs": [
                "0x2",
                "0x8f"
            ]
        },
        {
            "name": "owner",
            "addrs": [
                "0x2",
                "0x91",
                "0x93"
            ]
        },
        {
            "name": "isMonethaAddress",
            "addrs": [
                "0x2",
                "0x95"
            ]
        },
        {
            "name": "contactInformation",
            "addrs": [
                "0x2",
                "0x97"
            ]
        },
        {
            "name": "paused",
            "addrs": [
                "0x2",
                "0x99",
                "0x9c"
            ]
        },
        {
            "name": "monethaGateway",
            "addrs": [
                "0x2",
                "0x9f"
            ]
        },
        {
            "name": "compositeReputationMap",
            "addrs": [
                "0x2",
                "0xae",
                "0xb5",
                "0xbc"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x20",
            "instructions": [
                "CLR_0 = orders[U]",
                "REF_198 = CLR_0",
                "CLR_1 = REF_198.price",
                "REF_199 = CLR_1",
                "RTMP_728 = REF_199 == 0",
                "CONDITION RTMP_728 0x21 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x21",
            "instructions": [
                "CLR_2 = orders[U]",
                "REF_200 = CLR_2",
                "CLR_3 = REF_200.fee",
                "REF_201 = CLR_3",
                "RTMP_729 = REF_201 == 0",
                "CONDITION RTMP_729 0x22 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x22",
            "instructions": [
                "RTMP_727 = ! paused",
                "CONDITION RTMP_727 0x1f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1f",
            "instructions": [
                "CLR_4 = orders[U]",
                "REF_197 = CLR_4",
                "orders[0] = U",
                "orders[1] = U",
                "orders[2] = U",
                "orders[3] = U",
                "orders[4] = U",
                "orders[5] = U",
                "orders[6] = U",
                "orders[7] = U",
                "orders[8] = U",
                "orders[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x24",
            "instructions": [
                "CLR_5 = orders[U]",
                "REF_204 = CLR_5",
                "CLR_6 = REF_204.tokenAddress",
                "REF_205 = CLR_6",
                "RTMP_730 = REF_205 == 0",
                "CONDITION RTMP_730 0x25 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x25",
            "instructions": [
                "RTMP_731 = ! paused",
                "CONDITION RTMP_731 0x23 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x23",
            "instructions": [
                "CLR_7 = orders[U]",
                "REF_202 = CLR_7",
                "CLR_8 = REF_202.state",
                "REF_203 = CLR_8",
                "REF_202.state = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x45",
            "instructions": [
                "CLR_9 = orders[U]",
                "REF_209 = CLR_9",
                "CLR_10 = REF_209.tokenAddress",
                "REF_210 = CLR_10",
                "RTMP_748 = REF_210 != 0",
                "CONDITION RTMP_748 0x46 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x46",
            "instructions": [
                "RTMP_749 = ! paused",
                "CONDITION RTMP_749 0x44 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x44",
            "instructions": [
                "CLR_11 = orders[U]",
                "REF_207 = CLR_11",
                "CLR_12 = REF_207.state",
                "REF_208 = CLR_12",
                "REF_207.state = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x48",
            "instructions": [
                "CLR_13 = orders[U]",
                "REF_213 = CLR_13",
                "CLR_14 = REF_213.tokenAddress",
                "REF_214 = CLR_14",
                "RTMP_750 = REF_214 != 0",
                "CONDITION RTMP_750 0x49 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x49",
            "instructions": [
                "CLR_15 = orders[U]",
                "REF_215 = CLR_15",
                "CLR_16 = REF_215.paymentAcceptor",
                "REF_216 = CLR_16",
                "CLR_17 = msg.sender",
                "RTMP_751 = CLR_17 == REF_216",
                "CONDITION RTMP_751 0x4a 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4a",
            "instructions": [
                "RTMP_752 = ! paused",
                "CONDITION RTMP_752 0x47 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x47",
            "instructions": [
                "CLR_18 = orders[U]",
                "REF_211 = CLR_18",
                "CLR_19 = REF_211.state",
                "REF_212 = CLR_19",
                "REF_211.state = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x6b",
            "instructions": [
                "CLR_20 = msg.sender",
                "RTMP_770 = CLR_20 == owner",
                "CONDITION RTMP_770 0x6a 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x6a",
            "instructions": [
                "merchantHistory = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x8f",
            "instructions": [
                "CLR_21 = msg.sender",
                "RTMP_788 = CLR_21 == owner",
                "CONDITION RTMP_788 0x8e 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x8e",
            "instructions": [
                "merchantWallet = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x91",
            "instructions": [
                "CLR_22 = msg.sender",
                "RTMP_789 = CLR_22 == owner",
                "CONDITION RTMP_789 0x90 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x90",
            "instructions": [
                "owner = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x93",
            "instructions": [
                "CLR_23 = msg.sender",
                "RTMP_790 = CLR_23 == owner",
                "CONDITION RTMP_790 0x92 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x92",
            "instructions": [
                "owner = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x95",
            "instructions": [
                "CLR_24 = msg.sender",
                "RTMP_791 = CLR_24 == owner",
                "CONDITION RTMP_791 0x94 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x94",
            "instructions": [
                "CLR_25 = isMonethaAddress[U]",
                "REF_225 = CLR_25",
                "isMonethaAddress[0] = U",
                "isMonethaAddress[1] = U",
                "isMonethaAddress[2] = U",
                "isMonethaAddress[3] = U",
                "isMonethaAddress[4] = U",
                "isMonethaAddress[5] = U",
                "isMonethaAddress[6] = U",
                "isMonethaAddress[7] = U",
                "isMonethaAddress[8] = U",
                "isMonethaAddress[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x97",
            "instructions": [
                "CLR_26 = msg.sender",
                "RTMP_792 = CLR_26 == owner",
                "CONDITION RTMP_792 0x96 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x96",
            "instructions": [
                "contactInformation = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x99",
            "instructions": [
                "RTMP_793 = ! paused",
                "CONDITION RTMP_793 0x9a 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9a",
            "instructions": [
                "CLR_27 = msg.sender",
                "RTMP_794 = CLR_27 == owner",
                "CONDITION RTMP_794 0x98 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x98",
            "instructions": [
                "paused = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9c",
            "instructions": [
                "RTMP_795 = paused == true",
                "CONDITION RTMP_795 0x9d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9d",
            "instructions": [
                "CLR_28 = msg.sender",
                "RTMP_796 = CLR_28 == owner",
                "CONDITION RTMP_796 0x9b 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9b",
            "instructions": [
                "paused = false"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9f",
            "instructions": [
                "CLR_29 = msg.sender",
                "RTMP_797 = CLR_29 == owner",
                "CONDITION RTMP_797 0x9e 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9e",
            "instructions": [
                "monethaGateway = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa1",
            "instructions": [
                "CLR_30 = orders[U]",
                "REF_228 = CLR_30",
                "CLR_31 = REF_228.paymentAcceptor",
                "REF_229 = CLR_31",
                "CLR_32 = msg.sender",
                "RTMP_798 = CLR_32 == REF_229",
                "CONDITION RTMP_798 0xa2 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa2",
            "instructions": [
                "RTMP_799 = ! paused",
                "CONDITION RTMP_799 0xa3 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa3",
            "instructions": [
                "CLR_33 = orders[U]",
                "REF_230 = CLR_33",
                "CLR_34 = REF_230.tokenAddress",
                "REF_231 = CLR_34",
                "RTMP_800 = REF_231 == 0",
                "CONDITION RTMP_800 0xa4 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa4",
            "instructions": [
                "CLR_35 = orders[U]",
                "REF_232 = CLR_35",
                "CLR_36 = REF_232.price",
                "REF_233 = CLR_36",
                "CLR_37 = msg.value",
                "RTMP_801 = CLR_37 == REF_233",
                "CONDITION RTMP_801 0xa0 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa0",
            "instructions": [
                "CLR_38 = orders[U]",
                "REF_226 = CLR_38",
                "CLR_39 = REF_226.state",
                "REF_227 = CLR_39",
                "REF_226.state = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xae",
            "instructions": [
                "CLR_40 = msg.sender",
                "CLR_41 = isMonethaAddress[CLR_40]",
                "REF_224 = CLR_41",
                "RTMP_787 = REF_224 == true",
                "CONDITION RTMP_787 0xaf 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xaf",
            "instructions": [
                "RTMP_802 = ! paused",
                "CONDITION RTMP_802 0xb0 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb0",
            "instructions": [
                "CLR_42 = msg.sender",
                "CLR_43 = isMonethaAddress[CLR_42]",
                "REF_234 = CLR_43",
                "RTMP_803 = REF_234 == true",
                "CONDITION RTMP_803 0xad 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xad",
            "instructions": [
                "CLR_44 = compositeReputationMap[U]",
                "REF_223 = CLR_44",
                "compositeReputationMap[0] = U",
                "compositeReputationMap[1] = U",
                "compositeReputationMap[2] = U",
                "compositeReputationMap[3] = U",
                "compositeReputationMap[4] = U",
                "compositeReputationMap[5] = U",
                "compositeReputationMap[6] = U",
                "compositeReputationMap[7] = U",
                "compositeReputationMap[8] = U",
                "compositeReputationMap[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb2",
            "instructions": [
                "RTMP_804 = ! paused",
                "CONDITION RTMP_804 0xb3 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb3",
            "instructions": [
                "CLR_45 = msg.sender",
                "CLR_46 = isMonethaAddress[CLR_45]",
                "REF_237 = CLR_46",
                "RTMP_805 = REF_237 == true",
                "CONDITION RTMP_805 0xb1 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb1",
            "instructions": [
                "CLR_47 = orders[U]",
                "REF_235 = CLR_47",
                "CLR_48 = REF_235.state",
                "REF_236 = CLR_48",
                "REF_235.state = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb5",
            "instructions": [
                "CLR_49 = msg.sender",
                "CLR_50 = isMonethaAddress[CLR_49]",
                "REF_224 = CLR_50",
                "RTMP_787 = REF_224 == true",
                "CONDITION RTMP_787 0xb6 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb6",
            "instructions": [
                "RTMP_806 = ! paused",
                "CONDITION RTMP_806 0xb7 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb7",
            "instructions": [
                "CLR_51 = msg.sender",
                "CLR_52 = isMonethaAddress[CLR_51]",
                "REF_238 = CLR_52",
                "RTMP_807 = REF_238 == true",
                "CONDITION RTMP_807 0xb4 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb4",
            "instructions": [
                "CLR_53 = compositeReputationMap[U]",
                "REF_223 = CLR_53",
                "compositeReputationMap[0] = U",
                "compositeReputationMap[1] = U",
                "compositeReputationMap[2] = U",
                "compositeReputationMap[3] = U",
                "compositeReputationMap[4] = U",
                "compositeReputationMap[5] = U",
                "compositeReputationMap[6] = U",
                "compositeReputationMap[7] = U",
                "compositeReputationMap[8] = U",
                "compositeReputationMap[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb9",
            "instructions": [
                "RTMP_808 = ! paused",
                "CONDITION RTMP_808 0xba 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xba",
            "instructions": [
                "CLR_54 = msg.sender",
                "CLR_55 = isMonethaAddress[CLR_54]",
                "REF_241 = CLR_55",
                "RTMP_809 = REF_241 == true",
                "CONDITION RTMP_809 0xb8 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb8",
            "instructions": [
                "CLR_56 = orders[U]",
                "REF_239 = CLR_56",
                "CLR_57 = REF_239.state",
                "REF_240 = CLR_57",
                "REF_239.state = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xbc",
            "instructions": [
                "CLR_58 = msg.sender",
                "CLR_59 = isMonethaAddress[CLR_58]",
                "REF_224 = CLR_59",
                "RTMP_787 = REF_224 == true",
                "CONDITION RTMP_787 0xbd 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xbd",
            "instructions": [
                "CLR_60 = msg.sender",
                "CLR_61 = isMonethaAddress[CLR_60]",
                "REF_242 = CLR_61",
                "RTMP_810 = REF_242 == true",
                "CONDITION RTMP_810 0xbe 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xbe",
            "instructions": [
                "RTMP_811 = ! paused",
                "CONDITION RTMP_811 0xbb 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xbb",
            "instructions": [
                "CLR_62 = compositeReputationMap[U]",
                "REF_223 = CLR_62",
                "compositeReputationMap[0] = U",
                "compositeReputationMap[1] = U",
                "compositeReputationMap[2] = U",
                "compositeReputationMap[3] = U",
                "compositeReputationMap[4] = U",
                "compositeReputationMap[5] = U",
                "compositeReputationMap[6] = U",
                "compositeReputationMap[7] = U",
                "compositeReputationMap[8] = U",
                "compositeReputationMap[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xc0",
            "instructions": [
                "CLR_63 = msg.sender",
                "CLR_64 = isMonethaAddress[CLR_63]",
                "REF_245 = CLR_64",
                "RTMP_812 = REF_245 == true",
                "CONDITION RTMP_812 0xc1 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xc1",
            "instructions": [
                "RTMP_813 = ! paused",
                "CONDITION RTMP_813 0xbf 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xbf",
            "instructions": [
                "CLR_65 = orders[U]",
                "REF_243 = CLR_65",
                "CLR_66 = REF_243.state",
                "REF_244 = CLR_66",
                "REF_243.state = U"
            ]
        }
    ],
    "root_addr": "0xc9",
    "dest_addrs": [
        "0xdd"
    ],
    "normal_blocks": [
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xc5",
            "instructions": [
                "NOP",
                "JUMP 0xc6"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xc6",
            "instructions": [
                "CLR_67 = orders[_orderId]",
                "REF_105 = CLR_67",
                "CLR_68 = REF_105.tokenAddress",
                "REF_106 = CLR_68",
                "TMP_507 = 0",
                "TMP_508 = REF_106 != TMP_507",
                "CONDITION TMP_508 0xc6_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xc6_r0",
            "instructions": [
                "JUMP 0xc7"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xc7",
            "instructions": [
                "CLR_69 = orders[_orderId]",
                "REF_107 = CLR_69",
                "CLR_70 = REF_107.tokenAddress",
                "REF_108 = CLR_70",
                "TMP_510 = NEW_VAL unknown",
                "CLR_71 = orders[_orderId]",
                "REF_110 = CLR_71",
                "CLR_72 = REF_110.originAddress",
                "REF_111 = CLR_72",
                "CLR_73 = orders[_orderId]",
                "REF_112 = CLR_73",
                "CLR_74 = REF_112.price",
                "REF_113 = CLR_74",
                "ATTACK",
                "JUMP 0xc8"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xc9",
            "instructions": [
                "NOP",
                "_orderId = NEW_VAL integer",
                "_orderId = NEW_VAL integer",
                "_state = NEW_VAL unknown",
                "_orderId = NEW_VAL integer",
                "_state = NEW_VAL unknown",
                "JUMP 0xca"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xca",
            "instructions": [
                "TMP_573 = ! paused",
                "CONDITION TMP_573 0xca_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xca_r0",
            "instructions": [
                "JUMP 0xcb"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xcc",
            "instructions": [
                "CLR_75 = State.Refunding",
                "REF_116 = CLR_75",
                "_orderId = _orderId",
                "_state = REF_116",
                "JUMP 0xcd"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xce",
            "instructions": [
                "NOP",
                "JUMP 0xcc"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xcd",
            "instructions": [
                "CLR_76 = orders[_orderId]",
                "REF_159 = CLR_76",
                "CLR_77 = REF_159.state",
                "REF_160 = CLR_77",
                "TMP_576 = _state == REF_160",
                "CONDITION TMP_576 0xcd_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xcd_r0",
            "instructions": [
                "JUMP 0xcf"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xcb",
            "instructions": [
                "NOP",
                "JUMP 0xce"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xd0",
            "instructions": [
                "CLR_78 = State.Refunded",
                "REF_117 = CLR_78",
                "_orderId = _orderId",
                "_state = REF_117",
                "JUMP 0xd1"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xd2",
            "instructions": [
                "NOP",
                "JUMP 0xd0"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xcf",
            "instructions": [
                "NOP",
                "JUMP 0xd2"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xd1",
            "instructions": [
                "NOP",
                "JUMP 0xc5"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xc8",
            "instructions": [
                "NOP",
                "_price = NEW_VAL integer",
                "c = NEW_VAL integer",
                "_paymentAcceptor = NEW_VAL integer",
                "_b = NEW_VAL integer",
                "_originAddress = NEW_VAL integer",
                "_a = NEW_VAL integer",
                "_fee = NEW_VAL integer",
                "_a = NEW_VAL integer",
                "_orderId = NEW_VAL integer",
                "_tokenAddress = NEW_VAL integer",
                "_b = NEW_VAL integer",
                "_orderId = NEW_VAL integer",
                "_state = NEW_VAL unknown",
                "_vouchersApply = NEW_VAL integer",
                "JUMP 0xd3"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xd4",
            "instructions": [
                "NOP",
                "JUMP 0xd5"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xd5",
            "instructions": [
                "TMP_418 = _orderId > 0",
                "CONDITION TMP_418 0xd5_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xd5_r0",
            "instructions": [
                "JUMP 0xd6"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xd6",
            "instructions": [
                "TMP_420 = _price > 0",
                "CONDITION TMP_420 0xd6_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xd6_r0",
            "instructions": [
                "JUMP 0xd7"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xd8",
            "instructions": [
                "TMP_425 = _fee <= TMP_424",
                "TMP_426 = TMP_422 && TMP_425",
                "CONDITION TMP_426 0xd8_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xd8_r0",
            "instructions": [
                "JUMP 0xd9"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xd9",
            "instructions": [
                "TMP_428 = 0",
                "TMP_429 = _paymentAcceptor != TMP_428",
                "CONDITION TMP_429 0xd9_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xd9_r0",
            "instructions": [
                "JUMP 0xda"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xda",
            "instructions": [
                "TMP_431 = 0",
                "TMP_432 = _originAddress != TMP_431",
                "CONDITION TMP_432 0xda_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xda_r0",
            "instructions": [
                "JUMP 0xdb"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xdb",
            "instructions": [
                "CLR_79 = orders[_orderId]",
                "REF_52 = CLR_79",
                "CLR_80 = REF_52.price",
                "REF_53 = CLR_80",
                "TMP_434 = REF_53 == 0",
                "CLR_81 = orders[_orderId]",
                "REF_54 = CLR_81",
                "CLR_82 = REF_54.fee",
                "REF_55 = CLR_82",
                "TMP_435 = REF_55 == 0",
                "TMP_436 = TMP_434 && TMP_435",
                "CONDITION TMP_436 0xdb_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xdb_r0",
            "instructions": [
                "JUMP 0xdc"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xdc",
            "instructions": [
                "CLR_83 = orders[_orderId]",
                "REF_56 = CLR_83",
                "CLR_84 = State.Created",
                "REF_57 = CLR_84",
                "TMP_438 = NEW_VAL Order",
                "orders[_orderId] = TMP_438",
                "JUMP 0xdd"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xd3",
            "instructions": [
                "TMP_573 = ! paused",
                "CONDITION TMP_573 0xd3_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xd3_r0",
            "instructions": [
                "JUMP 0xde"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xdf",
            "instructions": [
                "CLR_85 = State.Null",
                "REF_59 = CLR_85",
                "_orderId = _orderId",
                "_state = REF_59",
                "JUMP 0xe0"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xe1",
            "instructions": [
                "NOP",
                "JUMP 0xdf"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xe0",
            "instructions": [
                "CLR_86 = orders[_orderId]",
                "REF_159 = CLR_86",
                "CLR_87 = REF_159.state",
                "REF_160 = CLR_87",
                "TMP_576 = _state == REF_160",
                "CONDITION TMP_576 0xe0_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xe0_r0",
            "instructions": [
                "JUMP 0xe2"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xde",
            "instructions": [
                "NOP",
                "JUMP 0xe1"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xe2",
            "instructions": [
                "NOP",
                "JUMP 0xd4"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xe3",
            "instructions": [
                "NOP",
                "JUMP 0xe4"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xe4",
            "instructions": [
                "TMP_0 = _a == 0",
                "CONDITION TMP_0 0xe5 0xe6"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xe5",
            "instructions": [
                "TMP_606 = 0",
                "JUMP 0xe7"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xe6",
            "instructions": [
                "NOP",
                "JUMP 0xe8"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xe8",
            "instructions": [
                "TMP_1 = _a * _b",
                "c = TMP_1",
                "TMP_2 = c \/ _a",
                "TMP_3 = TMP_2 == _b",
                "CONDITION TMP_3 0xe8_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xe8_r0",
            "instructions": [
                "JUMP 0xe9"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xe9",
            "instructions": [
                "TMP_606 = c",
                "JUMP 0xe7"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xd7",
            "instructions": [
                "TMP_422 = _fee >= 0",
                "_a = FEE_PERMILLE",
                "_b = _price",
                "JUMP 0xe3"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xe7",
            "instructions": [
                "TMP_423 = TMP_606",
                "JUMP 0xea"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xeb",
            "instructions": [
                "NOP",
                "JUMP 0xec"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xec",
            "instructions": [
                "TMP_5 = _a \/ _b",
                "TMP_607 = TMP_5",
                "JUMP 0xed"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xea",
            "instructions": [
                "_a = TMP_423",
                "_b = PERMILLE_COEFFICIENT",
                "JUMP 0xeb"
            ]
        },
        {
            "scope": "addOrder",
            "addr": "0xed",
            "instructions": [
                "TMP_424 = TMP_607",
                "JUMP 0xd8"
            ]
        },
        {
            "scope": "withdrawTokenRefund",
            "addr": "0xdd",
            "instructions": [
                "CLR_88 = orders[_orderId]",
                "REF_161 = CLR_88",
                "CLR_89 = REF_161.state",
                "REF_162 = CLR_89",
                "REF_161.state = _state"
            ]
        },
        {
            "scope": "trap",
            "addr": "0xee",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}