{
    "0xf1add8bf553d0066be17768d6816f3730c476237.sol": [
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 117\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 120\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 124\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 130\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 117\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 120\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 124\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 130\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 100\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 106\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 106\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 114\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 114\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 115\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 115\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 121\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 122\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 127\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 127\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 128\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 132\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 132\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 151\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 154\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 158\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 164\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 134\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 140\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 148\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 155\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 156\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 161\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 162\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 168\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 174\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 190\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 195\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 219\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 222\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 226\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 202\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 208\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 216\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 217\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 224\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 230\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 234\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 236\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 242\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 250\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 251\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 257\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 258\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 263\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 264\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 268\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 38\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 38\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addReferrer"
            ],
            "from_function": "addReferrer",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 55\nFunction: addReferrer\nNode: \nEXPRESSION referrers[_address] = true\nIRS: \nREF_7 := true\"",
                        "\"BlockID: 14\nFunction: addParticipant\nNode: \nIF _referrer != address(0) && referrers[_referrer]\nIRS: \nCONDITION TMP_25\""
                    ],
                    "state_variable": "referrers"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addReferrer"
            ],
            "from_function": "addReferrer",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 55\nFunction: addReferrer\nNode: \nEXPRESSION referrers[_address] = true\nIRS: \nREF_7 := true\"",
                        "\"BlockID: 14\nFunction: addParticipant\nNode: \nIF _referrer != address(0) && referrers[_referrer]\nIRS: \nCONDITION TMP_25\""
                    ],
                    "state_variable": "referrers"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "addReferrer"
            ],
            "from_function": "addReferrer",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 55\nFunction: addReferrer\nNode: \nEXPRESSION referrers[_address] = true\nIRS: \nREF_7 := true\"",
                        "\"BlockID: 14\nFunction: addParticipant\nNode: \nIF _referrer != address(0) && referrers[_referrer]\nIRS: \nCONDITION TMP_25\""
                    ],
                    "state_variable": "referrers"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 63\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 63\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "getOut"
            ],
            "from_function": "getOut",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 73\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 73\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 70\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 70\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "getOut"
            ],
            "from_function": "getOut",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 73\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 70\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "getOut"
            ],
            "from_function": "getOut",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 70\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "getOut"
            ],
            "from_function": "getOut",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 73\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 70\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "fallback",
                "getOut"
            ],
            "from_function": "getOut",
            "to_function": "fallback",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 70\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 4\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 4\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 10\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 10\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 31\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 31\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 4\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 10\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 31\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 4\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 10\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 31\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 281\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 281\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 270\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 270\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 278\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 278\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 297\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 300\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 286\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 294\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 295\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 302\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 310\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 311\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "addReferrer"
            ],
            "from_function": "addReferrer",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 55\nFunction: addReferrer\nNode: \nEXPRESSION referrers[_address] = true\nIRS: \nREF_7 := true\"",
                        "\"BlockID: 42\nFunction: addParticipant\nNode: \nIF _referrer != address(0) && referrers[_referrer]\nIRS: \nCONDITION TMP_25\""
                    ],
                    "state_variable": "referrers"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "addReferrer"
            ],
            "from_function": "addReferrer",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 55\nFunction: addReferrer\nNode: \nEXPRESSION referrers[_address] = true\nIRS: \nREF_7 := true\"",
                        "\"BlockID: 42\nFunction: addParticipant\nNode: \nIF _referrer != address(0) && referrers[_referrer]\nIRS: \nCONDITION TMP_25\""
                    ],
                    "state_variable": "referrers"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "addReferrer"
            ],
            "from_function": "addReferrer",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 55\nFunction: addReferrer\nNode: \nEXPRESSION referrers[_address] = true\nIRS: \nREF_7 := true\"",
                        "\"BlockID: 42\nFunction: addParticipant\nNode: \nIF _referrer != address(0) && referrers[_referrer]\nIRS: \nCONDITION TMP_25\""
                    ],
                    "state_variable": "referrers"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 63\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "getOut"
            ],
            "from_function": "getOut",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 73\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 73\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 70\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 70\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "getOut"
            ],
            "from_function": "getOut",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 73\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 70\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "addParticipant",
                "getOut"
            ],
            "from_function": "getOut",
            "to_function": "addParticipant",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 70\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 21\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 24\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 28\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 34\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 4\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 10\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 31\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "fallback"
            ],
            "from_function": "fallback",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 4\nFunction: fallback\nNode: \nIF participants[msg.sender] == address(0)\nIRS: \nCONDITION TMP_1\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 10\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 18\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 19\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 25\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 26\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 31\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 32\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 36\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 49\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 52\nFunction: addParticipant\nNode: \nEXPRESSION participants[_address] = address(new Participant(_address,msg.value \/ 45))\nIRS: \nREF_2 := TMP_19\"",
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 38\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "addParticipant"
            ],
            "from_function": "addParticipant",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 38\nFunction: addParticipant\nNode: \nEXPRESSION require(bool,string)(participants[_address] == address(0),This participant is already registered)\nIRS: \nTMP_11 = SOLIDITY_CALL require(bool,string)(TMP_10,This participant is already registered)\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 46\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 47\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 321\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\"",
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 318\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 319\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "processPayment"
            ],
            "from_function": "processPayment",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 325\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_39(uint256) = HIGH_LEVEL_CALL, dest:participant(Participant), function:daily, arguments:[]  \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 326\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "getOut"
            ],
            "from_function": "getOut",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 73\nFunction: getOut\nNode: \nEXPRESSION participants[msg.sender] = address(0)\nIRS: \nREF_20 := TMP_55\"",
                        "\"BlockID: 64\nFunction: processPayment\nNode: \nNEW VARIABLE done = participant.processPayment.value(participant.daily())()\nIRS: \nTMP_41(bool) = HIGH_LEVEL_CALL, dest:participant(Participant), function:processPayment, arguments:[] value:TMP_39 \""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 70\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "processPayment",
                "getOut"
            ],
            "from_function": "getOut",
            "to_function": "processPayment",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 70\nFunction: getOut\nNode: \nEXPRESSION require(bool,string)(participants[msg.sender] != address(0),You are not a participant)\nIRS: \nTMP_46 = SOLIDITY_CALL require(bool,string)(TMP_45,You are not a participant)\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: getOut\nNode: \nEXPRESSION (value,index,None) = SmartolutionInterface(smartolution).users(address(participant))\nIRS: \nTUPLE_0(uint256,uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_48(SmartolutionInterface), function:users, arguments:['TMP_49']  \"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                },
                {
                    "path": [
                        "\"BlockID: 75\nFunction: getOut\nNode: \nEXPRESSION msg.sender.transfer(paymentsLeft)\nIRS: \nTransfer dest:msg.sender value:paymentsLeft\"",
                        "\"BlockID: 66\nFunction: processPayment\nNode: \nEXPRESSION participants[_address] = address(0)\nIRS: \nREF_14 := TMP_42\""
                    ],
                    "state_variable": "participants"
                }
            ]
        }
    ]
}