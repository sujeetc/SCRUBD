./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:3:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:25:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:27:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:27:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:31:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:34:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:35:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:35:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:40:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:46:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:46:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:46:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:50:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:53:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:55:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:66:1: Function order is incorrect, interface can not go after library definition (line 24) [Warning/ordering]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:67:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:67:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:68:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:68:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:69:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:69:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:70:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:70:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:71:5: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:71:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:72:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:72:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:73:5: Function order is incorrect, external  function can not go after external view function (line 72) [Warning/ordering]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:73:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:73:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:74:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:74:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:75:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:75:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:76:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:76:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:77:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:78:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:82:5: 'owner' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:84:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:91:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 84) [Warning/ordering]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:92:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:98:5: Function isOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:98:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:102:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:107:5: GC: [owner] on Event [OwnershipTransferred] could be Indexed [Warning/gas-indexed-events]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:111:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:115:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:115:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:116:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:116:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:116:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:118:5: Function order is incorrect, external  function can not go after external pure function (line 116) [Warning/ordering]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:118:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:121:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:122:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:123:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:124:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:126:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:127:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:127:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:127:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:129:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:131:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:132:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:133:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:135:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:136:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:136:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:136:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:138:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:139:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:140:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:143:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:146:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:147:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:150:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:153:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:154:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:155:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:158:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:163:5: Function setDistributionCriteria() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:164:5: Function setShare() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:165:5: Function deposit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:166:5: Function process() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:167:5: Function gibSHIL() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:171:1: Contract has 16 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:174:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:176:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:178:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:178:5: 'router' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:180:5: Function order is incorrect, struct definition can not go after state variable declaration (line 178) [Warning/ordering]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:186:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:186:5: 'shareholders' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:187:5: Main key parameter in mapping shareholderIndexes is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:187:5: Value parameter in mapping shareholderIndexes is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:187:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:187:5: 'shareholderIndexes' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:188:5: Main key parameter in mapping shareholderClaims is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:188:5: Value parameter in mapping shareholderClaims is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:188:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:188:5: 'shareholderClaims' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:189:5: Main key parameter in mapping shares is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:189:5: Value parameter in mapping shares is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:201:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:201:5: 'initialized' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:204:9: Provide an error message for require [Warning/reason-string]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:204:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:210:9: Provide an error message for require [Warning/reason-string]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:210:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:213:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:219:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:223:5: Function setDistributionCriteria() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:228:5: Function setShare() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:245:5: Function deposit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:257:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:265:5: Function process() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:276:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:284:13: GC: For [ currentIndex ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:285:13: GC: For [ iterations ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:289:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:289:5: Function shouldDistribute() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:289:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:290:61: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:294:5: 'distributeDividend' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:301:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:301:46: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:302:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:303:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:307:5: Function gibSHIL() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:311:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:311:5: Function getUnpaidEarnings() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:311:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:317:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:322:5: 'getCumulativeDividends' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:322:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:326:5: 'addShareholder' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:331:5: 'removeShareholder' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:338:1: Contract has 34 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:341:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:343:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:344:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:345:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:349:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:349:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:350:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:351:5: Main key parameter in mapping cooldown is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:351:5: Value parameter in mapping cooldown is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:351:5: 'cooldown' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:353:5: 'WETH' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:353:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:354:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:354:5: 'DEAD' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:354:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:355:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:355:5: 'ZERO' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:355:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:359:5: Main key parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:359:5: Value parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:359:5: 'bots' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:360:5: Main key parameter in mapping isFeeExempt is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:360:5: Value parameter in mapping isFeeExempt is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:361:5: Main key parameter in mapping isTxLimitExempt is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:361:5: Value parameter in mapping isTxLimitExempt is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:362:5: Main key parameter in mapping isDividendExempt is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:362:5: Value parameter in mapping isDividendExempt is not named [Warning/named-parameters-mapping]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:379:5: 'tokenOwner' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:382:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:382:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:395:5: Function order is incorrect, state variable declaration can not go after modifier definition (line 389) [Warning/ordering]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:399:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:430:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:433:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:433:5: Function setBots() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:433:5: GC: [bots_] argument on Function [setBots] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:434:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:434:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:434:44: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:440:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:440:5: Function openTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:445:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:445:5: Function changeTotalFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:450:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:450:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:451:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:451:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:454:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:454:5: Function changeFeeAllocation() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:460:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:460:5: Function changeTxLimit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:464:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:464:5: Function changeWalletLimit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:468:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:468:5: Function changeIsFeeExempt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:472:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:472:5: Function changeIsTxLimitExempt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:476:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:476:5: Function setUncleWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:480:5: 'setOwnerWallet' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:483:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:483:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:487:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:487:5: Function changeSwapBackSettings() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:492:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:492:5: Function setDistributionCriteria() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:496:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:496:5: Function delBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:501:9: Provide an error message for require [Warning/reason-string]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:501:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:510:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:510:5: Function setIsDividendExempt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:514:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:514:5: Function changeCoolUncleGas() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:518:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:518:5: Function getCirculatingSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:518:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:522:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:522:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:523:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:523:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:524:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:524:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:525:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:525:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:526:5: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:526:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:527:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:527:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:528:2: Line length must be no more than 120 but current length is 137. [Error/max-line-length]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:528:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:528:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:530:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:530:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:536:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:536:5: Function approveMax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:536:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:540:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:540:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:544:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:544:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:552:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:553:2: Line length must be no more than 120 but current length is 139. [Error/max-line-length]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:553:50: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:554:9: Provide an error message for require [Warning/reason-string]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:554:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:558:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:558:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:562:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:562:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:565:2: Line length must be no more than 120 but current length is 136. [Error/max-line-length]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:565:80: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:569:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:574:63: Code contains empty blocks [Warning/no-empty-blocks]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:574:72: Code contains empty blocks [Warning/no-empty-blocks]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:578:69: Code contains empty blocks [Warning/no-empty-blocks]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:578:78: Code contains empty blocks [Warning/no-empty-blocks]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:585:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:592:5: 'takeFee' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:592:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:603:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:611:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:616:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:620:5: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:621:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:627:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:631:5: 'swapBack' should start with _ [Warning/private-vars-leading-underscore]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:648:52: Code contains empty blocks [Warning/no-empty-blocks]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:648:61: Code contains empty blocks [Warning/no-empty-blocks]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:655:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:655:5: Function manualSwapBack() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:659:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:659:5: Function clearStuckEth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:666:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:666:5: Function manualProcessGas() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:670:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:670:5: Function checkPendingReflections() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:670:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:674:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x097a5e3d974332aa5612675caaaeb117091dc743.sol:674:5: Function getSHIL() must match Foundry test naming convention [Warning/foundry-test-functions]

280 problem/s (4 error/s, 276 warning/s)
