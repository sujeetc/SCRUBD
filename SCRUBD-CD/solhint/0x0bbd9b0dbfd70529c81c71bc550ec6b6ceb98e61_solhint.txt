./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:10:1: Found more than One contract per file. 5 contracts found! [Warning/one-contract-per-file]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:13:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:19:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:19:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:20:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:20:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:21:5: Function order is incorrect, external  function can not go after external view function (line 20) [Warning/ordering]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:21:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:21:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:22:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:22:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:23:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:23:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:24:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:24:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:25:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:26:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:30:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:32:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:32:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:36:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:40:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:41:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:41:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:46:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:51:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:51:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:51:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:55:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:59:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:60:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:71:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:77:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:77:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:77:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:81:5: Function order is incorrect, modifier definition can not go after public view function (line 77) [Warning/ordering]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:82:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:90:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:90:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:91:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:91:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:91:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:105:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:105:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:112:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:112:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:113:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:113:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:115:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:115:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:116:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:116:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:117:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:117:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:118:5: Function order is incorrect, external view function can not go after external pure function (line 117) [Warning/ordering]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:118:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:118:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:118:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:119:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:119:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:119:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:120:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:120:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:120:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:122:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:122:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:122:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:123:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:123:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:123:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:124:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:124:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:124:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:126:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:126:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:126:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:127:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:127:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:127:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:128:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:128:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:128:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:130:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:130:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:130:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:132:5: GC: [amount0] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:132:5: GC: [amount1] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:132:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:132:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:133:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:133:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:133:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:133:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:134:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:134:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:134:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:134:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:136:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:137:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:138:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:139:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:142:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:142:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:144:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:144:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:144:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:144:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:145:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:145:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:146:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:146:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:147:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:147:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:148:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:149:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:149:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:149:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:150:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:150:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:150:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:151:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:151:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:151:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:153:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:153:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:154:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:154:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:154:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:155:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:155:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:155:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:156:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:157:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:159:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:163:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:167:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:174:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:175:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:176:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:179:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:181:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:181:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:182:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:182:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:182:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:183:5: Function order is incorrect, external payable function can not go after external pure function (line 182) [Warning/ordering]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:183:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:191:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:191:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:191:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:191:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:191:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:192:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:192:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:192:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:192:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:192:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:193:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:193:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:193:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:193:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:193:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:194:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:194:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:194:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:195:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:195:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:195:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:199:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:199:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:200:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:200:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:201:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:201:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:204:1: Contract has 37 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:206:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:207:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:208:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:209:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:209:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:211:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:212:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:212:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:213:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:216:5: '_maxWalletAmount' should not start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:222:5: '_buyLiquidityFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:224:5: '_buyEcosystemFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:226:5: '_buyMarketingFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:228:5: '_buyTeamFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:232:5: '_sellLiquidityFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:234:5: '_sellEcosystemFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:236:5: '_sellMarketingFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:238:5: '_sellTeamFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:242:5: Function order is incorrect, struct definition can not go after state variable declaration (line 240) [Warning/ordering]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:250:5: Main key parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:250:5: Value parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:250:5: 'bots' should start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:255:5: 'uniswapV2Router' should start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:260:5: 'inSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:263:5: GC: [_maxTxAmount] on Event [MaxTxAmountUpdated] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:264:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:264:5: GC: [_buyMarketingFee] on Event [BuyFeesUpdated] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:264:5: GC: [_buyLiquidityFee] on Event [BuyFeesUpdated] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:264:5: GC: [_buyTeamFee] on Event [BuyFeesUpdated] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:264:5: GC: [_buyEcosystemFee] on Event [BuyFeesUpdated] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:265:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:265:5: GC: [_sellMarketingFee] on Event [SellFeesUpdated] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:265:5: GC: [_sellLiquidityFee] on Event [SellFeesUpdated] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:265:5: GC: [_sellTeamFee] on Event [SellFeesUpdated] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:265:5: GC: [_sellEcosystemFee] on Event [SellFeesUpdated] could be Indexed [Warning/gas-indexed-events]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:272:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:276:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:291:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:291:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:295:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:295:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:299:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:299:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:303:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:303:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:307:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:307:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:311:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:311:5: Function isBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:311:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:315:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:315:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:320:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:320:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:324:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:324:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:329:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:329:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:331:2: Line length must be no more than 120 but current length is 127. [Error/max-line-length]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:331:38: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:335:5: 'removeAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:357:5: 'restoreAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:370:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:370:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:370:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:371:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:371:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:371:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:376:6: Function body contains 54 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:376:6: Function has cyclomatic complexity 12 but allowed no more than 7 [Warning/code-complexity]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:377:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:377:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:377:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:378:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:378:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:378:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:379:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:379:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:379:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:384:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:387:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:387:21: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:390:2: Line length must be no more than 120 but current length is 140. [Error/max-line-length]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:390:17: Error message for require is too long: 65 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:390:17: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:390:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:390:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:391:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:391:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:395:17: Provide an error message for require [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:395:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:396:17: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:396:17: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:396:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:396:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:400:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:403:2: Line length must be no more than 120 but current length is 182. [Error/max-line-length]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:405:33: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:421:2: Line length must be no more than 120 but current length is 140. [Error/max-line-length]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:421:17: Error message for require is too long: 65 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:421:17: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:421:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:421:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:433:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:438:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:438:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:438:113: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:441:5: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:445:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:451:15: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:455:5: 'swapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:467:2: Line length must be no more than 120 but current length is 127. [Error/max-line-length]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:478:5: 'sendETHToFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:496:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:496:5: Function openTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:497:23: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:502:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:502:5: Function enableToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:506:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:506:5: Function disableToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:507:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:511:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:511:5: Function disablePauseAbility() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:511:48: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:515:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:515:5: Function manualswap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:522:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:522:5: Function manualsend() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:529:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:529:5: Function manualSendToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:567:2: Line length must be no more than 120 but current length is 139. [Error/max-line-length]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:572:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:574:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:574:5: Function excludeFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:578:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:578:5: Function includeInFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:582:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:582:5: Function removeBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:586:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:586:5: Function addBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:590:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:590:5: Function setTransferTransactionMultiplier() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:594:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:594:5: Function setMaxWalletAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:595:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:595:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:595:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:595:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:596:9: Error message for require is too long: 48 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:596:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:596:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:596:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:600:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:600:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:600:5: Function setBuyTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:602:9: Error message for require is too long: 49 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:602:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:602:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:602:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:617:2: Line length must be no more than 120 but current length is 131. [Error/max-line-length]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:617:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:617:5: Function setSellTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:619:9: Error message for require is too long: 49 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:619:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:619:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:619:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:634:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:634:5: Function updateMaxSell() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:635:9: Error message for require is too long: 49 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:635:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:635:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:635:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:639:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:639:5: Function updateMaxBuy() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:640:9: Error message for require is too long: 49 counted / 32 allowed [Warning/reason-string]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:640:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:640:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:640:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:644:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:644:5: Function updateEcosystemAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:648:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:648:5: Function updateMarketingAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:652:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:652:5: Function updateTeamAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:656:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:656:5: Function updateLpRecipient() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:660:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0bbd9b0dbfd70529c81c71bc550ec6b6ceb98e61.sol:660:5: Function updateNumTokensToSwap() must match Foundry test naming convention [Warning/foundry-test-functions]

363 problem/s (12 error/s, 351 warning/s)
