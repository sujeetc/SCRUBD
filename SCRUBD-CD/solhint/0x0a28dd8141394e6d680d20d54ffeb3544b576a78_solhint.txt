./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:1:1: Found more than One contract per file. 5 contracts found! [Warning/one-contract-per-file]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:1:1: Compiler version ^0.4.21 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:23:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:29:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:40:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:42:5: Main key parameter in mapping userEtherOf is not named [Warning/named-parameters-mapping]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:42:5: Value parameter in mapping userEtherOf is not named [Warning/named-parameters-mapping]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:44:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:44:5: Function userRefund() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:48:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:48:30: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:48:30: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:52:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:56:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:56:5: Function setOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:60:5: Function order is incorrect, state variable declaration can not go after public  function (line 56) [Warning/ordering]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:62:5: 'lock' should start with _ [Warning/private-vars-leading-underscore]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:63:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:67:5: 'unLock' should start with _ [Warning/private-vars-leading-underscore]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:68:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:72:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:72:5: Function setLock() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:77:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:79:5: 'getEventId' should start with _ [Warning/private-vars-leading-underscore]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:79:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:81:9: GC: For [ currentEventId ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:84:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:84:5: Function setOfficialGameUrl() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:91:1: Function order is incorrect, interface can not go after contract definition (line 47) [Warning/ordering]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:92:5: Function profitOrgPay() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:92:37: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:96:5: Function mineToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:96:81: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:97:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:97:50: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:106:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:108:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:108:5: Function setStopPlay() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:111:20: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:114:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:114:5: Function userRefund() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:119:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:139:5: Function order is incorrect, state variable declaration can not go after internal  function (line 118) [Warning/ordering]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:139:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:139:5: 'maxShareholderEther' should start with _ [Warning/private-vars-leading-underscore]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:141:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:141:5: Function setMaxShareholderEther() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:142:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:142:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:143:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:143:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:147:5: 'autoCheckPayShareholder' should start with _ [Warning/private-vars-leading-underscore]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:153:5: 'checkPayShareholder' should start with _ [Warning/private-vars-leading-underscore]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:160:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:168:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:179:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:179:5: Function setMinBankerEther() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:180:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:180:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:181:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:181:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:188:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:190:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:190:5: Function depositEther() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:198:5: GC: [_sender] on Event [OnPayLoan] could be Indexed [Warning/gas-indexed-events]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:198:5: GC: [_eventTime] on Event [OnPayLoan] could be Indexed [Warning/gas-indexed-events]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:198:5: GC: [_toLoan] on Event [OnPayLoan] could be Indexed [Warning/gas-indexed-events]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:198:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:200:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:200:5: Function bidLoan() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:202:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:203:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:205:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:220:13: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:223:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:224:9: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:224:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:233:30: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:241:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:241:5: Function getCanLoanAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:245:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:263:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:263:5: Function calLoanAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:267:11: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:267:20: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:268:15: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:268:34: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:275:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:275:5: Function checkPayLoan() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:279:30: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:293:38: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:295:44: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:298:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:304:38: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:306:43: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:316:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:317:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:317:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:318:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:318:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:319:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:319:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:321:3: Function order is incorrect, struct definition can not go after state variable declaration (line 319) [Warning/ordering]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:321:3: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:323:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:324:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:324:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:325:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:325:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:326:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:327:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:328:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:328:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:329:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:331:3: Main key parameter in mapping playerBetInfoOf is not named [Warning/named-parameters-mapping]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:331:3: Value parameter in mapping playerBetInfoOf is not named [Warning/named-parameters-mapping]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:331:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:332:3: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:335:2: Line length must be no more than 120 but current length is 168. [Error/max-line-length]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:336:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:336:3: Function SelectOne() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:339:5: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:340:5: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:340:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:352:21: Use double quotes for string literals [Error/quotes]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:356:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:356:3: Function tokenOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:356:40: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:356:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:360:2: Line length must be no more than 120 but current length is 161. [Error/max-line-length]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:360:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:360:99: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:360:117: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:360:131: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:360:148: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:361:2: Line length must be no more than 120 but current length is 169. [Error/max-line-length]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:361:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:361:78: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:361:119: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:361:133: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:364:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:364:3: Function play() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:364:17: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:366:5: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:367:5: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:372:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:374:5: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:376:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:377:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:380:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:380:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:380:38: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:381:7: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:381:34: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:382:7: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:399:5: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:399:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:400:5: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:400:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:417:10: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:417:80: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:418:5: GC: For [ playNo ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:424:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:424:3: Function getAward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:424:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:425:5: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:427:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:427:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:427:40: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:432:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:432:3: Function has cyclomatic complexity 8 but allowed no more than 7 [Warning/code-complexity]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:433:5: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:436:5: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:437:5: Provide an error message for require [Warning/reason-string]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:440:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:445:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:445:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:445:39: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:452:8: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:455:8: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:457:49: Do not rely on "block.blockhash". Miners can influence its value. [Warning/not-rely-on-block-hash]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:458:7: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:461:7: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:461:11: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:461:41: GC: For [ n ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:477:10: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:481:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:481:3: Function getAwardNum() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:481:43: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:481:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:481:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:483:8: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:485:49: Do not rely on "block.blockhash". Miners can influence its value. [Warning/not-rely-on-block-hash]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:486:7: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:491:3: 'uintToString' should start with _ [Warning/private-vars-leading-underscore]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:491:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:491:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:493:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:495:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:497:7: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:499:16: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:502:10: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:502:29: GC: For [ j ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a28dd8141394e6d680d20d54ffeb3544b576a78.sol:509:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]

204 problem/s (5 error/s, 199 warning/s)
