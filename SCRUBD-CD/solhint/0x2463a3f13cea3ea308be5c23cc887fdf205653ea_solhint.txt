./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:19:2: Line length must be no more than 120 but current length is 139. [Error/max-line-length]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:20:2: Line length must be no more than 120 but current length is 139. [Error/max-line-length]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:21:2: Line length must be no more than 120 but current length is 139. [Error/max-line-length]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:22:2: Line length must be no more than 120 but current length is 139. [Error/max-line-length]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:23:2: Line length must be no more than 120 but current length is 139. [Error/max-line-length]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:24:2: Line length must be no more than 120 but current length is 157. [Error/max-line-length]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:27:1: Found more than One contract per file. 3 contracts found! [Warning/one-contract-per-file]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:30:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:30:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:31:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:31:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:32:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:32:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:33:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:33:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:34:5: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:34:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:35:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:35:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:36:5: Function order is incorrect, external  function can not go after external view function (line 35) [Warning/ordering]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:36:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:36:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:37:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:37:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:38:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:38:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:39:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:39:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:40:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:41:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:45:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:49:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:60:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:64:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 60) [Warning/ordering]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:69:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:69:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:74:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:77:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:81:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:82:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:82:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:82:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:95:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:100:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:100:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:101:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:101:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:101:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:103:5: Function order is incorrect, external  function can not go after external pure function (line 101) [Warning/ordering]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:103:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:106:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:107:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:108:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:109:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:111:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:112:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:112:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:112:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:114:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:116:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:117:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:118:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:120:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:121:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:121:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:121:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:123:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:124:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:125:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:128:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:131:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:132:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:135:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:138:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:139:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:140:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:143:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:148:1: Contract has 33 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:150:5: 'WETH' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:150:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:152:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:153:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:154:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:156:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:157:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:157:5: 'maxWallet' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:158:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:158:5: 'maxTransaction' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:164:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:164:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:165:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:166:5: Main key parameter in mapping isFeeExempt is not named [Warning/named-parameters-mapping]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:166:5: Value parameter in mapping isFeeExempt is not named [Warning/named-parameters-mapping]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:167:5: Main key parameter in mapping isWalletExempt is not named [Warning/named-parameters-mapping]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:167:5: Value parameter in mapping isWalletExempt is not named [Warning/named-parameters-mapping]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:168:5: Main key parameter in mapping isTxExempt is not named [Warning/named-parameters-mapping]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:168:5: Value parameter in mapping isTxExempt is not named [Warning/named-parameters-mapping]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:170:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:170:5: 'DEAD' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:170:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:171:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:171:5: 'ZERO' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:171:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:173:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:173:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:173:5: 'taxesCollected' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:179:5: 'buyMkt' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:180:5: 'sellMkt' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:181:5: 'buyLP' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:182:5: 'sellLP' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:183:5: 'buyDev' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:184:5: 'sellDev' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:186:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:187:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:195:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:195:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:205:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:229:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:231:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:231:5: Function changeIsFeeExempt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:235:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:235:5: Function changeIsWalletExempt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:239:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:239:5: Function changeIsTxExempt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:243:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:243:5: Function launchSequence() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:243:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:244:6: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:249:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:249:5: Function toggleTrade() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:253:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:253:5: Function toggleMaxBuy() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:257:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:257:5: Function changeMaxBuyAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:257:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:258:6: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:258:14: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:262:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:262:5: Function changeMaxWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:262:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:263:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:263:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:267:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:267:5: Function changeMaxTransaction() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:267:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:268:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:268:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:272:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:272:5: Function setMarketingWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:276:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:276:5: Function setDevWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:280:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:280:5: Function setLiquidityPool() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:284:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:284:5: Function changeSwapBackSettings() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:289:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:289:5: Function getCirculatingSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:289:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:293:5: Function order is incorrect, external view function can not go after public view function (line 289) [Warning/ordering]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:293:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:293:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:294:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:294:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:295:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:295:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:296:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:296:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:297:5: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:297:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:298:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:298:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:299:2: Line length must be no more than 120 but current length is 137. [Error/max-line-length]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:299:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:299:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:300:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:300:5: Function baseBuyFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:300:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:301:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:301:5: Function baseSellFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:301:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:303:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:303:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:309:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:309:5: Function approveMax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:309:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:313:5: 'addTaxCollected' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:313:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:313:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:313:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:319:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:319:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:323:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:323:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:331:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:331:5: Function has cyclomatic complexity 8 but allowed no more than 7 [Warning/code-complexity]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:332:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:332:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:332:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:333:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:333:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:333:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:334:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:334:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:334:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:335:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:339:13: Provide an error message for require [Warning/reason-string]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:339:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:342:44: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:342:52: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:343:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:343:57: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:346:2: Line length must be no more than 120 but current length is 136. [Error/max-line-length]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:346:80: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:351:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:359:5: 'takeFee' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:359:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:385:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:392:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:392:5: Function updateBuyFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:393:6: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:393:14: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:399:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:399:5: Function updateSellFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:400:6: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:400:14: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:406:5: 'swapTokensForETH' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:414:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:419:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:423:48: Function param name must be in mixedCase [Warning/func-param-name-mixedcase]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:423:5: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:423:48: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:424:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:430:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:434:5: 'swapBack' should start with _ [Warning/private-vars-leading-underscore]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:447:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:448:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:449:6: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:466:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:466:5: Function manualSwapBack() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:470:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:470:5: Function clearStuckETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:477:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:477:5: Function clearStuckTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:483:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:483:5: Function massDistributeTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:483:73: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:484:6: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:484:11: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:484:53: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:489:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:489:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:489:5: Function distributeTokensByAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:489:77: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:490:6: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:490:11: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x2463a3f13cea3ea308be5c23cc887fdf205653ea.sol:490:53: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]

256 problem/s (11 error/s, 245 warning/s)
