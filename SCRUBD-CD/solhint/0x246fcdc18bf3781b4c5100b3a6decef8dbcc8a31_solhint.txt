./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:19:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:26:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:27:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:37:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:43:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:43:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:47:5: Function order is incorrect, modifier definition can not go after public view function (line 43) [Warning/ordering]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:48:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:52:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:57:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:58:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:58:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:58:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:65:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:65:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:66:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:66:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:67:5: Function order is incorrect, external  function can not go after external view function (line 66) [Warning/ordering]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:67:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:67:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:68:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:68:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:69:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:69:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:70:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:70:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:76:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:77:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:81:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:92:5: Function order is incorrect, internal  function can not go after internal view function (line 81) [Warning/ordering]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:92:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:93:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:93:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:100:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:104:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:104:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:108:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:109:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:112:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:112:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:113:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:113:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:113:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:113:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:117:2: Line length must be no more than 120 but current length is 149. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:117:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:118:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:142:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:142:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:142:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:144:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:144:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:145:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:145:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:147:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:148:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:148:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:149:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:149:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:149:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:151:5: Function order is incorrect, external  function can not go after external view function (line 149) [Warning/ordering]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:151:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:153:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:154:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:158:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:158:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:159:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:159:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:161:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:161:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:162:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:162:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:163:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:163:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:164:5: Function order is incorrect, external view function can not go after external pure function (line 163) [Warning/ordering]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:164:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:164:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:164:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:165:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:165:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:165:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:166:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:166:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:166:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:168:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:168:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:168:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:169:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:169:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:169:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:170:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:170:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:170:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:172:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:172:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:172:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:173:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:173:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:173:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:174:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:174:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:174:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:176:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:176:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:176:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:178:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:178:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:178:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:178:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:179:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:179:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:179:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:179:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:181:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:182:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:183:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:184:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:187:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:187:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:189:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:189:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:189:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:189:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:190:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:190:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:191:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:191:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:192:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:192:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:193:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:194:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:194:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:194:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:195:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:195:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:195:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:196:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:196:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:196:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:198:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:198:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:198:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:199:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:199:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:199:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:200:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:201:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:203:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:207:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:207:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:208:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:208:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:208:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:210:5: Function order is incorrect, external  function can not go after external pure function (line 208) [Warning/ordering]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:210:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:213:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:214:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:215:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:216:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:218:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:219:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:219:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:219:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:220:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:222:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:223:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:224:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:226:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:227:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:227:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:227:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:228:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:231:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:232:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:233:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:235:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:236:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:236:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:237:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:239:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:240:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:241:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:243:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:244:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:244:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:245:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:248:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:249:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:250:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:252:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:254:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:254:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:255:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:257:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:258:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:259:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:261:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:263:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:263:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:264:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:265:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:266:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:269:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:270:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:271:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:272:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:273:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:276:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:277:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:278:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:278:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:278:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:281:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:282:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:282:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:282:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:282:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:284:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:285:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:285:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:285:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:285:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:287:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:288:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:288:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:288:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:291:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:293:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:293:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:293:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:293:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:293:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:294:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:294:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:294:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:294:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:294:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:295:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:295:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:295:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:295:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:295:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:296:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:296:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:296:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:297:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:297:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:297:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:301:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:303:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:304:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:305:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:307:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:308:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:309:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:311:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:312:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:313:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:315:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:317:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:319:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:320:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:321:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:324:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:326:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:327:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:330:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:332:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:333:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:334:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:337:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:341:1: Contract has 31 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:345:5: Main key parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:345:5: Value parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:346:5: Main key parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:346:5: Value parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:347:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:349:5: Main key parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:349:5: Value parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:350:5: Main key parameter in mapping _isExcluded is not named [Warning/named-parameters-mapping]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:350:5: Value parameter in mapping _isExcluded is not named [Warning/named-parameters-mapping]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:357:5: 'MAX' should start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:371:5: '_taxFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:372:5: '_buybackBurnFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:373:5: '_marketingFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:382:5: 'DEAD' should start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:387:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:392:5: GC: [isExcluded] on Event [ExcludeFromFees] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:393:5: GC: [marketingWallet] on Event [MarketingWalletChanged] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:394:5: GC: [enabled] on Event [SwapEnabledUpdated] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:395:5: GC: [tokensSwapped] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:395:5: GC: [bnbReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:395:5: GC: [tokensIntoLiqudity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:396:5: GC: [tokensSwapped] on Event [SwapAndSendMarketing] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:396:5: GC: [bnbSend] on Event [SwapAndSendMarketing] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:397:5: GC: [amount] on Event [SwapTokensAtAmountUpdated] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:398:5: GC: [taxFee] on Event [BuyFeesChanged] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:398:5: GC: [buybackBurnFee] on Event [BuyFeesChanged] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:398:5: GC: [marketingFee] on Event [BuyFeesChanged] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:399:5: GC: [taxFee] on Event [SellFeesChanged] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:399:5: GC: [buybackBurnFee] on Event [SellFeesChanged] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:399:5: GC: [marketingFee] on Event [SellFeesChanged] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:400:5: GC: [enabled] on Event [WalletToWalletTransferWithoutFeeEnabled] could be Indexed [Warning/gas-indexed-events]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:402:5: Function body contains 51 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:402:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:412:13: Provide an error message for revert [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:412:13: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:456:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:456:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:456:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:460:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:460:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:460:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:464:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:464:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:464:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:468:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:468:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:472:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:472:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:477:5: Function order is incorrect, public  function can not go after public view function (line 472) [Warning/ordering]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:477:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:477:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:482:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:482:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:486:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:486:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:491:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:491:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:497:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:497:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:497:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:502:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:502:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:502:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:507:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:507:5: Function isExcludedFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:507:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:511:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:511:5: Function totalReflectionDistributed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:511:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:515:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:515:5: Function deliver() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:517:9: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:517:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:517:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:524:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:524:5: Function reflectionFromToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:524:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:525:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:525:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:535:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:535:5: Function tokenFromReflection() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:535:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:536:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:536:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:536:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:536:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:541:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:541:5: Function excludeFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:542:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:550:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:550:5: Function includeInReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:551:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:552:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:552:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:563:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:565:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:565:5: Function claimStuckTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:566:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:571:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:581:2: Line length must be no more than 120 but current length is 127. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:581:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:581:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:581:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:581:5: GC: Named return value is missing - Index 3 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:581:5: GC: Named return value is missing - Index 4 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:581:5: GC: Named return value is missing - Index 5 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:581:5: GC: Named return value is missing - Index 6 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:583:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:583:68: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:587:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:587:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:587:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:587:5: GC: Named return value is missing - Index 3 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:595:2: Line length must be no more than 120 but current length is 169. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:595:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:595:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:595:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:604:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:609:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:609:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:612:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:612:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:641:5: 'calculateTaxFee' should start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:641:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:645:5: 'calculateLiquidityFee' should start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:645:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:649:5: 'calculateMarketingFee' should start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:649:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:653:5: 'removeAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:661:5: 'setBuyFee' should start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:662:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:669:5: 'setSellFee' should start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:670:2: Line length must be no more than 120 but current length is 125. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:677:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:677:5: Function isExcludedFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:677:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:682:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:682:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:682:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:683:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:683:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:683:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:689:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:689:5: Function enableTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:690:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:694:5: Function body contains 57 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:699:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:699:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:699:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:700:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:700:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:700:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:703:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:707:36: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:722:13: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:727:17: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:754:5: 'buybackAndBurn' should start with _ [Warning/private-vars-leading-underscore]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:763:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:767:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:767:5: Function setSwapTokensAtAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:768:9: Error message for require is too long: 62 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:768:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:768:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:773:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:773:5: Function setSwapEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:778:5: Function has cyclomatic complexity 9 but allowed no more than 7 [Warning/code-complexity]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:808:2: Line length must be no more than 120 but current length is 168. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:818:2: Line length must be no more than 120 but current length is 168. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:829:2: Line length must be no more than 120 but current length is 168. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:840:2: Line length must be no more than 120 but current length is 168. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:851:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:851:5: Function excludeFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:852:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:852:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:852:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:858:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:858:5: Function changeMarketingWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:859:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:859:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:859:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:860:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:860:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:860:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:865:2: Line length must be no more than 120 but current length is 134. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:865:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:865:5: Function setBuyFeePercentages() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:870:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:870:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:870:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:870:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:874:2: Line length must be no more than 120 but current length is 138. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:874:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:874:5: Function setSellFeePercentages() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:879:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:879:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:879:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:879:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:883:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:883:5: Function enableWalletToWalletTransferWithoutFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:884:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:884:9: Error message for require is too long: 66 counted / 32 allowed [Warning/reason-string]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:884:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31.sol:884:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]

475 problem/s (16 error/s, 459 warning/s)
