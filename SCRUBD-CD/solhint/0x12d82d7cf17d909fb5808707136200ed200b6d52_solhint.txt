./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:4:1: Found more than One contract per file. 14 contracts found! [Warning/one-contract-per-file]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:4:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:36:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:36:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:42:5: Function feeAmountTickSpacing() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:42:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:50:5: Function getPool() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:64:5: Function order is incorrect, external  function can not go after external view function (line 50) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:64:5: Function createPool() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:73:5: Function setOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:79:5: Function enableFeeAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:84:1: Function order is incorrect, pragma directive can not go after interface (line 8) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:84:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:87:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:87:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:87:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:89:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:89:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:90:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:90:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:92:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:93:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:93:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:94:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:94:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:94:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:96:5: Function order is incorrect, external  function can not go after external view function (line 94) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:96:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:98:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:99:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:107:1: Interface name 'AggregatorV3Interface' must start with "I" [Warning/interface-starts-with-i]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:108:3: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:108:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:110:3: Function description() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:110:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:112:3: Function version() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:112:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:114:3: Function getRoundData() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:125:3: Function latestRoundData() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:142:1: Interface name 'AggregatorInterface' must start with "I" [Warning/interface-starts-with-i]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:143:3: Function latestAnswer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:143:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:145:3: Function latestTimestamp() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:145:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:147:3: Function latestRound() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:147:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:149:3: Function getAnswer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:149:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:151:3: Function getTimestamp() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:151:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:153:3: Function order is incorrect, event definition can not go after external view function (line 151) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:153:3: GC: [updatedAt] on Event [AnswerUpdated] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:155:3: GC: [startedAt] on Event [NewRound] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:165:1: Code contains empty blocks [Warning/no-empty-blocks]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:165:1: Interface name 'AggregatorV2V3Interface' must start with "I" [Warning/interface-starts-with-i]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:174:1: Interface name 'FeedRegistryInterface' must start with "I" [Warning/interface-starts-with-i]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:199:3: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:199:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:201:3: Function description() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:201:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:203:3: Function version() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:203:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:205:3: Function latestRoundData() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:216:3: Function getRoundData() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:233:3: Function latestAnswer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:235:3: Function latestTimestamp() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:237:3: Function latestRound() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:239:3: Function getAnswer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:245:3: Function getTimestamp() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:253:3: Function getFeed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:255:3: Function getPhaseFeed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:261:3: Function isFeedEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:261:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:263:3: Function getPhase() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:271:3: Function getRoundFeed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:277:3: Function getPhaseRange() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:283:3: Function getPreviousRoundId() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:289:3: Function getNextRoundId() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:297:3: Function order is incorrect, external  function can not go after external view function (line 289) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:297:3: Function proposeFeed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:303:3: Function confirmFeed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:311:3: Function getProposedFeed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:316:3: Function proposedGetRoundData() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:331:3: Function proposedLatestRoundData() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:343:3: Function getCurrentPhaseId() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:349:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:356:5: Function order is incorrect, struct definition can not go after state variable declaration (line 353) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:367:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:381:9: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:381:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:401:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:410:5: GC: [sqrtPriceX96] on Event [Initialize] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:410:5: GC: [tick] on Event [Initialize] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:471:5: GC: [amount0] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:471:5: GC: [amount1] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:471:5: GC: [sqrtPriceX96] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:471:5: GC: [liquidity] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:471:5: GC: [tick] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:488:5: GC: [amount0] on Event [Flash] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:488:5: GC: [amount1] on Event [Flash] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:488:5: GC: [paid0] on Event [Flash] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:488:5: GC: [paid1] on Event [Flash] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:502:5: GC: [observationCardinalityNextOld] on Event [IncreaseObservationCardinalityNext] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:502:5: GC: [observationCardinalityNextNew] on Event [IncreaseObservationCardinalityNext] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:512:5: GC: [feeProtocol0Old] on Event [SetFeeProtocol] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:512:5: GC: [feeProtocol1Old] on Event [SetFeeProtocol] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:512:5: GC: [feeProtocol0New] on Event [SetFeeProtocol] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:512:5: GC: [feeProtocol1New] on Event [SetFeeProtocol] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:519:5: GC: [amount0] on Event [CollectProtocol] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:519:5: GC: [amount1] on Event [CollectProtocol] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:525:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:533:5: Function setFeeProtocol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:541:5: Function collectProtocol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:551:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:559:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:570:2: Line length must be no more than 120 but current length is 131. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:571:2: Line length must be no more than 120 but current length is 131. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:572:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:592:5: Function collect() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:608:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:618:2: Line length must be no more than 120 but current length is 145. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:624:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:640:5: Function flash() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:651:5: Function increaseObservationCardinalityNext() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:657:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:663:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:664:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:665:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:671:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:673:5: Function observe() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:687:5: Function snapshotCumulativesInside() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:700:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:719:5: Function slot0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:732:2: Line length must be no more than 120 but current length is 123. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:734:5: Function feeGrowthGlobal0X128() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:734:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:736:2: Line length must be no more than 120 but current length is 123. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:738:5: Function feeGrowthGlobal1X128() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:738:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:742:5: Function protocolFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:746:5: Function liquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:746:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:756:2: Line length must be no more than 120 but current length is 123. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:758:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:762:5: Function ticks() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:777:5: Function tickBitmap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:777:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:786:5: Function positions() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:799:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:802:2: Line length must be no more than 120 but current length is 127. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:803:2: Line length must be no more than 120 but current length is 142. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:805:5: Function observations() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:819:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:826:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:826:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:830:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:830:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:834:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:834:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:838:5: Function fee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:838:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:845:5: Function tickSpacing() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:845:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:851:5: Function maxLiquidityPerTick() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:851:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:857:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:869:1: Code contains empty blocks [Warning/no-empty-blocks]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:893:5: Function order is incorrect, state variable declaration can not go after custom error definition (line 890) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:905:2: Line length must be no more than 120 but current length is 125. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:907:5: Function has cyclomatic complexity 22 but allowed no more than 7 [Warning/code-complexity]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:949:5: Function body contains 144 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:952:19: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:958:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:963:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:968:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:973:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:978:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:983:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:988:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:993:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:998:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1001:13: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1003:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1009:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1015:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1021:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1027:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1033:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1039:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1045:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1051:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1057:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1063:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1069:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1075:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1081:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1087:13: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1092:50: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1102:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1103:2: Line length must be no more than 120 but current length is 123. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1105:2: Line length must be no more than 120 but current length is 127. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1111:5: Function body contains 93 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1124:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1132:17: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1132:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1133:17: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1141:13: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1141:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1150:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1154:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1164:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1169:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1175:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1207:2: Line length must be no more than 120 but current length is 126. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1220:17: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1220:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1221:17: GC: For [ result ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1229:1: Compiler version >=0.5.0 <0.9.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1247:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1247:34: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1262:98: GC: For [ arithmeticMeanTick ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1284:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1300:5: Function order is incorrect, internal view function can not go after internal pure function (line 1275) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1302:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1302:45: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1315:33: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1322:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1322:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1326:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1326:45: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1337:44: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1349:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1349:34: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1369:2: Line length must be no more than 120 but current length is 134. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1384:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1384:54: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1391:70: GC: For [ weightedArithmeticMeanTick ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1394:2: Line length must be no more than 120 but current length is 123. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1405:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1405:52: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1406:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1406:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1406:48: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1416:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1430:5: Function uniswapV3SwapCallback() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1440:1: Compiler version >=0.7.5 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1446:5: GC: For [ ExactInputSingleParams ] struct, packing seems inefficient. Try rearranging to achieve 32bytes slots [Warning/gas-struct-packing]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1460:5: Function exactInputSingle() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1462:5: Function order is incorrect, struct definition can not go after external payable function (line 1460) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1473:5: Function exactInput() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1475:5: GC: For [ ExactOutputSingleParams ] struct, packing seems inefficient. Try rearranging to achieve 32bytes slots [Warning/gas-struct-packing]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1489:5: Function exactOutputSingle() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1502:5: Function exactOutput() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1506:1: Compiler version >=0.6.2 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1509:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1509:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1510:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1510:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1510:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1512:5: Function order is incorrect, external  function can not go after external pure function (line 1510) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1512:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1515:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1516:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1517:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1518:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1520:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1521:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1521:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1521:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1522:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1524:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1525:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1526:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1528:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1529:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1529:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1529:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1530:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1533:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1534:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1535:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1537:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1538:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1538:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1539:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1541:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1542:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1543:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1545:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1546:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1546:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1547:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1550:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1551:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1552:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1554:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1556:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1556:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1557:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1559:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1560:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1561:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1563:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1565:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1565:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1566:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1567:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1568:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1571:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1572:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1573:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1574:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1575:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1578:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1579:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1580:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1580:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1580:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1583:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1584:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1584:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1584:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1584:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1586:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1587:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1587:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1587:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1587:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1589:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1590:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1590:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1590:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1593:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1595:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1595:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1595:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1595:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1595:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1596:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1596:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1596:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1596:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1596:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1597:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1597:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1597:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1597:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1597:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1598:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1598:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1598:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1599:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1599:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1599:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1604:1: Compiler version >=0.6.2 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1608:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1610:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1611:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1612:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1614:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1615:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1616:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1618:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1619:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1620:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1622:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1624:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1626:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1627:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1628:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1631:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1633:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1634:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1637:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1639:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1640:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1641:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1644:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1665:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1675:13: GC: For [ digits ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1680:13: GC: For [ digits ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1690:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1697:13: GC: For [ length ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1706:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1714:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1719:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1721:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1728:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1731:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1731:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1732:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1732:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1734:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1734:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1735:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1735:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1736:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1736:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1737:5: Function order is incorrect, external view function can not go after external pure function (line 1736) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1737:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1737:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1737:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1738:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1738:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1738:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1739:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1739:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1739:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1741:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1741:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1741:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1742:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1742:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1742:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1743:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1743:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1743:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1745:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1745:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1745:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1746:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1746:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1746:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1747:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1747:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1747:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1749:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1749:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1749:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1751:5: GC: [amount0] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1751:5: GC: [amount1] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1751:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1751:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1752:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1752:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1752:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1752:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1753:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1753:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1753:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1753:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1755:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1756:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1757:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1758:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1761:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1761:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1763:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1763:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1763:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1763:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1764:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1764:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1765:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1765:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1766:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1766:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1767:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1768:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1768:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1768:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1769:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1769:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1769:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1770:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1770:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1770:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1772:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1772:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1773:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1773:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1773:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1774:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1774:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1774:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1775:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1776:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1778:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1818:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1840:2: Line length must be no more than 120 but current length is 160. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1842:5: Function order is incorrect, internal  function can not go after internal view function (line 1818) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1843:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1843:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1846:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1846:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1846:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1858:2: Line length must be no more than 120 but current length is 156. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1867:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1877:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1896:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1901:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1910:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1916:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1916:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1916:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1916:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1917:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1929:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1930:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1939:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1944:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1944:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1944:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1956:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1957:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1966:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1971:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1971:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1971:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1973:51: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1983:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:1995:17: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2029:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2029:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2042:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2042:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2054:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2054:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2071:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2071:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2083:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2083:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2100:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2114:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2128:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2142:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2158:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2175:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2181:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2181:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2198:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2204:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2224:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2230:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2238:1: Compiler version >=0.5.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2247:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2247:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2247:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2247:35: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2249:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2249:39: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2255:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2264:2: Line length must be no more than 120 but current length is 128. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2264:5: Function order is incorrect, internal view function can not go after internal pure function (line 2253) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2264:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2264:113: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2266:10: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2266:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2271:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2271:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2271:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2271:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2272:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2272:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2272:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2272:30: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2273:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2273:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2273:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2273:47: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2278:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2278:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2278:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2278:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2279:9: Error message for require is too long: 43 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2279:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2279:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2279:31: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2280:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2280:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2280:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2280:50: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2281:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2282:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2283:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2288:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2288:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2288:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2288:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2289:9: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2289:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2289:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2289:32: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2290:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2290:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2290:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2290:50: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2291:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2292:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2297:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2297:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2297:106: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2298:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2298:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2298:35: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2299:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2301:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2301:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2301:43: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2302:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2302:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2308:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2308:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2308:106: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2309:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2309:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2309:35: Use double quotes for string literals [Error/quotes]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2310:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2312:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2312:47: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2313:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2313:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2336:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2340:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2373:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2380:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 2373) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2388:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2388:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2396:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2406:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2414:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2415:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2415:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2415:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2447:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2453:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2458:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2458:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2463:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2463:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2472:5: Function order is incorrect, external  function can not go after external view function (line 2463) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2472:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2472:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2481:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2481:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2497:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2497:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2508:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2508:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2532:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2532:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2537:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2537:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2542:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2542:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2581:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2581:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2583:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2599:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2607:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2607:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2615:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2615:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2632:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2632:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2639:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2639:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2646:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2646:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2658:5: Function order is incorrect, public  function can not go after public view function (line 2646) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2658:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2658:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2667:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2667:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2681:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2681:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2703:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2703:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2726:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2726:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2726:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2746:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2746:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2746:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2749:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2749:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2749:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2749:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2776:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2776:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2776:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2777:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2777:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2777:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2782:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2782:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2782:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2782:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2803:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2826:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2826:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2826:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2831:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2831:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2831:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2831:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2860:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2860:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2860:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2861:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2861:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2861:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2882:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2882:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2907:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2927:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2950:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2965:5: Function burnFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2993:9: Function deposit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2994:9: Function withdraw() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2994:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:2998:5: Function collectFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3002:5: '_feeHandlerAddress' should not start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3002:5: Function _feeHandlerAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3002:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3006:1: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3013:1: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3013:1: GC: For [ userInteractionInfo ] struct, packing seems inefficient. Try rearranging to achieve 32bytes slots [Warning/gas-struct-packing]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3020:1: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3030:1: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3039:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3039:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3041:5: Function getContractTotalBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3041:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3044:13: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3044:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3044:54: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3046:2: Line length must be no more than 120 but current length is 195. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3048:2: Line length must be no more than 120 but current length is 195. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3055:5: Function isTokenHeld() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3055:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3059:13: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3059:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3059:54: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3068:5: Function order is incorrect, public view function can not go after public pure function (line 3055) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3068:5: Function getInAndOutTokenAndPack() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3068:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3068:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3068:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3072:9: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3072:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3072:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3078:2: Line length must be no more than 120 but current length is 156. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3082:2: Line length must be no more than 120 but current length is 202. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3086:2: Line length must be no more than 120 but current length is 248. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3094:5: Function reverseArray() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3094:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3097:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3098:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3098:30: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3098:38: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3100:13: GC: For [ j ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3105:5: Function getQuoteV2() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3105:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3108:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3108:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3108:42: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3116:2: Line length must be no more than 120 but current length is 155. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3118:2: Line length must be no more than 120 but current length is 154. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3128:4: Function getQuoteV3() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3128:4: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3131:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3131:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3151:5: Function sqrtPriceX96ToUint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3151:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3157:5: Function getInToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3157:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3166:5: Function getOutToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3166:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3178:5: Event name must be in CamelCase [Warning/event-name-camelcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3178:5: GC: [from] on Event [poolRemovedFrom] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3178:5: GC: [poolTokensBurned] on Event [poolRemovedFrom] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3178:5: GC: [ethReceived] on Event [poolRemovedFrom] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3184:5: Event name must be in CamelCase [Warning/event-name-camelcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3184:5: GC: [tokenIn] on Event [tokensSwapped] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3184:5: GC: [tokenOut] on Event [tokensSwapped] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3184:5: GC: [tokenInAmount] on Event [tokensSwapped] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3184:5: GC: [tokenOutAmount] on Event [tokensSwapped] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3191:5: Event name must be in CamelCase [Warning/event-name-camelcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3191:5: GC: [from] on Event [feePaidToOwner] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3191:5: GC: [to] on Event [feePaidToOwner] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3191:5: GC: [amount] on Event [feePaidToOwner] could be Indexed [Warning/gas-indexed-events]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3197:5: Event name must be in CamelCase [Warning/event-name-camelcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3201:5: Function order is incorrect, using for declaration can not go after event definition (line 3197) [Warning/ordering]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3203:5: '_tokensHeld' should not start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3204:5: '_riskLevel' should not start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3205:5: '_poolFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3205:5: Immutable variables name are set to be in capitalized SNAKE_CASE [Warning/immutable-vars-naming]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3206:5: '_factoryFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3207:5: '_factoryAddress' should not start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3207:5: Immutable variables name are set to be in capitalized SNAKE_CASE [Warning/immutable-vars-naming]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3208:5: '_transactionFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3208:5: Immutable variables name are set to be in capitalized SNAKE_CASE [Warning/immutable-vars-naming]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3209:2: Line length must be no more than 120 but current length is 259. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3210:5: 'swapRouter' should start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3210:5: Immutable variables name are set to be in capitalized SNAKE_CASE [Warning/immutable-vars-naming]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3211:5: 'uniswapV2Router' should start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3211:5: Immutable variables name are set to be in capitalized SNAKE_CASE [Warning/immutable-vars-naming]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3212:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3212:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3212:5: 'WETHAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3213:5: '_totalHolders' should not start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3214:5: '_userActions' should not start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3215:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3215:5: 'acceptingNewDeposits' should start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3219:2: Line length must be no more than 120 but current length is 172. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3219:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3232:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3232:5: Function getAllTokensHeld() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3232:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3236:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3236:5: Function getUserActionsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3236:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3240:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3240:5: Function getContractTotalBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3240:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3247:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3247:5: '_removeAddressFromTokensHeld' should not start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3247:5: Function _removeAddressFromTokensHeld() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3248:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3248:9: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3248:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3252:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3252:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3252:50: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3260:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3260:5: Function crashProtect() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3261:9: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3261:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3262:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3262:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3262:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3264:13: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3264:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3264:59: GC: For [ idx ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3270:13: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3270:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3271:2: Line length must be no more than 120 but current length is 126. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3275:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3275:5: Function removeOrder() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3276:14: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3277:9: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3277:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3283:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3283:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3283:62: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3289:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3289:5: Function changeDepositAcceptance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3293:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3293:5: Function submitOrder() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3295:13: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3295:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3296:13: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3296:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3297:13: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3301:13: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3301:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3301:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3302:13: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3302:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3305:2: Line length must be no more than 120 but current length is 133. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3308:5: Function body contains 106 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3308:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3308:5: Function processUserTransactions() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3308:5: Function has cyclomatic complexity 19 but allowed no more than 7 [Warning/code-complexity]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3309:9: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3309:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3315:51: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3317:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3317:47: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3319:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3319:55: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3320:2: Line length must be no more than 120 but current length is 125. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3320:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3321:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3323:2: Line length must be no more than 120 but current length is 128. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3326:2: Line length must be no more than 120 but current length is 193. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3329:25: GC: For [ _totalHolders ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3335:2: Line length must be no more than 120 but current length is 236. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3335:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3335:55: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3335:74: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3335:164: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3338:21: GC: For [ processingInfo ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3340:25: GC: For [ _totalHolders ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3355:17: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3355:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3355:58: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3356:21: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3356:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3360:2: Line length must be no more than 120 but current length is 191. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3362:2: Line length must be no more than 120 but current length is 191. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3364:2: Line length must be no more than 120 but current length is 227. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3365:2: Line length must be no more than 120 but current length is 140. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3366:21: GC: For [ tokensProcessed ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3369:2: Line length must be no more than 120 but current length is 135. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3371:2: Line length must be no more than 120 but current length is 250. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3377:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3377:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3379:2: Line length must be no more than 120 but current length is 153. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3386:2: Line length must be no more than 120 but current length is 184. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3386:13: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3389:17: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3389:22: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3389:65: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3390:21: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3390:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3391:2: Line length must be no more than 120 but current length is 301. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3402:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3402:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3404:2: Line length must be no more than 120 but current length is 163. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3409:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3418:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3418:5: Function removeFromPoolInstantly() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3419:9: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3419:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3420:9: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3420:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3421:9: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3421:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3421:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3422:9: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3422:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3427:13: GC: For [ _totalHolders ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3432:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3432:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3432:57: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3433:13: Provide an error message for require [Warning/reason-string]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3433:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3450:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3461:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3461:23: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3463:5: 'processFee' should start with _ [Warning/private-vars-leading-underscore]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3469:2: Line length must be no more than 120 but current length is 204. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3469:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3469:5: Function swapTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3475:13: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3475:13: Variable "WETHRecieved" is unused [Warning/no-unused-vars]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3481:2: Line length must be no more than 120 but current length is 143. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3481:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3491:2: Line length must be no more than 120 but current length is 158. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3494:2: Line length must be no more than 120 but current length is 151. [Error/max-line-length]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3501:13: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3506:17: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3511:58: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x12d82d7cf17d909fb5808707136200ed200b6d52.sol:3514:17: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]

946 problem/s (89 error/s, 857 warning/s)
