./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:1:1: Compiler version 0.4.24 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:3:1: Interface name 'tokenInterface' must start with "I" [Warning/interface-starts-with-i]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:3:1: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:4:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:4:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:5:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:5:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:8:1: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:14:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:16:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:23:5: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:24:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:27:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:34:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:45:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:45:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:45:41: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:58:5: Function order is incorrect, event definition can not go after modifier definition (line 43) [Warning/ordering]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:59:5: GC: [id] on Event [TxnSumbitted] could be Indexed [Warning/gas-indexed-events]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:59:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:60:5: GC: [id] on Event [TxnConfirmed] could be Indexed [Warning/gas-indexed-events]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:60:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:61:5: Event name must be in CamelCase [Warning/event-name-camelcase]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:61:5: GC: [value] on Event [topUpBalance] could be Indexed [Warning/gas-indexed-events]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:61:24: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:62:5: Event name must be in CamelCase [Warning/event-name-camelcase]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:62:5: GC: [id] on Event [tokenTxnConfirmed] could be Indexed [Warning/gas-indexed-events]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:62:5: GC: [owner] on Event [tokenTxnConfirmed] could be Indexed [Warning/gas-indexed-events]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:62:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:63:5: Event name must be in CamelCase [Warning/event-name-camelcase]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:63:5: GC: [token] on Event [tokenTxnExecuted] could be Indexed [Warning/gas-indexed-events]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:63:5: GC: [value] on Event [tokenTxnExecuted] could be Indexed [Warning/gas-indexed-events]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:63:5: GC: [reciever] on Event [tokenTxnExecuted] could be Indexed [Warning/gas-indexed-events]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:69:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:71:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:71:5: 'logs' should start with _ [Warning/private-vars-leading-underscore]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:72:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:72:5: 'transactions' should start with _ [Warning/private-vars-leading-underscore]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:73:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:73:5: 'tokenTransactions' should start with _ [Warning/private-vars-leading-underscore]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:74:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:79:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:79:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:81:9: Provide an error message for require [Warning/reason-string]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:84:9: Provide an error message for require [Warning/reason-string]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:84:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:95:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:103:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:103:5: Function getOwners() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:103:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:107:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:107:5: Function getTxnNum() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:107:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:107:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:111:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:111:5: Function getTxn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:111:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:111:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:111:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:111:5: GC: Named return value is missing - Index 3 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:111:5: GC: Named return value is missing - Index 4 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:111:5: GC: Named return value is missing - Index 5 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:111:5: GC: Named return value is missing - Index 6 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:111:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:111:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:111:69: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:116:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:116:5: Function getLogsNum() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:116:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:116:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:120:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:120:5: Function getLog() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:120:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:120:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:120:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:120:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:124:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:124:5: Function getTokenTxnNum() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:124:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:124:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:128:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:128:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:128:5: Function getTokenTxn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:128:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:128:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:128:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:128:5: GC: Named return value is missing - Index 3 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:128:5: GC: Named return value is missing - Index 4 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:128:5: GC: Named return value is missing - Index 5 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:128:5: GC: Named return value is missing - Index 6 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:128:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:128:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:137:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:137:5: Function topBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:138:9: Provide an error message for require [Warning/reason-string]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:142:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:142:23: GC: For [ logs ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:148:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:148:5: Function submitTransaction() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:148:93: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:148:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:148:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:149:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:149:24: GC: For [ transactions ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:163:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:163:5: Function confirmTransaction() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:163:56: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:163:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:163:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:168:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:168:50: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:174:9: Provide an error message for require [Warning/reason-string]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:187:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:187:5: Function executeTxn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:187:48: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:187:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:187:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:192:9: Provide an error message for require [Warning/reason-string]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:195:9: Provide an error message for require [Warning/reason-string]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:195:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:199:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:201:16: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:201:16: Avoid to use ".call.value()()" [Warning/avoid-call-value]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:213:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:213:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:213:5: Function submitTokenTransaction() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:213:105: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:213:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:213:80: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:214:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:214:24: GC: For [ tokenTransactions ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:227:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:227:5: Function confirmTokenTransaction() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:227:61: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:227:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:227:38: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:232:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:232:50: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:238:9: Provide an error message for require [Warning/reason-string]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:251:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:251:5: Function executeTokenTxn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:251:53: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:251:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:251:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:256:9: Provide an error message for require [Warning/reason-string]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:260:9: Provide an error message for require [Warning/reason-string]
./0x0a42ef719ee77820993b27369089ae2c6bd6ced5.sol:260:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]

147 problem/s (3 error/s, 144 warning/s)
