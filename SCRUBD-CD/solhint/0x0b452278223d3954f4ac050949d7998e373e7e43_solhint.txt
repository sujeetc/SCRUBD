./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:5:1: Found more than One contract per file. 3 contracts found! [Warning/one-contract-per-file]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:5:1: Compiler version >=0.6.0 <0.9.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:12:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:13:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:26:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:26:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:31:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:31:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:40:5: Function order is incorrect, external  function can not go after external view function (line 31) [Warning/ordering]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:40:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:40:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:49:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:49:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:65:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:65:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:76:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:76:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:88:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:94:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:98:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:109:5: Function order is incorrect, internal  function can not go after internal view function (line 98) [Warning/ordering]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:110:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:110:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:114:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:114:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:114:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:117:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:121:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:121:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:126:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:127:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:130:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:130:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:131:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:131:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:131:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:131:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:135:2: Line length must be no more than 120 but current length is 149. [Error/max-line-length]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:135:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:136:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:160:5: GC: [lpPair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:160:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:160:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:161:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:162:5: Function order is incorrect, external  function can not go after external view function (line 161) [Warning/ordering]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:162:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:166:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:166:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:167:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:167:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:167:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:168:5: Function order is incorrect, external payable function can not go after external pure function (line 167) [Warning/ordering]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:168:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:170:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:171:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:172:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:174:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:175:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:175:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:175:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:179:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:181:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:182:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:183:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:185:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:186:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:187:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:189:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:190:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:191:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:193:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:195:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:197:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:198:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:199:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:202:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:204:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:205:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:208:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:210:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:211:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:212:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:215:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:219:1: Contract has 62 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:223:5: Main key parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:223:5: Value parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:224:5: Main key parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:224:5: Value parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:225:5: Main key parameter in mapping lpPairs is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:225:5: Value parameter in mapping lpPairs is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:225:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:225:5: 'lpPairs' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:226:5: 'timeSinceLastPair' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:227:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:229:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:229:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:230:5: Main key parameter in mapping _isExcluded is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:230:5: Value parameter in mapping _isExcluded is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:233:5: Main key parameter in mapping _liquidityHolders is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:233:5: Value parameter in mapping _liquidityHolders is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:235:5: 'startingSupply' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:240:5: '_reflectFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:241:5: '_liquidityFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:242:5: '_marketingFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:244:5: '_buyReflectFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:245:5: '_buyLiquidityFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:246:5: '_buyMarketingFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:248:5: '_sellReflectFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:249:5: '_sellLiquidityFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:250:5: '_sellMarketingFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:252:5: '_transferReflectFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:253:5: '_transferLiquidityFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:254:5: '_transferMarketingFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:256:5: 'maxReflectFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:257:5: 'maxLiquidityFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:258:5: 'maxMarketingFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:260:5: '_liquidityRatio' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:261:5: '_marketingRatio' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:263:5: 'masterTaxDivisor' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:265:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:266:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:267:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:269:5: 'MAX' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:280:5: '_routerAddress' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:282:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:283:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:287:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:287:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:296:5: 'swapThreshold' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:297:5: 'swapAmount' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:299:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:299:5: 'tradingEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:301:5: '_hasLiqBeenAdded' should not start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:304:5: 'sameBlockActive' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:305:5: Main key parameter in mapping lastTrade is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:305:5: Value parameter in mapping lastTrade is not named [Warning/named-parameters-mapping]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:305:5: 'lastTrade' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:308:5: GC: [minTokensBeforeSwap] on Event [MinTokensBeforeSwapUpdated] could be Indexed [Warning/gas-indexed-events]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:309:5: GC: [enabled] on Event [SwapAndLiquifyEnabledUpdated] could be Indexed [Warning/gas-indexed-events]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:310:5: GC: [tokensSwapped] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:310:5: GC: [ethReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:310:5: GC: [tokensIntoLiqudity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:315:5: GC: [sniperAddress] on Event [SniperCaught] could be Indexed [Warning/gas-indexed-events]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:316:5: Function order is incorrect, state variable declaration can not go after event definition (line 315) [Warning/ordering]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:316:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:316:5: 'Planted' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:316:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:318:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:318:5: 'contractInitialized' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:327:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:331:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:342:13: Provide an error message for revert [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:342:13: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:354:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:356:2: Line length must be no more than 120 but current length is 168. [Error/max-line-length]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:356:5: Function body contains 52 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:356:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:356:5: Function intializeContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:356:5: GC: [_tokenname] argument on Function [intializeContract] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:356:5: GC: [_tokensymbol] argument on Function [intializeContract] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:357:9: Provide an error message for require [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:357:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:400:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:406:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:416:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:416:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:416:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:420:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:420:5: Function transferOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:421:9: Error message for require is too long: 61 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:421:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:421:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:422:9: Error message for require is too long: 61 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:422:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:422:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:440:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:440:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:449:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:449:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:450:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:450:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:450:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:451:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:451:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:451:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:452:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:452:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:452:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:453:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:453:5: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:453:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:454:2: Line length must be no more than 120 but current length is 137. [Error/max-line-length]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:454:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:454:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:456:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:456:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:461:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:461:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:466:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:466:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:471:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:471:5: Function approveMax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:471:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:475:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:475:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:481:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:481:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:481:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:486:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:486:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:486:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:491:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:491:5: Function setNewRouter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:493:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:504:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:504:5: Function setLpPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:509:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:509:25: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:512:33: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:516:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:516:5: Function isExcludedFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:516:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:520:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:520:5: Function isExcludedFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:520:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:524:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:524:5: Function setTaxesBuy() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:525:9: Provide an error message for require [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:525:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:525:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:526:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:527:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:529:9: Provide an error message for require [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:529:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:529:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:535:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:535:5: Function setTaxesSell() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:536:9: Provide an error message for require [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:536:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:536:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:537:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:538:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:540:9: Provide an error message for require [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:540:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:540:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:546:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:546:5: Function setTaxesTransfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:547:9: Provide an error message for require [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:547:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:547:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:548:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:549:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:551:9: Provide an error message for require [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:551:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:551:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:557:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:557:5: Function setValues() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:563:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:563:5: Function setRatios() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:568:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:568:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:568:5: Function MaxTx() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:570:9: Error message for require is too long: 55 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:570:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:570:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:570:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:575:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:575:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:575:5: Function WalletSize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:577:9: Error message for require is too long: 50 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:577:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:577:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:577:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:582:2: Line length must be no more than 120 but current length is 147. [Error/max-line-length]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:582:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:582:5: Function setSwapSettings() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:587:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:587:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:587:5: Function NewMarketWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:588:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:592:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:592:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:592:5: Function NewDevWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:593:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:596:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:596:5: Function setSwapAndLiquifyEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:601:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:601:5: Function setExcludedFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:605:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:605:5: Function setExcludedFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:607:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:614:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:615:13: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:615:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:627:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:627:5: Function totalFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:627:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:631:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:641:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:641:5: Function tokenFromReflection() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:641:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:642:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:642:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:642:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:642:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:648:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:648:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:648:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:649:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:649:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:649:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:655:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:655:5: Function has cyclomatic complexity 11 but allowed no more than 7 [Warning/code-complexity]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:656:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:656:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:656:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:657:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:657:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:657:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:658:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:658:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:658:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:661:17: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:665:21: Provide an error message for require [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:665:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:668:21: Provide an error message for require [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:668:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:672:13: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:672:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:672:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:672:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:674:17: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:674:17: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:674:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:674:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:687:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:688:24: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:696:5: 'swapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:707:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:712:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:716:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:719:13: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:725:17: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:731:13: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:743:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:743:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:743:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:747:28: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:754:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:754:5: Function enableTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:755:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:773:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:773:5: Function has cyclomatic complexity 8 but allowed no more than 7 [Warning/code-complexity]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:779:21: Error message for revert is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:779:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:779:21: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:806:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:844:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:849:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:849:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:852:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:852:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:866:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0b452278223d3954f4ac050949d7998e373e7e43.sol:866:5: Function takeETHback() must match Foundry test naming convention [Warning/foundry-test-functions]

364 problem/s (9 error/s, 355 warning/s)
