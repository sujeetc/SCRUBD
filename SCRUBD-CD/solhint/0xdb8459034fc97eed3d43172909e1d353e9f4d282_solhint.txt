./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:1:1: Found more than One contract per file. 3 contracts found! [Warning/one-contract-per-file]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:1:1: Compiler version 0.4.23 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:9:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:18:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:25:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:26:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:30:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:32:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:52:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:59:3: Function order is incorrect, modifier definition can not go after constructor/initializer (line 52) [Warning/ordering]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:60:5: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:68:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:68:3: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:69:5: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:76:1: Function order is incorrect, interface can not go after contract definition (line 41) [Warning/ordering]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:76:1: Interface name 'TokenInterface' must start with "I" [Warning/interface-starts-with-i]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:77:6: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:77:6: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:77:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:78:6: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:78:72: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:79:6: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:79:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:80:6: Function order is incorrect, external  function can not go after external constant function (line 79) [Warning/ordering]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:80:6: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:80:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:81:6: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:81:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:82:6: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:82:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:83:6: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:84:6: GC: [tokens] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:84:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:85:6: GC: [tokens] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:85:74: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:86:6: GC: [value] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:106:3: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:108:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:108:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:109:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:109:3: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:120:3: Main key parameter in mapping isAddressWhiteListed is not named [Warning/named-parameters-mapping]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:120:3: Value parameter in mapping isAddressWhiteListed is not named [Warning/named-parameters-mapping]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:120:3: Explicitly mark visibility of state [Warning/state-visibility]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:120:3: 'isAddressWhiteListed' should start with _ [Warning/private-vars-leading-underscore]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:128:3: GC: [value] on Event [TokenPurchase] could be Indexed [Warning/gas-indexed-events]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:128:3: GC: [amount] on Event [TokenPurchase] could be Indexed [Warning/gas-indexed-events]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:130:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:133:5: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:134:5: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:134:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:134:26: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:138:5: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:138:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:150:4: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:154:5: 'determineBonus' should start with _ [Warning/private-vars-leading-underscore]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:154:29: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:156:31: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:164:13: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:164:22: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:167:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:171:13: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:171:22: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:181:3: Function order is incorrect, public payable function can not go after internal view function (line 154) [Warning/ordering]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:181:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:181:3: Function buyTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:182:5: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:183:5: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:184:5: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:185:5: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:187:5: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:189:5: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:203:5: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:208:3: 'forwardFunds' should start with _ [Warning/private-vars-leading-underscore]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:213:3: 'validPurchase' should start with _ [Warning/private-vars-leading-underscore]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:213:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:214:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:214:25: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:214:45: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:214:45: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:220:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:220:3: Function hasEnded() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:220:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:221:12: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:228:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:228:5: Function changeStartAndEndDate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:230:9: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:231:9: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:232:9: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:232:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:241:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:241:5: Function setPriceRate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:250:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:250:5: Function pauseCrowdsale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:258:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:258:5: Function resumeCrowdsale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:265:5: 'isWithinContributionRange' should start with _ [Warning/private-vars-leading-underscore]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:265:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:267:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:267:27: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:271:13: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:271:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:272:18: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:273:13: Provide an error message for require [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:273:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:275:13: Provide an error message for revert [Warning/reason-string]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:283:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:283:6: Function takeTokensBack() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:285:10: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:293:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:293:6: Function manualTokenTransfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:293:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:296:10: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:303:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:303:6: Function addSingleAddressToWhitelist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:312:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:312:6: Function addMultipleAddressesToWhitelist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:314:10: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:314:15: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:314:49: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:324:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:324:6: Function removeSingleAddressFromWhitelist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:333:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:333:6: Function removeMultipleAddressesFromWhitelist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:335:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:335:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:335:48: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:344:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:344:6: Function checkIfAddressIsWhiteListed() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xdb8459034fc97eed3d43172909e1d353e9f4d282.sol:344:6: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]

130 problem/s (3 error/s, 127 warning/s)
