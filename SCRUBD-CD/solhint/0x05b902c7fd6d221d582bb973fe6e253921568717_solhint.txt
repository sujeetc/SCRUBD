./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:3:1: Found more than One contract per file. 7 contracts found! [Warning/one-contract-per-file]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:6:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:6:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:6:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:7:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:7:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:7:64: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:8:5: Function order is incorrect, external  function can not go after external view function (line 7) [Warning/ordering]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:8:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:8:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:8:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:9:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:9:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:9:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:10:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:10:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:10:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:11:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:11:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:11:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:12:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:12:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:13:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:13:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:16:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:16:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:16:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:16:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:17:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:18:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:18:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:22:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:22:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:22:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:22:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:25:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:25:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:25:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:25:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:26:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:26:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:27:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:31:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:31:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:31:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:31:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:36:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:37:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:37:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:37:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:41:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:41:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:41:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:41:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:44:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:44:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:44:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:44:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:46:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:47:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:54:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:57:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:70:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:79:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:79:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:86:5: Function order is incorrect, modifier definition can not go after public view function (line 79) [Warning/ordering]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:87:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:98:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:107:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:108:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:108:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:108:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:120:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:126:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:126:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:126:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:129:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:129:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:129:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:132:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:132:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:132:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:140:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:153:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:157:71: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:161:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:162:9: Error message for require is too long: 54 counted / 32 allowed [Warning/reason-string]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:162:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:162:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:168:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:172:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:176:13: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:176:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:176:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:182:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:182:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:182:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:184:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:184:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:185:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:185:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:187:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:188:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:188:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:189:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:189:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:189:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:191:5: Function order is incorrect, external  function can not go after external view function (line 189) [Warning/ordering]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:191:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:193:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:194:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:199:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:199:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:200:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:200:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:202:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:202:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:203:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:203:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:204:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:204:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:205:5: Function order is incorrect, external view function can not go after external pure function (line 204) [Warning/ordering]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:205:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:205:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:205:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:206:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:206:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:206:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:207:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:207:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:207:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:209:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:209:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:209:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:210:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:210:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:210:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:211:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:211:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:211:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:213:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:213:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:213:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:214:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:214:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:214:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:215:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:215:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:215:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:217:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:217:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:217:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:219:5: GC: [amount0] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:219:5: GC: [amount1] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:219:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:219:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:220:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:220:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:220:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:220:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:221:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:221:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:221:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:221:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:223:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:224:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:225:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:226:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:229:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:229:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:231:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:231:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:231:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:231:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:232:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:232:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:233:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:233:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:234:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:234:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:235:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:236:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:236:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:236:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:237:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:237:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:237:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:238:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:238:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:238:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:240:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:240:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:241:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:241:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:241:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:242:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:242:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:242:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:243:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:244:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:246:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:252:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:252:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:253:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:253:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:253:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:255:5: Function order is incorrect, external  function can not go after external pure function (line 253) [Warning/ordering]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:255:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:258:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:259:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:260:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:261:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:263:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:264:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:264:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:264:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:265:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:267:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:268:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:269:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:271:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:272:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:272:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:272:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:273:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:276:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:277:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:278:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:280:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:281:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:281:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:282:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:284:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:285:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:286:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:288:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:289:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:289:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:290:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:293:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:294:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:295:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:297:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:299:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:299:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:300:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:302:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:303:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:304:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:306:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:308:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:308:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:309:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:310:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:311:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:314:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:315:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:316:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:317:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:318:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:321:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:322:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:323:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:323:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:323:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:326:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:327:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:327:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:327:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:327:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:329:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:330:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:330:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:330:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:330:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:332:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:333:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:333:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:333:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:336:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:338:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:338:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:338:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:338:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:338:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:339:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:339:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:339:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:339:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:339:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:340:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:340:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:340:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:340:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:340:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:341:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:341:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:341:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:342:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:342:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:342:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:346:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:348:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:349:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:350:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:352:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:353:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:354:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:356:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:357:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:358:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:360:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:362:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:364:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:365:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:366:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:369:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:371:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:372:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:375:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:377:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:378:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:379:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:382:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:387:1: Contract has 23 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:392:5: Immutable variables name are set to be in capitalized SNAKE_CASE [Warning/immutable-vars-naming]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:393:5: Immutable variables name are set to be in capitalized SNAKE_CASE [Warning/immutable-vars-naming]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:395:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:395:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:395:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:396:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:396:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:397:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:397:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:402:5: 'marketingFee' should start with _ [Warning/private-vars-leading-underscore]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:403:5: 'burnFee' should start with _ [Warning/private-vars-leading-underscore]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:404:5: 'liquidityFee' should start with _ [Warning/private-vars-leading-underscore]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:405:5: 'totalFee' should start with _ [Warning/private-vars-leading-underscore]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:407:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:408:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:409:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:410:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:412:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:413:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:414:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:415:5: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:420:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:420:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:427:5: GC: [minTokensBeforeSwap] on Event [MinTokensBeforeSwapUpdated] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:428:5: GC: [enabled] on Event [SwapAndLiquifyEnabledUpdated] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:429:6: GC: [tokensSwapped] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:429:6: GC: [ethReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:429:6: GC: [tokensIntoLiqudity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:435:5: Function order is incorrect, state variable declaration can not go after event definition (line 429) [Warning/ordering]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:435:5: 'swapping' should start with _ [Warning/private-vars-leading-underscore]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:444:5: '_owner' should not start with _ [Warning/private-vars-leading-underscore]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:446:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:469:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:469:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:469:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:472:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:472:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:472:71: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:475:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:475:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:475:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:479:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:479:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:479:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:482:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:482:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:482:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:486:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:486:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:486:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:488:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:488:40: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:491:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:491:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:491:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:491:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:495:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:495:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:495:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:495:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:496:2: Line length must be no more than 120 but current length is 138. [Error/max-line-length]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:496:41: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:500:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:500:5: Function setMarketingAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:507:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:507:5: Function setSwapAndLiquifyEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:512:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:512:5: Function changeNumTokensSellToAddToLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:516:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:516:5: Function excludeFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:520:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:520:5: Function includeInFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:525:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:525:9: Function changeMaxTxLimit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:531:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:532:5: Function body contains 91 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:532:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:532:5: Function has cyclomatic complexity 9 but allowed no more than 7 [Warning/code-complexity]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:534:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:534:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:534:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:535:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:535:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:535:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:538:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:538:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:548:36: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:568:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:587:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:588:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:589:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:590:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:595:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:596:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:597:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:598:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:607:13: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:608:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:608:33: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:609:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:610:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:611:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:618:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:618:33: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:619:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:627:2: Line length must be no more than 120 but current length is 127. [Error/max-line-length]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:627:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:627:5: Function setSellFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:634:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:634:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:637:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:637:5: Function setBuyFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:644:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:644:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:648:6: 'swapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:672:7: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:678:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:684:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:689:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:698:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:703:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:707:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:708:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:708:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:708:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:709:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:709:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:709:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:715:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:715:5: Function withdrawStuckETh() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:716:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:722:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:722:5: Function removeStuckToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:723:9: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:723:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:723:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x05b902c7fd6d221d582bb973fe6e253921568717.sol:724:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]

462 problem/s (3 error/s, 459 warning/s)
