./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:21:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:24:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:30:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:30:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:32:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:32:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:34:5: Function order is incorrect, external  function can not go after external view function (line 32) [Warning/ordering]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:34:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:34:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:38:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:38:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:43:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:43:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:45:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:45:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:51:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:52:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:60:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:66:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:74:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:74:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:76:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:76:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:76:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:78:5: Function order is incorrect, external payable function can not go after external pure function (line 76) [Warning/ordering]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:78:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:96:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:98:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:98:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:102:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:106:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:111:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:111:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:116:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:121:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:121:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:121:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:125:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:129:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:134:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:148:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:154:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:154:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:154:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:158:5: Function order is incorrect, modifier definition can not go after public view function (line 154) [Warning/ordering]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:159:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:163:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:163:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:169:1: Contract has 19 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:172:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:173:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:173:39: Use double quotes for string literals [Error/quotes]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:174:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:177:5: Main key parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:177:5: Value parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:178:5: Main key parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:178:5: Value parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:179:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:180:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:180:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:181:5: 'MAX' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:182:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:189:5: Main key parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:189:5: Value parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:189:5: 'bots' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:190:5: Main key parameter in mapping cooldown is not named [Warning/named-parameters-mapping]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:190:5: Value parameter in mapping cooldown is not named [Warning/named-parameters-mapping]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:190:5: 'cooldown' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:193:5: 'uniswapV2Router' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:194:5: 'uniswapV2Pair' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:195:5: 'tradingOpen' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:196:5: 'inSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:197:5: 'swapEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:198:5: 'cooldownEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:201:5: GC: [_maxTxAmount] on Event [MaxTxAmountUpdated] could be Indexed [Warning/gas-indexed-events]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:208:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:219:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:219:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:219:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:223:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:223:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:223:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:227:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:227:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:227:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:231:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:231:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:235:5: Function order is incorrect, public view function can not go after public pure function (line 231) [Warning/ordering]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:235:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:235:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:239:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:239:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:248:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:248:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:257:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:257:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:266:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:266:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:275:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:283:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:283:5: Function setCooldownEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:287:5: 'tokenFromReflection' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:287:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:292:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:292:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:292:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:293:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:300:5: 'removeAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:306:5: 'restoreAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:316:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:316:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:316:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:317:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:317:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:317:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:322:5: Function has cyclomatic complexity 8 but allowed no more than 7 [Warning/code-complexity]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:327:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:327:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:327:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:328:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:328:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:328:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:329:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:329:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:329:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:339:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:346:13: Provide an error message for require [Warning/reason-string]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:346:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:346:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:347:13: Provide an error message for require [Warning/reason-string]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:347:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:354:17: Provide an error message for require [Warning/reason-string]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:354:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:354:40: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:355:32: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:375:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:380:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:385:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:389:5: 'sendETHToFee' should start with _ [Warning/private-vars-leading-underscore]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:394:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:394:5: Function openTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:395:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:402:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:408:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:419:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:419:5: Function manualswap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:420:9: Provide an error message for require [Warning/reason-string]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:420:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:425:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:425:5: Function manualsend() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:426:9: Provide an error message for require [Warning/reason-string]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:426:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:431:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:431:5: Function setBots() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:432:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:432:47: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:437:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:437:5: Function delBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:483:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:485:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:485:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:485:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:485:5: GC: Named return value is missing - Index 3 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:485:5: GC: Named return value is missing - Index 4 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:485:5: GC: Named return value is missing - Index 5 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:505:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:505:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:505:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:508:9: Function param name must be in mixedCase [Warning/func-param-name-mixedcase]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:508:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:524:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:524:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:524:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:545:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:550:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:550:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:557:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:557:5: Function setMaxTxPercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x00e5b0e005ae310312942197e0898de60e30a3a3.sol:558:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]

179 problem/s (1 error/s, 178 warning/s)
