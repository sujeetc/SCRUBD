./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:5:1: Found more than One contract per file. 6 contracts found! [Warning/one-contract-per-file]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:9:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:11:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:13:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:13:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:15:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:15:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:17:5: Function order is incorrect, external  function can not go after external view function (line 15) [Warning/ordering]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:17:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:17:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:19:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:19:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:21:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:21:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:23:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:23:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:32:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:32:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:34:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:34:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:36:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:36:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:40:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:44:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:50:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:50:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:52:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:60:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:65:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:65:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:69:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:69:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:73:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:73:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:77:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:77:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:81:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:81:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:85:5: Function order is incorrect, public  function can not go after public view function (line 81) [Warning/ordering]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:85:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:85:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:91:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:91:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:95:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:95:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:101:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:101:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:112:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:112:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:112:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:118:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:118:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:118:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:121:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:121:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:121:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:121:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:134:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:134:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:134:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:135:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:135:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:135:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:140:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:140:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:140:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:140:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:152:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:164:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:164:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:164:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:169:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:169:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:169:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:169:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:185:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:185:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:185:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:186:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:186:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:186:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:199:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:199:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:210:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:216:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:224:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:228:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:228:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:232:5: Function order is incorrect, modifier definition can not go after public view function (line 228) [Warning/ordering]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:233:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:237:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:241:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:242:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:242:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:242:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:255:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:255:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:263:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:263:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:270:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:270:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:279:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:279:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:286:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:286:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:293:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:297:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:301:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:305:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:309:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:313:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:319:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:319:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:324:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:330:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:335:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:341:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:348:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:348:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:349:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:349:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:351:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:351:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:352:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:352:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:353:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:353:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:354:5: Function order is incorrect, external view function can not go after external pure function (line 353) [Warning/ordering]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:354:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:354:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:354:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:355:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:355:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:355:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:356:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:356:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:356:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:358:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:358:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:358:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:359:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:359:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:359:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:360:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:360:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:360:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:362:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:362:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:362:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:363:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:363:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:363:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:364:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:364:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:364:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:366:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:366:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:366:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:368:5: GC: [amount0] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:368:5: GC: [amount1] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:368:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:368:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:369:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:369:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:369:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:369:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:370:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:370:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:370:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:370:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:372:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:373:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:374:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:375:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:378:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:378:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:380:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:380:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:380:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:380:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:381:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:381:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:382:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:382:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:383:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:383:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:384:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:385:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:385:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:385:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:386:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:386:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:386:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:387:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:387:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:387:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:389:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:389:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:390:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:390:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:390:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:391:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:391:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:391:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:392:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:393:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:395:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:400:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:400:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:401:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:401:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:401:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:403:5: Function order is incorrect, external  function can not go after external pure function (line 401) [Warning/ordering]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:403:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:406:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:407:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:408:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:409:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:411:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:412:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:412:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:412:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:413:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:415:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:416:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:417:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:419:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:420:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:420:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:420:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:421:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:424:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:425:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:426:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:428:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:429:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:429:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:430:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:432:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:433:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:434:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:436:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:437:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:437:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:438:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:441:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:442:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:443:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:445:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:447:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:447:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:448:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:450:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:451:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:452:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:454:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:456:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:456:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:457:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:458:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:459:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:462:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:463:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:464:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:465:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:466:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:469:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:470:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:471:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:471:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:471:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:474:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:475:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:475:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:475:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:475:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:477:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:478:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:478:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:478:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:478:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:480:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:481:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:481:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:481:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:484:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:486:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:486:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:486:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:486:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:486:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:487:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:487:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:487:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:487:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:487:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:488:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:488:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:488:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:488:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:488:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:489:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:489:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:489:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:490:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:490:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:490:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:494:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:496:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:497:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:498:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:500:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:501:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:502:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:504:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:505:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:506:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:508:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:510:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:512:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:513:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:514:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:517:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:519:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:520:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:523:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:525:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:526:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:527:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:530:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:536:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:536:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:536:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:538:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:538:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:539:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:539:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:541:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:542:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:542:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:543:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:543:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:543:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:545:5: Function order is incorrect, external  function can not go after external view function (line 543) [Warning/ordering]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:545:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:547:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:548:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:552:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:553:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:556:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:560:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:564:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:569:1: Contract has 24 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:572:5: 'uniswapV2Router' should start with _ [Warning/private-vars-leading-underscore]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:573:5: 'uniswapV2Pair' should start with _ [Warning/private-vars-leading-underscore]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:575:5: Main key parameter in mapping _isBlacklisted is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:575:5: Value parameter in mapping _isBlacklisted is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:580:5: 'feeWallet' should start with _ [Warning/private-vars-leading-underscore]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:588:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:588:5: 'deadBlocks' should start with _ [Warning/private-vars-leading-underscore]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:590:5: Main key parameter in mapping _holderLastTransferTimestamp is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:590:5: Value parameter in mapping _holderLastTransferTimestamp is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:600:5: Main key parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:600:5: Value parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:601:5: Main key parameter in mapping _isExcludedMaxTransactionAmount is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:601:5: Value parameter in mapping _isExcludedMaxTransactionAmount is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:602:5: Main key parameter in mapping _holderFirstBuyTimestamp is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:602:5: Value parameter in mapping _holderFirstBuyTimestamp is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:603:5: Main key parameter in mapping automatedMarketMakerPairs is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:603:5: Value parameter in mapping automatedMarketMakerPairs is not named [Warning/named-parameters-mapping]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:603:5: 'automatedMarketMakerPairs' should start with _ [Warning/private-vars-leading-underscore]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:606:5: GC: [isExcluded] on Event [ExcludeFromFees] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:608:5: Event name must be in CamelCase [Warning/event-name-camelcase]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:609:5: GC: [tokensSwapped] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:609:5: GC: [ethReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:609:5: GC: [tokensIntoLiquidity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:611:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:617:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:647:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:647:5: Function establishTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:648:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:648:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:648:34: Use double quotes for string literals [Error/quotes]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:649:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:649:35: Use double quotes for string literals [Error/quotes]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:650:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:650:49: Use double quotes for string literals [Error/quotes]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:661:23: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:667:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:673:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:677:5: Function order is incorrect, external  function can not go after private  function (line 665) [Warning/ordering]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:677:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:677:5: Function removeRestrictions() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:677:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:682:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:682:5: Function disableTransferDelay() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:682:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:687:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:687:5: Function updateSwapTokensAtAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:687:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:688:9: Error message for require is too long: 53 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:688:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:688:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:688:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:689:9: Error message for require is too long: 52 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:689:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:689:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:689:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:694:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:694:5: Function excludeFromMaxTransaction() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:698:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:698:5: Function changeFeeSettings() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:702:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:702:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:705:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:705:5: Function excludeFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:711:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:711:5: Function setAutomatedMarketMakerPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:712:9: Error message for require is too long: 57 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:712:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:712:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:723:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:723:5: Function updateFeeWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:728:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:728:5: Function isExcludedFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:728:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:732:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:732:5: Function isSniper() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:732:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:736:5: Function body contains 87 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:736:5: Function has cyclomatic complexity 16 but allowed no more than 7 [Warning/code-complexity]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:741:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:741:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:741:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:742:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:742:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:742:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:743:9: Error message for require is too long: 77 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:743:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:743:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:749:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:749:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:760:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:764:52: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:769:2: Line length must be no more than 120 but current length is 165. [Error/max-line-length]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:769:25: Error message for require is too long: 73 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:769:25: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:769:25: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:769:62: Avoid to use tx.origin [Warning/avoid-tx-origin]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:770:54: Avoid to use tx.origin [Warning/avoid-tx-origin]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:776:21: Error message for require is too long: 53 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:776:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:776:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:776:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:777:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:777:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:782:21: Error message for require is too long: 54 counted / 32 allowed [Warning/reason-string]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:782:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:782:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:782:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:785:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:785:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:791:24: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:833:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:838:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:845:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:851:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:855:5: 'swapBack' should start with _ [Warning/private-vars-leading-underscore]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:886:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:886:5: Function teamMessage() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:886:5: GC: [input] argument on Function [teamMessage] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:886:66: Code contains empty blocks [Warning/no-empty-blocks]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:889:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:889:5: Function forceSwap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:896:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:896:5: Function forceSend() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d95bc0c758ae70141fc95345a7164a4c6e1df15.sol:901:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]

477 problem/s (5 error/s, 472 warning/s)
