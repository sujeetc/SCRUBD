{
    "file": "0xd84b6aec4985e68ef5882de0b5d0b30992bb5057.sol",
    "global_structs": [
        {
            "name": "Swap",
            "fields": {
                "token": [
                    "integer"
                ],
                "targetWallet": [
                    "integer"
                ],
                "secret": [
                    "integer"
                ],
                "secretHash": [
                    "integer"
                ],
                "createdAt": [
                    "integer"
                ],
                "balance": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0x99"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0x9a"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0x9b"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "swaps",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "Swap"
                ]
            ],
            "init": []
        },
        {
            "name": "SafeTime",
            "type": [
                "integer"
            ],
            "init": [
                "0x4"
            ]
        },
        {
            "name": "owner",
            "type": [
                "integer"
            ],
            "init": [
                "0x3"
            ]
        },
        {
            "name": "SafeMath",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ERC20",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "EthTokenToSmthSwaps",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0x3",
            "instructions": [
                "owner = msg_sender"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x4",
            "instructions": [
                "SafeTime = 10800"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x1b",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x1c",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x1d",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x30",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x31",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x32",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x45",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x46",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x47",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x5a",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x5b",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x5c",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x6f",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x70",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x71",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x84",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x85",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x86",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x99",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x9a",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x9b",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "swaps",
            "addrs": [
                "0x2",
                "0x6",
                "0x9",
                "0xc",
                "0xf",
                "0x12",
                "0x15",
                "0x18",
                "0x1a"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x6",
            "instructions": [
                "CLR_0 = swaps[U]",
                "REF_82 = CLR_0",
                "CLR_1 = msg.sender",
                "CLR_2 = REF_82[CLR_1]",
                "REF_83 = CLR_2",
                "CLR_3 = REF_83.createdAt",
                "REF_84 = CLR_3",
                "TMP_97 = REF_84 + SafeTime",
                "RTMP_98 = TMP_97 > now",
                "CONDITION RTMP_98 0x7 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x7",
            "instructions": [
                "CLR_4 = swaps[U]",
                "REF_85 = CLR_4",
                "CLR_5 = msg.sender",
                "CLR_6 = REF_85[CLR_5]",
                "REF_86 = CLR_6",
                "CLR_7 = REF_86.balance",
                "REF_87 = CLR_7",
                "RTMP_99 = REF_87 > 0",
                "CONDITION RTMP_99 0x5 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x5",
            "instructions": [
                "CLR_8 = swaps[U]",
                "REF_79 = CLR_8",
                "CLR_9 = msg.sender",
                "CLR_10 = REF_79[CLR_9]",
                "REF_80 = CLR_10",
                "CLR_11 = REF_80.balance",
                "REF_81 = CLR_11",
                "REF_80.balance = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9",
            "instructions": [
                "CLR_12 = swaps[U]",
                "REF_91 = CLR_12",
                "CLR_13 = msg.sender",
                "CLR_14 = REF_91[CLR_13]",
                "REF_92 = CLR_14",
                "CLR_15 = REF_92.createdAt",
                "REF_93 = CLR_15",
                "TMP_100 = REF_93 + SafeTime",
                "RTMP_101 = TMP_100 > now",
                "CONDITION RTMP_101 0xa 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa",
            "instructions": [
                "CLR_16 = swaps[U]",
                "REF_94 = CLR_16",
                "CLR_17 = msg.sender",
                "CLR_18 = REF_94[CLR_17]",
                "REF_95 = CLR_18",
                "CLR_19 = REF_95.balance",
                "REF_96 = CLR_19",
                "RTMP_102 = REF_96 > 0",
                "CONDITION RTMP_102 0x8 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x8",
            "instructions": [
                "CLR_20 = swaps[U]",
                "REF_88 = CLR_20",
                "CLR_21 = msg.sender",
                "CLR_22 = REF_88[CLR_21]",
                "REF_89 = CLR_22",
                "CLR_23 = REF_89.secret",
                "REF_90 = CLR_23",
                "REF_89.secret = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xc",
            "instructions": [
                "CLR_24 = msg.sender",
                "CLR_25 = swaps[CLR_24]",
                "REF_100 = CLR_25",
                "CLR_26 = REF_100[U]",
                "REF_101 = CLR_26",
                "CLR_27 = REF_101.balance",
                "REF_102 = CLR_27",
                "RTMP_103 = REF_102 > 0",
                "CONDITION RTMP_103 0xd 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xd",
            "instructions": [
                "CLR_28 = msg.sender",
                "CLR_29 = swaps[CLR_28]",
                "REF_103 = CLR_29",
                "CLR_30 = REF_103[U]",
                "REF_104 = CLR_30",
                "CLR_31 = REF_104.createdAt",
                "REF_105 = CLR_31",
                "TMP_104 = REF_105 + SafeTime",
                "RTMP_105 = TMP_104 > now",
                "CONDITION RTMP_105 0xb 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb",
            "instructions": [
                "CLR_32 = msg.sender",
                "CLR_33 = swaps[CLR_32]",
                "REF_97 = CLR_33",
                "CLR_34 = REF_97[U]",
                "REF_98 = CLR_34",
                "CLR_35 = REF_98.balance",
                "REF_99 = CLR_35",
                "REF_98.balance = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xf",
            "instructions": [
                "CLR_36 = msg.sender",
                "CLR_37 = swaps[CLR_36]",
                "REF_109 = CLR_37",
                "CLR_38 = REF_109[U]",
                "REF_110 = CLR_38",
                "CLR_39 = REF_110.balance",
                "REF_111 = CLR_39",
                "RTMP_106 = REF_111 > 0",
                "CONDITION RTMP_106 0x10 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x10",
            "instructions": [
                "CLR_40 = msg.sender",
                "CLR_41 = swaps[CLR_40]",
                "REF_112 = CLR_41",
                "CLR_42 = REF_112[U]",
                "REF_113 = CLR_42",
                "CLR_43 = REF_113.createdAt",
                "REF_114 = CLR_43",
                "TMP_107 = REF_114 + SafeTime",
                "RTMP_108 = TMP_107 > now",
                "CONDITION RTMP_108 0xe 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xe",
            "instructions": [
                "CLR_44 = msg.sender",
                "CLR_45 = swaps[CLR_44]",
                "REF_106 = CLR_45",
                "CLR_46 = REF_106[U]",
                "REF_107 = CLR_46",
                "CLR_47 = REF_107.secret",
                "REF_108 = CLR_47",
                "REF_107.secret = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12",
            "instructions": [
                "CLR_48 = swaps[U]",
                "REF_118 = CLR_48",
                "CLR_49 = REF_118[U]",
                "REF_119 = CLR_49",
                "CLR_50 = REF_119.balance",
                "REF_120 = CLR_50",
                "RTMP_109 = REF_120 > 0",
                "CONDITION RTMP_109 0x13 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13",
            "instructions": [
                "CLR_51 = swaps[U]",
                "REF_121 = CLR_51",
                "CLR_52 = REF_121[U]",
                "REF_122 = CLR_52",
                "CLR_53 = REF_122.createdAt",
                "REF_123 = CLR_53",
                "TMP_110 = REF_123 + SafeTime",
                "RTMP_111 = TMP_110 > now",
                "CONDITION RTMP_111 0x11 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11",
            "instructions": [
                "CLR_54 = swaps[U]",
                "REF_115 = CLR_54",
                "CLR_55 = REF_115[U]",
                "REF_116 = CLR_55",
                "CLR_56 = REF_116.balance",
                "REF_117 = CLR_56",
                "REF_116.balance = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x15",
            "instructions": [
                "CLR_57 = swaps[U]",
                "REF_127 = CLR_57",
                "CLR_58 = REF_127[U]",
                "REF_128 = CLR_58",
                "CLR_59 = REF_128.balance",
                "REF_129 = CLR_59",
                "RTMP_112 = REF_129 > 0",
                "CONDITION RTMP_112 0x16 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16",
            "instructions": [
                "CLR_60 = swaps[U]",
                "REF_130 = CLR_60",
                "CLR_61 = REF_130[U]",
                "REF_131 = CLR_61",
                "CLR_62 = REF_131.createdAt",
                "REF_132 = CLR_62",
                "TMP_113 = REF_132 + SafeTime",
                "RTMP_114 = TMP_113 > now",
                "CONDITION RTMP_114 0x14 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x14",
            "instructions": [
                "CLR_63 = swaps[U]",
                "REF_124 = CLR_63",
                "CLR_64 = REF_124[U]",
                "REF_125 = CLR_64",
                "CLR_65 = REF_125.secret",
                "REF_126 = CLR_65",
                "REF_125.secret = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x18",
            "instructions": [
                "CLR_66 = msg.sender",
                "CLR_67 = swaps[CLR_66]",
                "REF_135 = CLR_67",
                "CLR_68 = REF_135[U]",
                "REF_136 = CLR_68",
                "CLR_69 = REF_136.balance",
                "REF_137 = CLR_69",
                "RTMP_115 = REF_137 == 0",
                "CONDITION RTMP_115 0x17 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x17",
            "instructions": [
                "CLR_70 = msg.sender",
                "CLR_71 = swaps[CLR_70]",
                "REF_133 = CLR_71",
                "CLR_72 = REF_133[U]",
                "REF_134 = CLR_72",
                "REF_133[0] = U",
                "REF_133[1] = U",
                "REF_133[2] = U",
                "REF_133[3] = U",
                "REF_133[4] = U",
                "REF_133[5] = U",
                "REF_133[6] = U",
                "REF_133[7] = U",
                "REF_133[8] = U",
                "REF_133[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x1a",
            "instructions": [
                "CLR_73 = msg.sender",
                "CLR_74 = swaps[CLR_73]",
                "REF_140 = CLR_74",
                "CLR_75 = REF_140[U]",
                "REF_141 = CLR_75",
                "CLR_76 = REF_141.balance",
                "REF_142 = CLR_76",
                "RTMP_116 = REF_142 == 0",
                "CONDITION RTMP_116 0x19 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x19",
            "instructions": [
                "CLR_77 = msg.sender",
                "CLR_78 = swaps[CLR_77]",
                "REF_138 = CLR_78",
                "CLR_79 = REF_138[U]",
                "REF_139 = CLR_79",
                "REF_138[0] = U",
                "REF_138[1] = U",
                "REF_138[2] = U",
                "REF_138[3] = U",
                "REF_138[4] = U",
                "REF_138[5] = U",
                "REF_138[6] = U",
                "REF_138[7] = U",
                "REF_138[8] = U",
                "REF_138[9] = U"
            ]
        }
    ],
    "root_addr": "0x9c",
    "dest_addrs": [
        "0xac"
    ],
    "normal_blocks": [
        {
            "scope": "createSwap",
            "addr": "0x9c",
            "instructions": [
                "NOP",
                "_token = NEW_VAL integer",
                "_value = NEW_VAL integer",
                "_participantAddress = NEW_VAL integer",
                "_secretHash = NEW_VAL integer",
                "JUMP 0x9d"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0x9d",
            "instructions": [
                "TMP_13 = _value > 0",
                "CONDITION TMP_13 0x9d_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0x9d_r0",
            "instructions": [
                "JUMP 0x9e"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0x9e",
            "instructions": [
                "CLR_80 = msg.sender",
                "CLR_81 = swaps[CLR_80]",
                "REF_0 = CLR_81",
                "CLR_82 = REF_0[_participantAddress]",
                "REF_1 = CLR_82",
                "CLR_83 = REF_1.balance",
                "REF_2 = CLR_83",
                "TMP_15 = 0",
                "TMP_16 = REF_2 == TMP_15",
                "CONDITION TMP_16 0x9e_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0x9e_r0",
            "instructions": [
                "JUMP 0x9f"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0x9f",
            "instructions": [
                "TMP_18 = NEW_VAL unknown",
                "ATTACK",
                "TMP_19 = NEW_VAL boolean",
                "JUMP 0xa0"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa0",
            "instructions": [
                "NOP",
                "_secret = NEW_VAL integer",
                "c = NEW_VAL integer",
                "participantAddress = NEW_VAL integer",
                "a = NEW_VAL integer",
                "swap = NEW_VAL Swap",
                "b = NEW_VAL integer",
                "JUMP 0xa1"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa1",
            "instructions": [
                "CLR_84 = msg.sender",
                "CLR_85 = swaps[CLR_84]",
                "REF_34 = CLR_85",
                "CLR_86 = REF_34[participantAddress]",
                "REF_35 = CLR_86",
                "swap = REF_35",
                "CLR_87 = swap.secretHash",
                "REF_36 = CLR_87",
                "TMP_47 = CALL1 ripemd160 _secret",
                "TMP_48 = REF_36 == TMP_47",
                "CONDITION TMP_48 0xa1_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa1_r0",
            "instructions": [
                "JUMP 0xa2"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa2",
            "instructions": [
                "CLR_88 = swap.balance",
                "REF_37 = CLR_88",
                "TMP_50 = 0",
                "TMP_51 = REF_37 > TMP_50",
                "CONDITION TMP_51 0xa2_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa2_r0",
            "instructions": [
                "JUMP 0xa3"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa4",
            "instructions": [
                "TMP_54 = TMP_53 > now",
                "CONDITION TMP_54 0xa4_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa4_r0",
            "instructions": [
                "JUMP 0xa5"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa5",
            "instructions": [
                "CLR_89 = swap.token",
                "REF_40 = CLR_89",
                "TMP_56 = NEW_VAL unknown",
                "CLR_90 = swap.targetWallet",
                "REF_42 = CLR_90",
                "CLR_91 = swap.balance",
                "REF_43 = CLR_91",
                "NOP",
                "JUMP 0xa6"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa6",
            "instructions": [
                "CLR_92 = msg.sender",
                "CLR_93 = swaps[CLR_92]",
                "REF_44 = CLR_93",
                "CLR_94 = REF_44[participantAddress]",
                "REF_45 = CLR_94",
                "CLR_95 = REF_45.balance",
                "REF_46 = CLR_95",
                "REF_45.balance = 0",
                "CLR_96 = msg.sender",
                "CLR_97 = swaps[CLR_96]",
                "REF_47 = CLR_97",
                "CLR_98 = REF_47[participantAddress]",
                "REF_48 = CLR_98",
                "CLR_99 = REF_48.secret",
                "REF_49 = CLR_99",
                "REF_48.secret = _secret",
                "NOP",
                "JUMP 0xa7"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa8",
            "instructions": [
                "NOP",
                "JUMP 0xa9"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa9",
            "instructions": [
                "TMP_10 = a + b",
                "c = TMP_10",
                "TMP_11 = c >= a",
                "CONDITION TMP_11 0xa9_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa9_r0",
            "instructions": [
                "JUMP 0xaa"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xaa",
            "instructions": [
                "TMP_84 = c",
                "JUMP 0xab"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xa3",
            "instructions": [
                "CLR_100 = swap.createdAt",
                "REF_38 = CLR_100",
                "a = REF_38",
                "b = SafeTime",
                "JUMP 0xa8"
            ]
        },
        {
            "scope": "withdrawNoMoney",
            "addr": "0xab",
            "instructions": [
                "TMP_53 = TMP_84",
                "JUMP 0xa4"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0xa7",
            "instructions": [
                "CONDITION TMP_19 0xa7_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0xa7_r0",
            "instructions": [
                "JUMP 0xac"
            ]
        },
        {
            "scope": "createSwap",
            "addr": "0xac",
            "instructions": [
                "CLR_101 = msg.sender",
                "CLR_102 = swaps[CLR_101]",
                "REF_4 = CLR_102",
                "CLR_103 = REF_4[_participantAddress]",
                "REF_5 = CLR_103",
                "TMP_21 = 0",
                "TMP_22 = NEW_VAL Swap",
                "REF_4[_participantAddress] = TMP_22",
                "NOP"
            ]
        },
        {
            "scope": "trap",
            "addr": "0xad",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}