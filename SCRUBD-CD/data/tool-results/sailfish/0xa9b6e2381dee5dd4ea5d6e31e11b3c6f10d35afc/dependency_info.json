{
    "0xa9b6e2381dee5dd4ea5d6e31e11b3c6f10d35afc.sol": [
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Initiate",
                "Initiate"
            ],
            "from_function": "Initiate",
            "to_function": "Initiate",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 62\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\"",
                        "\"BlockID: 42\nFunction: Initiate\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 62\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\"",
                        "\"BlockID: 43\nFunction: Initiate\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_52(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 63\nFunction: Initiate\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \"",
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 64\nFunction: Initiate\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_52(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \"",
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\""
                    ],
                    "state_variable": "token"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Initiate",
                "Initiate"
            ],
            "from_function": "Initiate",
            "to_function": "Initiate",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 70\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\"",
                        "\"BlockID: 42\nFunction: Initiate\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 70\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\"",
                        "\"BlockID: 43\nFunction: Initiate\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_52(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 71\nFunction: Initiate\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \"",
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 72\nFunction: Initiate\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_52(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \"",
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\""
                    ],
                    "state_variable": "token"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Initiate",
                "Initiate"
            ],
            "from_function": "Initiate",
            "to_function": "Initiate",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 78\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\"",
                        "\"BlockID: 43\nFunction: Initiate\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_52(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "token"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Initiate",
                "Enter"
            ],
            "from_function": "Enter",
            "to_function": "Initiate",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\"",
                        "\"BlockID: 42\nFunction: Initiate\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\"",
                        "\"BlockID: 43\nFunction: Initiate\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_52(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Enter\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \"",
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 51\nFunction: Enter\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_60(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \"",
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\""
                    ],
                    "state_variable": "token"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Initiate",
                "Enter"
            ],
            "from_function": "Enter",
            "to_function": "Initiate",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\"",
                        "\"BlockID: 42\nFunction: Initiate\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\"",
                        "\"BlockID: 43\nFunction: Initiate\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_52(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: Enter\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \"",
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 51\nFunction: Enter\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_60(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \"",
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\""
                    ],
                    "state_variable": "token"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Initiate",
                "Enter"
            ],
            "from_function": "Enter",
            "to_function": "Initiate",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\"",
                        "\"BlockID: 43\nFunction: Initiate\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_52(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "token"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Initiate",
                "setFactory"
            ],
            "from_function": "setFactory",
            "to_function": "Initiate",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 56\nFunction: setFactory\nNode: \nEXPRESSION factory = Factory_Interface(factory_address)\nIRS: \nfactory := TMP_64\"",
                        "\"BlockID: 40\nFunction: Initiate\nNode: \nEXPRESSION (token_a_address,token_b_address) = factory.getBase()\nIRS: \nTUPLE_0(address,address) = HIGH_LEVEL_CALL, dest:factory(Factory_Interface), function:getBase, arguments:[]  \""
                    ],
                    "state_variable": "factory"
                },
                {
                    "path": [
                        "\"BlockID: 56\nFunction: setFactory\nNode: \nEXPRESSION factory = Factory_Interface(factory_address)\nIRS: \nfactory := TMP_64\"",
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\""
                    ],
                    "state_variable": "factory"
                },
                {
                    "path": [
                        "\"BlockID: 56\nFunction: setFactory\nNode: \nEXPRESSION factory = Factory_Interface(factory_address)\nIRS: \nfactory := TMP_64\"",
                        "\"BlockID: 42\nFunction: Initiate\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \""
                    ],
                    "state_variable": "factory"
                },
                {
                    "path": [
                        "\"BlockID: 56\nFunction: setFactory\nNode: \nEXPRESSION factory = Factory_Interface(factory_address)\nIRS: \nfactory := TMP_64\"",
                        "\"BlockID: 43\nFunction: Initiate\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_52(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "factory"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Enter",
                "Initiate"
            ],
            "from_function": "Initiate",
            "to_function": "Enter",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 38\nFunction: Initiate\nNode: \nEXPRESSION swap = TokenToTokenSwap_Interface(_swapadd)\nIRS: \nswap := TMP_46\"",
                        "\"BlockID: 52\nFunction: Enter\nNode: \nEXPRESSION swap.createTokens()\nIRS: \nHIGH_LEVEL_CALL, dest:swap(TokenToTokenSwap_Interface), function:createTokens, arguments:[]  \""
                    ],
                    "state_variable": "swap"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\"",
                        "\"BlockID: 50\nFunction: Enter\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\"",
                        "\"BlockID: 51\nFunction: Enter\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_60(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: Initiate\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \"",
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 43\nFunction: Initiate\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_52(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \"",
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\""
                    ],
                    "state_variable": "token"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Enter",
                "Initiate"
            ],
            "from_function": "Initiate",
            "to_function": "Enter",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 38\nFunction: Initiate\nNode: \nEXPRESSION swap = TokenToTokenSwap_Interface(_swapadd)\nIRS: \nswap := TMP_46\"",
                        "\"BlockID: 52\nFunction: Enter\nNode: \nEXPRESSION swap.createTokens()\nIRS: \nHIGH_LEVEL_CALL, dest:swap(TokenToTokenSwap_Interface), function:createTokens, arguments:[]  \""
                    ],
                    "state_variable": "swap"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\"",
                        "\"BlockID: 50\nFunction: Enter\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\"",
                        "\"BlockID: 51\nFunction: Enter\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_60(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 42\nFunction: Initiate\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \"",
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 43\nFunction: Initiate\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_52(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \"",
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\""
                    ],
                    "state_variable": "token"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Enter",
                "Initiate"
            ],
            "from_function": "Initiate",
            "to_function": "Enter",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 38\nFunction: Initiate\nNode: \nEXPRESSION swap = TokenToTokenSwap_Interface(_swapadd)\nIRS: \nswap := TMP_46\"",
                        "\"BlockID: 52\nFunction: Enter\nNode: \nEXPRESSION swap.createTokens()\nIRS: \nHIGH_LEVEL_CALL, dest:swap(TokenToTokenSwap_Interface), function:createTokens, arguments:[]  \""
                    ],
                    "state_variable": "swap"
                },
                {
                    "path": [
                        "\"BlockID: 41\nFunction: Initiate\nNode: \nEXPRESSION token = Wrapped_Ether(token_a_address)\nIRS: \ntoken := TMP_49\"",
                        "\"BlockID: 51\nFunction: Enter\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_60(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "token"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Enter",
                "Initiate"
            ],
            "from_function": "Initiate",
            "to_function": "Enter",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 38\nFunction: Initiate\nNode: \nEXPRESSION swap = TokenToTokenSwap_Interface(_swapadd)\nIRS: \nswap := TMP_46\"",
                        "\"BlockID: 52\nFunction: Enter\nNode: \nEXPRESSION swap.createTokens()\nIRS: \nHIGH_LEVEL_CALL, dest:swap(TokenToTokenSwap_Interface), function:createTokens, arguments:[]  \""
                    ],
                    "state_variable": "swap"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Enter",
                "Enter"
            ],
            "from_function": "Enter",
            "to_function": "Enter",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 91\nFunction: Enter\nNode: \nEXPRESSION swap = TokenToTokenSwap_Interface(_swapadd)\nIRS: \nswap := TMP_55\"",
                        "\"BlockID: 52\nFunction: Enter\nNode: \nEXPRESSION swap.createTokens()\nIRS: \nHIGH_LEVEL_CALL, dest:swap(TokenToTokenSwap_Interface), function:createTokens, arguments:[]  \""
                    ],
                    "state_variable": "swap"
                },
                {
                    "path": [
                        "\"BlockID: 94\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\"",
                        "\"BlockID: 50\nFunction: Enter\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 94\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\"",
                        "\"BlockID: 51\nFunction: Enter\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_60(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 95\nFunction: Enter\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \"",
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 96\nFunction: Enter\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_60(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \"",
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\""
                    ],
                    "state_variable": "token"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Enter",
                "Enter"
            ],
            "from_function": "Enter",
            "to_function": "Enter",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 100\nFunction: Enter\nNode: \nEXPRESSION swap = TokenToTokenSwap_Interface(_swapadd)\nIRS: \nswap := TMP_55\"",
                        "\"BlockID: 52\nFunction: Enter\nNode: \nEXPRESSION swap.createTokens()\nIRS: \nHIGH_LEVEL_CALL, dest:swap(TokenToTokenSwap_Interface), function:createTokens, arguments:[]  \""
                    ],
                    "state_variable": "swap"
                },
                {
                    "path": [
                        "\"BlockID: 103\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\"",
                        "\"BlockID: 50\nFunction: Enter\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 103\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\"",
                        "\"BlockID: 51\nFunction: Enter\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_60(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 104\nFunction: Enter\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \"",
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\""
                    ],
                    "state_variable": "token"
                },
                {
                    "path": [
                        "\"BlockID: 105\nFunction: Enter\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_60(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \"",
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\""
                    ],
                    "state_variable": "token"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Enter",
                "Enter"
            ],
            "from_function": "Enter",
            "to_function": "Enter",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 109\nFunction: Enter\nNode: \nEXPRESSION swap = TokenToTokenSwap_Interface(_swapadd)\nIRS: \nswap := TMP_55\"",
                        "\"BlockID: 52\nFunction: Enter\nNode: \nEXPRESSION swap.createTokens()\nIRS: \nHIGH_LEVEL_CALL, dest:swap(TokenToTokenSwap_Interface), function:createTokens, arguments:[]  \""
                    ],
                    "state_variable": "swap"
                },
                {
                    "path": [
                        "\"BlockID: 112\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\"",
                        "\"BlockID: 51\nFunction: Enter\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_60(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "token"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Enter",
                "Enter"
            ],
            "from_function": "Enter",
            "to_function": "Enter",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 118\nFunction: Enter\nNode: \nEXPRESSION swap = TokenToTokenSwap_Interface(_swapadd)\nIRS: \nswap := TMP_55\"",
                        "\"BlockID: 52\nFunction: Enter\nNode: \nEXPRESSION swap.createTokens()\nIRS: \nHIGH_LEVEL_CALL, dest:swap(TokenToTokenSwap_Interface), function:createTokens, arguments:[]  \""
                    ],
                    "state_variable": "swap"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "Enter",
                "setFactory"
            ],
            "from_function": "setFactory",
            "to_function": "Enter",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 56\nFunction: setFactory\nNode: \nEXPRESSION factory = Factory_Interface(factory_address)\nIRS: \nfactory := TMP_64\"",
                        "\"BlockID: 48\nFunction: Enter\nNode: \nEXPRESSION (token_a_address,token_b_address) = factory.getBase()\nIRS: \nTUPLE_1(address,address) = HIGH_LEVEL_CALL, dest:factory(Factory_Interface), function:getBase, arguments:[]  \""
                    ],
                    "state_variable": "factory"
                },
                {
                    "path": [
                        "\"BlockID: 56\nFunction: setFactory\nNode: \nEXPRESSION factory = Factory_Interface(factory_address)\nIRS: \nfactory := TMP_64\"",
                        "\"BlockID: 49\nFunction: Enter\nNode: \nEXPRESSION token = Wrapped_Ether(token_b_address)\nIRS: \ntoken := TMP_57\""
                    ],
                    "state_variable": "factory"
                },
                {
                    "path": [
                        "\"BlockID: 56\nFunction: setFactory\nNode: \nEXPRESSION factory = Factory_Interface(factory_address)\nIRS: \nfactory := TMP_64\"",
                        "\"BlockID: 50\nFunction: Enter\nNode: \nEXPRESSION token.CreateToken.value(msg.value)()\nIRS: \nHIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:CreateToken, arguments:[] value:msg.value \""
                    ],
                    "state_variable": "factory"
                },
                {
                    "path": [
                        "\"BlockID: 56\nFunction: setFactory\nNode: \nEXPRESSION factory = Factory_Interface(factory_address)\nIRS: \nfactory := TMP_64\"",
                        "\"BlockID: 51\nFunction: Enter\nNode: \nNEW VARIABLE success = token.transfer(_swapadd,msg.value)\nIRS: \nTMP_60(bool) = HIGH_LEVEL_CALL, dest:token(Wrapped_Ether), function:transfer, arguments:['_swapadd', 'msg.value']  \""
                    ],
                    "state_variable": "factory"
                }
            ]
        }
    ]
}