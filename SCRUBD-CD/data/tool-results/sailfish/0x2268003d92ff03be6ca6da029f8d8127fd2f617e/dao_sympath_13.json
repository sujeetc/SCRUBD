{
    "file_name": "dao_symex_path_13.json",
    "from_function": "exerciseLong",
    "to_function": "tokenFulfillmentDeposit",
    "bug_type": "dao",
    "src_node": "\"BlockID: 1509\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 1593\nCall context: \nNone\nREF_209 := TMP_111\nREF_216 -> tokenUser[1]\nREF_217 -> orderRecord[REF_216]\nREF_218 -> REF_217[orderHash]\nREF_219 -> REF_218.longBalance\nREF_220 -> REF_219[msg.sender]\nTMP_112 = CONVERT 0 to uint256\nREF_220 := TMP_112\nEmit TokenLongExercised(tokenUser.minMaxDMWCPNonce.v.rs.couponAmount.amount)\""
    ],
    "executable_instructions": 491,
    "state_variable": "orderRecord.shortBalance",
    "error": "",
    "result": "UNSAT",
    "execution_details": "# using file \/ethereum-security\/empirical-study\/data\/extracted_solc_codes\/crowdsource_contracts\/sailfish\/0x2268003d92ff03be6ca6da029f8d8127fd2f617e\/dao_symex_path_13.json\n# attack type: range\n# solver type: z3\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x3@__GLOBAL__\n    > adding global block: 0x29@__GLOBAL__\n    > adding global block: 0x2a@__GLOBAL__\n    > adding global block: 0x2b@__GLOBAL__\n    > adding global block: 0x49@__GLOBAL__\n    > adding global block: 0x4a@__GLOBAL__\n    > adding global block: 0x4b@__GLOBAL__\n    > adding global block: 0x67@__GLOBAL__\n    > adding global block: 0x68@__GLOBAL__\n    > adding global block: 0x69@__GLOBAL__\n    > adding global block: 0x87@__GLOBAL__\n    > adding global block: 0x88@__GLOBAL__\n    > adding global block: 0x89@__GLOBAL__\n    > adding global block: 0xd5@__GLOBAL__\n    > adding global block: 0xd6@__GLOBAL__\n    > adding global block: 0xd7@__GLOBAL__\n    > adding global block: 0x107@__GLOBAL__\n    > adding global block: 0x108@__GLOBAL__\n    > adding global block: 0x109@__GLOBAL__\n    > adding global block: 0x13b@__GLOBAL__\n    > adding global block: 0x13c@__GLOBAL__\n    > adding global block: 0x13d@__GLOBAL__\n    > adding global block: 0x171@__GLOBAL__\n    > adding global block: 0x172@__GLOBAL__\n    > adding global block: 0x173@__GLOBAL__\n    > adding global block: 0x1a1@__GLOBAL__\n    > adding global block: 0x1a2@__GLOBAL__\n    > adding global block: 0x1a3@__GLOBAL__\n    > adding global block: 0x1d1@__GLOBAL__\n    > adding global block: 0x1d2@__GLOBAL__\n    > adding global block: 0x1d3@__GLOBAL__\n    > adding global block: 0x201@__GLOBAL__\n    > adding global block: 0x202@__GLOBAL__\n    > adding global block: 0x203@__GLOBAL__\n    > adding global block: 0x231@__GLOBAL__\n    > adding global block: 0x232@__GLOBAL__\n    > adding global block: 0x233@__GLOBAL__\n    > adding global block: 0x264@__GLOBAL__\n    > adding global block: 0x265@__GLOBAL__\n    > adding global block: 0x266@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: decimals\n    > initializing global variable: decimals\n    > declaring global variable: name\n    > initializing global variable: name\n    > declaring global variable: orderRecord\n    > initializing global variable: orderRecord\n    > declaring global variable: admin\n    > initializing global variable: admin\n\n    > declaring global variable: Token\n    > initializing global variable: Token\n    > declaring global variable: SafeMath\n    > initializing global variable: SafeMath\n    > declaring global variable: ShortOrder\n    > initializing global variable: ShortOrder\n# building ranges\n  > start adding range variables\n    > adding: orderRecord -> (0x2@__RANGE__ 0x4@__RANGE__ 0x6@__RANGE__ 0x9@__RANGE__ 0xc@__RANGE__ 0xf@__RANGE__ 0x11@__RANGE__ 0x13@__RANGE__ 0x15@__RANGE__ 0x17@__RANGE__ 0x19@__RANGE__ 0x1b@__RANGE__ 0x1d@__RANGE__ 0x1f@__RANGE__ 0x20@__RANGE__ 0x21@__RANGE__ 0x22@__RANGE__ 0x23@__RANGE__ 0x24@__RANGE__ 0x25@__RANGE__ 0x26@__RANGE__)\n    > adding: admin -> (0x2@__RANGE__ 0x28@__RANGE__)\n  > range entry addresses: (0x2@__RANGE__ 0x6@__RANGE__ 0x1f@__RANGE__ 0x1d@__RANGE__ 0x21@__RANGE__ 0x24@__RANGE__ 0x20@__RANGE__ 0x22@__RANGE__ 0x1b@__RANGE__ 0x4@__RANGE__ 0x13@__RANGE__ 0x9@__RANGE__ 0x15@__RANGE__ 0xf@__RANGE__ 0x23@__RANGE__ 0x26@__RANGE__ 0x25@__RANGE__ 0x17@__RANGE__ 0x11@__RANGE__ 0x19@__RANGE__ 0xc@__RANGE__ 0x28@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0x4@__RANGE__\n    > adding range block: 0x6@__RANGE__\n    > adding range block: 0x7@__RANGE__\n    > adding range block: 0x5@__RANGE__\n    > adding range block: 0x9@__RANGE__\n    > adding range block: 0xa@__RANGE__\n    > adding range block: 0x8@__RANGE__\n    > adding range block: 0xc@__RANGE__\n    > adding range block: 0xd@__RANGE__\n    > adding range block: 0xb@__RANGE__\n    > adding range block: 0xf@__RANGE__\n    > adding range block: 0xe@__RANGE__\n    > adding range block: 0x11@__RANGE__\n    > adding range block: 0x10@__RANGE__\n    > adding range block: 0x13@__RANGE__\n    > adding range block: 0x12@__RANGE__\n    > adding range block: 0x15@__RANGE__\n    > adding range block: 0x14@__RANGE__\n    > adding range block: 0x17@__RANGE__\n    > adding range block: 0x16@__RANGE__\n    > adding range block: 0x19@__RANGE__\n    > adding range block: 0x18@__RANGE__\n    > adding range block: 0x1b@__RANGE__\n    > adding range block: 0x1a@__RANGE__\n    > adding range block: 0x1d@__RANGE__\n    > adding range block: 0x1c@__RANGE__\n    > adding range block: 0x1f@__RANGE__\n    > adding range block: 0x1e@__RANGE__\n    > adding range block: 0x20@__RANGE__\n    > adding range block: 0x21@__RANGE__\n    > adding range block: 0x22@__RANGE__\n    > adding range block: 0x23@__RANGE__\n    > adding range block: 0x24@__RANGE__\n    > adding range block: 0x25@__RANGE__\n    > adding range block: 0x26@__RANGE__\n    > adding range block: 0x28@__RANGE__\n    > adding range block: 0x27@__RANGE__\n# building normal scopes\n  > root addr: 0x279\n  > dest addrs: (0x296)\n  > loading normal blocks\n    > adding normal block: 0x267\n    > adding normal block: 0x26a\n    > adding normal block: 0x26c\n    > adding normal block: 0x26e\n    > adding normal block: 0x270\n    > adding normal block: 0x26d\n    > adding normal block: 0x26d_r0\n    > adding normal block: 0x273\n    > adding normal block: 0x273_r0\n    > adding normal block: 0x26f\n    > adding normal block: 0x26f_r0\n    > adding normal block: 0x271\n    > adding normal block: 0x274\n    > adding normal block: 0x272\n    > adding normal block: 0x275\n    > adding normal block: 0x279\n    > adding normal block: 0x27a\n    > adding normal block: 0x268\n    > adding normal block: 0x277\n    > adding normal block: 0x278\n    > adding normal block: 0x276\n    > adding normal block: 0x27b\n    > adding normal block: 0x26b\n    > adding normal block: 0x27d\n    > adding normal block: 0x27d_r0\n    > adding normal block: 0x27e\n    > adding normal block: 0x280\n    > adding normal block: 0x282\n    > adding normal block: 0x283\n    > adding normal block: 0x283_r0\n    > adding normal block: 0x284\n    > adding normal block: 0x27c\n    > adding normal block: 0x285\n    > adding normal block: 0x286\n    > adding normal block: 0x287\n    > adding normal block: 0x287_r0\n    > adding normal block: 0x288\n    > adding normal block: 0x27f\n    > adding normal block: 0x289\n    > adding normal block: 0x28a\n    > adding normal block: 0x28c\n    > adding normal block: 0x28e\n    > adding normal block: 0x290\n    > adding normal block: 0x28f\n    > adding normal block: 0x28f_r0\n    > adding normal block: 0x291\n    > adding normal block: 0x291_r0\n    > adding normal block: 0x292\n    > adding normal block: 0x293\n    > adding normal block: 0x296\n    > adding normal block: 0x281\n    > adding normal block: 0x28d\n    > adding normal block: 0x294\n    > adding normal block: 0x295\n    > adding normal block: 0x28b\n    > adding normal block: 0x297\n    > adding normal block: 0x297_r0\n    > adding normal block: 0x298\n    > adding normal block: 0x269\n    > adding normal block: 0xRequireTrap\n# start interpretation of normal blocks...\n\n# asserts size: 162\n# using solver: #<z3>\n# result: #f\n"
}