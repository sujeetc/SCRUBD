{
    "file": "0x5f38c57b268664015de387229bc9d3822b53ec32.sol",
    "global_structs": [
        {
            "name": "Purchase",
            "fields": {
                "current": [
                    "integer"
                ],
                "count": [
                    "integer"
                ],
                "user": [
                    "integer"
                ],
                "randomness": [
                    "integer"
                ],
                "commit": [
                    "integer"
                ]
            }
        },
        {
            "name": "Batch",
            "fields": {
                "userID": [
                    "integer"
                ],
                "size": [
                    "integer"
                ]
            }
        },
        {
            "name": "StackDepthLimit",
            "fields": {
                "oldProtos": [
                    "array",
                    "integer"
                ],
                "purities": [
                    "array",
                    "integer"
                ],
                "qualities": [
                    "array",
                    "integer"
                ],
                "protos": [
                    "array",
                    "integer"
                ]
            }
        },
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0x213"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0x214"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0x215"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "canMigrate",
            "type": [
                "array",
                "integer",
                "boolean"
            ],
            "init": []
        },
        {
            "name": "v1Migrated",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "boolean"
                ]
            ],
            "init": []
        },
        {
            "name": "migration",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ebs",
            "type": [
                "array",
                "integer"
            ],
            "init": [
                "0x7"
            ]
        },
        {
            "name": "limit",
            "type": [
                "integer"
            ],
            "init": [
                "0x6"
            ]
        },
        {
            "name": "cards",
            "type": [
                "integer"
            ],
            "init": [
                "0x5"
            ]
        },
        {
            "name": "IPackFour",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "BaseMigration",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "IERC165",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "IERC721",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ICards",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "v1Migration",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "CanBeV1Migrated",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0x4",
            "instructions": [
                "CLR_0 = canMigrate[U]",
                "REF_33 = CLR_0",
                "canMigrate[0] = true",
                "canMigrate[1] = true",
                "canMigrate[2] = true",
                "canMigrate[3] = true",
                "canMigrate[4] = true",
                "canMigrate[5] = true",
                "canMigrate[6] = true",
                "canMigrate[7] = true",
                "canMigrate[8] = true",
                "canMigrate[9] = true"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x5",
            "instructions": [
                "cards = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x6",
            "instructions": [
                "limit = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x7",
            "instructions": [
                "ebs = 400",
                "ebs = 413",
                "ebs = 414",
                "ebs = 421",
                "ebs = 427",
                "ebs = 428",
                "ebs = 389",
                "ebs = 415",
                "ebs = 416",
                "ebs = 422",
                "ebs = 424",
                "ebs = 425",
                "ebs = 426",
                "ebs = 382",
                "ebs = 420",
                "ebs = 417"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xf",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x10",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x11",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xd2",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xd3",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0xd4",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x195",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x196",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x197",
            "instructions": [
                "msg_sender = 0x4"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x213",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x214",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x215",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "v1Migrated",
            "addrs": [
                "0x2",
                "0xa",
                "0xd"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xa",
            "instructions": [
                "CLR_1 = canMigrate[U]",
                "REF_36 = CLR_1",
                "RTMP_86 = REF_36 == true",
                "CONDITION RTMP_86 0xb 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xb",
            "instructions": [
                "CLR_2 = v1Migrated[U]",
                "REF_37 = CLR_2",
                "CLR_3 = REF_37[U]",
                "REF_38 = CLR_3",
                "RTMP_87 = ! REF_38",
                "CONDITION RTMP_87 0x9 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x9",
            "instructions": [
                "CLR_4 = v1Migrated[U]",
                "REF_34 = CLR_4",
                "CLR_5 = REF_34[U]",
                "REF_35 = CLR_5",
                "REF_34[0] = true",
                "REF_34[1] = true",
                "REF_34[2] = true",
                "REF_34[3] = true",
                "REF_34[4] = true",
                "REF_34[5] = true",
                "REF_34[6] = true",
                "REF_34[7] = true",
                "REF_34[8] = true",
                "REF_34[9] = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xd",
            "instructions": [
                "CLR_6 = canMigrate[U]",
                "REF_36 = CLR_6",
                "RTMP_86 = REF_36 == true",
                "CONDITION RTMP_86 0xe 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xe",
            "instructions": [
                "CLR_7 = v1Migrated[U]",
                "REF_37 = CLR_7",
                "CLR_8 = REF_37[U]",
                "REF_38 = CLR_8",
                "RTMP_87 = ! REF_38",
                "CONDITION RTMP_87 0xc 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0xc",
            "instructions": [
                "CLR_9 = v1Migrated[U]",
                "REF_34 = CLR_9",
                "CLR_10 = REF_34[U]",
                "REF_35 = CLR_10",
                "REF_34[0] = true",
                "REF_34[1] = true",
                "REF_34[2] = true",
                "REF_34[3] = true",
                "REF_34[4] = true",
                "REF_34[5] = true",
                "REF_34[6] = true",
                "REF_34[7] = true",
                "REF_34[8] = true",
                "REF_34[9] = true"
            ]
        }
    ],
    "root_addr": "0x216",
    "dest_addrs": [
        "0x260"
    ],
    "normal_blocks": [
        {
            "scope": "migrate_v1",
            "addr": "0x216",
            "instructions": [
                "NOP",
                "loopStart = NEW_VAL integer",
                "remaining = NEW_VAL integer",
                "x = NEW_VAL integer",
                "i = NEW_VAL integer",
                "proto = NEW_VAL integer",
                "proto = NEW_VAL integer",
                "purity = NEW_VAL integer",
                "pack = NEW_VAL integer",
                "i = NEW_VAL integer",
                "sdl = NEW_VAL StackDepthLimit",
                "startID = NEW_VAL integer",
                "id = NEW_VAL integer",
                "loopEnd = NEW_VAL integer",
                "JUMP 0x217"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x218",
            "instructions": [
                "NOP",
                "NOP",
                "NOP",
                "NOP",
                "TUPLE_2 = NEW_COL unknown",
                "JUMP 0x219"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x21a",
            "instructions": [
                "NOP",
                "CLR_11 = sdl.protos",
                "REF_13 = CLR_11",
                "TMP_57 = NEW_COL integer",
                "sdl.protos = TMP_57",
                "CLR_12 = sdl.qualities",
                "REF_14 = CLR_12",
                "TMP_59 = NEW_COL integer",
                "sdl.qualities = TMP_59",
                "CLR_13 = sdl.oldProtos",
                "REF_15 = CLR_13",
                "CLR_14 = sdl.purities",
                "REF_16 = CLR_14",
                "ATTACK",
                "TUPLE_3 = NEW_COL unknown",
                "JUMP 0x21b"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x21c",
            "instructions": [
                "TMP_45 = NEW_VAL unknown",
                "CLR_15 = v1Migrated[TMP_45]",
                "REF_10 = CLR_15",
                "CLR_16 = REF_10[id]",
                "REF_11 = CLR_16",
                "TMP_46 = ! REF_11",
                "CONDITION TMP_46 0x21c_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x21c_r0",
            "instructions": [
                "JUMP 0x218"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x217",
            "instructions": [
                "TMP_43 = NEW_VAL unknown",
                "CLR_17 = canMigrate[TMP_43]",
                "REF_9 = CLR_17",
                "CONDITION REF_9 0x217_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x217_r0",
            "instructions": [
                "JUMP 0x21c"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x21d",
            "instructions": [
                "TMP_54 = limit >= remaining",
                "CONDITION TMP_54 0x21d_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x21d_r0",
            "instructions": [
                "JUMP 0x21a"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x21e",
            "instructions": [
                "TMP_50 = count - current",
                "TMP_51 = TMP_50 * 5",
                "remaining = TMP_51",
                "TMP_52 = remaining > 0",
                "CONDITION TMP_52 0x21e_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x21e_r0",
            "instructions": [
                "JUMP 0x21d"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x219",
            "instructions": [
                "current = NEW_VAL unknown",
                "count = NEW_VAL unknown",
                "user = NEW_VAL unknown",
                "randomness = NEW_VAL unknown",
                "TMP_48 = randomness != 0",
                "CONDITION TMP_48 0x219_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x219_r0",
            "instructions": [
                "JUMP 0x21e"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x21b",
            "instructions": [
                "NOP",
                "loopStart = NEW_VAL integer",
                "remaining = NEW_VAL integer",
                "x = NEW_VAL integer",
                "i = NEW_VAL integer",
                "proto = NEW_VAL integer",
                "proto = NEW_VAL integer",
                "purity = NEW_VAL integer",
                "pack = NEW_VAL integer",
                "i = NEW_VAL integer",
                "sdl = NEW_VAL StackDepthLimit",
                "startID = NEW_VAL integer",
                "id = NEW_VAL integer",
                "loopEnd = NEW_VAL integer",
                "JUMP 0x21f"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x21f",
            "instructions": [
                "TMP_43 = NEW_VAL unknown",
                "CLR_18 = canMigrate[TMP_43]",
                "REF_9 = CLR_18",
                "CONDITION REF_9 0x21f_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x21f_r0",
            "instructions": [
                "JUMP 0x220"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x220",
            "instructions": [
                "TMP_45 = NEW_VAL unknown",
                "CLR_19 = v1Migrated[TMP_45]",
                "REF_10 = CLR_19",
                "CLR_20 = REF_10[id]",
                "REF_11 = CLR_20",
                "TMP_46 = ! REF_11",
                "CONDITION TMP_46 0x220_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x220_r0",
            "instructions": [
                "JUMP 0x221"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x221",
            "instructions": [
                "NOP",
                "NOP",
                "NOP",
                "NOP",
                "TUPLE_2 = NEW_COL unknown",
                "JUMP 0x222"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x222",
            "instructions": [
                "current = NEW_VAL unknown",
                "count = NEW_VAL unknown",
                "user = NEW_VAL unknown",
                "randomness = NEW_VAL unknown",
                "TMP_48 = randomness != 0",
                "CONDITION TMP_48 0x222_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x222_r0",
            "instructions": [
                "JUMP 0x223"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x223",
            "instructions": [
                "TMP_50 = count - current",
                "TMP_51 = TMP_50 * 5",
                "remaining = TMP_51",
                "TMP_52 = remaining > 0",
                "CONDITION TMP_52 0x223_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x223_r0",
            "instructions": [
                "JUMP 0x224"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x224",
            "instructions": [
                "TMP_54 = limit >= remaining",
                "CONDITION TMP_54 0x224_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x224_r0",
            "instructions": [
                "JUMP 0x225"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x225",
            "instructions": [
                "NOP",
                "CLR_21 = sdl.protos",
                "REF_13 = CLR_21",
                "TMP_57 = NEW_COL integer",
                "sdl.protos = TMP_57",
                "CLR_22 = sdl.qualities",
                "REF_14 = CLR_22",
                "TMP_59 = NEW_COL integer",
                "sdl.qualities = TMP_59",
                "CLR_23 = sdl.oldProtos",
                "REF_15 = CLR_23",
                "CLR_24 = sdl.purities",
                "REF_16 = CLR_24",
                "TUPLE_3 = NEW_COL unknown",
                "JUMP 0x226"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x226",
            "instructions": [
                "NCV_0 = NEW_VAL unknown",
                "sdl.oldProtos = NCV_0",
                "NCV_1 = NEW_VAL unknown",
                "sdl.purities = NCV_1",
                "TMP_60 = current * 5",
                "loopStart = TMP_60",
                "i = 0",
                "JUMP 0x227"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x227",
            "instructions": [
                "NOP",
                "TMP_61 = i < remaining",
                "CONDITION TMP_61 0x229 0x228"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x228",
            "instructions": [
                "NOP",
                "JUMP 0x22a"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x22a",
            "instructions": [
                "CLR_25 = sdl.protos",
                "REF_27 = CLR_25",
                "CLR_26 = sdl.qualities",
                "REF_28 = CLR_26",
                "TMP_66 = NEW_VAL integer",
                "JUMP 0x22b"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x22b",
            "instructions": [
                "startID = TMP_66",
                "TMP_67 = NEW_VAL unknown",
                "CLR_27 = v1Migrated[TMP_67]",
                "REF_29 = CLR_27",
                "CLR_28 = REF_29[id]",
                "REF_30 = CLR_28",
                "REF_29[id] = true",
                "TMP_68 = loopStart + remaining",
                "loopEnd = TMP_68",
                "TMP_69 = NEW_VAL unknown",
                "NOP",
                "JUMP 0x22c"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x22d",
            "instructions": [
                "REF_22[i] = TMP_64",
                "TMP_65 = i",
                "i = i + 1",
                "JUMP 0x227"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x22e",
            "instructions": [
                "NOP",
                "JUMP 0x22f"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x22f",
            "instructions": [
                "TMP_22 = proto >= 1",
                "TMP_23 = proto <= 377",
                "TMP_24 = TMP_22 && TMP_23",
                "CONDITION TMP_24 0x230 0x231"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x230",
            "instructions": [
                "TMP_78 = proto",
                "JUMP 0x232"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x231",
            "instructions": [
                "NOP",
                "JUMP 0x233"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x233",
            "instructions": [
                "TMP_25 = proto == 380",
                "CONDITION TMP_25 0x234 0x235"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x234",
            "instructions": [
                "TMP_78 = 400",
                "JUMP 0x232"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x235",
            "instructions": [
                "NOP",
                "JUMP 0x236"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x236",
            "instructions": [
                "TMP_26 = proto == 381",
                "CONDITION TMP_26 0x237 0x238"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x237",
            "instructions": [
                "TMP_78 = 401",
                "JUMP 0x232"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x238",
            "instructions": [
                "NOP",
                "JUMP 0x239"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x239",
            "instructions": [
                "TMP_27 = proto == 394",
                "CONDITION TMP_27 0x23a 0x23b"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x23a",
            "instructions": [
                "TMP_78 = 402",
                "JUMP 0x232"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x23b",
            "instructions": [
                "NOP",
                "JUMP 0x23c"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x23d",
            "instructions": [
                "found = NEW_VAL unknown",
                "index = NEW_VAL unknown",
                "CONDITION found 0x23e 0x23f"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x23e",
            "instructions": [
                "TMP_28 = 380 + index",
                "TMP_29 = NEW_VAL unknown",
                "TMP_78 = TMP_29",
                "JUMP 0x232"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x23f",
            "instructions": [
                "NOP",
                "JUMP 0x240"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x240",
            "instructions": [
                "TMP_30 = proto == 378",
                "CONDITION TMP_30 0x241 0x242"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x241",
            "instructions": [
                "TMP_78 = 65000",
                "JUMP 0x232"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x242",
            "instructions": [
                "NOP",
                "JUMP 0x243"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x243",
            "instructions": [
                "TMP_31 = proto == 379",
                "CONDITION TMP_31 0x244 0x245"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x244",
            "instructions": [
                "TMP_78 = 65001",
                "JUMP 0x232"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x245",
            "instructions": [
                "NOP",
                "JUMP 0x246"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x246",
            "instructions": [
                "TMP_32 = proto == 383",
                "CONDITION TMP_32 0x247 0x248"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x247",
            "instructions": [
                "TMP_78 = 65002",
                "JUMP 0x232"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x248",
            "instructions": [
                "NOP",
                "JUMP 0x249"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x249",
            "instructions": [
                "TMP_33 = proto == 384",
                "CONDITION TMP_33 0x24a 0x24b"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x24a",
            "instructions": [
                "TMP_78 = 65003",
                "JUMP 0x232"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x24b",
            "instructions": [
                "NOP",
                "JUMP 0x24c"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x24c",
            "instructions": [
                "CONDITION false 0x24c_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x24c_r0",
            "instructions": [
                "JUMP 0x232"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x24d",
            "instructions": [
                "NOP",
                "JUMP 0x24e"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x24e",
            "instructions": [
                "i = 0",
                "JUMP 0x24f"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x24f",
            "instructions": [
                "NOP",
                "REF_2 = LENGTH ebs",
                "TMP_35 = i < REF_2",
                "CONDITION TMP_35 0x250 0x251"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x250",
            "instructions": [
                "CLR_29 = ebs[i]",
                "REF_3 = CLR_29",
                "TMP_36 = REF_3 == proto",
                "CONDITION TMP_36 0x252 0x253"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x251",
            "instructions": [
                "NOP",
                "JUMP 0x254"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x254",
            "instructions": [
                "TMP_79 = false",
                "JUMP 0x255"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x252",
            "instructions": [
                "TMP_79 = true",
                "JUMP 0x255"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x253",
            "instructions": [
                "NOP",
                "JUMP 0x256"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x256",
            "instructions": [
                "TMP_37 = i",
                "i = i + 1",
                "JUMP 0x24f"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x255",
            "instructions": [
                "TMP_79 = i",
                "JUMP 0x257"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x23c",
            "instructions": [
                "NOP",
                "NOP",
                "proto = proto",
                "JUMP 0x24d"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x257",
            "instructions": [
                "TUPLE_1 = TMP_79",
                "JUMP 0x23d"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x229",
            "instructions": [
                "TMP_62 = loopStart + i",
                "x = TMP_62",
                "CLR_30 = sdl.protos",
                "REF_18 = CLR_30",
                "CLR_31 = REF_18[i]",
                "REF_19 = CLR_31",
                "CLR_32 = sdl.oldProtos",
                "REF_20 = CLR_32",
                "CLR_33 = REF_20[x]",
                "REF_21 = CLR_33",
                "proto = REF_21",
                "JUMP 0x22e"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x232",
            "instructions": [
                "TMP_63 = TMP_78",
                "JUMP 0x258"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x259",
            "instructions": [
                "NOP",
                "JUMP 0x25a"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x25a",
            "instructions": [
                "TMP_19 = purity \/ 1000",
                "TMP_20 = 4 - TMP_19",
                "TMP_21 = NEW_VAL unknown",
                "TMP_77 = TMP_21",
                "JUMP 0x25b"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x258",
            "instructions": [
                "REF_18[i] = TMP_63",
                "CLR_34 = sdl.qualities",
                "REF_22 = CLR_34",
                "CLR_35 = REF_22[i]",
                "REF_23 = CLR_35",
                "CLR_36 = sdl.purities",
                "REF_24 = CLR_36",
                "CLR_37 = REF_24[x]",
                "REF_25 = CLR_37",
                "purity = REF_25",
                "JUMP 0x259"
            ]
        },
        {
            "scope": "migrate_v2",
            "addr": "0x25b",
            "instructions": [
                "TMP_64 = TMP_77",
                "JUMP 0x22d"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x22c",
            "instructions": [
                "NCV_2 = NEW_VAL unknown",
                "sdl.oldProtos = NCV_2",
                "NCV_3 = NEW_VAL unknown",
                "sdl.purities = NCV_3",
                "TMP_60 = current * 5",
                "loopStart = TMP_60",
                "i = 0",
                "JUMP 0x25c"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x25c",
            "instructions": [
                "NOP",
                "TMP_61 = i < remaining",
                "CONDITION TMP_61 0x25e 0x25d"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x25d",
            "instructions": [
                "NOP",
                "JUMP 0x25f"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x25f",
            "instructions": [
                "CLR_38 = sdl.protos",
                "REF_27 = CLR_38",
                "CLR_39 = sdl.qualities",
                "REF_28 = CLR_39",
                "TMP_66 = NEW_VAL integer",
                "JUMP 0x260"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x260",
            "instructions": [
                "startID = TMP_66",
                "TMP_67 = NEW_VAL unknown",
                "CLR_40 = v1Migrated[TMP_67]",
                "REF_29 = CLR_40",
                "CLR_41 = REF_29[id]",
                "REF_30 = CLR_41",
                "REF_29[id] = true",
                "TMP_68 = loopStart + remaining",
                "loopEnd = TMP_68",
                "TMP_69 = NEW_VAL unknown",
                "NOP"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x261",
            "instructions": [
                "REF_22[i] = TMP_64",
                "TMP_65 = i",
                "i = i + 1",
                "JUMP 0x25c"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x262",
            "instructions": [
                "NOP",
                "JUMP 0x263"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x263",
            "instructions": [
                "TMP_22 = proto >= 1",
                "TMP_23 = proto <= 377",
                "TMP_24 = TMP_22 && TMP_23",
                "CONDITION TMP_24 0x264 0x265"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x264",
            "instructions": [
                "TMP_78 = proto",
                "JUMP 0x266"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x265",
            "instructions": [
                "NOP",
                "JUMP 0x267"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x267",
            "instructions": [
                "TMP_25 = proto == 380",
                "CONDITION TMP_25 0x268 0x269"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x268",
            "instructions": [
                "TMP_78 = 400",
                "JUMP 0x266"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x269",
            "instructions": [
                "NOP",
                "JUMP 0x26a"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x26a",
            "instructions": [
                "TMP_26 = proto == 381",
                "CONDITION TMP_26 0x26b 0x26c"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x26b",
            "instructions": [
                "TMP_78 = 401",
                "JUMP 0x266"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x26c",
            "instructions": [
                "NOP",
                "JUMP 0x26d"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x26d",
            "instructions": [
                "TMP_27 = proto == 394",
                "CONDITION TMP_27 0x26e 0x26f"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x26e",
            "instructions": [
                "TMP_78 = 402",
                "JUMP 0x266"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x26f",
            "instructions": [
                "NOP",
                "JUMP 0x270"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x271",
            "instructions": [
                "found = NEW_VAL unknown",
                "index = NEW_VAL unknown",
                "CONDITION found 0x272 0x273"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x272",
            "instructions": [
                "TMP_28 = 380 + index",
                "TMP_29 = NEW_VAL unknown",
                "TMP_78 = TMP_29",
                "JUMP 0x266"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x273",
            "instructions": [
                "NOP",
                "JUMP 0x274"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x274",
            "instructions": [
                "TMP_30 = proto == 378",
                "CONDITION TMP_30 0x275 0x276"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x275",
            "instructions": [
                "TMP_78 = 65000",
                "JUMP 0x266"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x276",
            "instructions": [
                "NOP",
                "JUMP 0x277"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x277",
            "instructions": [
                "TMP_31 = proto == 379",
                "CONDITION TMP_31 0x278 0x279"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x278",
            "instructions": [
                "TMP_78 = 65001",
                "JUMP 0x266"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x279",
            "instructions": [
                "NOP",
                "JUMP 0x27a"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x27a",
            "instructions": [
                "TMP_32 = proto == 383",
                "CONDITION TMP_32 0x27b 0x27c"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x27b",
            "instructions": [
                "TMP_78 = 65002",
                "JUMP 0x266"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x27c",
            "instructions": [
                "NOP",
                "JUMP 0x27d"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x27d",
            "instructions": [
                "TMP_33 = proto == 384",
                "CONDITION TMP_33 0x27e 0x27f"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x27e",
            "instructions": [
                "TMP_78 = 65003",
                "JUMP 0x266"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x27f",
            "instructions": [
                "NOP",
                "JUMP 0x280"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x280",
            "instructions": [
                "CONDITION false 0x280_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x280_r0",
            "instructions": [
                "JUMP 0x266"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x281",
            "instructions": [
                "NOP",
                "JUMP 0x282"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x282",
            "instructions": [
                "i = 0",
                "JUMP 0x283"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x283",
            "instructions": [
                "NOP",
                "REF_2 = LENGTH ebs",
                "TMP_35 = i < REF_2",
                "CONDITION TMP_35 0x284 0x285"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x284",
            "instructions": [
                "CLR_42 = ebs[i]",
                "REF_3 = CLR_42",
                "TMP_36 = REF_3 == proto",
                "CONDITION TMP_36 0x286 0x287"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x285",
            "instructions": [
                "NOP",
                "JUMP 0x288"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x288",
            "instructions": [
                "TMP_79 = false",
                "JUMP 0x289"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x286",
            "instructions": [
                "TMP_79 = true",
                "JUMP 0x289"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x287",
            "instructions": [
                "NOP",
                "JUMP 0x28a"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x28a",
            "instructions": [
                "TMP_37 = i",
                "i = i + 1",
                "JUMP 0x283"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x289",
            "instructions": [
                "TMP_79 = i",
                "JUMP 0x28b"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x270",
            "instructions": [
                "NOP",
                "NOP",
                "proto = proto",
                "JUMP 0x281"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x28b",
            "instructions": [
                "TUPLE_1 = TMP_79",
                "JUMP 0x271"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x25e",
            "instructions": [
                "TMP_62 = loopStart + i",
                "x = TMP_62",
                "CLR_43 = sdl.protos",
                "REF_18 = CLR_43",
                "CLR_44 = REF_18[i]",
                "REF_19 = CLR_44",
                "CLR_45 = sdl.oldProtos",
                "REF_20 = CLR_45",
                "CLR_46 = REF_20[x]",
                "REF_21 = CLR_46",
                "proto = REF_21",
                "JUMP 0x262"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x266",
            "instructions": [
                "TMP_63 = TMP_78",
                "JUMP 0x28c"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x28d",
            "instructions": [
                "NOP",
                "JUMP 0x28e"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x28e",
            "instructions": [
                "TMP_19 = purity \/ 1000",
                "TMP_20 = 4 - TMP_19",
                "TMP_21 = NEW_VAL unknown",
                "TMP_77 = TMP_21",
                "JUMP 0x28f"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x28c",
            "instructions": [
                "REF_18[i] = TMP_63",
                "CLR_47 = sdl.qualities",
                "REF_22 = CLR_47",
                "CLR_48 = REF_22[i]",
                "REF_23 = CLR_48",
                "CLR_49 = sdl.purities",
                "REF_24 = CLR_49",
                "CLR_50 = REF_24[x]",
                "REF_25 = CLR_50",
                "purity = REF_25",
                "JUMP 0x28d"
            ]
        },
        {
            "scope": "migrate_v1",
            "addr": "0x28f",
            "instructions": [
                "TMP_64 = TMP_77",
                "JUMP 0x261"
            ]
        },
        {
            "scope": "trap",
            "addr": "0x290",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}