{
    "file": "0x0efef0b34638addc8833ba729ae20016b5f24ffc.sol",
    "global_structs": [
        {
            "name": "Deposit",
            "fields": {
                "block": [
                    "integer"
                ],
                "token": [
                    "integer"
                ],
                "amount": [
                    "integer"
                ],
                "canceled": [
                    "boolean"
                ]
            }
        },
        {
            "name": "struct_block",
            "fields": {
                "coinbase": [
                    "integer"
                ],
                "difficulty": [
                    "integer"
                ],
                "gaslimit": [
                    "integer"
                ],
                "number": [
                    "integer"
                ],
                "timestamp": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_msg",
            "fields": {
                "data": [
                    "integer"
                ],
                "sender": [
                    "integer"
                ],
                "sig": [
                    "integer"
                ],
                "value": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_tx",
            "fields": {
                "gasprice": [
                    "integer"
                ],
                "origin": [
                    "integer"
                ]
            }
        },
        {
            "name": "struct_this",
            "fields": {
                "balance": [
                    "integer"
                ],
                "address": [
                    "integer"
                ]
            }
        }
    ],
    "global_variables": [
        {
            "name": "block",
            "type": [
                "struct_block"
            ],
            "init": []
        },
        {
            "name": "msg",
            "type": [
                "struct_msg"
            ],
            "init": [
                "0x53"
            ]
        },
        {
            "name": "now",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "tx",
            "type": [
                "struct_tx"
            ],
            "init": []
        },
        {
            "name": "this",
            "type": [
                "struct_this"
            ],
            "init": [
                "0x54"
            ]
        },
        {
            "name": "msg_sender",
            "type": [
                "integer"
            ],
            "init": [
                "0x55"
            ]
        },
        {
            "name": "addmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "mulmod",
            "type": [
                "function3"
            ],
            "init": []
        },
        {
            "name": "keccak",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha256",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "sha3",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "ripemd160",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "ecrecover",
            "type": [
                "function4"
            ],
            "init": []
        },
        {
            "name": "blockhash",
            "type": [
                "function1"
            ],
            "init": []
        },
        {
            "name": "newOwnerCandidate",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "escapeBlacklist",
            "type": [
                "array",
                "integer",
                "boolean"
            ],
            "init": []
        },
        {
            "name": "deposits",
            "type": [
                "array",
                "Deposit"
            ],
            "init": []
        },
        {
            "name": "nextDepositToPayout",
            "type": [
                "array",
                "integer",
                "integer"
            ],
            "init": []
        },
        {
            "name": "skipDeposits",
            "type": [
                "array",
                "integer",
                [
                    "array",
                    "integer",
                    "boolean"
                ]
            ],
            "init": []
        },
        {
            "name": "rewardToken",
            "type": [
                "integer"
            ],
            "init": [
                "0x25"
            ]
        },
        {
            "name": "owner",
            "type": [
                "integer"
            ],
            "init": [
                "0xf"
            ]
        },
        {
            "name": "escapeHatchDestination",
            "type": [
                "integer"
            ],
            "init": [
                "0x15",
                "0x24"
            ]
        },
        {
            "name": "escapeHatchCaller",
            "type": [
                "integer"
            ],
            "init": [
                "0x14",
                "0x23"
            ]
        },
        {
            "name": "ERC20",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Owned",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "Escapable",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "MiniMeToken",
            "type": [
                "integer"
            ],
            "init": []
        },
        {
            "name": "WithdrawContract",
            "type": [
                "integer"
            ],
            "init": []
        }
    ],
    "global_blocks": [
        {
            "scope": "__GLOBAL__",
            "addr": "0xf",
            "instructions": [
                "owner = msg_sender"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x14",
            "instructions": [
                "escapeHatchCaller = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x15",
            "instructions": [
                "escapeHatchDestination = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x23",
            "instructions": [
                "escapeHatchCaller = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x24",
            "instructions": [
                "escapeHatchDestination = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x25",
            "instructions": [
                "rewardToken = U"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x53",
            "instructions": [
                "msg.sender = 0x6"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x54",
            "instructions": [
                "this.address = 0x5"
            ]
        },
        {
            "scope": "__GLOBAL__",
            "addr": "0x55",
            "instructions": [
                "msg_sender = 0x4"
            ]
        }
    ],
    "range_variables": [
        {
            "name": "owner",
            "addrs": [
                "0x2",
                "0x11",
                "0x34",
                "0x3a"
            ]
        },
        {
            "name": "newOwnerCandidate",
            "addrs": [
                "0x2",
                "0x13",
                "0x36",
                "0x38",
                "0x3c"
            ]
        },
        {
            "name": "skipDeposits",
            "addrs": [
                "0x2",
                "0x16"
            ]
        },
        {
            "name": "deposits",
            "addrs": [
                "0x2",
                "0x18",
                "0x3e",
                "0x41",
                "0x51"
            ]
        },
        {
            "name": "escapeHatchCaller",
            "addrs": [
                "0x2",
                "0x43"
            ]
        },
        {
            "name": "nextDepositToPayout",
            "addrs": [
                "0x2",
                "0x46",
                "0x4b"
            ]
        }
    ],
    "range_blocks": [
        {
            "scope": "__RANGE__",
            "addr": "0x1",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x2",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x11",
            "instructions": [
                "CLR_0 = msg.sender",
                "RTMP_237 = CLR_0 == newOwnerCandidate",
                "CONDITION RTMP_237 0x10 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x10",
            "instructions": [
                "owner = newOwnerCandidate"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x13",
            "instructions": [
                "CLR_1 = msg.sender",
                "RTMP_238 = CLR_1 == newOwnerCandidate",
                "CONDITION RTMP_238 0x12 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x12",
            "instructions": [
                "newOwnerCandidate = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x16",
            "instructions": [
                "CLR_2 = msg.sender",
                "CLR_3 = skipDeposits[CLR_2]",
                "REF_81 = CLR_3",
                "CLR_4 = REF_81[U]",
                "REF_82 = CLR_4",
                "REF_81[0] = U",
                "REF_81[1] = U",
                "REF_81[2] = U",
                "REF_81[3] = U",
                "REF_81[4] = U",
                "REF_81[5] = U",
                "REF_81[6] = U",
                "REF_81[7] = U",
                "REF_81[8] = U",
                "REF_81[9] = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x18",
            "instructions": [
                "CLR_5 = msg.sender",
                "RTMP_240 = CLR_5 == owner",
                "CONDITION RTMP_240 0x17 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x17",
            "instructions": [
                "REF_83 = NEW_VAL integer",
                "TMP_239 = REF_83 + 1",
                "NCV_0 = NEW_VAL integer",
                "deposits.length = NCV_0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x34",
            "instructions": [
                "CLR_6 = msg.sender",
                "RTMP_253 = CLR_6 == owner",
                "CONDITION RTMP_253 0x33 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x33",
            "instructions": [
                "owner = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x36",
            "instructions": [
                "CLR_7 = msg.sender",
                "RTMP_254 = CLR_7 == owner",
                "CONDITION RTMP_254 0x35 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x35",
            "instructions": [
                "newOwnerCandidate = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x38",
            "instructions": [
                "CLR_8 = msg.sender",
                "RTMP_255 = CLR_8 == owner",
                "CONDITION RTMP_255 0x37 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x37",
            "instructions": [
                "newOwnerCandidate = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3a",
            "instructions": [
                "CLR_9 = msg.sender",
                "RTMP_256 = CLR_9 == owner",
                "CONDITION RTMP_256 0x39 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x39",
            "instructions": [
                "owner = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3c",
            "instructions": [
                "CLR_10 = msg.sender",
                "RTMP_257 = CLR_10 == owner",
                "CONDITION RTMP_257 0x3b 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3b",
            "instructions": [
                "newOwnerCandidate = 0"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3e",
            "instructions": [
                "CLR_11 = msg.sender",
                "RTMP_259 = CLR_11 == owner",
                "CONDITION RTMP_259 0x3f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3f",
            "instructions": [
                "CLR_12 = msg.value",
                "RTMP_260 = CLR_12 > 0",
                "CONDITION RTMP_260 0x3d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x3d",
            "instructions": [
                "REF_84 = NEW_VAL integer",
                "TMP_258 = REF_84 + 1",
                "NCV_1 = NEW_VAL integer",
                "deposits.length = NCV_1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x41",
            "instructions": [
                "CLR_13 = msg.sender",
                "RTMP_261 = CLR_13 == owner",
                "CONDITION RTMP_261 0x40 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x40",
            "instructions": [
                "CLR_14 = deposits[U]",
                "REF_85 = CLR_14",
                "CLR_15 = REF_85.canceled",
                "REF_86 = CLR_15",
                "REF_85.canceled = true"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x43",
            "instructions": [
                "CLR_16 = msg.sender",
                "RTMP_262 = CLR_16 == escapeHatchCaller",
                "CONDITION RTMP_262 0x44 0x44"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x44",
            "instructions": [
                "CLR_17 = msg.sender",
                "RTMP_263 = CLR_17 == owner",
                "CONDITION RTMP_263 0x42 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x42",
            "instructions": [
                "escapeHatchCaller = U"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x46",
            "instructions": [
                "CLR_18 = msg.sender",
                "CLR_19 = nextDepositToPayout[CLR_18]",
                "REF_92 = CLR_19",
                "CLR_20 = msg.sender",
                "CLR_21 = nextDepositToPayout[CLR_20]",
                "REF_93 = CLR_21",
                "REF_94 = NEW_VAL integer",
                "RTMP_266 = REF_92 < REF_94",
                "RTMP_267 = REF_93 < REF_94",
                "RTMP_268 = RTMP_266 || RTMP_267",
                "CONDITION RTMP_268 0x1 0x47"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x47",
            "instructions": [
                "CLR_22 = msg.gas",
                "REF_95 = CLR_22",
                "RTMP_269 = REF_95 > 148000",
                "CONDITION RTMP_269 0x1 0x48"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x48",
            "instructions": [
                "CLR_23 = msg.sender",
                "CLR_24 = nextDepositToPayout[CLR_23]",
                "REF_89 = CLR_24",
                "REF_90 = NEW_VAL integer",
                "RTMP_264 = REF_89 < REF_90",
                "CONDITION RTMP_264 0x49 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x49",
            "instructions": [
                "CLR_25 = msg.gas",
                "REF_91 = CLR_25",
                "RTMP_265 = REF_91 > 149000",
                "CONDITION RTMP_265 0x45 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x45",
            "instructions": [
                "CLR_26 = msg.sender",
                "CLR_27 = nextDepositToPayout[CLR_26]",
                "REF_87 = CLR_27",
                "CLR_28 = msg.sender",
                "CLR_29 = nextDepositToPayout[CLR_28]",
                "REF_88 = CLR_29",
                "CLR_30 = msg.sender",
                "nextDepositToPayout[CLR_30] = REF_87",
                "CLR_31 = msg.sender",
                "nextDepositToPayout[CLR_31] = REF_88"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4b",
            "instructions": [
                "CLR_32 = msg.sender",
                "CLR_33 = nextDepositToPayout[CLR_32]",
                "REF_101 = CLR_33",
                "CLR_34 = msg.sender",
                "CLR_35 = nextDepositToPayout[CLR_34]",
                "REF_102 = CLR_35",
                "REF_103 = NEW_VAL integer",
                "RTMP_272 = REF_101 < REF_103",
                "RTMP_273 = REF_102 < REF_103",
                "RTMP_274 = RTMP_272 || RTMP_273",
                "CONDITION RTMP_274 0x4c 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4c",
            "instructions": [
                "CLR_36 = msg.gas",
                "REF_104 = CLR_36",
                "RTMP_275 = REF_104 > 148000",
                "CONDITION RTMP_275 0x4d 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4d",
            "instructions": [
                "CLR_37 = msg.sender",
                "CLR_38 = nextDepositToPayout[CLR_37]",
                "REF_98 = CLR_38",
                "REF_99 = NEW_VAL integer",
                "RTMP_270 = REF_98 < REF_99",
                "CONDITION RTMP_270 0x4e 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4e",
            "instructions": [
                "CLR_39 = msg.gas",
                "REF_100 = CLR_39",
                "RTMP_271 = REF_100 > 149000",
                "CONDITION RTMP_271 0x4f 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4f",
            "instructions": [
                "CLR_40 = deposits[U]",
                "REF_105 = CLR_40",
                "CLR_41 = REF_105.token",
                "REF_106 = CLR_41",
                "CLR_42 = deposits[U]",
                "REF_107 = CLR_42",
                "CLR_43 = REF_107.token",
                "REF_108 = CLR_43",
                "CLR_44 = deposits[U]",
                "REF_109 = CLR_44",
                "CLR_45 = REF_109.token",
                "REF_110 = CLR_45",
                "RTMP_276 = REF_106 != REF_110",
                "RTMP_277 = REF_108 != REF_110",
                "RTMP_278 = RTMP_276 || RTMP_277",
                "CONDITION RTMP_278 0x4a 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x4a",
            "instructions": [
                "CLR_46 = msg.sender",
                "CLR_47 = nextDepositToPayout[CLR_46]",
                "REF_96 = CLR_47",
                "CLR_48 = msg.sender",
                "CLR_49 = nextDepositToPayout[CLR_48]",
                "REF_97 = CLR_49",
                "CLR_50 = msg.sender",
                "nextDepositToPayout[CLR_50] = REF_96",
                "CLR_51 = msg.sender",
                "nextDepositToPayout[CLR_51] = REF_97"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x51",
            "instructions": [
                "CLR_52 = msg.sender",
                "RTMP_259 = CLR_52 == owner",
                "CONDITION RTMP_259 0x52 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x52",
            "instructions": [
                "CLR_53 = msg.value",
                "RTMP_260 = CLR_53 > 0",
                "CONDITION RTMP_260 0x50 0x1"
            ]
        },
        {
            "scope": "__RANGE__",
            "addr": "0x50",
            "instructions": [
                "REF_84 = NEW_VAL integer",
                "TMP_258 = REF_84 + 1",
                "NCV_2 = NEW_VAL integer",
                "deposits.length = NCV_2"
            ]
        }
    ],
    "root_addr": "0x56",
    "dest_addrs": [
        "0xc0"
    ],
    "normal_blocks": [
        {
            "scope": "withdraw_v1",
            "addr": "0x56",
            "instructions": [
                "NOP",
                "i = NEW_VAL integer",
                "d = NEW_VAL Deposit",
                "currentToken = NEW_VAL integer",
                "_idDeposit = NEW_VAL integer",
                "_holder = NEW_VAL integer",
                "_dest = NEW_VAL integer",
                "acc = NEW_VAL integer",
                "_idDeposit = NEW_VAL integer",
                "_token = NEW_VAL integer",
                "_amount = NEW_VAL integer",
                "JUMP 0x57"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x57",
            "instructions": [
                "acc = 0",
                "CLR_54 = msg.sender",
                "CLR_55 = nextDepositToPayout[CLR_54]",
                "REF_30 = CLR_55",
                "i = REF_30",
                "REF_31 = LENGTH deposits",
                "TMP_119 = i < REF_31",
                "CONDITION TMP_119 0x57_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x57_r0",
            "instructions": [
                "JUMP 0x58"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x58",
            "instructions": [
                "CLR_56 = deposits[i]",
                "REF_32 = CLR_56",
                "CLR_57 = REF_32.token",
                "REF_33 = CLR_57",
                "currentToken = REF_33",
                "CLR_58 = msg.gas",
                "TMP_121 = CLR_58 > 149000",
                "CONDITION TMP_121 0x58_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x58_r0",
            "instructions": [
                "JUMP 0x59"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x59",
            "instructions": [
                "NOP",
                "REF_34 = LENGTH deposits",
                "TMP_123 = i < REF_34",
                "CLR_59 = msg.gas",
                "TMP_124 = CLR_59 > 148000",
                "TMP_125 = TMP_123 && TMP_124",
                "CONDITION TMP_125 0x5b 0x5a"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x5a",
            "instructions": [
                "NOP",
                "JUMP 0x5c"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x5d",
            "instructions": [
                "TMP_128 = ! TMP_127",
                "TMP_129 = TMP_126 && TMP_128",
                "CONDITION TMP_129 0x5e 0x5f"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x5e",
            "instructions": [
                "CLR_60 = d.token",
                "REF_37 = CLR_60",
                "TMP_130 = currentToken != REF_37",
                "CONDITION TMP_130 0x60 0x5f"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x61",
            "instructions": [
                "NOP",
                "JUMP 0x62"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x62",
            "instructions": [
                "TMP_140 = i",
                "i = i + 1",
                "JUMP 0x59"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x63",
            "instructions": [
                "NOP",
                "JUMP 0x64"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x64",
            "instructions": [
                "CLR_61 = d.amount",
                "REF_41 = CLR_61",
                "CLR_62 = d.block",
                "REF_43 = CLR_62",
                "TMP_136 = NEW_VAL integer",
                "JUMP 0x65"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x65",
            "instructions": [
                "TMP_137 = REF_41 * TMP_136",
                "CLR_63 = d.block",
                "REF_45 = CLR_63",
                "TMP_138 = NEW_VAL integer",
                "JUMP 0x66"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x66",
            "instructions": [
                "TMP_139 = TMP_137 \/ TMP_138",
                "acc = acc + TMP_139",
                "JUMP 0x61"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x67",
            "instructions": [
                "CONDITION TMP_132 0x67_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x67_r0",
            "instructions": [
                "JUMP 0x68"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x68",
            "instructions": [
                "CLR_64 = msg.sender",
                "CLR_65 = nextDepositToPayout[CLR_64]",
                "REF_39 = CLR_65",
                "TMP_134 = REF_39 == i",
                "CONDITION TMP_134 0x68_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x68_r0",
            "instructions": [
                "JUMP 0x69"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x69",
            "instructions": [
                "CLR_66 = d.token",
                "REF_40 = CLR_66",
                "currentToken = REF_40",
                "acc = 0",
                "JUMP 0x63"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x6a",
            "instructions": [
                "NOP",
                "JUMP 0x6b"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x6b",
            "instructions": [
                "TMP_173 = _amount == 0",
                "CONDITION TMP_173 0x5f 0x6c"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x6c",
            "instructions": [
                "NOP",
                "JUMP 0x6d"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x6d",
            "instructions": [
                "TMP_174 = NEW_VAL unknown",
                "TMP_175 = TMP_174 == 0",
                "CONDITION TMP_175 0x5f 0x6e"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x6e",
            "instructions": [
                "ATTACK",
                "TMP_178 = NEW_VAL boolean",
                "JUMP 0x6f"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x5c",
            "instructions": [
                "CLR_67 = msg.sender",
                "CLR_68 = nextDepositToPayout[CLR_67]",
                "REF_46 = CLR_68",
                "CLR_69 = msg.sender",
                "nextDepositToPayout[CLR_69] = i",
                "TMP_141 = i - 1",
                "_idDeposit = TMP_141",
                "CLR_70 = msg.sender",
                "_dest = CLR_70",
                "_token = currentToken",
                "_amount = acc",
                "JUMP 0x6a"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x70",
            "instructions": [
                "NOP",
                "JUMP 0x71"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x71",
            "instructions": [
                "CLR_71 = skipDeposits[_holder]",
                "REF_73 = CLR_71",
                "CLR_72 = REF_73[_idDeposit]",
                "REF_74 = CLR_72",
                "TMP_230 = REF_74",
                "JUMP 0x72"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x5b",
            "instructions": [
                "CLR_73 = deposits[i]",
                "REF_35 = CLR_73",
                "d = REF_35",
                "CLR_74 = d.canceled",
                "REF_36 = CLR_74",
                "TMP_126 = ! REF_36",
                "CLR_75 = msg.sender",
                "_holder = CLR_75",
                "_idDeposit = i",
                "JUMP 0x70"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x72",
            "instructions": [
                "TMP_127 = TMP_230",
                "JUMP 0x5d"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x73",
            "instructions": [
                "NOP",
                "JUMP 0x74"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x74",
            "instructions": [
                "TMP_173 = _amount == 0",
                "CONDITION TMP_173 0x75 0x76"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x75",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x77"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x76",
            "instructions": [
                "NOP",
                "JUMP 0x78"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x78",
            "instructions": [
                "TMP_174 = NEW_VAL unknown",
                "TMP_175 = TMP_174 == 0",
                "CONDITION TMP_175 0x79 0x7a"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x79",
            "instructions": [
                "CLR_76 = this.balance",
                "WRP_0 = CLR_76 - _amount",
                "this.balance = WRP_0",
                "TMP_176 = NEW_VAL unknown",
                "JUMP 0x7b"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7a",
            "instructions": [
                "TMP_178 = NEW_VAL boolean",
                "JUMP 0x7c"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7c",
            "instructions": [
                "TMP_179 = ! TMP_178",
                "CONDITION TMP_179 0x7d 0x7e"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7d",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x77"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7e",
            "instructions": [
                "NOP",
                "JUMP 0x7f"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7f",
            "instructions": [
                "NOP",
                "JUMP 0x80"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x80",
            "instructions": [
                "NOP",
                "JUMP 0x81"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x81",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x77"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x7b",
            "instructions": [
                "TMP_177 = ! TMP_176",
                "CONDITION TMP_177 0x82 0x83"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x82",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x77"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x83",
            "instructions": [
                "NOP",
                "JUMP 0x7f"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x60",
            "instructions": [
                "CLR_77 = msg.sender",
                "CLR_78 = nextDepositToPayout[CLR_77]",
                "REF_38 = CLR_78",
                "CLR_79 = msg.sender",
                "nextDepositToPayout[CLR_79] = i",
                "TMP_131 = i - 1",
                "_idDeposit = TMP_131",
                "CLR_80 = msg.sender",
                "_dest = CLR_80",
                "_token = currentToken",
                "_amount = acc",
                "JUMP 0x73"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x77",
            "instructions": [
                "TMP_132 = TMP_231",
                "JUMP 0x67"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x6f",
            "instructions": [
                "NOP",
                "i = NEW_VAL integer",
                "d = NEW_VAL Deposit",
                "currentToken = NEW_VAL integer",
                "_idDeposit = NEW_VAL integer",
                "_holder = NEW_VAL integer",
                "_dest = NEW_VAL integer",
                "acc = NEW_VAL integer",
                "_idDeposit = NEW_VAL integer",
                "_token = NEW_VAL integer",
                "_amount = NEW_VAL integer",
                "JUMP 0x84"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x84",
            "instructions": [
                "acc = 0",
                "CLR_81 = msg.sender",
                "CLR_82 = nextDepositToPayout[CLR_81]",
                "REF_30 = CLR_82",
                "i = REF_30",
                "REF_31 = LENGTH deposits",
                "TMP_119 = i < REF_31",
                "CONDITION TMP_119 0x84_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x84_r0",
            "instructions": [
                "JUMP 0x85"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x85",
            "instructions": [
                "CLR_83 = deposits[i]",
                "REF_32 = CLR_83",
                "CLR_84 = REF_32.token",
                "REF_33 = CLR_84",
                "currentToken = REF_33",
                "CLR_85 = msg.gas",
                "TMP_121 = CLR_85 > 149000",
                "CONDITION TMP_121 0x85_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x85_r0",
            "instructions": [
                "JUMP 0x86"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x86",
            "instructions": [
                "NOP",
                "REF_34 = LENGTH deposits",
                "TMP_123 = i < REF_34",
                "CLR_86 = msg.gas",
                "TMP_124 = CLR_86 > 148000",
                "TMP_125 = TMP_123 && TMP_124",
                "CONDITION TMP_125 0x88 0x87"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x87",
            "instructions": [
                "NOP",
                "JUMP 0x89"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x8a",
            "instructions": [
                "CONDITION TMP_142 0x8a_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x8a_r0",
            "instructions": [
                "JUMP 0x8b"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x8b",
            "instructions": [
                "CLR_87 = msg.sender",
                "CLR_88 = nextDepositToPayout[CLR_87]",
                "REF_47 = CLR_88",
                "TMP_144 = REF_47 == i",
                "CONDITION TMP_144 0x8b_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x8b_r0",
            "instructions": [
                "JUMP 0x8c"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x8d",
            "instructions": [
                "TMP_128 = ! TMP_127",
                "TMP_129 = TMP_126 && TMP_128",
                "CONDITION TMP_129 0x8e 0x5f"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x8e",
            "instructions": [
                "CLR_89 = d.token",
                "REF_37 = CLR_89",
                "TMP_130 = currentToken != REF_37",
                "CONDITION TMP_130 0x8f 0x5f"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x90",
            "instructions": [
                "NOP",
                "JUMP 0x91"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x91",
            "instructions": [
                "TMP_140 = i",
                "i = i + 1",
                "JUMP 0x86"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x92",
            "instructions": [
                "NOP",
                "JUMP 0x93"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x93",
            "instructions": [
                "CLR_90 = d.amount",
                "REF_41 = CLR_90",
                "CLR_91 = d.block",
                "REF_43 = CLR_91",
                "TMP_136 = NEW_VAL integer",
                "JUMP 0x94"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x94",
            "instructions": [
                "TMP_137 = REF_41 * TMP_136",
                "CLR_92 = d.block",
                "REF_45 = CLR_92",
                "TMP_138 = NEW_VAL integer",
                "JUMP 0x95"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x95",
            "instructions": [
                "TMP_139 = TMP_137 \/ TMP_138",
                "acc = acc + TMP_139",
                "JUMP 0x90"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x96",
            "instructions": [
                "CONDITION TMP_132 0x96_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x96_r0",
            "instructions": [
                "JUMP 0x97"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x97",
            "instructions": [
                "CLR_93 = msg.sender",
                "CLR_94 = nextDepositToPayout[CLR_93]",
                "REF_39 = CLR_94",
                "TMP_134 = REF_39 == i",
                "CONDITION TMP_134 0x97_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x97_r0",
            "instructions": [
                "JUMP 0x98"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x98",
            "instructions": [
                "CLR_95 = d.token",
                "REF_40 = CLR_95",
                "currentToken = REF_40",
                "acc = 0",
                "JUMP 0x92"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x99",
            "instructions": [
                "NOP",
                "JUMP 0x9a"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x9a",
            "instructions": [
                "TMP_173 = _amount == 0",
                "CONDITION TMP_173 0x9b 0x9c"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x9b",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x9d"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x9c",
            "instructions": [
                "NOP",
                "JUMP 0x9e"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x9e",
            "instructions": [
                "TMP_174 = NEW_VAL unknown",
                "TMP_175 = TMP_174 == 0",
                "CONDITION TMP_175 0x9f 0xa0"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x9f",
            "instructions": [
                "CLR_96 = this.balance",
                "WRP_1 = CLR_96 - _amount",
                "this.balance = WRP_1",
                "TMP_176 = NEW_VAL unknown",
                "JUMP 0xa1"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xa0",
            "instructions": [
                "TMP_178 = NEW_VAL boolean",
                "JUMP 0xa2"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xa2",
            "instructions": [
                "TMP_179 = ! TMP_178",
                "CONDITION TMP_179 0xa3 0xa4"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xa3",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x9d"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xa4",
            "instructions": [
                "NOP",
                "JUMP 0xa5"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xa5",
            "instructions": [
                "NOP",
                "JUMP 0xa6"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xa6",
            "instructions": [
                "NOP",
                "JUMP 0xa7"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xa7",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0x9d"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xa1",
            "instructions": [
                "TMP_177 = ! TMP_176",
                "CONDITION TMP_177 0xa8 0xa9"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xa8",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0x9d"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xa9",
            "instructions": [
                "NOP",
                "JUMP 0xa5"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x89",
            "instructions": [
                "CLR_97 = msg.sender",
                "CLR_98 = nextDepositToPayout[CLR_97]",
                "REF_46 = CLR_98",
                "CLR_99 = msg.sender",
                "nextDepositToPayout[CLR_99] = i",
                "TMP_141 = i - 1",
                "_idDeposit = TMP_141",
                "CLR_100 = msg.sender",
                "_dest = CLR_100",
                "_token = currentToken",
                "_amount = acc",
                "JUMP 0x99"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x9d",
            "instructions": [
                "TMP_142 = TMP_231",
                "JUMP 0x8a"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xaa",
            "instructions": [
                "NOP",
                "JUMP 0xab"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xab",
            "instructions": [
                "CLR_101 = skipDeposits[_holder]",
                "REF_73 = CLR_101",
                "CLR_102 = REF_73[_idDeposit]",
                "REF_74 = CLR_102",
                "TMP_230 = REF_74",
                "JUMP 0xac"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x88",
            "instructions": [
                "CLR_103 = deposits[i]",
                "REF_35 = CLR_103",
                "d = REF_35",
                "CLR_104 = d.canceled",
                "REF_36 = CLR_104",
                "TMP_126 = ! REF_36",
                "CLR_105 = msg.sender",
                "_holder = CLR_105",
                "_idDeposit = i",
                "JUMP 0xaa"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xac",
            "instructions": [
                "TMP_127 = TMP_230",
                "JUMP 0x8d"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xad",
            "instructions": [
                "NOP",
                "JUMP 0xae"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xae",
            "instructions": [
                "TMP_173 = _amount == 0",
                "CONDITION TMP_173 0xaf 0xb0"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xaf",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0xb1"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xb0",
            "instructions": [
                "NOP",
                "JUMP 0xb2"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xb2",
            "instructions": [
                "TMP_174 = NEW_VAL unknown",
                "TMP_175 = TMP_174 == 0",
                "CONDITION TMP_175 0xb3 0xb4"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xb3",
            "instructions": [
                "CLR_106 = this.balance",
                "WRP_2 = CLR_106 - _amount",
                "this.balance = WRP_2",
                "TMP_176 = NEW_VAL unknown",
                "JUMP 0xb5"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xb4",
            "instructions": [
                "TMP_178 = NEW_VAL boolean",
                "JUMP 0xb6"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xb6",
            "instructions": [
                "TMP_179 = ! TMP_178",
                "CONDITION TMP_179 0xb7 0xb8"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xb7",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0xb1"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xb8",
            "instructions": [
                "NOP",
                "JUMP 0xb9"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xb9",
            "instructions": [
                "NOP",
                "JUMP 0xba"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xba",
            "instructions": [
                "NOP",
                "JUMP 0xbb"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xbb",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0xb1"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xb5",
            "instructions": [
                "TMP_177 = ! TMP_176",
                "CONDITION TMP_177 0xbc 0xbd"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xbc",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0xb1"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xbd",
            "instructions": [
                "NOP",
                "JUMP 0xb9"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0x8f",
            "instructions": [
                "CLR_107 = msg.sender",
                "CLR_108 = nextDepositToPayout[CLR_107]",
                "REF_38 = CLR_108",
                "CLR_109 = msg.sender",
                "nextDepositToPayout[CLR_109] = i",
                "TMP_131 = i - 1",
                "_idDeposit = TMP_131",
                "CLR_110 = msg.sender",
                "_dest = CLR_110",
                "_token = currentToken",
                "_amount = acc",
                "JUMP 0xad"
            ]
        },
        {
            "scope": "withdraw_v2",
            "addr": "0xb1",
            "instructions": [
                "TMP_132 = TMP_231",
                "JUMP 0x96"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xbe",
            "instructions": [
                "CONDITION TMP_142 0xbe_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xbe_r0",
            "instructions": [
                "JUMP 0xbf"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xbf",
            "instructions": [
                "CLR_111 = msg.sender",
                "CLR_112 = nextDepositToPayout[CLR_111]",
                "REF_47 = CLR_112",
                "TMP_144 = REF_47 == i",
                "CONDITION TMP_144 0xbf_r0 0xRequireTrap"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xbf_r0",
            "instructions": [
                "JUMP 0xc0"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xc0",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0x8c",
            "instructions": [
                "TMP_179 = ! TMP_178",
                "CONDITION TMP_179 0xc1 0xc2"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xc1",
            "instructions": [
                "TMP_231 = false",
                "JUMP 0xc3"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xc3",
            "instructions": [
                "TMP_142 = TMP_231",
                "JUMP 0xbe"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xc2",
            "instructions": [
                "NOP",
                "JUMP 0xc4"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xc4",
            "instructions": [
                "NOP",
                "JUMP 0xc5"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xc5",
            "instructions": [
                "NOP",
                "JUMP 0xc6"
            ]
        },
        {
            "scope": "withdraw_v1",
            "addr": "0xc6",
            "instructions": [
                "TMP_231 = true",
                "JUMP 0xc3"
            ]
        },
        {
            "scope": "trap",
            "addr": "0x5f",
            "instructions": [
                "NOP"
            ]
        },
        {
            "scope": "RequireTrap",
            "addr": "0xRequireTrap",
            "instructions": [
                "NOP"
            ]
        }
    ]
}