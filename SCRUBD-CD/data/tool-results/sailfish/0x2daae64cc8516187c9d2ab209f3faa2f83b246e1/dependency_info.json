{
    "0x2daae64cc8516187c9d2ab209f3faa2f83b246e1.sol": [
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitProposal",
                "submitProposal"
            ],
            "from_function": "submitProposal",
            "to_function": "submitProposal",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 451\nFunction: submitProposal\nNode: \nIF tributeOffered > 0 && userTokenBalances[GUILD][tributeToken] == 0\nIRS: \nCONDITION TMP_45\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 451\nFunction: submitProposal\nNode: \nIF tributeOffered > 0 && userTokenBalances[GUILD][tributeToken] == 0\nIRS: \nCONDITION TMP_45\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 463\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 62\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitProposal",
                "processProposal"
            ],
            "from_function": "processProposal",
            "to_function": "submitProposal",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 148\nFunction: processProposal\nNode: \nIF proposal.paymentRequested > userTokenBalances[GUILD][proposal.paymentToken]\nIRS: \nCONDITION TMP_182\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 148\nFunction: processProposal\nNode: \nIF proposal.paymentRequested > userTokenBalances[GUILD][proposal.paymentToken]\nIRS: \nCONDITION TMP_182\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: processProposal\nNode: \nIF proposal.tributeOffered > 0 && userTokenBalances[GUILD][proposal.tributeToken] == 0 && totalGuildBankTokens >= MAX_TOKEN_GUILDBANK_COUNT\nIRS: \nCONDITION TMP_187\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: processProposal\nNode: \nIF proposal.tributeOffered > 0 && userTokenBalances[GUILD][proposal.tributeToken] == 0 && totalGuildBankTokens >= MAX_TOKEN_GUILDBANK_COUNT\nIRS: \nCONDITION TMP_187\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.tributeToken] == 0 && proposal.tributeOffered > 0\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.tributeToken] == 0 && proposal.tributeOffered > 0\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.paymentToken] == 0 && proposal.paymentRequested > 0\nIRS: \nCONDITION TMP_202\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.paymentToken] == 0 && proposal.paymentRequested > 0\nIRS: \nCONDITION TMP_202\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 165\nFunction: _validateProposalForProcessing\nNode: \nEXPRESSION require(bool,string)(getCurrentPeriod() >= proposal.startingPeriod + votingPeriodLength + gracePeriodLength,proposal not ready)\nIRS: \nTMP_248 = SOLIDITY_CALL require(bool,string)(TMP_247,proposal not ready)\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                },
                {
                    "path": [
                        "\"BlockID: 166\nFunction: _validateProposalForProcessing\nNode: \nEXPRESSION require(bool,string)(proposal.flags[1] == 0,proposal already processed)\nIRS: \nTMP_250 = SOLIDITY_CALL require(bool,string)(TMP_249,proposal already processed)\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                },
                {
                    "path": [
                        "\"BlockID: 170\nFunction: _didPass\nNode: \nIF proposal.yesVotes > proposal.noVotes\nIRS: \nCONDITION TMP_237\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: _didPass\nNode: \nIF (totalSupply().mul(dilutionBound)) < proposal.maxTotalSharesAndLootAtYesVote\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitProposal",
                "processWhitelistProposal"
            ],
            "from_function": "processWhitelistProposal",
            "to_function": "submitProposal",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 218\nFunction: _validateProposalForProcessing\nNode: \nEXPRESSION require(bool,string)(getCurrentPeriod() >= proposal.startingPeriod + votingPeriodLength + gracePeriodLength,proposal not ready)\nIRS: \nTMP_248 = SOLIDITY_CALL require(bool,string)(TMP_247,proposal not ready)\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                },
                {
                    "path": [
                        "\"BlockID: 219\nFunction: _validateProposalForProcessing\nNode: \nEXPRESSION require(bool,string)(proposal.flags[1] == 0,proposal already processed)\nIRS: \nTMP_250 = SOLIDITY_CALL require(bool,string)(TMP_249,proposal already processed)\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                },
                {
                    "path": [
                        "\"BlockID: 223\nFunction: _didPass\nNode: \nIF proposal.yesVotes > proposal.noVotes\nIRS: \nCONDITION TMP_237\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                },
                {
                    "path": [
                        "\"BlockID: 224\nFunction: _didPass\nNode: \nIF (totalSupply().mul(dilutionBound)) < proposal.maxTotalSharesAndLootAtYesVote\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitProposal",
                "processGuildActionProposal"
            ],
            "from_function": "processGuildActionProposal",
            "to_function": "submitProposal",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 245\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 62\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 249\nFunction: _validateProposalForProcessing\nNode: \nEXPRESSION require(bool,string)(getCurrentPeriod() >= proposal.startingPeriod + votingPeriodLength + gracePeriodLength,proposal not ready)\nIRS: \nTMP_248 = SOLIDITY_CALL require(bool,string)(TMP_247,proposal not ready)\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                },
                {
                    "path": [
                        "\"BlockID: 250\nFunction: _validateProposalForProcessing\nNode: \nEXPRESSION require(bool,string)(proposal.flags[1] == 0,proposal already processed)\nIRS: \nTMP_250 = SOLIDITY_CALL require(bool,string)(TMP_249,proposal already processed)\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                },
                {
                    "path": [
                        "\"BlockID: 254\nFunction: _didPass\nNode: \nIF proposal.yesVotes > proposal.noVotes\nIRS: \nCONDITION TMP_237\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                },
                {
                    "path": [
                        "\"BlockID: 255\nFunction: _didPass\nNode: \nIF (totalSupply().mul(dilutionBound)) < proposal.maxTotalSharesAndLootAtYesVote\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitProposal",
                "processGuildKickProposal"
            ],
            "from_function": "processGuildKickProposal",
            "to_function": "submitProposal",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 268\nFunction: _validateProposalForProcessing\nNode: \nEXPRESSION require(bool,string)(getCurrentPeriod() >= proposal.startingPeriod + votingPeriodLength + gracePeriodLength,proposal not ready)\nIRS: \nTMP_248 = SOLIDITY_CALL require(bool,string)(TMP_247,proposal not ready)\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                },
                {
                    "path": [
                        "\"BlockID: 269\nFunction: _validateProposalForProcessing\nNode: \nEXPRESSION require(bool,string)(proposal.flags[1] == 0,proposal already processed)\nIRS: \nTMP_250 = SOLIDITY_CALL require(bool,string)(TMP_249,proposal already processed)\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                },
                {
                    "path": [
                        "\"BlockID: 273\nFunction: _didPass\nNode: \nIF proposal.yesVotes > proposal.noVotes\nIRS: \nCONDITION TMP_237\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                },
                {
                    "path": [
                        "\"BlockID: 274\nFunction: _didPass\nNode: \nIF (totalSupply().mul(dilutionBound)) < proposal.maxTotalSharesAndLootAtYesVote\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 67\nFunction: _submitProposal\nNode: \nEXPRESSION proposals[proposalCount] = proposal\nIRS: \nREF_33 := proposal\""
                    ],
                    "state_variable": "proposals"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitProposal",
                "ragequit"
            ],
            "from_function": "ragequit",
            "to_function": "submitProposal",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 297\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 297\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 306\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 306\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 307\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 307\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitProposal",
                "ragekick"
            ],
            "from_function": "ragekick",
            "to_function": "submitProposal",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 321\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 321\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 330\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 330\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 331\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 331\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitProposal",
                "withdrawBalance"
            ],
            "from_function": "withdrawBalance",
            "to_function": "submitProposal",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 337\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 337\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 338\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 338\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 334\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 62\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitProposal",
                "withdrawBalances"
            ],
            "from_function": "withdrawBalances",
            "to_function": "submitProposal",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 349\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 349\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 350\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 350\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 346\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 62\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "submitProposal",
                "unwrapShares"
            ],
            "from_function": "unwrapShares",
            "to_function": "submitProposal",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\"",
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\"",
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 418\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 62\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalance",
                "submitProposal"
            ],
            "from_function": "submitProposal",
            "to_function": "withdrawBalance",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 61\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 335\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: submitProposal\nNode: \nIF tributeOffered > 0 && userTokenBalances[GUILD][tributeToken] == 0\nIRS: \nCONDITION TMP_45\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: submitProposal\nNode: \nIF tributeOffered > 0 && userTokenBalances[GUILD][tributeToken] == 0\nIRS: \nCONDITION TMP_45\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalance",
                "processProposal"
            ],
            "from_function": "processProposal",
            "to_function": "withdrawBalance",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 148\nFunction: processProposal\nNode: \nIF proposal.paymentRequested > userTokenBalances[GUILD][proposal.paymentToken]\nIRS: \nCONDITION TMP_182\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 148\nFunction: processProposal\nNode: \nIF proposal.paymentRequested > userTokenBalances[GUILD][proposal.paymentToken]\nIRS: \nCONDITION TMP_182\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: processProposal\nNode: \nIF proposal.tributeOffered > 0 && userTokenBalances[GUILD][proposal.tributeToken] == 0 && totalGuildBankTokens >= MAX_TOKEN_GUILDBANK_COUNT\nIRS: \nCONDITION TMP_187\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: processProposal\nNode: \nIF proposal.tributeOffered > 0 && userTokenBalances[GUILD][proposal.tributeToken] == 0 && totalGuildBankTokens >= MAX_TOKEN_GUILDBANK_COUNT\nIRS: \nCONDITION TMP_187\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.tributeToken] == 0 && proposal.tributeOffered > 0\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.tributeToken] == 0 && proposal.tributeOffered > 0\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.paymentToken] == 0 && proposal.paymentRequested > 0\nIRS: \nCONDITION TMP_202\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.paymentToken] == 0 && proposal.paymentRequested > 0\nIRS: \nCONDITION TMP_202\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalance",
                "processGuildActionProposal"
            ],
            "from_function": "processGuildActionProposal",
            "to_function": "withdrawBalance",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 245\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 335\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalance",
                "ragequit"
            ],
            "from_function": "ragequit",
            "to_function": "withdrawBalance",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 297\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 297\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 306\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 306\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 307\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 307\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalance",
                "ragekick"
            ],
            "from_function": "ragekick",
            "to_function": "withdrawBalance",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 321\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 321\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 330\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 330\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 331\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 331\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalance",
                "withdrawBalance"
            ],
            "from_function": "withdrawBalance",
            "to_function": "withdrawBalance",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 473\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 335\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 476\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 476\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 477\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 477\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalance",
                "withdrawBalances"
            ],
            "from_function": "withdrawBalances",
            "to_function": "withdrawBalance",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 346\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 335\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 349\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 349\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 350\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 350\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalance",
                "unwrapShares"
            ],
            "from_function": "unwrapShares",
            "to_function": "withdrawBalance",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 418\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 335\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\"",
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\"",
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalances",
                "submitProposal"
            ],
            "from_function": "submitProposal",
            "to_function": "withdrawBalances",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 61\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 347\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: submitProposal\nNode: \nIF tributeOffered > 0 && userTokenBalances[GUILD][tributeToken] == 0\nIRS: \nCONDITION TMP_45\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: submitProposal\nNode: \nIF tributeOffered > 0 && userTokenBalances[GUILD][tributeToken] == 0\nIRS: \nCONDITION TMP_45\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalances",
                "processProposal"
            ],
            "from_function": "processProposal",
            "to_function": "withdrawBalances",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 148\nFunction: processProposal\nNode: \nIF proposal.paymentRequested > userTokenBalances[GUILD][proposal.paymentToken]\nIRS: \nCONDITION TMP_182\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 148\nFunction: processProposal\nNode: \nIF proposal.paymentRequested > userTokenBalances[GUILD][proposal.paymentToken]\nIRS: \nCONDITION TMP_182\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: processProposal\nNode: \nIF proposal.tributeOffered > 0 && userTokenBalances[GUILD][proposal.tributeToken] == 0 && totalGuildBankTokens >= MAX_TOKEN_GUILDBANK_COUNT\nIRS: \nCONDITION TMP_187\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: processProposal\nNode: \nIF proposal.tributeOffered > 0 && userTokenBalances[GUILD][proposal.tributeToken] == 0 && totalGuildBankTokens >= MAX_TOKEN_GUILDBANK_COUNT\nIRS: \nCONDITION TMP_187\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.tributeToken] == 0 && proposal.tributeOffered > 0\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.tributeToken] == 0 && proposal.tributeOffered > 0\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.paymentToken] == 0 && proposal.paymentRequested > 0\nIRS: \nCONDITION TMP_202\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.paymentToken] == 0 && proposal.paymentRequested > 0\nIRS: \nCONDITION TMP_202\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalances",
                "processGuildActionProposal"
            ],
            "from_function": "processGuildActionProposal",
            "to_function": "withdrawBalances",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 245\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 347\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalances",
                "ragequit"
            ],
            "from_function": "ragequit",
            "to_function": "withdrawBalances",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 297\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 297\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 306\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 306\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 307\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 307\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalances",
                "ragekick"
            ],
            "from_function": "ragekick",
            "to_function": "withdrawBalances",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 321\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 321\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 330\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 330\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 331\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 331\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalances",
                "withdrawBalance"
            ],
            "from_function": "withdrawBalance",
            "to_function": "withdrawBalances",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 334\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 347\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 337\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 337\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 338\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 338\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalances",
                "withdrawBalances"
            ],
            "from_function": "withdrawBalances",
            "to_function": "withdrawBalances",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 485\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 347\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 488\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 488\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 489\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 489\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "withdrawBalances",
                "unwrapShares"
            ],
            "from_function": "unwrapShares",
            "to_function": "withdrawBalances",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 418\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 347\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\"",
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\"",
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "submitProposal"
            ],
            "from_function": "submitProposal",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 65\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 66\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: submitProposal\nNode: \nIF tributeOffered > 0 && userTokenBalances[GUILD][tributeToken] == 0\nIRS: \nCONDITION TMP_45\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 49\nFunction: submitProposal\nNode: \nIF tributeOffered > 0 && userTokenBalances[GUILD][tributeToken] == 0\nIRS: \nCONDITION TMP_45\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 50\nFunction: submitProposal\nNode: \nEXPRESSION require(bool,string)(totalGuildBankTokens < MAX_TOKEN_GUILDBANK_COUNT,guildbank maxed)\nIRS: \nTMP_47 = SOLIDITY_CALL require(bool,string)(TMP_46,guildbank maxed)\"",
                        "\"BlockID: 414\nFunction: unwrapShares\nNode: \nEXPRESSION totalGuildBankTokens += 1\nIRS: \ntotalGuildBankTokens = totalGuildBankTokens + 1\""
                    ],
                    "state_variable": "totalGuildBankTokens"
                },
                {
                    "path": [
                        "\"BlockID: 61\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 419\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "submitGuildKickProposal"
            ],
            "from_function": "submitGuildKickProposal",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 83\nFunction: submitGuildKickProposal\nNode: \nEXPRESSION require(bool,string)(member.shares > 0 || member.loot > 0,must have share or loot)\nIRS: \nTMP_88 = SOLIDITY_CALL require(bool,string)(TMP_87,must have share or loot)\"",
                        "\"BlockID: 426\nFunction: registerMember\nNode: \nEXPRESSION members[newMember] = Member(newMember,1,shares,0,0,0)\nIRS: \nREF_333 := TMP_356\""
                    ],
                    "state_variable": "members"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "processProposal"
            ],
            "from_function": "processProposal",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 147\nFunction: processProposal\nNode: \nIF totalSupply().add(proposal.sharesRequested).add(proposal.lootRequested) > MAX_GUILD_BOUND\nIRS: \nCONDITION TMP_181\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 171\nFunction: _didPass\nNode: \nIF (totalSupply().mul(dilutionBound)) < proposal.maxTotalSharesAndLootAtYesVote\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 178\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 179\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 180\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 181\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 182\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 183\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 184\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 185\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 186\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 187\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 188\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 189\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 199\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 200\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 201\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 202\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 203\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 204\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 205\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 206\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 148\nFunction: processProposal\nNode: \nIF proposal.paymentRequested > userTokenBalances[GUILD][proposal.paymentToken]\nIRS: \nCONDITION TMP_182\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 148\nFunction: processProposal\nNode: \nIF proposal.paymentRequested > userTokenBalances[GUILD][proposal.paymentToken]\nIRS: \nCONDITION TMP_182\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: processProposal\nNode: \nIF proposal.tributeOffered > 0 && userTokenBalances[GUILD][proposal.tributeToken] == 0 && totalGuildBankTokens >= MAX_TOKEN_GUILDBANK_COUNT\nIRS: \nCONDITION TMP_187\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: processProposal\nNode: \nIF proposal.tributeOffered > 0 && userTokenBalances[GUILD][proposal.tributeToken] == 0 && totalGuildBankTokens >= MAX_TOKEN_GUILDBANK_COUNT\nIRS: \nCONDITION TMP_187\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.tributeToken] == 0 && proposal.tributeOffered > 0\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 157\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.tributeToken] == 0 && proposal.tributeOffered > 0\nIRS: \nCONDITION TMP_197\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.paymentToken] == 0 && proposal.paymentRequested > 0\nIRS: \nCONDITION TMP_202\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 160\nFunction: processProposal\nNode: \nIF userTokenBalances[GUILD][proposal.paymentToken] == 0 && proposal.paymentRequested > 0\nIRS: \nCONDITION TMP_202\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 149\nFunction: processProposal\nNode: \nIF proposal.tributeOffered > 0 && userTokenBalances[GUILD][proposal.tributeToken] == 0 && totalGuildBankTokens >= MAX_TOKEN_GUILDBANK_COUNT\nIRS: \nCONDITION TMP_187\"",
                        "\"BlockID: 414\nFunction: unwrapShares\nNode: \nEXPRESSION totalGuildBankTokens += 1\nIRS: \ntotalGuildBankTokens = totalGuildBankTokens + 1\""
                    ],
                    "state_variable": "totalGuildBankTokens"
                },
                {
                    "path": [
                        "\"BlockID: 192\nFunction: registerMember\nNode: \nEXPRESSION memberAddressByDelegateKey[memberToOverride] = memberToOverride\nIRS: \nREF_330 := memberToOverride\"",
                        "\"BlockID: 424\nFunction: registerMember\nNode: \nEXPRESSION members[memberToOverride].delegateKey = memberToOverride\nIRS: \nREF_332 := memberToOverride\""
                    ],
                    "state_variable": "memberAddressByDelegateKey"
                },
                {
                    "path": [
                        "\"BlockID: 196\nFunction: registerMember\nNode: \nEXPRESSION memberAddressByDelegateKey[newMember] = newMember\nIRS: \nREF_334 := newMember\"",
                        "\"BlockID: 424\nFunction: registerMember\nNode: \nEXPRESSION members[memberToOverride].delegateKey = memberToOverride\nIRS: \nREF_332 := memberToOverride\""
                    ],
                    "state_variable": "memberAddressByDelegateKey"
                },
                {
                    "path": [
                        "\"BlockID: 193\nFunction: registerMember\nNode: \nEXPRESSION members[memberToOverride].delegateKey = memberToOverride\nIRS: \nREF_332 := memberToOverride\"",
                        "\"BlockID: 423\nFunction: registerMember\nNode: \nEXPRESSION memberAddressByDelegateKey[memberToOverride] = memberToOverride\nIRS: \nREF_330 := memberToOverride\""
                    ],
                    "state_variable": "memberAddressByDelegateKey"
                },
                {
                    "path": [
                        "\"BlockID: 193\nFunction: registerMember\nNode: \nEXPRESSION members[memberToOverride].delegateKey = memberToOverride\nIRS: \nREF_332 := memberToOverride\"",
                        "\"BlockID: 427\nFunction: registerMember\nNode: \nEXPRESSION memberAddressByDelegateKey[newMember] = newMember\nIRS: \nREF_334 := newMember\""
                    ],
                    "state_variable": "memberAddressByDelegateKey"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "processWhitelistProposal"
            ],
            "from_function": "processWhitelistProposal",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 224\nFunction: _didPass\nNode: \nIF (totalSupply().mul(dilutionBound)) < proposal.maxTotalSharesAndLootAtYesVote\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 229\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 230\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 231\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 232\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 233\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 234\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 235\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 236\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "processGuildActionProposal"
            ],
            "from_function": "processGuildActionProposal",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 255\nFunction: _didPass\nNode: \nIF (totalSupply().mul(dilutionBound)) < proposal.maxTotalSharesAndLootAtYesVote\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 245\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 419\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "processGuildKickProposal"
            ],
            "from_function": "processGuildKickProposal",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 274\nFunction: _didPass\nNode: \nIF (totalSupply().mul(dilutionBound)) < proposal.maxTotalSharesAndLootAtYesVote\nIRS: \nCONDITION TMP_240\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 279\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 280\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 281\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 282\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 283\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 284\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 285\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 286\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "ragequit"
            ],
            "from_function": "ragequit",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 297\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 298\nFunction: _ragequit\nNode: \nEXPRESSION userTokenBalances[GUILD][approvedTokens[i]] -= amountToRagequit\nIRS: \nREF_255 = REF_255 - amountToRagequit\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 299\nFunction: _ragequit\nNode: \nEXPRESSION userTokenBalances[memberAddress][approvedTokens[i]] += amountToRagequit\nIRS: \nREF_258 = REF_258 + amountToRagequit\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 305\nFunction: fairShare\nNode: \nEXPRESSION require(bool)(totalSharesAndLoot != 0)\nIRS: \nTMP_347 = SOLIDITY_CALL require(bool)(TMP_346)\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 298\nFunction: _ragequit\nNode: \nEXPRESSION userTokenBalances[GUILD][approvedTokens[i]] -= amountToRagequit\nIRS: \nREF_255 = REF_255 - amountToRagequit\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 299\nFunction: _ragequit\nNode: \nEXPRESSION userTokenBalances[memberAddress][approvedTokens[i]] += amountToRagequit\nIRS: \nREF_258 = REF_258 + amountToRagequit\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 297\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 297\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 306\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 306\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 307\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 307\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "ragekick"
            ],
            "from_function": "ragekick",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 321\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 322\nFunction: _ragequit\nNode: \nEXPRESSION userTokenBalances[GUILD][approvedTokens[i]] -= amountToRagequit\nIRS: \nREF_255 = REF_255 - amountToRagequit\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 323\nFunction: _ragequit\nNode: \nEXPRESSION userTokenBalances[memberAddress][approvedTokens[i]] += amountToRagequit\nIRS: \nREF_258 = REF_258 + amountToRagequit\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 329\nFunction: fairShare\nNode: \nEXPRESSION require(bool)(totalSharesAndLoot != 0)\nIRS: \nTMP_347 = SOLIDITY_CALL require(bool)(TMP_346)\"",
                        "\"BlockID: 412\nFunction: unwrapShares\nNode: \nEXPRESSION totalShares += amount\nIRS: \ntotalShares = totalShares + amount\""
                    ],
                    "state_variable": "totalShares"
                },
                {
                    "path": [
                        "\"BlockID: 322\nFunction: _ragequit\nNode: \nEXPRESSION userTokenBalances[GUILD][approvedTokens[i]] -= amountToRagequit\nIRS: \nREF_255 = REF_255 - amountToRagequit\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 323\nFunction: _ragequit\nNode: \nEXPRESSION userTokenBalances[memberAddress][approvedTokens[i]] += amountToRagequit\nIRS: \nREF_258 = REF_258 + amountToRagequit\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 321\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 321\nFunction: _ragequit\nNode: \nIF amountToRagequit > 0\nIRS: \nCONDITION TMP_273\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 330\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 330\nFunction: fairShare\nNode: \nIF balance == 0\nIRS: \nCONDITION TMP_348\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 331\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 331\nFunction: fairShare\nNode: \nIF prod \/ balance == shares\nIRS: \nCONDITION TMP_351\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "withdrawBalance"
            ],
            "from_function": "withdrawBalance",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 340\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 341\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 337\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 337\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 338\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 338\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 334\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 419\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "withdrawBalances"
            ],
            "from_function": "withdrawBalances",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 352\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 353\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 349\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 349\nFunction: _withdrawBalance\nNode: \nEXPRESSION require(bool,string)(userTokenBalances[msg.sender][token] >= amount,insufficient balance)\nIRS: \nTMP_294 = SOLIDITY_CALL require(bool,string)(TMP_293,insufficient balance)\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 350\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 350\nFunction: _withdrawBalance\nNode: \nEXPRESSION IERC20(token).transfer(msg.sender,amount)\nIRS: \nTMP_296(bool) = HIGH_LEVEL_CALL, dest:TMP_295(IERC20), function:transfer, arguments:['msg.sender', 'amount']  \"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 346\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 419\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "cancelProposal"
            ],
            "from_function": "cancelProposal",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 371\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[user][token] -= amount\nIRS: \nREF_340 = REF_340 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 372\nFunction: unsafeSubtractFromBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] -= amount\nIRS: \nREF_342 = REF_342 - amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 373\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 374\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "updateDelegateKey"
            ],
            "from_function": "updateDelegateKey",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 376\nFunction: updateDelegateKey\nNode: \nEXPRESSION require(bool,string)(members[msg.sender].shares > 0,not shareholder)\nIRS: \nTMP_322 = SOLIDITY_CALL require(bool,string)(TMP_321,not shareholder)\"",
                        "\"BlockID: 416\nFunction: unwrapShares\nNode: \nEXPRESSION members[msg.sender].shares = members[msg.sender].shares.add(amount)\nIRS: \nREF_354 := TMP_368\""
                    ],
                    "state_variable": "members.shares"
                },
                {
                    "path": [
                        "\"BlockID: 381\nFunction: updateDelegateKey\nNode: \nEXPRESSION memberAddressByDelegateKey[member.delegateKey] = address(0)\nIRS: \nREF_303 := TMP_331\"",
                        "\"BlockID: 424\nFunction: registerMember\nNode: \nEXPRESSION members[memberToOverride].delegateKey = memberToOverride\nIRS: \nREF_332 := memberToOverride\""
                    ],
                    "state_variable": "memberAddressByDelegateKey"
                },
                {
                    "path": [
                        "\"BlockID: 382\nFunction: updateDelegateKey\nNode: \nEXPRESSION memberAddressByDelegateKey[newDelegateKey] = msg.sender\nIRS: \nREF_304 := msg.sender\"",
                        "\"BlockID: 424\nFunction: registerMember\nNode: \nEXPRESSION members[memberToOverride].delegateKey = memberToOverride\nIRS: \nREF_332 := memberToOverride\""
                    ],
                    "state_variable": "memberAddressByDelegateKey"
                }
            ]
        },
        {
            "attack_type": "DAO",
            "composed_functions": [
                "unwrapShares",
                "unwrapShares"
            ],
            "from_function": "unwrapShares",
            "to_function": "unwrapShares",
            "dependencies": [
                {
                    "path": [
                        "\"BlockID: 514\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 515\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\"",
                        "\"BlockID: 413\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 497\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\"",
                        "\"BlockID: 430\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[user][token] += amount\nIRS: \nREF_336 = REF_336 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 497\nFunction: unwrapShares\nNode: \nIF userTokenBalances[GUILD][wrapperToken] == 0\nIRS: \nCONDITION TMP_371\"",
                        "\"BlockID: 431\nFunction: unsafeAddToBalance\nNode: \nEXPRESSION userTokenBalances[TOTAL][token] += amount\nIRS: \nREF_338 = REF_338 + amount\""
                    ],
                    "state_variable": "userTokenBalances"
                },
                {
                    "path": [
                        "\"BlockID: 502\nFunction: nonReentrant\nNode: \nEXPRESSION require(bool,string)(_status != _ENTERED,reentrant call)\nIRS: \nTMP_383 = SOLIDITY_CALL require(bool,string)(TMP_382,reentrant call)\"",
                        "\"BlockID: 419\nFunction: nonReentrant\nNode: \nEXPRESSION _status = _NOT_ENTERED\nIRS: \n_status := _NOT_ENTERED\""
                    ],
                    "state_variable": "_status"
                },
                {
                    "path": [
                        "\"BlockID: 507\nFunction: registerMember\nNode: \nEXPRESSION memberAddressByDelegateKey[memberToOverride] = memberToOverride\nIRS: \nREF_330 := memberToOverride\"",
                        "\"BlockID: 424\nFunction: registerMember\nNode: \nEXPRESSION members[memberToOverride].delegateKey = memberToOverride\nIRS: \nREF_332 := memberToOverride\""
                    ],
                    "state_variable": "memberAddressByDelegateKey"
                },
                {
                    "path": [
                        "\"BlockID: 511\nFunction: registerMember\nNode: \nEXPRESSION memberAddressByDelegateKey[newMember] = newMember\nIRS: \nREF_334 := newMember\"",
                        "\"BlockID: 424\nFunction: registerMember\nNode: \nEXPRESSION members[memberToOverride].delegateKey = memberToOverride\nIRS: \nREF_332 := memberToOverride\""
                    ],
                    "state_variable": "memberAddressByDelegateKey"
                },
                {
                    "path": [
                        "\"BlockID: 508\nFunction: registerMember\nNode: \nEXPRESSION members[memberToOverride].delegateKey = memberToOverride\nIRS: \nREF_332 := memberToOverride\"",
                        "\"BlockID: 423\nFunction: registerMember\nNode: \nEXPRESSION memberAddressByDelegateKey[memberToOverride] = memberToOverride\nIRS: \nREF_330 := memberToOverride\""
                    ],
                    "state_variable": "memberAddressByDelegateKey"
                },
                {
                    "path": [
                        "\"BlockID: 508\nFunction: registerMember\nNode: \nEXPRESSION members[memberToOverride].delegateKey = memberToOverride\nIRS: \nREF_332 := memberToOverride\"",
                        "\"BlockID: 427\nFunction: registerMember\nNode: \nEXPRESSION memberAddressByDelegateKey[newMember] = newMember\nIRS: \nREF_334 := newMember\""
                    ],
                    "state_variable": "memberAddressByDelegateKey"
                }
            ]
        }
    ]
}