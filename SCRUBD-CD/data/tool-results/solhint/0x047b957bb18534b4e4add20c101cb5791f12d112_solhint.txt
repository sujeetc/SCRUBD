./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:3:1: Found more than One contract per file. 5 contracts found! [Warning/one-contract-per-file]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:10:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:11:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:38:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:47:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:47:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:47:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:54:5: Function order is incorrect, modifier definition can not go after public view function (line 47) [Warning/ordering]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:55:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:66:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:66:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:75:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:75:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:76:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:76:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:76:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:81:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:81:5: Function geUnlockTime() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:81:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:86:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:86:5: Function lock() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:89:21: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:94:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:94:5: Function unlock() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:95:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:95:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:95:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:96:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:96:17: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:104:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:104:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:109:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:109:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:118:5: Function order is incorrect, external  function can not go after external view function (line 109) [Warning/ordering]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:118:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:118:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:127:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:127:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:143:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:143:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:154:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:154:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:162:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:168:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:198:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:200:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:200:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:215:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:229:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:230:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:230:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:246:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:255:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:255:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:255:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:272:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:288:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:289:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:308:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:324:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:325:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:351:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:376:2: Line length must be no more than 120 but current length is 160. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:378:5: Function order is incorrect, internal  function can not go after internal view function (line 351) [Warning/ordering]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:379:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:379:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:383:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:383:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:383:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:395:2: Line length must be no more than 120 but current length is 156. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:404:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:414:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:414:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:429:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:430:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:439:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:439:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:440:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:440:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:440:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:440:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:444:2: Line length must be no more than 120 but current length is 149. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:444:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:445:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:471:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:471:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:471:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:473:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:473:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:474:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:474:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:476:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:477:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:477:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:478:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:478:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:478:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:480:5: Function order is incorrect, external  function can not go after external view function (line 478) [Warning/ordering]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:480:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:482:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:483:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:490:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:490:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:491:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:491:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:493:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:493:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:494:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:494:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:495:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:495:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:496:5: Function order is incorrect, external view function can not go after external pure function (line 495) [Warning/ordering]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:496:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:496:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:496:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:497:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:497:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:497:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:498:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:498:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:498:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:500:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:500:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:500:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:501:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:501:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:501:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:502:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:502:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:502:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:504:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:504:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:504:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:505:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:505:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:505:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:506:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:506:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:506:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:508:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:508:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:508:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:510:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:510:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:510:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:510:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:511:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:511:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:511:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:511:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:513:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:514:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:515:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:516:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:519:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:519:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:521:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:521:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:521:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:521:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:522:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:522:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:523:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:523:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:524:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:524:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:525:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:526:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:526:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:526:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:527:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:527:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:527:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:528:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:528:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:528:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:530:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:530:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:530:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:531:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:531:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:531:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:532:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:533:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:535:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:541:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:541:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:542:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:542:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:542:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:544:5: Function order is incorrect, external  function can not go after external pure function (line 542) [Warning/ordering]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:544:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:547:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:548:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:549:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:550:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:552:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:553:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:553:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:553:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:554:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:556:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:557:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:558:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:560:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:561:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:561:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:561:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:562:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:565:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:566:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:567:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:569:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:570:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:570:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:571:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:573:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:574:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:575:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:577:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:578:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:578:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:579:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:582:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:583:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:584:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:586:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:588:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:588:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:589:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:591:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:592:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:593:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:595:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:597:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:597:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:598:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:599:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:600:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:603:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:604:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:605:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:606:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:607:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:610:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:611:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:612:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:612:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:612:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:615:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:616:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:616:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:616:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:616:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:618:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:619:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:619:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:619:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:619:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:621:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:622:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:622:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:622:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:625:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:627:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:627:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:627:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:627:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:627:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:628:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:628:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:628:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:628:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:628:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:629:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:629:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:629:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:629:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:629:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:630:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:630:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:630:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:631:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:631:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:631:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:639:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:641:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:642:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:643:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:645:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:646:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:647:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:649:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:650:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:651:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:653:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:655:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:657:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:658:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:659:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:662:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:664:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:665:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:668:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:670:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:671:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:672:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:675:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:680:1: Contract has 32 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:684:5: Main key parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:684:5: Value parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:685:5: Main key parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:685:5: Value parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:686:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:688:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:688:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:690:5: Main key parameter in mapping _isExcluded is not named [Warning/named-parameters-mapping]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:690:5: Value parameter in mapping _isExcluded is not named [Warning/named-parameters-mapping]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:693:5: Main key parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:693:5: Value parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:693:5: 'bots' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:695:5: 'MAX' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:704:5: '_taxFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:707:5: '_liquidityFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:711:5: '_marketingFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:717:5: '_devFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:724:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:724:5: 'inSwapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:728:5: '_maxTxAmount' should not start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:733:5: GC: [minTokensBeforeSwap] on Event [MinTokensBeforeSwapUpdated] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:734:5: GC: [enabled] on Event [SwapAndLiquifyEnabledUpdated] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:735:5: GC: [tokensSwapped] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:735:5: GC: [ethReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:735:5: GC: [tokensIntoLiqudity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:747:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:751:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:768:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:768:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:768:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:772:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:772:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:772:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:776:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:776:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:776:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:780:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:780:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:784:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:784:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:789:5: Function order is incorrect, public  function can not go after public view function (line 784) [Warning/ordering]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:789:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:789:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:794:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:794:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:798:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:798:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:803:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:803:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:805:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:805:40: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:809:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:809:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:809:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:814:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:814:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:814:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:815:2: Line length must be no more than 120 but current length is 138. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:815:41: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:819:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:819:5: Function isExcludedFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:819:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:823:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:823:5: Function totalFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:823:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:827:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:827:5: Function deliver() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:829:9: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:829:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:829:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:836:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:836:5: Function reflectionFromToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:836:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:837:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:837:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:847:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:847:5: Function tokenFromReflection() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:847:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:848:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:848:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:848:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:848:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:853:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:853:5: Function excludeFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:854:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:862:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:862:5: Function includeInReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:863:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:864:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:864:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:876:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:889:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:896:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:896:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:896:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:896:5: GC: Named return value is missing - Index 3 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:896:5: GC: Named return value is missing - Index 4 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:896:5: GC: Named return value is missing - Index 5 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:902:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:902:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:902:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:909:2: Line length must be no more than 120 but current length is 147. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:909:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:909:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:909:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:917:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:922:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:922:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:925:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:925:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:942:5: 'calculateTaxFee' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:942:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:948:5: 'calculateLiquidityFee' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:948:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:954:5: 'removeAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:968:5: 'restoreAllFee' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:975:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:975:5: Function isExcludedFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:975:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:980:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:980:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:980:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:981:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:981:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:981:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:992:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:992:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:992:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:993:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:993:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:993:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:996:13: Error message for require is too long: 56 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:996:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:996:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:996:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1008:13: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1008:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1008:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1009:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1020:36: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1037:5: 'swapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1038:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1039:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1069:5: 'swapTokensForWallets' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1082:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1087:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1092:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1101:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1106:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1110:5: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1115:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1121:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1134:13: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1134:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1134:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1134:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1159:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1170:5: 'takeMarketing' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1170:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1170:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1184:5: 'takeTeam' should start with _ [Warning/private-vars-leading-underscore]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1184:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1184:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1199:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1209:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1218:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1218:5: Function excludeFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1222:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1222:5: Function includeInFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1226:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1226:5: Function setMarketingWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1230:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1230:5: Function setdevWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1234:2: Line length must be no more than 120 but current length is 125. [Error/max-line-length]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1234:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1234:5: Function setFeePercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1241:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1241:5: Function setSwapTokensAtAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1245:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1245:5: Function setMaxTxAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1246:9: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1246:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1246:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1250:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1250:5: Function setMaxBuytx() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1254:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1254:5: Function setMaxWalletTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1258:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x047b957bb18534b4e4add20c101cb5791f12d112.sol:1258:5: Function setSwapAndLiquifyEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]

498 problem/s (17 error/s, 481 warning/s)
