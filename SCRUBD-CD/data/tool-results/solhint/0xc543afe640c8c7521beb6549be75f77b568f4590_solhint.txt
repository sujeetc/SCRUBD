./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:1:1: Compiler version ^0.4.25 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:48:5: 'ADMIN' should start with _ [Warning/private-vars-leading-underscore]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:49:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:50:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:52:5: Function order is incorrect, struct definition can not go after state variable declaration (line 50) [Warning/ordering]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:58:5: 'queue' should start with _ [Warning/private-vars-leading-underscore]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:59:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:62:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:64:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:65:13: Provide an error message for require [Warning/reason-string]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:65:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:71:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:72:13: Check result of "send" call [Warning/check-send-result]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:80:5: 'pay' should start with _ [Warning/private-vars-leading-underscore]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:83:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:83:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:83:39: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:85:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:89:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:90:17: Check result of "send" call [Warning/check-send-result]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:90:17: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:97:17: Check result of "send" call [Warning/check-send-result]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:97:17: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:102:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:106:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:109:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:109:5: Function getDeposit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:109:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:109:75: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:109:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:114:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:114:5: Function getDepositsCount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:114:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:114:71: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:115:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:116:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:116:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:118:17: GC: For [ c ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:123:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:123:5: Function getDeposits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:123:66: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:124:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:126:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:131:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:132:13: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:132:17: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:138:21: GC: For [ j ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:144:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:144:5: Function getQueueLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:144:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0xc543afe640c8c7521beb6549be75f77b568f4590.sol:144:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

51 problem/s (1 error/s, 50 warning/s)
