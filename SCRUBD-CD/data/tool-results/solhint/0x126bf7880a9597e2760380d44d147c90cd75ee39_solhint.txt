./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:5:1: Found more than One contract per file. 2 contracts found! [Warning/one-contract-per-file]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:8:3: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:8:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:9:3: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:9:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:10:3: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:10:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:11:3: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:11:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:12:3: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:12:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:13:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:13:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:14:3: Function order is incorrect, external  function can not go after external view function (line 13) [Warning/ordering]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:14:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:14:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:15:3: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:15:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:16:3: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:16:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:17:3: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:17:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:18:3: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:19:3: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:23:5: GC: [lpPair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:23:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:23:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:24:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:25:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:29:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:29:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:33:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:33:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:34:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:34:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:34:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:35:5: Function order is incorrect, external payable function can not go after external pure function (line 34) [Warning/ordering]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:35:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:37:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:38:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:39:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:41:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:42:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:42:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:42:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:46:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:47:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:48:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:51:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:58:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:62:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:62:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:62:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:65:5: Function order is incorrect, modifier definition can not go after public view function (line 62) [Warning/ordering]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:66:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:69:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:69:5: Function transferOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:70:9: Error message for require is too long: 61 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:70:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:70:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:71:9: Error message for require is too long: 61 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:71:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:71:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:75:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:75:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:81:1: Contract has 63 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:81:1: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:82:5: Main key parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:82:5: Value parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:83:5: Main key parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:83:5: Value parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:84:5: Main key parameter in mapping lpPairs is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:84:5: Value parameter in mapping lpPairs is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:85:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:86:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:86:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:87:5: Main key parameter in mapping _isExcluded is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:87:5: Value parameter in mapping _isExcluded is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:89:5: Main key parameter in mapping _isBot is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:89:5: Value parameter in mapping _isBot is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:90:5: Main key parameter in mapping _liquidityHolders is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:90:5: Value parameter in mapping _liquidityHolders is not named [Warning/named-parameters-mapping]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:92:5: 'startingSupply' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:101:5: '_buyReflectFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:102:5: '_buyLiquidityFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:103:5: '_buyDevFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:104:5: '_buyMarketingFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:105:5: '_buyBurnFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:106:5: '_sellReflectFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:107:5: '_sellLiquidityFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:108:5: '_sellDevFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:109:5: '_sellMarketingFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:110:5: '_sellBurnFee' should not start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:111:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:111:5: 'maxReflectFee' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:112:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:112:5: 'maxLiquidityFee' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:113:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:113:5: 'maxDevFee' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:114:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:114:5: 'maxMarketingFee' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:115:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:115:5: 'maxBurnFee' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:116:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:116:5: 'masterTaxDivisor' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:118:5: 'MAX' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:128:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:136:5: 'buyMaxTxPercent' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:137:5: 'buyMaxTxDivisor' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:141:5: 'sellMaxTxPercent' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:142:5: 'sellMaxTxDivisor' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:147:5: 'maxWalletPercent' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:148:5: 'maxWalletDivisor' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:153:5: 'swapThreshold' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:154:5: 'swapAmount' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:156:5: 'tradingEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:157:5: '_hasLiqBeenAdded' should not start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:161:5: 'snipeBlockAmt' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:164:5: GC: [minTokensBeforeSwap] on Event [MinTokensBeforeSwapUpdated] could be Indexed [Warning/gas-indexed-events]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:165:5: GC: [enabled] on Event [SwapAndLiquifyEnabledUpdated] could be Indexed [Warning/gas-indexed-events]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:166:5: GC: [tokensSwapped] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:166:5: GC: [ethReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:166:5: GC: [tokensIntoLiqudity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:167:5: GC: [botAddress] on Event [BotCaught] could be Indexed [Warning/gas-indexed-events]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:175:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:193:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:195:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:195:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:196:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:196:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:197:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:197:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:198:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:198:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:199:5: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:199:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:200:2: Line length must be no more than 120 but current length is 137. [Error/max-line-length]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:200:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:200:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:201:2: Line length must be no more than 120 but current length is 173. [Error/max-line-length]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:201:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:201:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:202:2: Line length must be no more than 120 but current length is 143. [Error/max-line-length]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:202:5: Function order is incorrect, public  function can not go after public view function (line 201) [Warning/ordering]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:202:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:202:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:203:2: Line length must be no more than 120 but current length is 137. [Error/max-line-length]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:203:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:203:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:204:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:204:5: Function approveMax() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:204:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:206:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:206:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:212:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:212:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:212:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:217:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:217:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:217:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:222:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:222:5: Function setNewRouter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:224:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:234:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:234:5: Function setLpPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:242:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:242:5: Function isExcludedFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:242:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:246:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:246:5: Function isExcludedFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:246:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:250:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:250:5: Function isBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:250:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:254:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:254:5: Function removeBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:255:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:259:2: Line length must be no more than 120 but current length is 145. [Error/max-line-length]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:259:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:259:5: Function setTaxesBuy() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:260:9: Provide an error message for require [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:260:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:260:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:261:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:262:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:263:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:264:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:265:9: Provide an error message for require [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:265:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:265:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:273:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:273:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:273:5: Function setTaxesSell() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:274:9: Provide an error message for require [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:274:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:274:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:275:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:276:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:277:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:278:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:279:9: Provide an error message for require [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:279:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:279:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:287:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:287:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:287:5: Function setMaxTxPercents() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:292:9: Error message for require is too long: 56 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:292:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:292:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:292:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:293:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:298:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:298:5: Function setMaxWalletSize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:300:9: Error message for require is too long: 50 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:300:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:300:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:300:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:305:2: Line length must be no more than 120 but current length is 147. [Error/max-line-length]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:305:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:305:5: Function setSwapSettings() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:311:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:311:5: Function setgetTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:315:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:315:5: Function setWallets() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:316:9: Provide an error message for require [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:316:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:317:9: Provide an error message for require [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:317:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:322:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:322:5: Function setSwapAndLiquifyEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:327:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:327:5: Function setExcludedFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:331:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:331:5: Function setExcludedFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:333:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:340:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:341:13: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:341:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:353:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:353:5: Function totalFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:353:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:357:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:367:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:367:5: Function tokenFromReflect() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:367:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:368:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:368:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:368:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:368:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:374:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:374:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:374:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:375:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:375:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:375:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:380:5: 'adjustTaxes' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:402:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:402:5: Function has cyclomatic complexity 10 but allowed no more than 7 [Warning/code-complexity]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:403:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:403:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:403:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:404:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:404:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:404:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:405:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:405:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:405:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:408:17: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:411:17: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:411:17: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:411:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:411:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:413:17: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:413:17: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:413:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:413:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:416:17: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:416:17: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:416:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:416:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:430:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:431:24: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:439:5: 'swapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:475:5: 'transferETHOut' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:487:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:492:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:497:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:501:5: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:503:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:509:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:514:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:514:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:514:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:524:28: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:530:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:530:5: Function enableTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:531:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:532:9: Provide an error message for require [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:532:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:554:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:554:5: Function has cyclomatic complexity 11 but allowed no more than 7 [Warning/code-complexity]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:558:21: Error message for revert is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:558:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:558:21: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:567:25: GC: For [ botsCaught ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:598:5: 'getETHFee' should start with _ [Warning/private-vars-leading-underscore]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:598:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:602:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:623:2: Line length must be no more than 120 but current length is 131. [Error/max-line-length]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:627:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:632:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:632:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:635:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:635:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:667:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:667:5: Function sweepTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:672:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x126bf7880a9597e2760380d44d147c90cd75ee39.sol:672:5: Function sweepETH() must match Foundry test naming convention [Warning/foundry-test-functions]

318 problem/s (9 error/s, 309 warning/s)
