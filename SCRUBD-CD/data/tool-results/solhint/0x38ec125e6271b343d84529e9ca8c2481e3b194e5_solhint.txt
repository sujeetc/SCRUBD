./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:2:1: Compiler version >=0.6.0 <0.9.0 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:5:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:5:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:6:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:6:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:7:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:7:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:8:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:8:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:9:5: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:9:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:10:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:10:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:11:5: Function order is incorrect, external  function can not go after external view function (line 10) [Warning/ordering]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:11:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:11:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:12:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:12:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:13:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:13:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:14:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:14:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:15:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:16:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:20:5: GC: [lpPair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:20:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:20:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:21:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:22:5: Function order is incorrect, external  function can not go after external view function (line 21) [Warning/ordering]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:22:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:26:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:26:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:27:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:28:5: Function order is incorrect, external  function can not go after external view function (line 27) [Warning/ordering]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:28:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:32:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:32:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:33:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:33:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:33:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:34:5: Function order is incorrect, external payable function can not go after external pure function (line 33) [Warning/ordering]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:34:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:36:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:37:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:38:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:40:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:41:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:41:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:41:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:42:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:45:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:46:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:47:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:48:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:50:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:51:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:51:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:51:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:52:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:53:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:55:21: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:56:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:57:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:57:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:57:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:58:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:58:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:58:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:62:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:63:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:64:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:67:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:69:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:70:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:73:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:75:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:76:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:77:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:80:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:82:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:83:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:84:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:87:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:88:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:91:1: Interface name 'Protections' must start with "I" [Warning/interface-starts-with-i]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:92:5: Function checkUser() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:92:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:93:5: Function setLaunch() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:94:5: Function setLpPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:95:5: Function getInitializers() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:95:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:95:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:95:5: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:95:5: GC: Named return value is missing - Index 3 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:96:5: Function setProtections() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:97:5: Function removeSniper() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:100:1: Contract has 33 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:101:5: Main key parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:101:5: Value parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:102:5: Main key parameter in mapping lpPairs is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:102:5: Value parameter in mapping lpPairs is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:102:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:102:5: 'lpPairs' should start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:103:5: 'timeSinceLastPair' should start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:104:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:105:5: Main key parameter in mapping _liquidityHolders is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:105:5: Value parameter in mapping _liquidityHolders is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:106:5: Main key parameter in mapping _isExcludedFromProtection is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:106:5: Value parameter in mapping _isExcludedFromProtection is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:107:5: Main key parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:107:5: Value parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:108:5: Main key parameter in mapping _isExcludedFromLimits is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:108:5: Value parameter in mapping _isExcludedFromLimits is not named [Warning/named-parameters-mapping]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:110:5: 'startingSupply' should start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:116:5: Function order is incorrect, struct definition can not go after state variable declaration (line 114) [Warning/ordering]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:129:5: '_taxRates' should not start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:135:5: '_ratios' should not start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:142:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:143:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:144:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:145:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:146:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:146:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:146:5: 'masterTaxDivisor' should start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:158:5: '_taxWallets' should not start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:163:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:163:5: 'inSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:174:5: '_hasLiqBeenAdded' should not start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:175:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:175:5: 'protections' should start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:178:5: GC: [enabled] on Event [ContractSwapEnabledUpdated] could be Indexed [Warning/gas-indexed-events]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:179:5: GC: [amountCurrency] on Event [AutoLiquify] could be Indexed [Warning/gas-indexed-events]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:179:5: GC: [amountTokens] on Event [AutoLiquify] could be Indexed [Warning/gas-indexed-events]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:187:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:203:13: Provide an error message for revert [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:203:13: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:212:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:214:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:214:5: 'contractInitialized' should start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:216:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:216:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:216:5: Function intializeContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:217:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:219:2: Line length must be no more than 120 but current length is 150. [Error/max-line-length]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:226:13: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:238:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:239:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:241:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:247:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:261:28: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:264:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:264:5: Function transferOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:265:9: Error message for require is too long: 61 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:265:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:265:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:266:9: Error message for require is too long: 61 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:266:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:266:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:271:13: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:280:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:280:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:291:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:291:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:291:91: Provide an error message for revert [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:291:91: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:292:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:292:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:292:86: Provide an error message for revert [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:292:86: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:293:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:293:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:294:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:294:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:295:5: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:295:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:296:2: Line length must be no more than 120 but current length is 137. [Error/max-line-length]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:296:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:296:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:297:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:297:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:301:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:301:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:306:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:306:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:312:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:313:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:319:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:319:5: Function approveContractContingency() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:319:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:324:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:324:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:332:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:332:5: Function setNewRouter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:333:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:335:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:348:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:348:5: Function setLpPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:354:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:354:25: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:356:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:358:33: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:363:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:363:5: Function setInitializer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:364:9: Provide an error message for require [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:364:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:365:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:369:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:369:5: Function isExcludedFromLimits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:369:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:373:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:373:5: Function setExcludedFromLimits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:377:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:377:5: Function isExcludedFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:377:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:381:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:381:5: Function setExcludedFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:385:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:385:5: Function isExcludedFromProtection() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:385:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:389:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:389:5: Function setExcludedFromProtection() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:393:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:393:5: Function getCirculatingSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:393:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:397:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:397:5: Function removeSniper() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:401:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:401:5: Function setProtectionSettings() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:405:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:405:5: Function lockTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:410:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:410:5: Function setTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:411:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:412:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:412:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:413:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:414:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:416:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:416:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:422:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:422:5: Function setRatios() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:428:9: Error message for require is too long: 39 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:428:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:428:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:428:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:431:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:431:5: Function setWallets() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:432:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:437:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:437:5: Function setMaxTxPercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:438:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:438:9: Error message for require is too long: 55 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:438:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:438:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:438:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:442:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:442:5: Function setMaxWalletSize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:443:9: Error message for require is too long: 48 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:443:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:443:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:443:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:447:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:447:5: Function getMaxTX() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:447:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:451:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:451:5: Function getMaxWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:451:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:455:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:455:5: Function getTokenAmountAtPriceImpact() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:455:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:459:2: Line length must be no more than 120 but current length is 147. [Error/max-line-length]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:459:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:459:5: Function setSwapSettings() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:462:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:462:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:462:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:462:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:463:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:463:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:463:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:463:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:464:9: Error message for require is too long: 46 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:464:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:464:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:464:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:465:9: Error message for require is too long: 46 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:465:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:465:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:465:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:468:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:468:5: Function setPriceImpactSwapAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:469:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:469:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:473:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:473:5: Function setContractSwapEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:479:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:482:16: Avoid to use tx.origin [Warning/avoid-tx-origin]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:492:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:492:5: Function has cyclomatic complexity 15 but allowed no more than 7 [Warning/code-complexity]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:493:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:493:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:493:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:494:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:494:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:494:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:495:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:495:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:495:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:508:17: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:512:21: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:512:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:512:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:512:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:517:21: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:517:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:517:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:517:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:526:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:528:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:529:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:535:16: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:538:5: Function body contains 55 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:538:5: 'contractSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:555:13: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:560:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:561:11: Code contains empty blocks [Warning/no-empty-blocks]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:569:17: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:575:17: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:597:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:597:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:597:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:610:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:610:5: Function enableTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:611:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:612:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:616:72: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:616:101: Code contains empty blocks [Warning/no-empty-blocks]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:616:110: Code contains empty blocks [Warning/no-empty-blocks]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:620:23: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:623:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:623:5: Function sweepContingency() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:624:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:628:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:628:5: Function sweepExternalTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:629:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:630:9: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:634:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:634:5: Function multiSendTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:634:5: GC: [accounts] argument on Function [multiSendTokens] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:634:5: GC: [amounts] argument on Function [multiSendTokens] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:635:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:636:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:636:49: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:637:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:637:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:638:13: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:642:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:642:5: 'finalizeTransfer' should start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:642:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:645:44: Provide an error message for revert [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:645:44: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:646:28: Provide an error message for revert [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:646:28: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:658:2: Line length must be no more than 120 but current length is 140. [Error/max-line-length]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:659:17: Error message for revert is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:659:17: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:659:17: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:665:5: 'takeTaxes' should start with _ [Warning/private-vars-leading-underscore]
./0x38ec125e6271b343d84529e9ca8c2481e3b194e5.sol:665:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]

369 problem/s (9 error/s, 360 warning/s)
