./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:1:1: Found more than One contract per file. 3 contracts found! [Warning/one-contract-per-file]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:1:1: Compiler version ^0.4.25 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:5:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:11:9: Provide an error message for require [Warning/reason-string]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:16:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:17:9: Provide an error message for require [Warning/reason-string]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:23:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:24:9: Provide an error message for require [Warning/reason-string]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:24:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:30:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:32:9: Provide an error message for require [Warning/reason-string]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:32:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:37:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:38:9: Provide an error message for require [Warning/reason-string]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:58:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:58:3: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:58:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:63:3: Function order is incorrect, modifier definition can not go after public view function (line 58) [Warning/ordering]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:64:5: Provide an error message for require [Warning/reason-string]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:69:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:69:3: Function isOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:69:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:74:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:74:3: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:79:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:79:3: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:84:5: Provide an error message for require [Warning/reason-string]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:90:1: Contract has 19 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:94:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:94:5: 'support' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:96:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:96:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:98:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:99:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:101:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:101:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:101:5: 'minCycle' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:102:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:102:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:102:5: 'initCycle' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:103:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:103:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:103:5: 'maxCycle' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:105:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:106:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:107:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:108:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:110:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:110:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:110:5: 'minPercent' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:111:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:111:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:111:5: 'maxPercent' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:113:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:113:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:113:5: 'frontier' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:115:5: Main key parameter in mapping referrer is not named [Warning/named-parameters-mapping]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:115:5: Value parameter in mapping referrer is not named [Warning/named-parameters-mapping]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:115:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:115:5: 'referrer' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:116:5: Main key parameter in mapping verified is not named [Warning/named-parameters-mapping]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:116:5: Value parameter in mapping verified is not named [Warning/named-parameters-mapping]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:116:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:116:5: 'verified' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:118:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:118:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:118:5: 'refBonus' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:120:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:120:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:120:5: 'verificationPrice' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:122:5: GC: [start] on Event [NewCycle] could be Indexed [Warning/gas-indexed-events]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:122:5: GC: [duration] on Event [NewCycle] could be Indexed [Warning/gas-indexed-events]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:122:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:122:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:122:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:123:5: GC: [idx] on Event [NewDeposit] could be Indexed [Warning/gas-indexed-events]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:123:5: GC: [amount] on Event [NewDeposit] could be Indexed [Warning/gas-indexed-events]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:123:5: GC: [profit] on Event [NewDeposit] could be Indexed [Warning/gas-indexed-events]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:123:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:123:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:123:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:123:80: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:124:5: GC: [amount] on Event [Payed] could be Indexed [Warning/gas-indexed-events]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:124:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:124:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:125:5: GC: [amount] on Event [Refunded] could be Indexed [Warning/gas-indexed-events]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:125:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:125:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:126:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:128:5: GC: [referrer] on Event [RefBonusPayed] could be Indexed [Warning/gas-indexed-events]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:128:5: GC: [amount] on Event [RefBonusPayed] could be Indexed [Warning/gas-indexed-events]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:128:5: GC: [level] on Event [RefBonusPayed] could be Indexed [Warning/gas-indexed-events]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:128:69: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:128:82: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:129:5: GC: [oldPrice] on Event [VerPriceChanged] could be Indexed [Warning/gas-indexed-events]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:129:5: GC: [newPrice] on Event [VerPriceChanged] could be Indexed [Warning/gas-indexed-events]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:129:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:129:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:132:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:135:9: GC: For [ queue ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:139:5: Function order is incorrect, struct definition can not go after constructor/initializer (line 132) [Warning/ordering]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:146:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:147:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:149:5: 'bytesToAddress' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:150:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:156:5: 'setRef' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:156:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:164:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:164:5: Function setVerificationPrice() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:164:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:169:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:169:5: Function verify() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:171:13: Provide an error message for require [Warning/reason-string]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:172:13: Check result of "send" call [Warning/check-send-result]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:174:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:180:5: Function body contains 90 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:180:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:180:5: Fallback function must be simple [Warning/no-complex-fallback]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:180:5: Function has cyclomatic complexity 15 but allowed no more than 7 [Warning/code-complexity]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:182:9: Provide an error message for require [Warning/reason-string]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:196:13: Provide an error message for require [Warning/reason-string]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:200:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:201:13: Provide an error message for require [Warning/reason-string]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:201:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:203:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:203:17: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:204:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:217:17: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:219:30: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:221:17: GC: For [ cycles ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:238:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:239:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:246:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:247:13: Check result of "send" call [Warning/check-send-result]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:248:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:249:13: Check result of "send" call [Warning/check-send-result]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:249:13: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:252:17: Check result of "send" call [Warning/check-send-result]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:252:17: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:256:18: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:259:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:261:21: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:262:21: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:267:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:276:5: 'pay' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:281:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:281:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:281:39: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:283:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:287:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:288:17: Check result of "send" call [Warning/check-send-result]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:288:17: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:297:17: Check result of "send" call [Warning/check-send-result]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:297:17: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:305:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:309:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:312:5: 'refunding' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:315:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:316:13: GC: For [ refund ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:319:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:319:23: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:319:46: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:321:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:325:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:326:17: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:334:17: Check result of "send" call [Warning/check-send-result]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:334:17: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:336:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:341:17: Check result of "send" call [Warning/check-send-result]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:341:17: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:342:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:343:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:350:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:355:13: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:359:5: 'singleRefunding' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:361:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:365:9: Check result of "send" call [Warning/check-send-result]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:366:9: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:374:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:374:5: Function getDeposit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:374:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:374:75: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:374:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:380:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:380:5: Function getDepositsCount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:380:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:380:71: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:381:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:382:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:382:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:384:17: GC: For [ c ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:390:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:390:5: Function getDeposits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:390:66: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:391:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:393:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:398:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:399:13: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:399:17: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:405:21: GC: For [ j ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:412:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:412:5: Function getQueueLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:412:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:412:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:416:5: 'isContract' should start with _ [Warning/private-vars-leading-underscore]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:416:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:417:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:418:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:422:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:422:5: Function contractBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:422:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7.sol:422:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

212 problem/s (1 error/s, 211 warning/s)
