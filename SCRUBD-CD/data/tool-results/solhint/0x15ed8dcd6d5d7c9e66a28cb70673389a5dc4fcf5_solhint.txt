./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:37:1: Found more than One contract per file. 20 contracts found! [Warning/one-contract-per-file]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:37:1: Compiler version 0.4.25 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:51:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:63:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:63:5: Function nominateNewOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:74:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:74:5: Function acceptOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:77:9: Error message for require is too long: 53 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:77:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:83:5: Function order is incorrect, modifier definition can not go after external  function (line 74) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:85:9: Error message for require is too long: 47 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:85:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:89:5: GC: [newOwner] on Event [OwnerNominated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:90:5: GC: [oldOwner] on Event [OwnerChanged] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:90:5: GC: [newOwner] on Event [OwnerChanged] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:122:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:125:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:131:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:133:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:135:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:135:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:145:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:145:5: Function setSelfDestructBeneficiary() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:149:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:149:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:159:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:159:5: Function initiateSelfDestruct() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:163:26: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:172:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:172:5: Function terminateSelfDestruct() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:186:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:186:5: Function selfDestruct() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:190:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:190:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:191:9: Error message for require is too long: 39 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:191:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:191:55: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:197:5: Function order is incorrect, event definition can not go after external  function (line 186) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:198:5: GC: [beneficiary] on Event [SelfDestructed] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:199:5: GC: [selfDestructDelay] on Event [SelfDestructInitiated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:199:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:200:5: GC: [newBeneficiary] on Event [SelfDestructBeneficiaryUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:232:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:239:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:241:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:250:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:250:5: Function setPaused() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:264:29: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:271:5: Function order is incorrect, event definition can not go after external  function (line 250) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:271:5: GC: [isPaused] on Event [PauseChanged] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:274:9: Error message for require is too long: 60 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:274:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:284:1: Function order is incorrect, library definition can not go after contract definition (line 230) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:289:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:298:5: Provide an error message for require [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:306:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:307:5: Provide an error message for require [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:317:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:318:5: Provide an error message for require [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:318:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:327:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:329:5: Provide an error message for require [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:329:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:338:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:339:5: Provide an error message for require [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:383:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:384:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:387:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:387:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:390:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:390:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:391:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:391:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:396:5: Function unit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:396:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:399:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:407:5: Function preciseUnit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:407:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:410:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:424:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:424:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:424:38: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:427:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:445:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:445:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:445:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:445:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:448:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:451:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:453:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:472:5: Function order is incorrect, internal pure function can not go after private pure function (line 445) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:472:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:472:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:472:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:475:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:492:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:492:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:492:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:495:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:509:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:509:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:509:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:512:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:526:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:526:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:526:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:526:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:529:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:531:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:533:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:548:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:548:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:548:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:551:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:564:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:564:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:564:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:567:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:575:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:575:38: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:578:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:586:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:586:38: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:589:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:591:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:593:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:640:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:642:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:645:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:645:5: Function setTarget() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:653:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:653:5: Function setUseDELEGATECALL() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:660:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:660:5: '_emit' should not start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:660:5: Function _emit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:660:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:664:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:667:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:692:5: Function order is incorrect, fallback function can not go after external  function (line 660) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:692:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:697:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:714:13: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:771:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:771:5: 'messageSender' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:773:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:775:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:781:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:781:5: Function setProxy() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:789:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:789:5: Function setMessageSender() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:796:5: Function order is incorrect, modifier definition can not go after external  function (line 789) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:797:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:797:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:809:5: Modifier name must be in mixedCase [Warning/modifier-name-mixedcase]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:814:9: Error message for require is too long: 46 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:814:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:818:5: GC: [proxyAddress] on Event [ProxyUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:861:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:863:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:872:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:872:5: Function setAssociatedContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:882:5: Function order is incorrect, modifier definition can not go after external  function (line 872) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:884:9: Error message for require is too long: 52 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:884:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:890:5: GC: [associatedContract] on Event [AssociatedContractUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:936:5: Main key parameter in mapping balanceOf is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:936:5: Value parameter in mapping balanceOf is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:936:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:937:5: Main key parameter in mapping allowance is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:937:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:944:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:946:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:959:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:959:5: Function setAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:959:64: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:972:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:972:5: Function setBalanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:972:44: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1006:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1006:5: 'isInFunctionBody' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1043:5: 'callTokenFallbackIfNeeded' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1043:75: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1057:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1060:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1071:13: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1071:28: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1122:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1134:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1135:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1139:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1156:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1156:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1156:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1159:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1167:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1167:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1167:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1170:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1182:5: Function order is incorrect, external  function can not go after public view function (line 1167) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1182:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1182:5: Function setTokenState() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1190:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1190:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1196:9: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1196:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1197:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1197:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1218:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1218:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1218:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1229:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1229:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1229:78: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1241:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1241:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1241:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1241:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1255:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1255:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1256:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1256:5: 'TRANSFER_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1256:37: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1256:37: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1257:5: 'emitTransfer' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1257:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1258:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1261:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1261:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1262:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1262:5: 'APPROVAL_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1262:37: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1262:37: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1263:5: 'emitApproval' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1263:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1264:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1267:5: GC: [newTokenState] on Event [TokenStateUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1268:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1268:5: 'TOKENSTATEUPDATED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1269:5: 'emitTokenStateUpdated' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1270:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1316:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1316:5: 'DECIMALS' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1320:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1324:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1339:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1339:5: Function setSynthetix() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1347:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1347:5: Function setFeePool() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1361:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1361:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1361:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1361:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1367:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1368:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1382:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1382:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1382:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1382:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1388:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1389:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1402:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1402:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1402:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1402:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1409:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1410:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1427:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1427:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1427:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1427:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1434:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1435:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1449:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1449:5: Function transferSenderPaysFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1449:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1449:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1455:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1467:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1467:5: Function transferSenderPaysFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1467:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1467:48: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1473:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1484:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1484:5: Function transferFromSenderPaysFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1484:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1484:66: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1490:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1505:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1505:5: Function transferFromSenderPaysFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1505:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1505:66: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1511:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1524:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1524:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1532:20: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1540:5: Function order is incorrect, external  function can not go after internal  function (line 1524) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1540:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1540:5: Function issue() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1540:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1551:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1551:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1551:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1563:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1563:5: Function triggerTokenFallbackIfNeeded() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1563:78: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1577:9: Error message for require is too long: 63 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1577:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1582:9: Error message for require is too long: 47 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1582:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1588:5: GC: [newSynthetix] on Event [SynthetixUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1589:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1589:5: 'SYNTHETIXUPDATED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1590:5: 'emitSynthetixUpdated' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1591:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1594:5: GC: [newFeePool] on Event [FeePoolUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1595:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1595:5: 'FEEPOOLUPDATED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1596:5: 'emitFeePoolUpdated' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1597:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1600:5: GC: [value] on Event [Issued] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1600:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1601:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1601:5: 'ISSUED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1602:5: 'emitIssued' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1602:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1603:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1606:5: GC: [value] on Event [Burned] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1606:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1607:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1607:5: 'BURNED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1608:5: 'emitBurned' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1608:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1609:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1660:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1663:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1666:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1669:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1678:5: Function order is incorrect, struct definition can not go after state variable declaration (line 1675) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1679:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1680:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1681:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1682:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1683:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1694:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1700:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1703:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1704:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1707:5: Main key parameter in mapping lastFeeWithdrawal is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1707:5: Value parameter in mapping lastFeeWithdrawal is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1707:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1711:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1711:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1711:5: 'TWENTY_PERCENT' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1712:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1712:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1712:5: 'TWENTY_FIVE_PERCENT' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1713:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1713:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1713:5: 'THIRTY_PERCENT' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1714:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1714:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1714:5: 'FOURTY_PERCENT' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1715:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1715:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1715:5: 'FIFTY_PERCENT' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1716:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1716:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1716:5: 'SEVENTY_FIVE_PERCENT' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1718:2: Line length must be no more than 120 but current length is 138. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1718:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1718:94: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1718:117: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1721:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1724:2: Line length must be no more than 120 but current length is 128. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1724:9: Error message for require is too long: 65 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1724:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1724:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1725:2: Line length must be no more than 120 but current length is 128. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1725:9: Error message for require is too long: 65 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1725:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1725:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1734:41: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1747:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1747:5: Function setExchangeFeeRate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1747:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1751:9: Error message for require is too long: 53 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1751:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1751:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1762:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1762:5: Function setTransferFeeRate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1762:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1766:9: Error message for require is too long: 53 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1766:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1766:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1777:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1777:5: Function setFeeAuthority() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1789:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1789:5: Function setFeePeriodDuration() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1789:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1793:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1793:9: Error message for require is too long: 62 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1793:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1793:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1794:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1794:9: Error message for require is too long: 65 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1794:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1794:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1804:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1804:5: Function setSynthetix() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1818:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1818:5: Function feePaid() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1818:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1822:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1831:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1831:5: Function closeCurrentFeePeriod() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1835:2: Line length must be no more than 120 but current length is 127. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1835:9: Error message for require is too long: 47 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1835:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1835:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1835:51: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1854:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1854:69: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1855:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1870:41: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1881:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1881:5: Function claimFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1881:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1886:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1888:9: Error message for require is too long: 53 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1888:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1907:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1911:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1916:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1916:69: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1917:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1921:17: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1940:2: Line length must be no more than 120 but current length is 123. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1942:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1954:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1961:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1978:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1978:5: Function transferFeeIncurred() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1978:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1978:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1981:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1999:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1999:5: Function transferredAmountToReceive() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1999:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:1999:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2002:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2011:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2011:5: Function amountReceivedFromTransfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2011:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2011:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2014:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2023:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2023:5: Function exchangeFeeIncurred() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2023:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2023:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2026:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2044:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2044:5: Function exchangedAmountToReceive() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2044:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2044:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2047:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2057:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2057:5: Function amountReceivedFromExchange() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2057:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2057:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2060:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2069:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2069:5: Function totalFeesAvailable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2069:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2072:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2074:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2077:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2077:49: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2089:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2089:5: Function feesAvailable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2089:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2092:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2095:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2097:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2100:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2100:49: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2112:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2112:5: Function currentPenalty() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2112:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2115:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2117:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2124:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2126:46: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2128:46: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2139:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2139:5: Function feesByPeriod() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2139:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2142:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2144:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2147:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2148:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2155:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2158:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2159:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2160:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2165:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2165:49: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2173:17: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2177:17: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2178:17: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2189:9: Error message for require is too long: 46 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2189:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2195:9: Error message for require is too long: 51 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2195:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2204:5: GC: [newFeeRate] on Event [TransferFeeUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2204:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2205:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2205:5: 'TRANSFERFEEUPDATED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2206:5: 'emitTransferFeeUpdated' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2206:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2207:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2210:5: GC: [newFeeRate] on Event [ExchangeFeeUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2210:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2211:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2211:5: 'EXCHANGEFEEUPDATED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2212:5: 'emitExchangeFeeUpdated' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2212:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2213:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2216:5: GC: [newFeePeriodDuration] on Event [FeePeriodDurationUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2216:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2217:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2217:5: 'FEEPERIODDURATIONUPDATED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2217:53: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2217:53: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2218:5: 'emitFeePeriodDurationUpdated' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2218:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2219:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2222:5: GC: [newFeeAuthority] on Event [FeeAuthorityUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2223:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2223:5: 'FEEAUTHORITYUPDATED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2224:5: 'emitFeeAuthorityUpdated' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2225:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2228:5: GC: [feePeriodId] on Event [FeePeriodClosed] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2228:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2229:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2229:5: 'FEEPERIODCLOSED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2230:5: 'emitFeePeriodClosed' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2230:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2231:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2234:5: GC: [account] on Event [FeesClaimed] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2234:5: GC: [xdrAmount] on Event [FeesClaimed] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2234:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2235:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2235:5: 'FEESCLAIMED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2236:5: 'emitFeesClaimed' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2236:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2237:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2240:5: GC: [newSynthetix] on Event [SynthetixUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2241:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2241:5: 'SYNTHETIXUPDATED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2242:5: 'emitSynthetixUpdated' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2243:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2277:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2277:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2277:5: 'setupExpiryTime' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2283:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2283:17: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2286:27: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2289:5: Function order is incorrect, modifier definition can not go after constructor/initializer (line 2283) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2291:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2291:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2291:17: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2343:5: Main key parameter in mapping vestingSchedules is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2343:5: Value parameter in mapping vestingSchedules is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2343:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2346:5: Main key parameter in mapping totalVestedAccountBalance is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2346:5: Value parameter in mapping totalVestedAccountBalance is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2346:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2349:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2351:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2351:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2351:5: 'TIME_INDEX' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2352:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2352:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2352:5: 'QUANTITY_INDEX' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2355:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2355:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2355:5: 'MAX_VESTING_ENTRIES' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2360:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2362:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2370:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2370:5: Function setSynthetix() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2384:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2384:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2384:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2387:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2395:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2395:5: Function numVestingEntries() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2395:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2398:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2407:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2407:5: Function getVestingScheduleEntry() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2407:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2407:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2410:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2418:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2418:5: Function getVestingTime() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2418:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2418:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2421:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2429:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2429:5: Function getVestingQuantity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2429:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2429:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2432:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2440:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2440:5: Function getNextVestingIndex() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2440:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2443:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2445:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2446:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2446:35: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2457:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2457:5: Function getNextVestingEntry() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2457:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2460:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2462:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2472:5: Function order is incorrect, external view function can not go after public view function (line 2457) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2472:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2472:5: Function getNextVestingTime() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2472:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2475:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2483:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2483:5: Function getNextVestingQuantity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2483:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2486:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2498:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2498:5: Function withdrawSynthetix() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2498:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2509:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2509:5: Function purgeAccount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2532:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2532:5: Function appendVestingEntry() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2532:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2532:61: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2538:17: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2543:2: Line length must be no more than 120 but current length is 140. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2543:9: Error message for require is too long: 71 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2543:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2543:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2546:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2547:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2554:2: Line length must be no more than 120 but current length is 143. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2554:13: Error message for require is too long: 55 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2554:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2568:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2568:5: Function addVestingSchedule() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2568:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2568:64: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2573:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2573:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2573:44: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2582:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2582:5: Function vest() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2585:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2586:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2587:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2587:42: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2588:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2590:24: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2593:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2606:37: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2613:5: GC: [newSynthetix] on Event [SynthetixUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2615:5: GC: [time] on Event [Vested] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2615:5: GC: [value] on Event [Vested] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2615:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2615:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2670:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2674:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2678:5: Main key parameter in mapping issuanceData is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2678:5: Value parameter in mapping issuanceData is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2681:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2684:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2688:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2690:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2690:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2690:5: 'MAX_ISSUANCE_RATIO' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2694:5: Main key parameter in mapping preferredCurrency is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2694:5: Value parameter in mapping preferredCurrency is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2701:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2704:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2715:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2715:5: Function setCurrentIssuanceData() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2715:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2728:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2728:5: Function clearIssuanceData() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2739:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2739:5: Function incrementTotalIssuerCount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2750:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2750:5: Function decrementTotalIssuerCount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2762:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2762:5: Function appendDebtLedgerValue() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2762:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2775:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2775:5: Function setPreferredCurrency() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2786:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2786:5: Function setIssuanceRatio() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2786:31: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2790:9: Error message for require is too long: 51 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2790:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2790:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2799:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2799:5: Function importIssuerData() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2799:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2806:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2806:48: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2815:50: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2823:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2826:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2829:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2832:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2838:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2840:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2872:5: Function order is incorrect, external view function can not go after internal  function (line 2815) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2872:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2872:5: Function debtLedgerLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2872:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2875:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2883:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2883:5: Function lastDebtLedgerEntry() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2883:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2886:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2895:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2895:5: Function hasIssued() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2895:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2903:5: GC: [newRatio] on Event [IssuanceRatioUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2903:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2942:5: Main key parameter in mapping rates is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2942:5: Value parameter in mapping rates is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2942:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2945:5: Main key parameter in mapping lastRateUpdateTimes is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2945:5: Value parameter in mapping lastRateUpdateTimes is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2945:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2951:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2951:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2951:5: 'ORACLE_FUTURE_LIMIT' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2954:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2971:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2978:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2982:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2984:9: Error message for require is too long: 47 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2984:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:2990:39: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3007:55: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3016:2: Line length must be no more than 120 but current length is 154. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3017:2: Line length must be no more than 120 but current length is 155. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3020:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3020:5: Function updateRates() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3020:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3020:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3020:66: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3032:2: Line length must be no more than 120 but current length is 154. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3033:2: Line length must be no more than 120 but current length is 155. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3036:5: 'internalUpdateRates' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3036:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3036:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3036:74: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3040:9: Error message for require is too long: 56 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3040:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3041:29: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3044:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3044:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3044:51: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3048:13: Error message for require is too long: 57 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3048:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3049:13: Error message for require is too long: 49 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3049:13: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3052:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3070:5: 'updateXDRRate' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3070:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3073:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3075:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3075:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3075:54: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3090:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3090:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3100:5: Function order is incorrect, external  function can not go after internal  function (line 3070) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3100:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3100:5: Function deleteRate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3116:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3116:5: Function setOracle() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3128:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3128:5: Function setRateStalePeriod() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3128:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3141:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3141:5: Function rateForCurrency() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3141:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3144:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3152:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3152:5: Function ratesForCurrencies() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3152:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3155:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3157:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3157:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3159:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3159:52: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3169:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3169:5: Function lastRateUpdateTimeForCurrency() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3169:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3172:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3180:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3180:5: Function lastRateUpdateTimesForCurrencies() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3180:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3183:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3185:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3185:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3187:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3187:52: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3197:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3197:5: Function rateIsStale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3197:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3205:72: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3211:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3211:5: Function anyRateIsStale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3211:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3219:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3221:106: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3224:13: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3234:9: Error message for require is too long: 39 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3234:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3240:5: GC: [newOracle] on Event [OracleUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3241:5: GC: [rateStalePeriod] on Event [RateStalePeriodUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3241:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3242:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3377:5: Main key parameter in mapping synths is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3377:5: Value parameter in mapping synths is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3384:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3384:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3384:5: 'SYNTHETIX_SUPPLY' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3385:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3385:5: 'TOKEN_NAME' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3386:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3386:5: 'TOKEN_SYMBOL' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3387:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3387:5: 'DECIMALS' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3397:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3401:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3414:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3414:5: Function addSynth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3432:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3432:5: Function removeSynth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3444:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3444:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3454:17: GC: For [ availableSynths ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3470:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3470:5: Function setEscrow() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3484:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3484:5: Function setExchangeRates() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3498:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3498:5: Function setSynthetixState() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3508:2: Line length must be no more than 120 but current length is 125. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3511:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3511:5: Function setPreferredCurrency() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3515:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3515:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3515:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3525:2: Line length must be no more than 120 but current length is 126. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3530:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3530:5: Function effectiveValue() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3530:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3530:55: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3535:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3549:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3549:5: Function totalIssuedSynths() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3549:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3553:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3555:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3556:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3558:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3558:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3568:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3580:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3580:5: Function availableSynthCount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3580:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3583:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3593:5: Function order is incorrect, public  function can not go after public view function (line 3580) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3593:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3593:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3593:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3593:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3607:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3607:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3607:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3607:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3613:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3624:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3624:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3624:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3624:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3638:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3638:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3638:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3638:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3644:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3648:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3658:2: Line length must be no more than 120 but current length is 124. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3661:2: Line length must be no more than 120 but current length is 125. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3661:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3661:5: Function exchange() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3661:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3661:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3667:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3667:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3671:16: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3691:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3691:5: Function synthInitiatedExchange() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3691:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3694:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3706:16: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3712:2: Line length must be no more than 120 but current length is 123. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3724:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3724:5: Function synthInitiatedFeePayment() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3724:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3727:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3736:23: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3762:5: Function body contains 52 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3762:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3765:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3785:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3788:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3789:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3801:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3823:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3828:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3831:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3834:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3837:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3843:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3846:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3878:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3878:5: Function issueSynths() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3878:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3884:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3898:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3898:5: Function issueMaxSynths() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3903:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3914:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3914:5: Function burnSynths() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3914:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3921:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3927:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3941:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3945:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3948:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3951:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3952:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3957:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3965:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3966:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3967:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3985:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3985:5: Function maxIssuableSynths() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3985:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3989:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:3992:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4006:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4006:5: Function collateralisationRatio() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4006:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4009:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4011:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4014:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4024:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4024:5: Function debtBalanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4024:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4028:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4031:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4032:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4040:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4045:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4048:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4059:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4059:5: Function remainingIssuableSynths() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4059:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4063:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4065:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4066:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4068:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4081:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4081:5: Function collateral() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4081:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4084:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4086:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4101:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4101:5: Function transferableSynthetix() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4101:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4105:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4110:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4116:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4119:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4129:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4129:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4142:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4142:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4153:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4161:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4161:5: 'PREFERREDCURRENCYCHANGED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4161:53: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4161:53: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4162:5: 'emitPreferredCurrencyChanged' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4163:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4166:5: GC: [stateContract] on Event [StateContractChanged] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4167:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4167:5: 'STATECONTRACTCHANGED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4168:5: 'emitStateContractChanged' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4169:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4172:5: GC: [newSynth] on Event [SynthAdded] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4173:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4173:5: 'SYNTHADDED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4174:5: 'emitSynthAdded' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4175:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4178:5: GC: [removedSynth] on Event [SynthRemoved] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4179:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4179:5: 'SYNTHREMOVED_SIG' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4180:5: 'emitSynthRemoved' should start with _ [Warning/private-vars-leading-underscore]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4181:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4238:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4241:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4244:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4246:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4248:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4251:5: Function order is incorrect, struct definition can not go after state variable declaration (line 4248) [Warning/ordering]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4251:5: Contract, Structs and Enums should be in CamelCase [Warning/contract-name-camelcase]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4255:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4269:5: Main key parameter in mapping deposits is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4269:5: Value parameter in mapping deposits is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4269:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4271:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4273:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4278:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4281:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4286:5: Main key parameter in mapping smallDeposits is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4286:5: Value parameter in mapping smallDeposits is not named [Warning/named-parameters-mapping]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4286:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4301:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4315:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4316:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4321:9: Visibility modifier must be first in list of modifiers [Warning/visibility-modifier-order]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4330:31: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4339:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4339:5: Function setFundsWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4351:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4351:5: Function setOracle() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4363:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4363:5: Function setSynth() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4375:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4375:5: Function setSynthetix() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4387:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4387:5: Function setPriceStalePeriod() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4387:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4399:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4399:5: Function setMinimumDepositAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4399:38: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4404:9: Error message for require is too long: 48 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4404:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4414:2: Line length must be no more than 120 but current length is 179. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4416:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4416:5: Function updatePrices() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4416:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4416:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4416:69: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4422:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4422:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4423:9: Error message for require is too long: 48 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4423:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4423:29: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4435:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4445:5: Function body contains 115 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4445:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4445:5: Function exchangeEtherForSynths() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4445:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4445:5: Function has cyclomatic complexity 9 but allowed no more than 7 [Warning/code-complexity]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4450:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4452:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4456:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4457:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4460:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4460:89: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4490:25: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4494:30: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4505:28: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4511:21: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4513:21: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4526:25: Avoid multiple calls of "send" method in single transaction [Warning/multiple-sends]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4530:30: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4553:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4568:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4568:5: Function exchangeEtherForSynthsAtRate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4568:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4568:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4573:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4575:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4575:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4584:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4584:5: Function exchangeEtherForSynthetix() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4584:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4589:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4592:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4611:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4611:5: Function exchangeEtherForSynthetixAtRate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4611:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4611:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4611:72: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4616:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4618:9: Error message for require is too long: 43 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4618:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4619:9: Error message for require is too long: 47 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4619:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4629:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4629:5: Function exchangeSynthsForSynthetix() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4629:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4629:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4633:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4636:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4657:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4657:5: Function exchangeSynthsForSynthetixAtRate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4657:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4657:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4657:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4661:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4663:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4663:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4672:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4672:5: Function withdrawSynthetix() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4672:32: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4691:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4691:5: Function withdrawMyDepositedSynths() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4694:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4696:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4696:63: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4718:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4718:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4732:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4732:5: Function depositSynths() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4732:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4747:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4747:5: Function tokenFallback() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4747:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4747:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4747:55: Variable "data" is unused [Warning/no-unused-vars]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4777:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4777:5: Function pricesAreStale() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4777:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4782:60: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4790:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4790:5: Function synthetixReceivedForSynths() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4790:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4790:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4793:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4796:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4807:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4807:5: Function synthetixReceivedForEther() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4807:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4807:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4810:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4813:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4824:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4824:5: Function synthsReceivedForEther() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4824:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4824:37: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4827:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4830:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4840:9: Error message for require is too long: 39 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4840:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4847:9: Error message for require is too long: 47 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4847:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4853:9: Error message for require is too long: 47 counted / 32 allowed [Warning/reason-string]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4853:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4859:5: GC: [newFundsWallet] on Event [FundsWalletUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4860:5: GC: [newOracle] on Event [OracleUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4863:5: GC: [priceStalePeriod] on Event [PriceStalePeriodUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4863:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4864:5: GC: [newEthPrice] on Event [PricesUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4864:5: GC: [newSynthetixPrice] on Event [PricesUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4864:5: GC: [timeSent] on Event [PricesUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4864:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4864:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4864:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4865:5: GC: [fromAmount] on Event [Exchange] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4865:5: GC: [toAmount] on Event [Exchange] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4865:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4865:77: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4866:5: GC: [user] on Event [SynthWithdrawal] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4866:5: GC: [amount] on Event [SynthWithdrawal] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4866:41: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4867:5: GC: [amount] on Event [SynthDeposit] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4867:46: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4867:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4868:5: GC: [amount] on Event [SynthDepositRemoved] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4868:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4868:66: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4869:5: GC: [user] on Event [SynthDepositNotAccepted] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4869:5: GC: [amount] on Event [SynthDepositNotAccepted] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4869:5: GC: [minimum] on Event [SynthDepositNotAccepted] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4869:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4869:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4870:5: GC: [amount] on Event [MinimumDepositAmountUpdated] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4870:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4871:5: GC: [amount] on Event [NonPayableContract] could be Indexed [Warning/gas-indexed-events]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4871:56: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4872:2: Line length must be no more than 120 but current length is 143. [Error/max-line-length]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4872:82: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4872:102: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5.sol:4872:117: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

1212 problem/s (23 error/s, 1189 warning/s)
