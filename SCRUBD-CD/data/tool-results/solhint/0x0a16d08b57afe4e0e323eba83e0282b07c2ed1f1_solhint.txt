./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:3:1: Found more than One contract per file. 6 contracts found! [Warning/one-contract-per-file]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:7:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:9:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:11:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:11:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:13:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:13:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:15:5: Function order is incorrect, external  function can not go after external view function (line 13) [Warning/ordering]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:15:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:15:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:17:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:17:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:19:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:19:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:21:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:21:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:30:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:30:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:32:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:32:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:34:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:34:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:38:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:42:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:48:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:48:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:50:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:58:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:63:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:63:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:67:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:67:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:71:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:71:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:75:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:75:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:79:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:79:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:83:5: Function order is incorrect, public  function can not go after public view function (line 79) [Warning/ordering]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:83:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:83:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:89:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:89:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:93:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:93:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:99:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:99:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:110:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:110:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:110:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:116:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:116:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:116:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:119:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:119:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:119:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:119:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:132:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:132:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:132:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:133:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:133:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:133:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:138:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:138:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:138:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:138:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:150:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:162:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:162:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:162:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:167:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:167:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:167:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:167:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:183:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:183:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:183:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:184:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:184:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:184:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:197:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:197:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:208:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:214:24: Code contains empty blocks [Warning/no-empty-blocks]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:222:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:226:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:226:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:230:5: Function order is incorrect, modifier definition can not go after public view function (line 226) [Warning/ordering]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:231:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:235:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:239:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:240:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:240:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:240:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:253:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:253:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:261:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:261:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:268:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:268:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:277:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:277:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:284:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:284:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:291:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:295:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:299:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:303:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:307:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:311:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:317:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:317:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:322:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:328:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:333:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:339:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:346:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:346:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:347:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:347:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:349:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:349:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:350:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:350:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:351:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:351:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:352:5: Function order is incorrect, external view function can not go after external pure function (line 351) [Warning/ordering]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:352:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:352:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:352:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:353:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:353:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:353:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:354:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:354:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:354:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:356:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:356:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:356:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:357:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:357:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:357:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:358:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:358:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:358:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:360:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:360:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:360:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:361:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:361:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:361:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:362:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:362:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:362:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:364:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:364:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:364:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:366:5: GC: [amount0] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:366:5: GC: [amount1] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:366:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:366:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:367:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:367:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:367:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:367:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:368:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:368:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:368:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:368:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:370:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:371:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:372:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:373:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:376:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:376:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:378:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:378:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:378:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:378:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:379:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:379:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:380:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:380:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:381:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:381:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:382:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:383:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:383:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:383:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:384:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:384:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:384:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:385:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:385:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:385:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:387:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:387:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:388:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:388:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:388:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:389:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:389:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:389:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:390:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:391:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:393:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:398:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:398:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:399:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:399:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:399:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:401:5: Function order is incorrect, external  function can not go after external pure function (line 399) [Warning/ordering]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:401:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:404:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:405:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:406:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:407:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:409:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:410:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:410:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:410:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:411:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:413:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:414:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:415:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:417:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:418:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:418:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:418:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:419:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:422:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:423:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:424:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:426:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:427:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:427:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:428:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:430:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:431:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:432:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:434:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:435:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:435:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:436:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:439:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:440:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:441:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:443:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:445:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:445:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:446:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:448:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:449:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:450:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:452:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:454:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:454:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:455:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:456:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:457:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:460:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:461:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:462:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:463:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:464:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:467:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:468:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:469:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:469:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:469:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:472:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:473:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:473:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:473:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:473:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:475:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:476:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:476:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:476:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:476:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:478:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:479:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:479:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:479:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:482:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:484:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:484:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:484:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:484:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:484:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:485:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:485:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:485:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:485:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:485:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:486:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:486:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:486:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:486:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:486:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:487:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:487:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:487:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:488:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:488:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:488:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:492:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:494:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:495:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:496:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:498:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:499:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:500:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:502:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:503:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:504:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:506:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:508:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:510:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:511:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:512:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:515:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:517:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:518:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:521:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:523:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:524:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:525:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:528:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:534:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:534:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:534:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:536:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:536:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:537:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:537:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:539:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:540:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:540:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:541:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:541:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:541:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:543:5: Function order is incorrect, external  function can not go after external view function (line 541) [Warning/ordering]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:543:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:545:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:546:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:550:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:551:16: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:554:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:558:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:562:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:567:1: Contract has 24 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:570:5: 'uniswapV2Router' should start with _ [Warning/private-vars-leading-underscore]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:571:5: 'uniswapV2Pair' should start with _ [Warning/private-vars-leading-underscore]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:573:5: Main key parameter in mapping _isBlacklisted is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:573:5: Value parameter in mapping _isBlacklisted is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:578:5: 'feeWallet' should start with _ [Warning/private-vars-leading-underscore]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:586:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:586:5: 'deadBlocks' should start with _ [Warning/private-vars-leading-underscore]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:588:5: Main key parameter in mapping _holderLastTransferTimestamp is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:588:5: Value parameter in mapping _holderLastTransferTimestamp is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:598:5: Main key parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:598:5: Value parameter in mapping _isExcludedFromFees is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:599:5: Main key parameter in mapping _isExcludedMaxTransactionAmount is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:599:5: Value parameter in mapping _isExcludedMaxTransactionAmount is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:600:5: Main key parameter in mapping _holderFirstBuyTimestamp is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:600:5: Value parameter in mapping _holderFirstBuyTimestamp is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:601:5: Main key parameter in mapping automatedMarketMakerPairs is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:601:5: Value parameter in mapping automatedMarketMakerPairs is not named [Warning/named-parameters-mapping]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:601:5: 'automatedMarketMakerPairs' should start with _ [Warning/private-vars-leading-underscore]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:604:5: GC: [isExcluded] on Event [ExcludeFromFees] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:606:5: Event name must be in CamelCase [Warning/event-name-camelcase]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:607:5: GC: [tokensSwapped] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:607:5: GC: [ethReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:607:5: GC: [tokensIntoLiquidity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:609:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:615:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:645:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:645:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:645:5: Function Launch() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:646:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:646:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:646:34: Use double quotes for string literals [Error/quotes]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:647:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:647:35: Use double quotes for string literals [Error/quotes]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:648:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:648:49: Use double quotes for string literals [Error/quotes]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:659:23: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:665:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:671:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:675:5: Function order is incorrect, external  function can not go after private  function (line 663) [Warning/ordering]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:675:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:675:5: Function removeRestrictions() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:675:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:680:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:680:5: Function disableTransferDelay() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:680:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:685:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:685:5: Function updateSwapTokensAtAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:685:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:686:9: Error message for require is too long: 53 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:686:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:686:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:686:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:687:9: Error message for require is too long: 52 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:687:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:687:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:687:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:692:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:692:5: Function excludeFromMaxTransaction() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:696:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:696:5: Function modifyFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:700:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:700:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:703:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:703:5: Function excludeFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:709:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:709:5: Function setAutomatedMarketMakerPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:710:9: Error message for require is too long: 57 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:710:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:710:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:721:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:721:5: Function updateFeeWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:726:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:726:5: Function isExcludedFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:726:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:730:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:730:5: Function isSniper() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:730:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:734:5: Function body contains 87 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:734:5: Function has cyclomatic complexity 16 but allowed no more than 7 [Warning/code-complexity]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:739:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:739:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:739:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:740:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:740:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:740:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:741:9: Error message for require is too long: 77 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:741:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:741:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:747:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:747:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:758:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:762:52: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:767:2: Line length must be no more than 120 but current length is 165. [Error/max-line-length]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:767:25: Error message for require is too long: 73 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:767:25: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:767:25: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:767:62: Avoid to use tx.origin [Warning/avoid-tx-origin]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:768:54: Avoid to use tx.origin [Warning/avoid-tx-origin]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:774:21: Error message for require is too long: 53 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:774:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:774:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:774:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:775:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:775:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:780:21: Error message for require is too long: 54 counted / 32 allowed [Warning/reason-string]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:780:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:780:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:780:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:783:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:783:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:789:24: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:831:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:836:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:843:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:849:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:853:5: 'swapBack' should start with _ [Warning/private-vars-leading-underscore]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:884:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:884:5: Function teamMessage() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:884:5: GC: [input] argument on Function [teamMessage] could be [calldata] if it's not being updated [Warning/gas-calldata-parameters]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:884:66: Code contains empty blocks [Warning/no-empty-blocks]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:887:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:887:5: Function forceSwap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:894:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:894:5: Function forceSend() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1.sol:899:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]

478 problem/s (5 error/s, 473 warning/s)
