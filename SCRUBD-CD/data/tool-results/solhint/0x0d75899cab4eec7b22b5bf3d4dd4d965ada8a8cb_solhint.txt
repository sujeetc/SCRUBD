./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:2:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:4:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:8:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:16:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:16:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:18:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:18:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:20:5: Function order is incorrect, external  function can not go after external view function (line 18) [Warning/ordering]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:20:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:20:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:22:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:22:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:24:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:24:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:26:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:26:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:27:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:29:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:34:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:45:5: Function order is incorrect, internal  function can not go after internal view function (line 34) [Warning/ordering]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:46:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:46:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:50:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:50:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:50:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:54:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:58:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:58:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:62:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:63:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:66:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:66:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:67:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:67:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:67:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:67:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:71:2: Line length must be no more than 120 but current length is 149. [Error/max-line-length]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:71:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:72:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:80:17: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:100:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:107:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:107:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:114:5: Function order is incorrect, modifier definition can not go after public view function (line 107) [Warning/ordering]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:115:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:126:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:134:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:135:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:135:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:135:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:149:1: Contract has 45 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:155:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:155:5: 'totalFeeFortx' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:156:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:156:5: 'maxWalletTreshold' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:157:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:157:5: 'maxTxTreshold' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:158:5: 'swapTreshold' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:161:5: 'currentThreshold' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:164:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:164:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:165:5: Main key parameter in mapping _excludedFromFees is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:165:5: Value parameter in mapping _excludedFromFees is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:166:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:167:5: Main key parameter in mapping _isExcludedMaxTransactionAmount is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:167:5: Value parameter in mapping _isExcludedMaxTransactionAmount is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:167:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:168:5: Main key parameter in mapping automatedMarketMakerPairs is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:168:5: Value parameter in mapping automatedMarketMakerPairs is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:169:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:172:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:172:5: 'maxWalletAmount' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:173:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:173:5: 'maxTxAmount' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:174:5: Main key parameter in mapping botWallets is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:174:5: Value parameter in mapping botWallets is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:174:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:174:5: 'botWallets' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:175:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:175:5: 'botTradeEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:176:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:176:5: 'checkWalletSize' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:177:5: Main key parameter in mapping _liquidityHolders is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:177:5: Value parameter in mapping _liquidityHolders is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:178:5: Main key parameter in mapping presaleAddresses is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:178:5: Value parameter in mapping presaleAddresses is not named [Warning/named-parameters-mapping]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:178:5: 'presaleAddresses' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:179:5: 'buyliqFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:180:5: 'buyprevLiqFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:181:5: 'buymktFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:182:5: 'buyPrevmktFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:183:5: 'buyBurnFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:184:5: 'buyPrevBurnFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:187:5: 'tradeEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:190:5: 'sellliqFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:191:5: 'sellprevLiqFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:192:5: 'sellmktFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:193:5: 'sellPrevmktFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:194:5: 'sellBurnFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:195:5: 'sellPrevBurnFee' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:200:5: Immutable variables name are set to be in capitalized SNAKE_CASE [Warning/immutable-vars-naming]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:201:5: 'mktTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:202:5: 'burnTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:203:5: 'liqTokens' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:206:5: GC: [tokensSwapped] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:206:5: GC: [ethReceived] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:206:5: GC: [tokensIntoLiquidity] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:210:5: Event name must be in CamelCase [Warning/event-name-camelcase]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:210:5: GC: [amount] on Event [tokensSwappedDuringTokenomics] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:214:5: Function order is incorrect, state variable declaration can not go after event definition (line 211) [Warning/ordering]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:214:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:226:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:244:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:248:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:248:5: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:248:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:251:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:251:5: Function currentmktTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:251:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:255:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:255:6: Function currentLiqTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:255:6: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:259:6: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:259:6: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:263:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:263:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:267:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:267:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:273:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:273:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:277:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:277:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:281:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:281:5: Function removeLimits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:285:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:285:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:285:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:288:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:288:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:288:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:291:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:291:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:291:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:294:9: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:294:9: Function updateMaxTxTreshold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:299:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:299:6: Function updateMaxWalletTreshold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:306:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:306:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:311:9: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:311:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:311:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:311:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:317:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:317:5: Function addBotWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:320:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:320:5: Function currentbuyliqFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:320:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:323:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:323:5: Function currentbuymktfee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:323:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:326:7: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:326:7: Function currentBuyBurnfee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:326:7: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:331:7: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:331:7: Function currentsellLiqFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:331:7: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:334:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:334:5: Function currentsellmktfee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:334:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:337:7: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:337:7: Function currentsellBurnfee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:337:7: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:341:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:341:5: Function currentThresholdInt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:341:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:344:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:344:5: Function isExcluded() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:344:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:348:5: Function body contains 105 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:348:5: Function has cyclomatic complexity 15 but allowed no more than 7 [Warning/code-complexity]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:350:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:350:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:350:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:351:3: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:351:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:351:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:352:9: Error message for require is too long: 50 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:352:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:352:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:354:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:354:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:354:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:354:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:356:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:372:21: Error message for require is too long: 53 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:372:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:372:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:372:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:373:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:373:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:379:21: Error message for require is too long: 54 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:379:21: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:379:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:379:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:382:21: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:382:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:388:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:392:20: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:415:21: GC: Use Custom Errors instead of revert statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:455:5: 'swapForTokenomics' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:464:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:464:6: Function addLimitExempt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:468:5: 'swapTokensForETHmkt' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:475:3: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:480:4: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:487:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:487:5: Function unstuckTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:492:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:492:5: Function unstuckETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:497:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:497:5: Function tradeStatus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:501:5: 'swapAndLiquify' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:513:5: 'swapTokensForETH' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:520:3: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:525:4: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:529:5: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:532:3: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:538:4: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:543:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:543:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:543:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:544:3: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:544:3: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:544:3: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:557:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:557:5: Function addToExcluded() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:561:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:561:5: Function removeFromExcluded() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:564:7: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:564:7: Function excludePresaleAddresses() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:573:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:573:5: Function startPresaleStatus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:583:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:583:5: Function endPresaleStatus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:594:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:594:5: Function updateThreshold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:594:30: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:599:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:599:5: Function setSwapAndLiquify() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:606:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:606:5: Function setMktAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:610:5: 'transferAssetsETH' should start with _ [Warning/private-vars-leading-underscore]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:614:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:614:5: Function setAutomatedMarketMakerPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:615:9: Error message for require is too long: 57 counted / 32 allowed [Warning/reason-string]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:615:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:615:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:624:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:624:5: Function updatecurrentbuyliqFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:627:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:627:5: Function updatecurrentbuymktfee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:630:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:630:5: Function updatecurrentbuyBurnFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:636:7: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:636:7: Function updatecurrentsellLiqFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:639:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:639:5: Function updatecurrentsellmktfee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:642:6: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:642:6: Function updatecurrentsellBurnFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:648:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:648:5: Function currentMaxWallet() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:648:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:651:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:651:5: Function currentMaxTx() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:651:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:654:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:654:5: Function updateSwapTreshold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:659:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:659:5: Function currentTradeStatus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:659:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:662:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:662:5: Function currentSwapTreshold() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:662:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:665:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:665:5: Function currentTokensToSwap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:665:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:672:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:672:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:672:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:673:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:673:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:674:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:674:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:675:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:676:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:676:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:677:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:677:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:677:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:678:5: Function order is incorrect, external  function can not go after external view function (line 677) [Warning/ordering]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:678:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:679:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:680:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:684:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:684:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:685:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:685:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:686:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:686:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:687:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:687:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:688:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:688:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:689:5: Function order is incorrect, external view function can not go after external pure function (line 688) [Warning/ordering]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:689:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:689:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:689:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:690:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:690:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:690:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:691:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:691:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:691:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:692:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:692:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:692:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:693:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:693:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:693:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:694:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:694:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:694:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:695:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:695:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:695:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:696:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:696:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:696:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:697:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:697:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:697:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:698:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:698:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:698:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:699:5: GC: [amount0] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:699:5: GC: [amount1] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:699:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:699:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:700:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:700:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:700:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:700:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:701:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:701:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:701:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:701:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:703:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:704:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:705:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:706:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:709:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:709:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:710:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:710:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:710:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:710:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:711:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:711:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:712:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:712:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:713:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:713:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:714:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:715:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:715:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:715:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:716:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:716:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:716:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:717:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:717:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:717:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:718:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:718:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:719:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:719:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:719:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:720:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:720:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:720:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:721:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:722:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:723:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:727:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:727:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:728:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:728:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:728:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:729:5: Function order is incorrect, external  function can not go after external pure function (line 728) [Warning/ordering]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:729:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:732:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:733:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:734:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:735:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:737:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:738:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:738:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:738:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:739:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:741:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:742:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:743:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:745:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:746:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:746:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:746:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:747:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:750:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:751:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:752:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:754:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:755:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:755:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:756:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:758:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:759:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:760:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:762:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:763:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:763:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:764:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:767:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:768:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:769:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:771:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:773:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:773:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:774:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:776:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:777:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:778:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:780:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:782:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:782:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:783:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:784:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:785:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:788:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:789:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:790:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:791:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:792:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:795:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:796:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:797:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:797:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:797:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:800:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:801:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:801:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:801:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:801:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:803:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:804:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:804:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:804:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:804:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:806:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:807:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:807:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:807:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:810:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:812:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:812:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:812:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:812:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:812:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:813:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:813:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:813:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:813:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:813:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:814:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:814:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:814:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:814:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:814:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:815:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:815:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:815:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:816:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:816:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:816:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:820:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:822:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:823:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:824:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:826:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:827:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:828:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:830:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:831:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:832:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:834:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:836:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:838:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:839:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:840:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:843:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:845:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:846:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:849:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:851:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:852:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:853:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb.sol:856:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]

517 problem/s (3 error/s, 514 warning/s)
