./0x470142a1834438515b757118f322703aba6e1e05.sol:1:1: Found more than One contract per file. 9 contracts found! [Warning/one-contract-per-file]
./0x470142a1834438515b757118f322703aba6e1e05.sol:1:1: Compiler version ^0.4.13 does not satisfy the ^0.8.0 semver requirement [Error/compiler-version]
./0x470142a1834438515b757118f322703aba6e1e05.sol:14:5: Main key parameter in mapping airdrops is not named [Warning/named-parameters-mapping]
./0x470142a1834438515b757118f322703aba6e1e05.sol:14:5: Value parameter in mapping airdrops is not named [Warning/named-parameters-mapping]
./0x470142a1834438515b757118f322703aba6e1e05.sol:15:5: Main key parameter in mapping twitterdrops is not named [Warning/named-parameters-mapping]
./0x470142a1834438515b757118f322703aba6e1e05.sol:15:5: Value parameter in mapping twitterdrops is not named [Warning/named-parameters-mapping]
./0x470142a1834438515b757118f322703aba6e1e05.sol:16:5: Main key parameter in mapping signaturedrops is not named [Warning/named-parameters-mapping]
./0x470142a1834438515b757118f322703aba6e1e05.sol:16:5: Value parameter in mapping signaturedrops is not named [Warning/named-parameters-mapping]
./0x470142a1834438515b757118f322703aba6e1e05.sol:20:5: Function order is incorrect, using for declaration can not go after state variable declaration (line 18) [Warning/ordering]
./0x470142a1834438515b757118f322703aba6e1e05.sol:28:7: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:40:9: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:41:9: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:58:9: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:59:9: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:59:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x470142a1834438515b757118f322703aba6e1e05.sol:76:9: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:79:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x470142a1834438515b757118f322703aba6e1e05.sol:79:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x470142a1834438515b757118f322703aba6e1e05.sol:82:9: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:82:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x470142a1834438515b757118f322703aba6e1e05.sol:91:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:91:5: Function PolicyPalNetworkAirdrop() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:107:5: GC: [_receiver] on Event [TokenDrop] could be Indexed [Warning/gas-indexed-events]
./0x470142a1834438515b757118f322703aba6e1e05.sol:107:5: GC: [_amount] on Event [TokenDrop] could be Indexed [Warning/gas-indexed-events]
./0x470142a1834438515b757118f322703aba6e1e05.sol:107:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x470142a1834438515b757118f322703aba6e1e05.sol:114:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:114:5: Function airDropSingleAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:119:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x470142a1834438515b757118f322703aba6e1e05.sol:119:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x470142a1834438515b757118f322703aba6e1e05.sol:126:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:128:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:129:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:141:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:141:5: Function airDropMultipleAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:146:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x470142a1834438515b757118f322703aba6e1e05.sol:146:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x470142a1834438515b757118f322703aba6e1e05.sol:154:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:156:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:157:17: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:169:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:169:5: Function twitterDropSingleAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:174:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x470142a1834438515b757118f322703aba6e1e05.sol:174:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x470142a1834438515b757118f322703aba6e1e05.sol:181:15: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:183:15: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:184:15: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:196:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:196:5: Function twitterDropMultipleAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:201:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x470142a1834438515b757118f322703aba6e1e05.sol:201:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x470142a1834438515b757118f322703aba6e1e05.sol:209:15: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:211:15: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:212:15: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:224:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:224:5: Function signatureDropSingleAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:229:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x470142a1834438515b757118f322703aba6e1e05.sol:229:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x470142a1834438515b757118f322703aba6e1e05.sol:236:15: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:238:15: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:239:15: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:251:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:251:5: Function signatureDropMultipleAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:256:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x470142a1834438515b757118f322703aba6e1e05.sol:256:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x470142a1834438515b757118f322703aba6e1e05.sol:264:15: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:266:15: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:267:15: Possible reentrancy vulnerabilities. Avoid state changes after transfer. [Warning/reentrancy]
./0x470142a1834438515b757118f322703aba6e1e05.sol:279:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:279:5: Function emergencyDrain() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:286:1: Function order is incorrect, library definition can not go after contract definition (line 3) [Warning/ordering]
./0x470142a1834438515b757118f322703aba6e1e05.sol:291:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:303:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:313:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:314:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x470142a1834438515b757118f322703aba6e1e05.sol:321:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:323:12: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x470142a1834438515b757118f322703aba6e1e05.sol:339:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:339:3: Function Ownable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:346:3: Function order is incorrect, modifier definition can not go after constructor/initializer (line 339) [Warning/ordering]
./0x470142a1834438515b757118f322703aba6e1e05.sol:347:5: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:355:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:355:3: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:356:5: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:364:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:364:3: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:364:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:365:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:365:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:365:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:366:3: Function order is incorrect, public  function can not go after public view function (line 365) [Warning/ordering]
./0x470142a1834438515b757118f322703aba6e1e05.sol:366:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:366:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:366:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:367:3: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x470142a1834438515b757118f322703aba6e1e05.sol:373:3: Main key parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0x470142a1834438515b757118f322703aba6e1e05.sol:373:3: Value parameter in mapping balances is not named [Warning/named-parameters-mapping]
./0x470142a1834438515b757118f322703aba6e1e05.sol:373:3: Explicitly mark visibility of state [Warning/state-visibility]
./0x470142a1834438515b757118f322703aba6e1e05.sol:373:3: 'balances' should start with _ [Warning/private-vars-leading-underscore]
./0x470142a1834438515b757118f322703aba6e1e05.sol:375:3: Explicitly mark visibility of state [Warning/state-visibility]
./0x470142a1834438515b757118f322703aba6e1e05.sol:375:3: 'totalSupply_' should start with _ [Warning/private-vars-leading-underscore]
./0x470142a1834438515b757118f322703aba6e1e05.sol:380:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:380:3: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:380:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:389:3: Function order is incorrect, public  function can not go after public view function (line 380) [Warning/ordering]
./0x470142a1834438515b757118f322703aba6e1e05.sol:389:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:389:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:389:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:390:5: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:391:5: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:391:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x470142a1834438515b757118f322703aba6e1e05.sol:405:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:405:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:413:3: GC: [value] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x470142a1834438515b757118f322703aba6e1e05.sol:419:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:419:3: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:420:5: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:420:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x470142a1834438515b757118f322703aba6e1e05.sol:432:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:432:3: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:432:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:433:3: Function order is incorrect, public  function can not go after public view function (line 432) [Warning/ordering]
./0x470142a1834438515b757118f322703aba6e1e05.sol:433:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:433:3: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:433:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:434:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:434:3: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:434:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:435:3: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x470142a1834438515b757118f322703aba6e1e05.sol:440:3: Main key parameter in mapping allowed is not named [Warning/named-parameters-mapping]
./0x470142a1834438515b757118f322703aba6e1e05.sol:440:3: 'allowed' should start with _ [Warning/private-vars-leading-underscore]
./0x470142a1834438515b757118f322703aba6e1e05.sol:449:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:449:3: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:449:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:450:5: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:451:5: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:451:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x470142a1834438515b757118f322703aba6e1e05.sol:452:5: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:452:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x470142a1834438515b757118f322703aba6e1e05.sol:471:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:471:3: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:471:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:483:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:483:3: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:483:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:497:3: Function order is incorrect, public  function can not go after public view function (line 483) [Warning/ordering]
./0x470142a1834438515b757118f322703aba6e1e05.sol:497:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:497:3: Function increaseApproval() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:497:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:497:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x470142a1834438515b757118f322703aba6e1e05.sol:513:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:513:3: Function decreaseApproval() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:513:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:513:47: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x470142a1834438515b757118f322703aba6e1e05.sol:514:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x470142a1834438515b757118f322703aba6e1e05.sol:530:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x470142a1834438515b757118f322703aba6e1e05.sol:531:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x470142a1834438515b757118f322703aba6e1e05.sol:532:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x470142a1834438515b757118f322703aba6e1e05.sol:550:9: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:565:9: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:566:9: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:573:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:573:5: Function toggleTransferable() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:584:5: Function order is incorrect, constructor/initializer can not go after external  function (line 573) [Warning/ordering]
./0x470142a1834438515b757118f322703aba6e1e05.sol:584:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:584:5: Function PolicyPalNetworkToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:585:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x470142a1834438515b757118f322703aba6e1e05.sol:591:9: Provide an error message for require [Warning/reason-string]
./0x470142a1834438515b757118f322703aba6e1e05.sol:614:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:614:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:614:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:635:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:635:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:635:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x470142a1834438515b757118f322703aba6e1e05.sol:648:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:648:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x470142a1834438515b757118f322703aba6e1e05.sol:660:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x470142a1834438515b757118f322703aba6e1e05.sol:660:5: Function emergencyERC20Drain() must match Foundry test naming convention [Warning/foundry-test-functions]

177 problem/s (1 error/s, 176 warning/s)
