./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:7:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:10:3: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:10:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:11:3: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:11:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:12:3: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:12:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:13:3: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:13:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:14:3: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:14:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:15:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:15:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:16:3: Function order is incorrect, external  function can not go after external view function (line 15) [Warning/ordering]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:16:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:16:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:17:3: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:17:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:18:3: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:18:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:19:3: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:19:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:20:3: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:21:3: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:26:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:26:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:27:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:27:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:29:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:29:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:30:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:30:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:31:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:31:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:32:5: Function order is incorrect, external view function can not go after external pure function (line 31) [Warning/ordering]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:32:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:32:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:32:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:33:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:33:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:33:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:34:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:34:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:34:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:35:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:35:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:35:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:36:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:36:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:36:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:37:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:37:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:37:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:38:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:38:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:38:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:39:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:39:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:39:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:40:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:40:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:40:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:41:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:41:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:41:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:45:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:45:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:45:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:47:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:47:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:48:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:48:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:49:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:50:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:50:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:51:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:51:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:51:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:52:5: Function order is incorrect, external  function can not go after external view function (line 51) [Warning/ordering]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:52:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:53:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:54:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:58:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:61:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:62:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:63:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:64:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:66:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:67:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:67:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:67:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:68:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:70:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:71:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:72:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:74:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:75:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:75:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:75:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:76:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:79:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:80:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:81:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:83:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:84:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:84:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:85:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:87:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:88:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:89:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:91:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:92:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:92:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:93:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:96:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:97:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:98:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:100:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:102:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:102:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:103:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:105:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:106:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:107:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:109:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:111:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:111:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:112:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:113:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:114:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:117:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:118:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:119:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:120:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:121:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:124:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:125:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:126:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:126:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:126:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:129:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:130:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:130:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:130:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:130:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:132:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:133:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:133:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:133:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:133:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:135:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:136:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:136:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:136:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:139:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:141:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:141:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:142:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:142:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:142:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:143:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:143:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:143:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:143:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:143:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:144:5: Function getamountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:144:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:144:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:144:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:144:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:145:5: Function getamountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:145:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:145:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:145:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:145:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:146:5: Function order is incorrect, external view function can not go after external pure function (line 145) [Warning/ordering]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:146:5: Function getamountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:146:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:146:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:147:5: Function getamountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:147:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:147:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:151:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:153:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:154:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:155:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:157:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:158:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:159:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:161:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:162:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:163:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:165:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:167:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:168:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:169:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:170:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:173:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:175:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:176:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:179:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:181:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:182:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:183:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:186:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:212:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:221:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:221:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:228:5: Function order is incorrect, modifier definition can not go after public view function (line 221) [Warning/ordering]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:229:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:240:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:249:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:250:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:250:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:250:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:277:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:302:2: Line length must be no more than 120 but current length is 160. [Error/max-line-length]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:304:5: Function order is incorrect, internal  function can not go after internal view function (line 277) [Warning/ordering]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:305:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:305:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:309:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:309:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:309:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:321:2: Line length must be no more than 120 but current length is 156. [Error/max-line-length]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:330:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:340:2: Line length must be no more than 120 but current length is 122. [Error/max-line-length]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:340:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:355:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:356:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:365:2: Line length must be no more than 120 but current length is 146. [Error/max-line-length]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:365:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:366:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:366:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:366:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:366:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:367:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:380:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:381:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:390:2: Line length must be no more than 120 but current length is 133. [Error/max-line-length]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:390:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:391:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:391:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:391:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:404:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:405:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:414:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:414:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:415:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:415:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:415:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:422:2: Line length must be no more than 120 but current length is 134. [Error/max-line-length]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:422:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:491:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:509:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:546:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:553:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:567:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:568:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:568:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:568:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:574:5: Function order is incorrect, struct definition can not go after private view function (line 567) [Warning/ordering]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:584:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:594:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:601:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:608:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:622:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:638:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:648:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:655:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:662:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:676:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:692:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:702:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:709:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:716:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:730:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:741:1: Contract has 41 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:746:5: Main key parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:746:5: Value parameter in mapping _balances is not named [Warning/named-parameters-mapping]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:747:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:748:5: Main key parameter in mapping _sellLock is not named [Warning/named-parameters-mapping]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:748:5: Value parameter in mapping _sellLock is not named [Warning/named-parameters-mapping]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:749:2: Main key parameter in mapping wListed is not named [Warning/named-parameters-mapping]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:749:2: Value parameter in mapping wListed is not named [Warning/named-parameters-mapping]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:757:5: Main key parameter in mapping _blacklist is not named [Warning/named-parameters-mapping]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:757:5: Value parameter in mapping _blacklist is not named [Warning/named-parameters-mapping]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:757:5: '_blacklist' should not start with _ [Warning/private-vars-leading-underscore]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:758:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:758:5: 'isBlacklist' should start with _ [Warning/private-vars-leading-underscore]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:761:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:761:37: Use double quotes for string literals [Error/quotes]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:762:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:762:39: Use double quotes for string literals [Error/quotes]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:763:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:764:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:766:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:766:5: 'swapLimit' should start with _ [Warning/private-vars-leading-underscore]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:767:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:767:5: 'isSwapPegged' should start with _ [Warning/private-vars-leading-underscore]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:770:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:772:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:774:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:776:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:778:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:780:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:781:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:787:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:787:5: 'PancakeRouter' should start with _ [Warning/private-vars-leading-underscore]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:798:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:804:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:804:5: 'botRekt' should start with _ [Warning/private-vars-leading-underscore]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:809:5: Explicitly mark visibility of state [Warning/state-visibility]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:809:5: 'isTokenSwapManual' should start with _ [Warning/private-vars-leading-underscore]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:817:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:822:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:830:5: Function order is incorrect, constructor/initializer can not go after private view function (line 822) [Warning/ordering]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:830:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:844:2: Line length must be no more than 120 but current length is 121. [Error/max-line-length]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:884:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:885:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:917:29: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:923:17: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:926:17: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:936:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:939:2: Line length must be no more than 120 but current length is 126. [Error/max-line-length]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:939:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:939:22: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:941:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:945:5: Function body contains 64 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:945:5: Function has cyclomatic complexity 8 but allowed no more than 7 [Warning/code-complexity]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:948:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:948:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:956:17: Provide an error message for require [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:956:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:960:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:960:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:960:44: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:962:35: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:968:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:968:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:973:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:973:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:974:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:974:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:979:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:979:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:983:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:983:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:983:44: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1014:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1014:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1024:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1064:5: Main key parameter in mapping toBePaid is not named [Warning/named-parameters-mapping]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1064:5: Value parameter in mapping toBePaid is not named [Warning/named-parameters-mapping]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1064:5: 'toBePaid' should start with _ [Warning/private-vars-leading-underscore]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1069:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1069:5: Function isexcludedFromRaffle() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1069:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1074:33: Function param name must be in mixedCase [Warning/func-param-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1074:33: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1143:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1148:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1155:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1161:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1169:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1169:5: Function getBurnedTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1169:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1173:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1173:5: Function getLimits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1177:2: Line length must be no more than 120 but current length is 157. [Error/max-line-length]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1177:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1177:5: Function getTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1181:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1181:35: Function param name must be in mixedCase [Warning/func-param-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1181:5: Function getWhitelistedStatus() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1181:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1181:35: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1185:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1185:46: Function param name must be in mixedCase [Warning/func-param-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1185:5: Function getAddressSellLockTimeInSeconds() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1185:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1185:46: Variable name must be in mixedCase [Warning/var-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1187:11: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1187:21: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1191:24: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1193:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1193:5: Function getSellLockTimeInSeconds() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1193:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1199:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1199:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1199:5: Function AddressResetSellLock() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1200:31: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1212:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1212:5: Function getDumpers() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1212:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1217:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1217:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1217:5: Function TeamSetWhitelistedAddressAlt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1221:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1221:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1221:5: Function TeamSetWhitelistedAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1227:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1227:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1227:5: Function TeamSetWhitelistedAddressesAlt() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1229:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1229:33: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1234:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1234:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1234:5: Function TeamSetWhitelistedAddresses() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1236:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1236:33: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1242:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1242:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1242:5: Function TeamSetPeggedSwap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1248:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1248:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1248:5: Function TeamExcludeFromRaffle() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1249:9: Provide an error message for require [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1249:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1255:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1255:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1255:5: Function TeamIncludeToRaffle() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1256:9: Provide an error message for require [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1256:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1260:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1260:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1260:5: Function TeamWithdrawMarketingBNB() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1264:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1269:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1269:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1269:5: Function TeamSwitchManualBNBConversion() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1273:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1273:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1273:5: Function TeamDisableSellLock() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1277:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1277:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1277:5: Function TeamSetSellLockTime() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1278:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1278:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1283:2: Line length must be no more than 120 but current length is 150. [Error/max-line-length]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1283:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1283:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1283:5: Function TeamSetTaxes() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1285:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1285:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1285:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1286:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1286:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1286:33: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1286:50: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1297:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1297:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1297:5: Function TeamChangeMarketingShare() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1301:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1301:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1301:5: Function TeamManualGenerateTokenSwapBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1305:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1305:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1305:5: Function TeamExcludeAccountFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1308:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1308:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1308:5: Function TeamIncludeAccountToFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1312:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1312:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1312:5: Function TeamExcludeAccountFromSellLock() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1315:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1315:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1315:5: Function TeamIncludeAccountToSellLock() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1320:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1320:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1320:5: Function TeamUpdateLimits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1336:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1336:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1336:5: Function SetupEnableWhitelistTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1337:9: Provide an error message for require [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1337:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1343:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1343:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1343:5: Function SetupEnableTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1344:9: Provide an error message for require [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1344:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1349:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1349:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1349:5: Function SetupLiquidityTokenAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1353:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1353:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1353:5: Function SetupAddToWhitelist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1356:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1356:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1356:5: Function SetupAddArrayToWhitelist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1357:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1357:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1357:48: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1361:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1361:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1361:5: Function SetupRemoveFromWhitelist() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1366:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1366:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1366:5: Function TeamRescueTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1369:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1375:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1375:5: Function setBlacklistEnabled() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1379:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1379:5: Function setContractTokenSwapManual() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1383:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1383:5: Function setBlacklistedAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1387:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1387:5: Function removeBlacklistedAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1395:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1395:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1395:5: Function TeamAvoidBurning() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1397:9: Provide an error message for require [Warning/reason-string]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1397:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1403:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1404:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1407:5: Function getOwner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1407:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1411:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1411:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1415:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1415:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1419:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1419:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1423:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1423:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1427:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1427:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1431:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1431:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1436:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1436:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1440:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1440:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1445:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1446:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1452:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1452:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1456:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1456:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1464:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1464:5: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1464:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1469:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1469:5: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1469:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1471:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:1471:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]

547 problem/s (13 error/s, 534 warning/s)
