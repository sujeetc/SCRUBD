./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:7:1: Found more than One contract per file. 4 contracts found! [Warning/one-contract-per-file]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:10:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:16:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:16:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:17:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:17:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:18:5: Function order is incorrect, external  function can not go after external view function (line 17) [Warning/ordering]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:18:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:18:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:19:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:19:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:20:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:20:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:21:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:21:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:22:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:23:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:27:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:29:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:29:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:33:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:37:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:38:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:38:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:43:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:48:9: Error message for require is too long: 33 counted / 32 allowed [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:48:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:48:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:52:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:56:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:57:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:69:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:75:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:75:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:75:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:79:5: Function order is incorrect, modifier definition can not go after public view function (line 75) [Warning/ordering]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:80:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:84:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:84:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:90:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:90:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:98:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:102:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:103:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:104:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:107:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:109:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:109:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:110:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:110:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:110:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:111:5: Function order is incorrect, external payable function can not go after external pure function (line 110) [Warning/ordering]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:111:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:113:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:114:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:115:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:117:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:118:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:118:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:118:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:121:1: Contract has 23 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:123:5: Main key parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:123:5: Value parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:124:5: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:125:5: Main key parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:125:5: Value parameter in mapping _isExcludedFromFee is not named [Warning/named-parameters-mapping]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:126:5: Main key parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:126:5: Value parameter in mapping bots is not named [Warning/named-parameters-mapping]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:126:5: 'bots' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:127:5: Main key parameter in mapping cooldown is not named [Warning/named-parameters-mapping]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:127:5: Value parameter in mapping cooldown is not named [Warning/named-parameters-mapping]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:127:5: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:127:5: 'cooldown' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:128:5: 'time' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:131:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:132:5: 'fee1' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:133:5: 'fee2' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:134:5: 'pc1' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:135:5: 'pc2' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:136:5: 'pc3' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:137:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:138:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:141:5: 'minBalance' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:142:5: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:146:5: 'uniswapV2Router' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:147:5: 'uniswapV2Pair' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:148:5: 'tradingOpen' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:149:5: 'inSwap' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:150:5: 'swapEnabled' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:156:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:166:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:166:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:166:41: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:172:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:172:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:172:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:176:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:176:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:176:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:180:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:180:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:180:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:184:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:184:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:188:5: Function order is incorrect, public view function can not go after public pure function (line 184) [Warning/ordering]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:188:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:188:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:192:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:192:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:197:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:197:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:201:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:201:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:206:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:206:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:208:2: Line length must be no more than 120 but current length is 130. [Error/max-line-length]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:208:40: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:213:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:213:5: Function changeMinBalance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:214:9: Provide an error message for require [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:214:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:219:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:219:5: Function changeFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:220:9: Provide an error message for require [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:220:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:221:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:221:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:221:32: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:226:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:226:5: Function editPercentages() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:227:9: Provide an error message for require [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:227:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:228:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:234:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:234:5: Function removeLimits() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:235:9: Provide an error message for require [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:235:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:241:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:241:5: Function excludeFromFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:242:9: Provide an error message for require [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:242:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:248:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:248:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:248:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:249:9: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:249:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:249:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:255:9: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:255:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:255:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:256:9: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:256:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:256:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:257:9: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:257:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:257:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:261:13: Provide an error message for require [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:261:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:262:2: Line length must be no more than 120 but current length is 129. [Error/max-line-length]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:262:105: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:264:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:264:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:265:17: Provide an error message for require [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:265:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:265:25: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:266:17: Provide an error message for require [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:266:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:266:40: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:267:32: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:272:17: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:272:25: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:289:5: 'swapTokensForEth' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:294:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:299:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:304:5: 'addLiquidity' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:306:9: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:306:96: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:310:5: 'sendETHToFee' should start with _ [Warning/private-vars-leading-underscore]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:316:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:316:5: Function openTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:317:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:321:16: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:324:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:324:5: Function setBots() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:325:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:325:14: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:325:44: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:330:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:330:5: Function delBot() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:331:9: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:331:13: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:331:38: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:342:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:344:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:344:5: Function manualswap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:345:9: Provide an error message for require [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:345:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:351:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:351:5: Function manualsend() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:352:9: Provide an error message for require [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:352:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:357:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:357:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:363:5: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:363:5: Function recoverTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:364:9: Provide an error message for require [Warning/reason-string]
./0x007d8eedc142d9e14ea3498471c5e884d6249a20.sol:364:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]

207 problem/s (2 error/s, 205 warning/s)
