./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:9:1: Found more than One contract per file. 5 contracts found! [Warning/one-contract-per-file]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:18:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:18:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:23:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:23:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:32:5: Function order is incorrect, external  function can not go after external view function (line 23) [Warning/ordering]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:32:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:32:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:41:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:41:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:57:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:57:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:68:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:68:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:80:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:86:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:105:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:105:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:118:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:118:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:130:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:130:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:147:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:147:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:159:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:159:5: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:176:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:190:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:204:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:218:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:234:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:251:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:257:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:257:21: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:274:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:280:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:300:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:306:13: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:323:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:327:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:352:5: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:359:5: Function owner() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:359:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:366:5: Function order is incorrect, modifier definition can not go after public view function (line 359) [Warning/ordering]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:367:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:378:5: Function renounceOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:386:5: Function transferOwnership() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:387:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:387:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:387:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:419:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:425:9: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:445:2: Line length must be no more than 120 but current length is 160. [Error/max-line-length]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:447:5: Function order is incorrect, internal  function can not go after internal view function (line 419) [Warning/ordering]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:448:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:448:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:451:9: Error message for require is too long: 58 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:451:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:451:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:463:2: Line length must be no more than 120 but current length is 156. [Error/max-line-length]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:472:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:482:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:501:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:506:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:515:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:521:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:521:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:521:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:521:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:522:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:534:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:535:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:544:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:549:9: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:549:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:549:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:561:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:562:16: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:571:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:576:9: Error message for require is too long: 38 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:576:9: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:576:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:578:51: Avoid to use low level calls. [Warning/avoid-low-level-calls]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:588:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:600:17: Avoid to use inline assembly. It is acceptable only in rare cases [Warning/no-inline-assembly]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:612:5: GC: [value] on Event [Approval] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:612:68: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:613:5: GC: [value] on Event [Transfer] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:613:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:615:5: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:615:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:616:5: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:616:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:617:5: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:617:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:618:5: Function order is incorrect, external view function can not go after external pure function (line 617) [Warning/ordering]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:618:5: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:618:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:618:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:619:5: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:619:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:619:62: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:620:5: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:620:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:620:79: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:622:5: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:622:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:622:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:623:5: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:623:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:623:35: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:624:5: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:624:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:624:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:626:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:626:5: Function DOMAIN_SEPARATOR() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:626:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:627:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:627:5: Function PERMIT_TYPEHASH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:627:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:628:5: Function nonces() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:628:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:628:59: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:630:5: Function permit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:630:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:630:65: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:632:5: GC: [amount0] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:632:5: GC: [amount1] on Event [Mint] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:632:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:632:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:633:5: GC: [amount0] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:633:5: GC: [amount1] on Event [Burn] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:633:40: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:633:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:634:5: GC: [amount0In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:634:5: GC: [amount1In] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:634:5: GC: [amount0Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:634:5: GC: [amount1Out] on Event [Swap] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:636:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:637:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:638:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:639:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:642:5: GC: [reserve0] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:642:5: GC: [reserve1] on Event [Sync] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:644:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:644:5: Function MINIMUM_LIQUIDITY() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:644:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:644:57: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:645:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:645:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:646:5: Function token0() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:646:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:647:5: Function token1() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:647:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:648:5: Function getReserves() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:649:5: Function price0CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:649:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:649:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:650:5: Function price1CumulativeLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:650:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:650:60: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:651:5: Function kLast() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:651:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:651:45: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:653:5: Function mint() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:653:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:654:5: Function burn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:654:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:654:63: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:655:5: Function swap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:655:19: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:655:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:656:5: Function skim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:657:5: Function sync() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:659:5: Function initialize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:663:5: GC: [pair] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:663:5: GC: [null] on Event [PairCreated] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:663:85: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:665:5: Function feeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:665:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:666:5: Function feeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:666:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:668:5: Function getPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:669:5: Function allPairs() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:669:23: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:670:5: Function allPairsLength() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:670:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:670:54: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:672:5: Function order is incorrect, external  function can not go after external view function (line 670) [Warning/ordering]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:672:5: Function createPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:674:5: Function setFeeTo() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:675:5: Function setFeeToSetter() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:679:5: Function factory() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:679:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:680:5: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:680:5: Function WETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:680:5: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:682:5: Function order is incorrect, external  function can not go after external pure function (line 680) [Warning/ordering]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:682:5: Function addLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:685:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:686:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:687:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:688:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:690:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:691:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:691:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:691:53: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:692:5: Function addLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:694:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:695:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:696:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:698:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:699:33: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:699:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:699:67: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:700:5: Function removeLiquidity() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:703:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:704:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:705:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:707:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:708:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:708:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:709:5: Function removeLiquidityETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:711:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:712:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:713:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:715:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:716:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:716:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:717:5: Function removeLiquidityWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:720:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:721:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:722:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:724:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:726:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:726:39: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:727:5: Function removeLiquidityETHWithPermit() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:729:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:730:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:731:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:733:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:735:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:735:43: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:736:5: Function swapExactTokensForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:737:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:738:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:741:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:742:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:743:5: Function swapTokensForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:744:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:745:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:748:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:749:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:750:5: Function swapExactETHForTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:750:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:750:92: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:753:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:754:5: Function swapTokensForExactETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:754:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:754:52: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:754:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:756:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:757:5: Function swapExactTokensForETH() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:757:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:757:51: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:757:107: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:759:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:760:5: Function swapETHForExactTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:760:36: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:760:89: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:763:18: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:765:5: Function quote() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:765:20: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:765:34: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:765:49: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:765:87: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:766:5: Function getAmountOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:766:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:766:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:766:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:766:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:767:5: Function getAmountIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:767:26: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:767:42: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:767:58: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:767:98: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:768:5: Function getAmountsOut() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:768:28: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:768:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:769:5: Function getAmountsIn() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:769:27: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:769:91: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:773:5: Function removeLiquidityETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:775:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:776:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:777:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:779:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:780:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:781:5: Function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:783:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:784:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:785:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:787:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:789:25: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:791:5: Function swapExactTokensForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:792:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:793:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:796:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:798:5: Function swapExactETHForTokensSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:799:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:802:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:804:5: Function swapExactTokensForETHSupportingFeeOnTransferTokens() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:805:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:806:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:809:9: Rule is set with explicit type [var/s: uint] [Warning/explicit-types]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:821:3: Function passesTest() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:821:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:824:1: Contract has 40 states declarations but allowed no more than 15 [Warning/max-states-count]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:830:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:833:3: Main key parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:833:3: Value parameter in mapping _rOwned is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:834:3: Main key parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:834:3: Value parameter in mapping _tOwned is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:835:3: Main key parameter in mapping _allowances is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:836:3: Main key parameter in mapping _isSniper is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:836:3: Value parameter in mapping _isSniper is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:841:3: Main key parameter in mapping _rewardsLastClaim is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:841:3: Value parameter in mapping _rewardsLastClaim is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:843:3: Main key parameter in mapping _isExcludedFee is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:843:3: Value parameter in mapping _isExcludedFee is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:844:3: Main key parameter in mapping _isExcludedReward is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:844:3: Value parameter in mapping _isExcludedReward is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:847:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:847:35: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:848:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:848:37: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:849:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:851:3: 'MAX' should start with _ [Warning/private-vars-leading-underscore]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:852:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:882:3: Main key parameter in mapping _isUniswapPair is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:882:3: Value parameter in mapping _isUniswapPair is not named [Warning/named-parameters-mapping]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:886:3: Constant name must be in capitalized SNAKE_CASE [Warning/const-name-snakecase]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:894:3: '_maxTxAmount' should not start with _ [Warning/private-vars-leading-underscore]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:895:3: '_maxWalletSize' should not start with _ [Warning/private-vars-leading-underscore]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:896:3: '_maximumBuyAmount' should not start with _ [Warning/private-vars-leading-underscore]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:898:3: GC: [_maxTxAmount] on Event [MaxTxAmountUpdated] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:899:3: GC: [_maxWalletSize] on Event [MaxWalletSizeUpdated] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:900:3: GC: [to] on Event [SendETHRewards] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:900:3: GC: [amountETH] on Event [SendETHRewards] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:901:3: GC: [to] on Event [SendTokenRewards] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:901:3: GC: [token] on Event [SendTokenRewards] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:901:3: GC: [amount] on Event [SendTokenRewards] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:904:3: GC: [tokensSwappedForEth] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:904:3: GC: [ethAddedForLp] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:904:3: GC: [tokensAddedForLp] on Event [SwapAndLiquify] could be Indexed [Warning/gas-indexed-events]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:916:3: Explicitly mark visibility in function (Set ignoreConstructors to true if using solidity >=0.7.0) [Warning/func-visibility]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:921:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:921:3: Function initContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:937:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:937:3: Function openTrading() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:943:18: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:946:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:946:3: Function name() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:946:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:950:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:950:3: Function symbol() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:950:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:954:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:954:3: Function decimals() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:954:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:958:3: Function totalSupply() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:958:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:962:3: Function order is incorrect, external view function can not go after external pure function (line 958) [Warning/ordering]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:962:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:962:3: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:962:3: Function MaxTXAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:962:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:966:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:966:3: Function name must be in mixedCase [Warning/func-name-mixedcase]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:966:3: Function MaxWalletSize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:966:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:970:3: Function balanceOf() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:970:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:975:3: Function transfer() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:975:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:984:3: Function allowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:984:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:993:3: Function approve() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:993:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1002:3: Function transferFrom() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1002:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1011:7: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1013:9: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1019:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1019:3: Function increaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1019:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1032:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1032:3: Function decreaseAllowance() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1032:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1040:7: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1042:9: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1048:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1048:3: Function setMaxTxnAmount() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1049:5: Error message for require is too long: 54 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1049:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1049:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1050:5: Error message for require is too long: 55 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1050:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1050:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1055:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1055:3: Function setMaxWalletSize() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1056:5: Error message for require is too long: 43 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1056:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1056:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1057:5: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1057:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1057:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1062:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1062:3: Function getLastETHRewardsClaim() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1062:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1070:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1070:3: Function totalFees() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1070:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1074:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1074:3: Function deliver() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1076:5: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1076:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1076:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1078:7: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1086:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1086:3: Function reflectionFromToken() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1086:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1091:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1091:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1091:33: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1101:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1101:3: Function tokenFromReflection() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1101:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1102:5: Error message for require is too long: 42 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1102:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1102:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1102:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1102:33: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1107:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1107:3: Function excludeFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1108:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1108:42: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1116:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1116:3: Function includeInReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1117:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1117:41: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1118:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1118:47: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1134:5: Error message for require is too long: 36 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1134:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1134:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1134:34: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1135:5: Error message for require is too long: 34 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1135:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1135:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1135:36: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1141:3: Function body contains 98 lines but allowed no more than 50 lines [Warning/function-max-lines]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1141:3: Function has cyclomatic complexity 12 but allowed no more than 7 [Warning/code-complexity]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1146:5: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1146:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1146:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1146:33: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1147:5: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1147:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1147:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1147:31: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1148:5: Error message for require is too long: 41 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1148:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1148:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1148:25: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1149:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1149:29: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1150:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1150:31: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1151:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1151:39: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1160:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1160:17: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1169:7: Error message for require is too long: 35 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1169:7: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1169:7: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1171:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1171:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1172:11: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1172:19: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1179:29: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1190:9: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1190:31: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1193:13: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1197:35: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1221:33: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1271:42: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1287:7: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1302:5: Named parameters missing. MIN unnamed arguments is 4 [Warning/func-named-parameters]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1307:7: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1423:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1423:3: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1423:3: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1423:3: GC: Named return value is missing - Index 3 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1423:3: GC: Named return value is missing - Index 4 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1423:3: GC: Named return value is missing - Index 5 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1448:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1448:3: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1448:3: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1463:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1463:3: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1463:3: GC: Named return value is missing - Index 2 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1484:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1489:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1489:3: GC: Named return value is missing - Index 1 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1492:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1492:47: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1510:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1518:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1529:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1563:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1563:3: Function getSellSlippage() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1563:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1571:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1571:3: Function isUniswapPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1571:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1576:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1576:3: Function eligibleForRewardBooster() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1576:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1582:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1582:3: Function isExcludedFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1582:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1589:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1589:3: Function isExcludedFromReward() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1589:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1593:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1593:3: Function excludeFromFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1597:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1597:3: Function includeInFee() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1601:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1601:3: Function setRewardsClaimTimeSeconds() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1602:2: Line length must be no more than 120 but current length is 149. [Error/max-line-length]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1602:5: Error message for require is too long: 87 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1602:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1602:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1602:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1602:29: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1602:59: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1607:2: Line length must be no more than 120 but current length is 163. [Error/max-line-length]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1607:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1607:3: Function setNewFeesPercentages() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1608:2: Line length must be no more than 120 but current length is 132. [Error/max-line-length]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1608:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1608:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1608:100: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1615:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1615:3: Function setFeeSellMultiplier() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1616:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1616:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1616:30: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1620:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1620:3: Function setTreasuryAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1625:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1625:3: Function setIsMaxBuyActivated() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1629:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1629:3: Function setBuybackTokenAddress() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1633:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1633:3: Function setBuybackReceiver() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1637:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1637:3: Function addUniswapPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1641:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1641:3: Function removeUniswapPair() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1645:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1645:3: Function setBoostRewardsPercent() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1649:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1649:3: Function setBoostRewardsContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1653:7: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1653:7: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1653:7: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1656:9: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1662:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1662:3: Function setFeeExclusionContract() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1666:7: Error message for require is too long: 37 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1666:7: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1666:7: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1669:9: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1675:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1675:3: Function isRemovedSniper() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1675:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1679:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1679:3: Function removeSniper() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1680:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1680:47: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1681:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1681:34: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1686:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1686:3: Function amnestySniper() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1687:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1687:33: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1688:5: GC: Found [ .length ] property in Loop condition. Suggestion: assign it to a variable [Warning/gas-length-in-loops]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1688:55: GC: For [ i ] variable, increment/decrement by 1 using: [ ++variable ] to save gas [Warning/gas-increment-by-one]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1698:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1698:3: Function calculateETHRewards() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1698:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1709:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1709:3: Function calculateTokenRewards() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1709:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1728:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1728:3: Function claimETHRewards() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1729:5: Error message for require is too long: 44 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1729:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1729:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1731:7: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1733:5: Error message for require is too long: 46 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1733:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1733:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1735:7: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1737:39: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1741:45: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1745:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1745:3: Function canClaimRewards() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1745:3: GC: Named return value is missing - Index 0 [Warning/gas-named-return-values]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1748:9: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1752:9: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1756:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1756:3: Function claimTokenRewards() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1757:5: Error message for require is too long: 40 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1757:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1757:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1759:7: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1761:5: Error message for require is too long: 45 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1761:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1761:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1763:7: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1765:5: Error message for require is too long: 46 counted / 32 allowed [Warning/reason-string]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1765:5: GC: String exceeds 32 bytes [Warning/gas-small-strings]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1765:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1767:7: Use double quotes for string literals [Error/quotes]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1769:39: Avoid making time-based decisions in your business logic [Warning/not-rely-on-time]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1776:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1776:3: Function setFeeRate() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1780:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1780:3: Function manualswap() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1781:5: GC: Use Custom Errors instead of require statements [Warning/gas-custom-errors]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1781:13: GC: Non strict inequality found. Try converting to a strict one [Warning/gas-strict-inequalities]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1785:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1785:3: Function emergencyWithdraw() must match Foundry test naming convention [Warning/foundry-test-functions]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1786:5: Check result of "send" call [Warning/check-send-result]
./0x01490172fd413bb9b74ca73c5df1e245ef14412a.sol:1790:3: All public or external methods in a contract must override a definition from an interface [Warning/comprehensive-interface]

649 problem/s (38 error/s, 611 warning/s)
