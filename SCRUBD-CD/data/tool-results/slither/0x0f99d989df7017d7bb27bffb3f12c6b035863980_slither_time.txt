'solc --version' running
'solc ./0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> 0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol:596:1:
    |
596 | contract THEGAMEOFCHAD is Context, IERC20, Ownable {
    | ^ (Relevant source part starts here and spans across multiple lines).



Reentrancy in THEGAMEOFCHAD._transfer(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#990-1106):
	External calls:
	- swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1068)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1157-1163)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
	External calls sending eth:
	- swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1068)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
		- _liquidityTokensToSwap += tLiquidity * _buyLiquidityFee / _liquidityFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1379)
		- _liquidityTokensToSwap += tLiquidity * _sellLiquidityFee / _liquidityFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1382)
	THEGAMEOFCHAD._liquidityTokensToSwap (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#658) can be used in cross function reentrancies:
	- THEGAMEOFCHAD._liquidityTokensToSwap (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#658)
	- THEGAMEOFCHAD._takeLiquidity(uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1377-1390)
	- THEGAMEOFCHAD._transfer(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#990-1106)
	- THEGAMEOFCHAD.swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1108-1142)
	- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
		- _marketingTokensToSwap += tLiquidity * _buyMarketingFee / _liquidityFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1380)
		- _marketingTokensToSwap += tLiquidity * _sellMarketingFee / _liquidityFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1383)
	THEGAMEOFCHAD._marketingTokensToSwap (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#659) can be used in cross function reentrancies:
	- THEGAMEOFCHAD._marketingTokensToSwap (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#659)
	- THEGAMEOFCHAD._takeLiquidity(uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1377-1390)
	- THEGAMEOFCHAD._transfer(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#990-1106)
	- THEGAMEOFCHAD.swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1108-1142)
	- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1212)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1232)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1213)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1275)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1254)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1255)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1234)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1387)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1277)
	THEGAMEOFCHAD._rOwned (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#608) can be used in cross function reentrancies:
	- THEGAMEOFCHAD._getCurrentSupply() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1362-1375)
	- THEGAMEOFCHAD._takeLiquidity(uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1377-1390)
	- THEGAMEOFCHAD._transferBothExcluded(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1261-1281)
	- THEGAMEOFCHAD._transferFromExcluded(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1240-1259)
	- THEGAMEOFCHAD._transferStandard(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1199-1217)
	- THEGAMEOFCHAD._transferToExcluded(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1219-1238)
	- THEGAMEOFCHAD.balanceOf(address) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#770-773)
	- THEGAMEOFCHAD.constructor() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#724-752)
	- THEGAMEOFCHAD.excludeFromReward(address) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#955-963)
	- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
		- _rTotal = _rTotal.sub(rFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1284)
	THEGAMEOFCHAD._rTotal (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#624) can be used in cross function reentrancies:
	- THEGAMEOFCHAD._getCurrentSupply() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1362-1375)
	- THEGAMEOFCHAD._reflectFee(uint256,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1283-1286)
	- THEGAMEOFCHAD.constructor() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#724-752)
	- THEGAMEOFCHAD.tokenFromReflection(uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#942-953)
	- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1274)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1253)
		- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1233)
		- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1276)
		- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1389)
	THEGAMEOFCHAD._tOwned (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#609) can be used in cross function reentrancies:
	- THEGAMEOFCHAD._getCurrentSupply() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1362-1375)
	- THEGAMEOFCHAD._takeLiquidity(uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1377-1390)
	- THEGAMEOFCHAD._transferBothExcluded(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1261-1281)
	- THEGAMEOFCHAD._transferFromExcluded(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1240-1259)
	- THEGAMEOFCHAD._transferToExcluded(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1219-1238)
	- THEGAMEOFCHAD.balanceOf(address) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#770-773)
	- THEGAMEOFCHAD.excludeFromReward(address) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#955-963)
	- THEGAMEOFCHAD.includeInReward(address) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#965-976)
Reentrancy in THEGAMEOFCHAD.launch() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#887-903):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#895)
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#899)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
	External calls sending eth:
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#899)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
	State variables written after the call(s):
	- transferOwnership(_owner) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#900)
		- _owner = newOwner (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#240)
	Ownable._owner (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#205) can be used in cross function reentrancies:
	- Ownable.onlyOwner() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#224-227)
	- Ownable.owner() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#220-222)
	- Ownable.renounceOwnership() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#229-232)
	- Ownable.transferOwnership(address) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#234-241)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

THEGAMEOFCHAD._owner (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#606) shadows:
	- Ownable._owner (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#205)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing

THEGAMEOFCHAD.constructor() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#724-752) performs a multiplication on the result of a division:
	- _rOwned[_msgSender()] = _rTotal / 1000 * 0 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#725)
THEGAMEOFCHAD.constructor() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#724-752) performs a multiplication on the result of a division:
	- _rOwned[address(this)] = _rTotal / 100 * 100 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#726)
THEGAMEOFCHAD.swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1108-1142) performs a multiplication on the result of a division:
	- ethForMarketing = ethBalance.mul(_marketingTokensToSwap).div(totalTokensToSwap) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1122)
	- ethForDev = ethForMarketing * 1 / 6 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1126)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

THEGAMEOFCHAD._transfer(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#990-1106) uses a dangerous strict equality:
	- from != owner() && to != uniswapV2Pair && block.number == tradingActiveBlock (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1017)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Reentrancy in THEGAMEOFCHAD.swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1108-1142):
	External calls:
	- swapTokensForETH(amountToSwapForETH) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1118)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1157-1163)
	State variables written after the call(s):
	- _liquidityTokensToSwap = 0 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1129)
	THEGAMEOFCHAD._liquidityTokensToSwap (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#658) can be used in cross function reentrancies:
	- THEGAMEOFCHAD._liquidityTokensToSwap (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#658)
	- THEGAMEOFCHAD._takeLiquidity(uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1377-1390)
	- THEGAMEOFCHAD._transfer(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#990-1106)
	- THEGAMEOFCHAD.swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1108-1142)
	- _marketingTokensToSwap = 0 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1130)
	THEGAMEOFCHAD._marketingTokensToSwap (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#659) can be used in cross function reentrancies:
	- THEGAMEOFCHAD._marketingTokensToSwap (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#659)
	- THEGAMEOFCHAD._takeLiquidity(uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1377-1390)
	- THEGAMEOFCHAD._transfer(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#990-1106)
	- THEGAMEOFCHAD.swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1108-1142)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

THEGAMEOFCHAD._transfer(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#990-1106) uses tx.origin for authorization: require(bool,string)(_holderLastTransferTimestamp[to] < block.number && _holderLastTransferTimestamp[tx.origin] < block.number,_transfer:: Transfer Delay enabled.  Only one purchase per block allowed.) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1030)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-usage-of-txorigin

THEGAMEOFCHAD.addLiquidity(uint256,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1166-1176) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

THEGAMEOFCHAD.swapBack().success (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132) is written in both
	(success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
	(success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#write-after-write

THEGAMEOFCHAD.allowance(address,address).owner (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#784) shadows:
	- Ownable.owner() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#220-222) (function)
THEGAMEOFCHAD._approve(address,address,uint256).owner (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#979) shadows:
	- Ownable.owner() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#220-222) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

THEGAMEOFCHAD.setGasPriceLimit(uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#922-925) should emit an event for: 
	- gasPriceLimit = gas * 1000000000 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#924) 
THEGAMEOFCHAD.setBuyLimit(uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1494-1496) should emit an event for: 
	- maxAmountCanBuy = amount (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1495) 
THEGAMEOFCHAD.changeMaxTransaction(uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1499-1501) should emit an event for: 
	- _maxTransactionAmount = newLimit * 10 ** 9 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1500) 
THEGAMEOFCHAD.changeMaxWallet(uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1503-1505) should emit an event for: 
	- _maxWalletAmount = newLimit * 10 ** 9 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1504) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Reentrancy in THEGAMEOFCHAD._transfer(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#990-1106):
	External calls:
	- swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1068)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1157-1163)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
	External calls sending eth:
	- swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1068)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
	State variables written after the call(s):
	- removeAllFee() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1080)
		- _liquidityFee = 0 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1411)
	- _liquidityFee = _buyLiquidityFee + _buyMarketingFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1082)
	- removeAllFee() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1087)
		- _liquidityFee = 0 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1411)
	- _liquidityFee = _sellLiquidityFee + _sellMarketingFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1089)
	- _liquidityFee = _liquidityFee * 3 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1094)
	- removeAllFee() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1099)
		- _liquidityFee = 0 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1411)
	- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
		- _liquidityFee = _previousLiquidityFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1416)
		- _liquidityFee = 0 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1411)
	- removeAllFee() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1080)
		- _previousLiquidityFee = _liquidityFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1408)
	- removeAllFee() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1087)
		- _previousLiquidityFee = _liquidityFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1408)
	- removeAllFee() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1099)
		- _previousLiquidityFee = _liquidityFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1408)
	- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
		- _previousLiquidityFee = _liquidityFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1408)
	- removeAllFee() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1080)
		- _previousTaxFee = _taxFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1407)
	- removeAllFee() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1087)
		- _previousTaxFee = _taxFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1407)
	- removeAllFee() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1099)
		- _previousTaxFee = _taxFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1407)
	- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
		- _previousTaxFee = _taxFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1407)
	- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
		- _tFeeTotal = _tFeeTotal.add(tFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1285)
	- removeAllFee() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1080)
		- _taxFee = 0 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1410)
	- _taxFee = _buyTaxFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1081)
	- removeAllFee() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1087)
		- _taxFee = 0 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1410)
	- _taxFee = _sellTaxFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1088)
	- _taxFee = _taxFee * 2 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1093)
	- removeAllFee() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1099)
		- _taxFee = 0 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1410)
	- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
		- _taxFee = _previousTaxFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1415)
		- _taxFee = 0 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1410)
	- buyOrSellSwitch = TRANSFER (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1076)
	- buyOrSellSwitch = BUY (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1083)
	- buyOrSellSwitch = SELL (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1090)
	- buyOrSellSwitch = TRANSFER (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1100)
Reentrancy in THEGAMEOFCHAD.launch() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#887-903):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#895)
	State variables written after the call(s):
	- _setAutomatedMarketMakerPair(address(uniswapV2Pair),true) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#897)
		- _excluded[i] = _excluded[_excluded.length - 1] (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#969)
		- _excluded.push(account) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#962)
		- _excluded.pop() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#972)
	- _setAutomatedMarketMakerPair(address(uniswapV2Pair),true) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#897)
		- _isExcluded[account] = true (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#961)
		- _isExcluded[account] = false (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#971)
	- excludeFromMaxTransaction(address(uniswapV2Pair),true) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#896)
		- _isExcludedMaxTransactionAmount[updAds] = isEx (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#875)
	- _setAutomatedMarketMakerPair(address(uniswapV2Pair),true) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#897)
		- _isExcludedMaxTransactionAmount[pair] = value (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#917)
	- _setAutomatedMarketMakerPair(address(uniswapV2Pair),true) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#897)
		- _tOwned[account] = tokenFromReflection(_rOwned[account]) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#959)
		- _tOwned[account] = 0 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#970)
	- _setAutomatedMarketMakerPair(address(uniswapV2Pair),true) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#897)
		- automatedMarketMakerPairs[pair] = value (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#916)
Reentrancy in THEGAMEOFCHAD.launch() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#887-903):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#895)
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#899)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
	External calls sending eth:
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#899)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
	State variables written after the call(s):
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#899)
		- _allowances[owner][spender] = amount (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#986)
	- launchTime = block.timestamp (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#901)
Reentrancy in THEGAMEOFCHAD.swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1108-1142):
	External calls:
	- swapTokensForETH(amountToSwapForETH) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1118)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1157-1163)
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
	- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1135)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
	External calls sending eth:
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
	- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1135)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
	State variables written after the call(s):
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1135)
		- _allowances[owner][spender] = amount (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#986)
Reentrancy in THEGAMEOFCHAD.transferFrom(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#802-817):
	External calls:
	- _transfer(sender,recipient,amount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#807)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1157-1163)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#807)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#808-815)
		- _allowances[owner][spender] = amount (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#986)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in THEGAMEOFCHAD._transfer(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#990-1106):
	External calls:
	- swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1068)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1157-1163)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
	External calls sending eth:
	- swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1068)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1216)
		- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
	- Transfer(sender,recipient,tTransferAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1237)
		- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
	- Transfer(sender,recipient,tTransferAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1258)
		- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
	- Transfer(sender,recipient,tTransferAmount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1280)
		- _tokenTransfer(from,to,amount,takeFee) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1104)
Reentrancy in THEGAMEOFCHAD.forceSwapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1145-1150):
	External calls:
	- swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1148)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1157-1163)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
	External calls sending eth:
	- swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1148)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
	Event emitted after the call(s):
	- OwnerForcedSwapBack(block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1149)
Reentrancy in THEGAMEOFCHAD.launch() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#887-903):
	External calls:
	- uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#895)
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#899)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
	External calls sending eth:
	- addLiquidity(balanceOf(address(this)),address(this).balance) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#899)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#987)
		- addLiquidity(balanceOf(address(this)),address(this).balance) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#899)
	- OwnershipTransferred(_owner,newOwner) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#239)
		- transferOwnership(_owner) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#900)
Reentrancy in THEGAMEOFCHAD.swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1108-1142):
	External calls:
	- swapTokensForETH(amountToSwapForETH) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1118)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1157-1163)
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
	- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1135)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
	External calls sending eth:
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
	- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1135)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#987)
		- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1135)
	- SwapAndLiquify(amountToSwapForETH,ethForLiquidity,tokensForLiquidity) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1136)
Reentrancy in THEGAMEOFCHAD.transferForeignToken(address,address) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1510-1520):
	External calls:
	- _sent = IERC20(_token).transfer(_to,_contractBalance) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1518)
	Event emitted after the call(s):
	- TransferForeignToken(_token,_contractBalance) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1519)
Reentrancy in THEGAMEOFCHAD.transferFrom(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#802-817):
	External calls:
	- _transfer(sender,recipient,amount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#807)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1157-1163)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#807)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1168-1175)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
		- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#987)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#808-815)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

THEGAMEOFCHAD._transfer(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#990-1106) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp > launchTime + 60 || amount <= maxAmountCanBuy,You can't buy large amount.) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1002)
	- boughtEarly[from] && earlyBuyPenaltyEnd > block.timestamp (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1092)
	- require(bool,string)(! boughtEarly[from] || earlyBuyPenaltyEnd <= block.timestamp,Snipers can't transfer tokens to sell cheaper until penalty timeframe is over.  DM a Mod.) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1098)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Address.isContract(address) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#109-120) uses assembly
	- INLINE ASM (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#116-118)
Address._functionCallWithValue(address,bytes,uint256,string) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#178-201) uses assembly
	- INLINE ASM (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#193-196)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

THEGAMEOFCHAD.includeInReward(address) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#965-976) has costly operations inside a loop:
	- _excluded.pop() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#972)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop

THEGAMEOFCHAD._transfer(address,address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#990-1106) has a high cyclomatic complexity (16).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

Context._msgData() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#8-11) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

THEGAMEOFCHAD._previousTaxFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#632) is set pre-construction with a non-constant function or state variable:
	- _taxFee
THEGAMEOFCHAD._previousLiquidityFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#637) is set pre-construction with a non-constant function or state variable:
	- _liquidityFee
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint ^0.8.9 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation.
It is used by:
	- ^0.8.9 (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#122-134):
	- (success,None) = recipient.call{value: amount}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#129)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#178-201):
	- (success,returndata) = target.call{value: weiValue}(data) (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#186-188)
Low level call in THEGAMEOFCHAD.swapBack() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1108-1142):
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1132)
	- (success,None) = address(devAddress).call{value: ethForDev}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1133)
	- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1140)
Low level call in THEGAMEOFCHAD.withdrawStuckETH() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1523-1527):
	- (success,None) = address(msg.sender).call{value: address(this).balance}() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1526)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IUniswapV2Pair.DOMAIN_SEPARATOR() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#317) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#319) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#349) is not in mixedCase
Function IUniswapV2Router01.WETH() (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#393) is not in mixedCase
Parameter THEGAMEOFCHAD.calculateTaxFee(uint256)._amount (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1392) is not in mixedCase
Parameter THEGAMEOFCHAD.calculateLiquidityFee(uint256)._amount (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1396) is not in mixedCase
Parameter THEGAMEOFCHAD.setMarketingAddress(address)._marketingAddress (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1461) is not in mixedCase
Parameter THEGAMEOFCHAD.setLiquidityAddress(address)._liquidityAddress (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1469) is not in mixedCase
Parameter THEGAMEOFCHAD.setSwapAndLiquifyEnabled(bool)._enabled (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1476) is not in mixedCase
Parameter THEGAMEOFCHAD.transferForeignToken(address,address)._token (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1510) is not in mixedCase
Parameter THEGAMEOFCHAD.transferForeignToken(address,address)._to (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1510) is not in mixedCase
Constant THEGAMEOFCHAD._tTotal (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#623) is not in UPPER_CASE_WITH_UNDERSCORES
Constant THEGAMEOFCHAD._name (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#627) is not in UPPER_CASE_WITH_UNDERSCORES
Constant THEGAMEOFCHAD._symbol (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#628) is not in UPPER_CASE_WITH_UNDERSCORES
Constant THEGAMEOFCHAD._decimals (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#629) is not in UPPER_CASE_WITH_UNDERSCORES
Variable THEGAMEOFCHAD._buyTaxFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#646) is not in mixedCase
Variable THEGAMEOFCHAD._buyLiquidityFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#647) is not in mixedCase
Variable THEGAMEOFCHAD._buyMarketingFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#648) is not in mixedCase
Variable THEGAMEOFCHAD._sellTaxFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#650) is not in mixedCase
Variable THEGAMEOFCHAD._sellLiquidityFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#651) is not in mixedCase
Variable THEGAMEOFCHAD._sellMarketingFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#652) is not in mixedCase
Variable THEGAMEOFCHAD._liquidityTokensToSwap (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#658) is not in mixedCase
Variable THEGAMEOFCHAD._marketingTokensToSwap (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#659) is not in mixedCase
Variable THEGAMEOFCHAD._maxTransactionAmount (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#661) is not in mixedCase
Variable THEGAMEOFCHAD._maxWalletAmount (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#662) is not in mixedCase
Variable THEGAMEOFCHAD._isExcludedMaxTransactionAmount (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#663) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#9)" inContext (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#3-12)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

THEGAMEOFCHAD._marketingFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#634) is never used in THEGAMEOFCHAD (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#596-1529)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

Loop condition i < _excluded.length (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#1365) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length

THEGAMEOFCHAD._marketingFee (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#634) should be constant 
THEGAMEOFCHAD._owner (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#606) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

THEGAMEOFCHAD.devAddress (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#602) should be immutable 
THEGAMEOFCHAD.minimumTokensBeforeSwap (0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol#671) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x0f99d989df7017d7bb27bffb3f12c6b035863980.sol analyzed (10 contracts with 94 detectors), 74 result(s) found

real	0m5.793s
user	0m5.508s
sys	0m0.286s
