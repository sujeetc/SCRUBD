'solc --version' running
'solc ./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> ./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol:741:1:
    |
741 | contract Mittens is IBEP20, Ownable
    | ^ (Relevant source part starts here and spans across multiple lines).



Reentrancy in Mittens._taxedTransfer(address,address,uint256,bool,bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#945-1010):
	External calls:
	- _swapContractToken(amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#991)
		- _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
		- _pancakeRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1143-1149)
	External calls sending eth:
	- _swapContractToken(amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#991)
		- _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
	State variables written after the call(s):
	- _removeToken(sender,amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#998)
		- _balances[addr] = newAmount (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1048)
	Mittens._balances (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#746) can be used in cross function reentrancies:
	- Mittens._addToken(address,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1036-1041)
	- Mittens._feelessTransfer(address,address,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1012-1022)
	- Mittens._removeToken(address,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1045-1049)
	- Mittens._swapContractToken(uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1100-1135)
	- Mittens._taxedTransfer(address,address,uint256,bool,bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#945-1010)
	- Mittens._whiteListTransfer(address,address,uint256,bool,bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#931-943)
	- Mittens.balanceOf(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1427-1429)
	- Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876)
	- _balances[address(this)] += contractToken (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1001)
	Mittens._balances (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#746) can be used in cross function reentrancies:
	- Mittens._addToken(address,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1036-1041)
	- Mittens._feelessTransfer(address,address,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1012-1022)
	- Mittens._removeToken(address,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1045-1049)
	- Mittens._swapContractToken(uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1100-1135)
	- Mittens._taxedTransfer(address,address,uint256,bool,bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#945-1010)
	- Mittens._whiteListTransfer(address,address,uint256,bool,bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#931-943)
	- Mittens.balanceOf(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1427-1429)
	- Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876)
	- _addToken(recipient,taxedAmount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1004)
		- _balances[addr] = newAmount (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1039)
	Mittens._balances (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#746) can be used in cross function reentrancies:
	- Mittens._addToken(address,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1036-1041)
	- Mittens._feelessTransfer(address,address,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1012-1022)
	- Mittens._removeToken(address,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1045-1049)
	- Mittens._swapContractToken(uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1100-1135)
	- Mittens._taxedTransfer(address,address,uint256,bool,bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#945-1010)
	- Mittens._whiteListTransfer(address,address,uint256,bool,bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#931-943)
	- Mittens.balanceOf(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1427-1429)
	- Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Mittens.TeamRescueTokens(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1366-1371) ignores return value by token.transfer(msg.sender,ourBalance) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1370)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876) ignores return value by _excluded.add(TeamWallet) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#865)
Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876) ignores return value by _excluded.add(SecondTeamWallet) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#866)
Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876) ignores return value by _excluded.add(msg.sender) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#867)
Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876) ignores return value by _excludedFromRaffle.add(address(_pancakeRouter)) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#869)
Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876) ignores return value by _excludedFromRaffle.add(_pancakePairAddress) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#870)
Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876) ignores return value by _excludedFromRaffle.add(address(this)) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#871)
Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876) ignores return value by _excludedFromRaffle.add(0x000000000000000000000000000000000000dEaD) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#872)
Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876) ignores return value by _excludedFromSellLock.add(address(_pancakeRouter)) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#873)
Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876) ignores return value by _excludedFromSellLock.add(_pancakePairAddress) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#874)
Mittens.constructor() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#830-876) ignores return value by _excludedFromSellLock.add(address(this)) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#875)
Mittens._addLiquidity(uint256,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1152-1163) ignores return value by _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
Mittens.TeamSetWhitelistedAddress(address,bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1221-1224) ignores return value by _excluded.add(addy) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1223)
Mittens.TeamSetWhitelistedAddresses(address[],bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1234-1240) ignores return value by _excluded.add(addy[i]) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1238)
Mittens.TeamExcludeFromRaffle(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1248-1252) ignores return value by _excludedFromRaffle.add(addr) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1250)
Mittens.TeamIncludeToRaffle(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1255-1258) ignores return value by _excludedFromRaffle.remove(addr) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1257)
Mittens.TeamExcludeAccountFromFees(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1305-1307) ignores return value by _excluded.add(account) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1306)
Mittens.TeamIncludeAccountToFees(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1308-1310) ignores return value by _excluded.remove(account) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1309)
Mittens.TeamExcludeAccountFromSellLock(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1312-1314) ignores return value by _excludedFromSellLock.add(account) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1313)
Mittens.TeamIncludeAccountToSellLock(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1315-1317) ignores return value by _excludedFromSellLock.remove(account) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1316)
Mittens.SetupAddToWhitelist(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1353-1355) ignores return value by _whiteList.add(addressToAdd) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1354)
Mittens.SetupAddArrayToWhitelist(address[]) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1356-1360) ignores return value by _whiteList.add(addressesToAdd[i]) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1358)
Mittens.SetupRemoveFromWhitelist(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1361-1363) ignores return value by _whiteList.remove(addressToRemove) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1362)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

Mittens.allowance(address,address)._owner (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1436) shadows:
	- Ownable._owner (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#205) (state variable)
Mittens._approve(address,address,uint256).owner (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1444) shadows:
	- Ownable.owner() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#221-223) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

Mittens.TeamSetSellLockTime(uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1277-1280) should emit an event for: 
	- sellLockTime = sellLockSeconds (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1279) 
Mittens.TeamSetTaxes(uint8,uint8,uint8,uint8,uint8,uint8) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1283-1295) should emit an event for: 
	- _burnTax = burnTaxes (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1288) 
	- _liquidityTax = liquidityTaxes (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1289) 
	- _marketingTax = marketingTaxes (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1290) 
	- _buyTax = buyTax (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1292) 
	- _sellTax = sellTax (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1293) 
	- _transferTax = transferTax (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1294) 
Mittens.TeamChangeMarketingShare(uint8) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1297-1299) should emit an event for: 
	- marketingShare = newShare (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1298) 
Mittens.TeamUpdateLimits(uint256,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1320-1326) should emit an event for: 
	- balanceLimit = newBalanceLimit (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1324) 
	- sellLimit = newSellLimit (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1325) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Mittens.SetupLiquidityTokenAddress(address).liquidityTokenAddress (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1349) lacks a zero-check on :
		- _liquidityTokenAddress = liquidityTokenAddress (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1350)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in Mittens._swapContractToken(uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1100-1135):
	External calls:
	- _swapTokenForBNB(swapToken) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1125)
		- _pancakeRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1143-1149)
	- _addLiquidity(liqToken,liqBNB) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1129)
		- _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
	External calls sending eth:
	- _addLiquidity(liqToken,liqBNB) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1129)
		- _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
	State variables written after the call(s):
	- _addLiquidity(liqToken,liqBNB) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1129)
		- _allowances[owner][spender] = amount (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1448)
	- _distributeFeesBNB(generatedBNB) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1134)
		- marketingBalance += marketingSplit (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1078)
Reentrancy in Mittens.transferFrom(address,address,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1452-1460):
	External calls:
	- _transfer(sender,recipient,amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1453)
		- _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
		- _pancakeRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1143-1149)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1453)
		- _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
	State variables written after the call(s):
	- _approve(sender,msg.sender,currentAllowance - amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1458)
		- _allowances[owner][spender] = amount (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1448)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in Mittens._swapContractToken(uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1100-1135):
	External calls:
	- _swapTokenForBNB(swapToken) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1125)
		- _pancakeRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1143-1149)
	- _addLiquidity(liqToken,liqBNB) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1129)
		- _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
	External calls sending eth:
	- _addLiquidity(liqToken,liqBNB) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1129)
		- _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1449)
		- _addLiquidity(liqToken,liqBNB) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1129)
Reentrancy in Mittens._taxedTransfer(address,address,uint256,bool,bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#945-1010):
	External calls:
	- _swapContractToken(amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#991)
		- _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
		- _pancakeRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1143-1149)
	External calls sending eth:
	- _swapContractToken(amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#991)
		- _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
	Event emitted after the call(s):
	- Transfer(sender,recipient,taxedAmount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1006)
Reentrancy in Mittens.transferFrom(address,address,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1452-1460):
	External calls:
	- _transfer(sender,recipient,amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1453)
		- _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
		- _pancakeRouter.swapExactTokensForETHSupportingFeeOnTransferTokens(amount,0,path,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1143-1149)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1453)
		- _pancakeRouter.addLiquidityETH{value: bnbamount}(address(this),tokenamount,0,0,address(this),block.timestamp) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1155-1162)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1449)
		- _approve(sender,msg.sender,currentAllowance - amount) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1458)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

Mittens._taxedTransfer(address,address,uint256,bool,bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#945-1010) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(_sellLock[sender] <= block.timestamp || sellLockDisabled,Seller in sellLock) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#960)
	- require(bool,string)(_sellLock[sender] <= block.timestamp || sellLockDisabled,Sender in Lock) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#983)
Mittens.getAddressSellLockTimeInSeconds(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1185-1192) uses timestamp for comparisons
	Dangerous comparisons:
	- lockTime <= block.timestamp (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1187)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Address.isContract(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#277-286) uses assembly
	- INLINE ASM (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#284)
Address._verifyCallResult(bool,bytes,string) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#422-439) uses assembly
	- INLINE ASM (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#431-434)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

Mittens.balanceLimit (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#792) is set pre-construction with a non-constant function or state variable:
	- _circulatingSupply
Mittens.sellLimit (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#793) is set pre-construction with a non-constant function or state variable:
	- _circulatingSupply
Mittens.buyLimit (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#794) is set pre-construction with a non-constant function or state variable:
	- _circulatingSupply
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint ^0.8.4 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation
	- SignedImmutables.
It is used by:
	- ^0.8.4 (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#7)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#304-310):
	- (success,None) = recipient.call{value: amount}() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#308)
Low level call in Address.functionCallWithValue(address,bytes,uint256,string) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#365-372):
	- (success,returndata) = target.call{value: value}(data) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#370)
Low level call in Address.functionStaticCall(address,bytes,string) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#390-396):
	- (success,returndata) = target.staticcall(data) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#394)
Low level call in Address.functionDelegateCall(address,bytes,string) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#414-420):
	- (success,returndata) = target.delegatecall(data) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#418)
Low level call in Mittens.TeamWithdrawMarketingBNB() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1260-1265):
	- (sent,None) = TeamWallet.call{value: (amount)}() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1263)
Low level call in Mittens.TeamAvoidBurning() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1395-1398):
	- (sent,None) = msg.sender.call{value: (address(this).balance)}() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1396)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IPancakeERC20.DOMAIN_SEPARATOR() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#38) is not in mixedCase
Function IPancakeERC20.PERMIT_TYPEHASH() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#39) is not in mixedCase
Function IPancakeRouter01.WETH() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#142) is not in mixedCase
Parameter Mittens.getWhitelistedStatus(address).AddressToCheck (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1181) is not in mixedCase
Parameter Mittens.getAddressSellLockTimeInSeconds(address).AddressToCheck (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1185) is not in mixedCase
Function Mittens.AddressResetSellLock() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1199-1201) is not in mixedCase
Function Mittens.TeamSetWhitelistedAddressAlt(address,bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1217-1219) is not in mixedCase
Function Mittens.TeamSetWhitelistedAddress(address,bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1221-1224) is not in mixedCase
Function Mittens.TeamSetWhitelistedAddressesAlt(address[],bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1227-1232) is not in mixedCase
Function Mittens.TeamSetWhitelistedAddresses(address[],bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1234-1240) is not in mixedCase
Function Mittens.TeamSetPeggedSwap(bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1242-1244) is not in mixedCase
Function Mittens.TeamExcludeFromRaffle(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1248-1252) is not in mixedCase
Function Mittens.TeamIncludeToRaffle(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1255-1258) is not in mixedCase
Function Mittens.TeamWithdrawMarketingBNB() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1260-1265) is not in mixedCase
Function Mittens.TeamSwitchManualBNBConversion(bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1269-1271) is not in mixedCase
Function Mittens.TeamDisableSellLock(bool) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1273-1275) is not in mixedCase
Function Mittens.TeamSetSellLockTime(uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1277-1280) is not in mixedCase
Function Mittens.TeamSetTaxes(uint8,uint8,uint8,uint8,uint8,uint8) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1283-1295) is not in mixedCase
Function Mittens.TeamChangeMarketingShare(uint8) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1297-1299) is not in mixedCase
Function Mittens.TeamManualGenerateTokenSwapBalance(uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1301-1303) is not in mixedCase
Parameter Mittens.TeamManualGenerateTokenSwapBalance(uint256)._qty (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1301) is not in mixedCase
Function Mittens.TeamExcludeAccountFromFees(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1305-1307) is not in mixedCase
Function Mittens.TeamIncludeAccountToFees(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1308-1310) is not in mixedCase
Function Mittens.TeamExcludeAccountFromSellLock(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1312-1314) is not in mixedCase
Function Mittens.TeamIncludeAccountToSellLock(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1315-1317) is not in mixedCase
Function Mittens.TeamUpdateLimits(uint256,uint256) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1320-1326) is not in mixedCase
Function Mittens.SetupEnableWhitelistTrading() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1336-1341) is not in mixedCase
Function Mittens.SetupEnableTrading() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1343-1346) is not in mixedCase
Function Mittens.SetupLiquidityTokenAddress(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1349-1351) is not in mixedCase
Function Mittens.SetupAddToWhitelist(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1353-1355) is not in mixedCase
Function Mittens.SetupAddArrayToWhitelist(address[]) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1356-1360) is not in mixedCase
Function Mittens.SetupRemoveFromWhitelist(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1361-1363) is not in mixedCase
Function Mittens.TeamRescueTokens(address) (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1366-1371) is not in mixedCase
Function Mittens.TeamAvoidBurning() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1395-1398) is not in mixedCase
Parameter Mittens.allowance(address,address)._owner (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1436) is not in mixedCase
Variable Mittens._blacklist (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#757) is not in mixedCase
Constant Mittens._name (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#761) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Mittens._symbol (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#762) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Mittens._decimals (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#763) is not in UPPER_CASE_WITH_UNDERSCORES
Constant Mittens.PancakeRouter (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#787) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Mittens.slitherConstructorConstantVariables() (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#741-1478) uses literals with too many digits:
	- InitialSupply = 1000000 * 10 ** 6 * 10 ** _decimals (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#764)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

Mittens._isTokenSwaping (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1052) is never used in Mittens (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#741-1478)
Mittens.toBePaid (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1064) is never used in Mittens (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#741-1478)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

Mittens._circulatingSupply (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#791) should be constant 
Mittens._isTokenSwaping (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1052) should be constant 
Mittens.botRekt (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#804) should be constant 
Mittens.totalPayouts (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1056) should be constant 
Mittens.totalTokenSwapGenerated (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#1054) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

Mittens._pancakePairAddress (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#812) should be immutable 
Mittens._pancakeRouter (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#813) should be immutable 
Mittens.buyLimit (0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol#794) should be immutable 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-immutable
./0x01d5609df23dee77fe8db8e03c66be11dca7d21b.sol analyzed (9 contracts with 94 detectors), 101 result(s) found

real	0m3.794s
user	0m3.521s
sys	0m0.274s
