'solc --version' running
'solc ./0x39832e9b4851c76160d754267d4a169617c27d88.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x39832e9b4851c76160d754267d4a169617c27d88.sol:
Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> 0x39832e9b4851c76160d754267d4a169617c27d88.sol:598:1:
    |
598 | contract TheHand is Context, IERC20, Ownable {
    | ^ (Relevant source part starts here and spans across multiple lines).



TheHand.swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1113-1147) sends eth to arbitrary user
	Dangerous calls:
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
TheHand.addLiquidity(uint256,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1163-1173) sends eth to arbitrary user
	Dangerous calls:
	- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Reentrancy in TheHand._transfer(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1019-1111):
	External calls:
	- swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1074)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1154-1160)
		- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1145)
	External calls sending eth:
	- swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1074)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
		- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1145)
	State variables written after the call(s):
	- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
		- _liquidityTokensToSwap += tLiquidity * _buyLiquidityFee / _liquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1377)
		- _liquidityTokensToSwap += tLiquidity * _sellLiquidityFee / _liquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1381)
	TheHand._liquidityTokensToSwap (0x39832e9b4851c76160d754267d4a169617c27d88.sol#662) can be used in cross function reentrancies:
	- TheHand._takeLiquidity(uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1375-1390)
	- TheHand._transfer(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1019-1111)
	- TheHand.swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1113-1147)
	- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
		- _marketingTokensToSwap += tLiquidity * _buyMarketingFee / _liquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1379)
		- _marketingTokensToSwap += tLiquidity * _sellMarketingFee / _liquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1383)
	TheHand._marketingTokensToSwap (0x39832e9b4851c76160d754267d4a169617c27d88.sol#663) can be used in cross function reentrancies:
	- TheHand._takeLiquidity(uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1375-1390)
	- TheHand._transfer(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1019-1111)
	- TheHand.swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1113-1147)
	- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1210)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1230)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1252)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1211)
		- _rOwned[sender] = _rOwned[sender].sub(rAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1273)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1232)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1253)
		- _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1275)
		- _rOwned[address(this)] = _rOwned[address(this)].add(rLiquidity) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1387)
	TheHand._rOwned (0x39832e9b4851c76160d754267d4a169617c27d88.sol#614) can be used in cross function reentrancies:
	- TheHand._getCurrentSupply() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1360-1373)
	- TheHand._takeLiquidity(uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1375-1390)
	- TheHand._transferBothExcluded(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1259-1279)
	- TheHand._transferFromExcluded(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1238-1257)
	- TheHand._transferStandard(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1197-1215)
	- TheHand._transferToExcluded(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1217-1236)
	- TheHand.balanceOf(address) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#805-808)
	- TheHand.constructor() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#736-776)
	- TheHand.excludeFromReward(address) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#975-983)
	- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
		- _rTotal = _rTotal.sub(rFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1282)
	TheHand._rTotal (0x39832e9b4851c76160d754267d4a169617c27d88.sol#626) can be used in cross function reentrancies:
	- TheHand._getCurrentSupply() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1360-1373)
	- TheHand._reflectFee(uint256,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1281-1284)
	- TheHand.constructor() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#736-776)
	- TheHand.tokenFromReflection(uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#962-973)
	- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1272)
		- _tOwned[sender] = _tOwned[sender].sub(tAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1251)
		- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1231)
		- _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1274)
		- _tOwned[address(this)] = _tOwned[address(this)].add(tLiquidity) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1389)
	TheHand._tOwned (0x39832e9b4851c76160d754267d4a169617c27d88.sol#615) can be used in cross function reentrancies:
	- TheHand._getCurrentSupply() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1360-1373)
	- TheHand._takeLiquidity(uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1375-1390)
	- TheHand._transferBothExcluded(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1259-1279)
	- TheHand._transferFromExcluded(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1238-1257)
	- TheHand._transferToExcluded(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1217-1236)
	- TheHand.balanceOf(address) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#805-808)
	- TheHand.excludeFromReward(address) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#975-983)
	- TheHand.includeInReward(address) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#985-996)
	- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
		- _teamTokensToSwap += tLiquidity * _buyTeamFee / _liquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1378)
		- _teamTokensToSwap += tLiquidity * _sellTeamFee / _liquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1382)
	TheHand._teamTokensToSwap (0x39832e9b4851c76160d754267d4a169617c27d88.sol#664) can be used in cross function reentrancies:
	- TheHand._takeLiquidity(uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1375-1390)
	- TheHand._transfer(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1019-1111)
	- TheHand.swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1113-1147)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

TheHand.withdrawToken(address) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#777-782) ignores return value by tokenContract.transfer(marketingAddress,balanceOf(address(tokenContract))) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#781)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

TheHand._transfer(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1019-1111) uses a dangerous strict equality:
	- from != owner() && to != uniswapV2Pair && block.number == tradingActiveBlock (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1042)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Reentrancy in TheHand.swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1113-1147):
	External calls:
	- swapTokensForETH(amountToSwapForETH) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1124)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1154-1160)
	State variables written after the call(s):
	- _liquidityTokensToSwap = 0 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1133)
	TheHand._liquidityTokensToSwap (0x39832e9b4851c76160d754267d4a169617c27d88.sol#662) can be used in cross function reentrancies:
	- TheHand._takeLiquidity(uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1375-1390)
	- TheHand._transfer(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1019-1111)
	- TheHand.swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1113-1147)
	- _marketingTokensToSwap = 0 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1134)
	TheHand._marketingTokensToSwap (0x39832e9b4851c76160d754267d4a169617c27d88.sol#663) can be used in cross function reentrancies:
	- TheHand._takeLiquidity(uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1375-1390)
	- TheHand._transfer(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1019-1111)
	- TheHand.swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1113-1147)
	- _teamTokensToSwap = 0 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1135)
	TheHand._teamTokensToSwap (0x39832e9b4851c76160d754267d4a169617c27d88.sol#664) can be used in cross function reentrancies:
	- TheHand._takeLiquidity(uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1375-1390)
	- TheHand._transfer(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1019-1111)
	- TheHand.swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1113-1147)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

TheHand.addLiquidity(uint256,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1163-1173) ignores return value by uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

TheHand.swapBack().success (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137) is written in both
	(success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
	(success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#write-after-write

TheHand.allowance(address,address).owner (0x39832e9b4851c76160d754267d4a169617c27d88.sol#819) shadows:
	- Ownable.owner() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#222-224) (function)
TheHand._approve(address,address,uint256).owner (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1008) shadows:
	- Ownable.owner() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#222-224) (function)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#local-variable-shadowing

TheHand.setMinimumTokensBeforeSwapAmount(uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#916-918) should emit an event for: 
	- minimumTokensBeforeSwap = _minimum (0x39832e9b4851c76160d754267d4a169617c27d88.sol#917) 
TheHand.setMaxWallet(uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#919-921) should emit an event for: 
	- maxWalletAmount = _maximum (0x39832e9b4851c76160d754267d4a169617c27d88.sol#920) 
TheHand.setMaxTransaction(uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#922-924) should emit an event for: 
	- maxTransactionAmount = _maximum (0x39832e9b4851c76160d754267d4a169617c27d88.sol#923) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

Reentrancy in TheHand._transfer(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1019-1111):
	External calls:
	- swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1074)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1154-1160)
		- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1145)
	External calls sending eth:
	- swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1074)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
		- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1145)
	State variables written after the call(s):
	- removeAllFee() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1086)
		- _liquidityFee = 0 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1411)
	- _liquidityFee = _buyLiquidityFee + _buyMarketingFee + _buyTeamFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1088)
	- removeAllFee() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1093)
		- _liquidityFee = 0 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1411)
	- _liquidityFee = _sellLiquidityFee + _sellMarketingFee + _sellTeamFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1095)
	- _liquidityFee = _liquidityFee * 3 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1100)
	- removeAllFee() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1104)
		- _liquidityFee = 0 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1411)
	- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
		- _liquidityFee = _previousLiquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1416)
		- _liquidityFee = 0 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1411)
	- removeAllFee() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1086)
		- _previousLiquidityFee = _liquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1408)
	- removeAllFee() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1093)
		- _previousLiquidityFee = _liquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1408)
	- removeAllFee() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1104)
		- _previousLiquidityFee = _liquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1408)
	- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
		- _previousLiquidityFee = _liquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1408)
	- removeAllFee() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1086)
		- _previousTaxFee = _taxFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1407)
	- removeAllFee() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1093)
		- _previousTaxFee = _taxFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1407)
	- removeAllFee() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1104)
		- _previousTaxFee = _taxFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1407)
	- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
		- _previousTaxFee = _taxFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1407)
	- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
		- _tFeeTotal = _tFeeTotal.add(tFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1283)
	- removeAllFee() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1086)
		- _taxFee = 0 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1410)
	- _taxFee = _buyTaxFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1087)
	- removeAllFee() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1093)
		- _taxFee = 0 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1410)
	- _taxFee = _sellTaxFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1094)
	- _taxFee = _taxFee * 3 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1099)
	- removeAllFee() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1104)
		- _taxFee = 0 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1410)
	- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
		- _taxFee = _previousTaxFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1415)
		- _taxFee = 0 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1410)
	- buyOrSellSwitch = TRANSFER (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1082)
	- buyOrSellSwitch = BUY (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1089)
	- buyOrSellSwitch = SELL (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1096)
	- buyOrSellSwitch = TRANSFER (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1105)
Reentrancy in TheHand.changeRouterVersion(address) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1499-1523):
	External calls:
	- _pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1513-1516)
	State variables written after the call(s):
	- uniswapV2Pair = _pair (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1518)
	- uniswapV2Router = _uniswapV2Router (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1521)
Reentrancy in TheHand.swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1113-1147):
	External calls:
	- swapTokensForETH(amountToSwapForETH) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1124)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1154-1160)
	- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1140)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
	External calls sending eth:
	- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1140)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
	State variables written after the call(s):
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1140)
		- _allowances[owner][spender] = amount (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1015)
Reentrancy in TheHand.transferFrom(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#837-852):
	External calls:
	- _transfer(sender,recipient,amount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#842)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1154-1160)
		- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1145)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#842)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
		- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1145)
	State variables written after the call(s):
	- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#843-850)
		- _allowances[owner][spender] = amount (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1015)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in TheHand._transfer(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1019-1111):
	External calls:
	- swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1074)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1154-1160)
		- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1145)
	External calls sending eth:
	- swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1074)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
		- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1145)
	Event emitted after the call(s):
	- Transfer(sender,recipient,tTransferAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1214)
		- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
	- Transfer(sender,recipient,tTransferAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1235)
		- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
	- Transfer(sender,recipient,tTransferAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1256)
		- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
	- Transfer(sender,recipient,tTransferAmount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1278)
		- _tokenTransfer(from,to,amount,takeFee) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1109)
Reentrancy in TheHand.changeRouterVersion(address) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1499-1523):
	External calls:
	- _pair = IUniswapV2Factory(_uniswapV2Router.factory()).createPair(address(this),_uniswapV2Router.WETH()) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1513-1516)
	Event emitted after the call(s):
	- UpdatedRouter(_router) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1522)
Reentrancy in TheHand.swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1113-1147):
	External calls:
	- swapTokensForETH(amountToSwapForETH) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1124)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1154-1160)
	- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1140)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
	External calls sending eth:
	- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
	- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1140)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1016)
		- addLiquidity(tokensForLiquidity,ethForLiquidity) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1140)
	- SwapAndLiquify(amountToSwapForETH,ethForLiquidity,tokensForLiquidity) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1141)
Reentrancy in TheHand.transferForeignToken(address,address) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1528-1538):
	External calls:
	- _sent = IERC20(_token).transfer(_to,_contractBalance) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1536)
	Event emitted after the call(s):
	- TransferForeignToken(_token,_contractBalance) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1537)
Reentrancy in TheHand.transferFrom(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#837-852):
	External calls:
	- _transfer(sender,recipient,amount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#842)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
		- uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(tokenAmount,0,path,address(this),block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1154-1160)
		- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1145)
	External calls sending eth:
	- _transfer(sender,recipient,amount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#842)
		- uniswapV2Router.addLiquidityETH{value: ethAmount}(address(this),tokenAmount,0,0,liquidityAddress,block.timestamp) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1165-1172)
		- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
		- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
		- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1145)
	Event emitted after the call(s):
	- Approval(owner,spender,amount) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1016)
		- _approve(sender,_msgSender(),_allowances[sender][_msgSender()].sub(amount,ERC20: transfer amount exceeds allowance)) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#843-850)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

TheHand._transfer(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1019-1111) uses timestamp for comparisons
	Dangerous comparisons:
	- boughtEarly[from] && earlyBuyPenaltyEnd <= block.number (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1098)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Address.isContract(address) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#111-122) uses assembly
	- INLINE ASM (0x39832e9b4851c76160d754267d4a169617c27d88.sol#118-120)
Address._functionCallWithValue(address,bytes,uint256,string) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#180-203) uses assembly
	- INLINE ASM (0x39832e9b4851c76160d754267d4a169617c27d88.sol#195-198)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

TheHand.includeInReward(address) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#985-996) has costly operations inside a loop:
	- _excluded.pop() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#992)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop

TheHand._transfer(address,address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1019-1111) has a high cyclomatic complexity (12).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

Context._msgData() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#10-13) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

TheHand._previousTaxFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#643) is set pre-construction with a non-constant function or state variable:
	- _taxFee
TheHand._previousLiquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#646) is set pre-construction with a non-constant function or state variable:
	- _liquidityFee
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint 0.8.9 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- VerbatimInvalidDeduplication
	- FullInlinerNonExpressionSplitArgumentEvaluationOrder
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- DataLocationChangeInInternalOverride
	- NestedCalldataArrayAbiReencodingSizeValidation.
It is used by:
	- 0.8.9 (0x39832e9b4851c76160d754267d4a169617c27d88.sol#3)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in Address.sendValue(address,uint256) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#124-136):
	- (success,None) = recipient.call{value: amount}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#131)
Low level call in Address._functionCallWithValue(address,bytes,uint256,string) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#180-203):
	- (success,returndata) = target.call{value: weiValue}(data) (0x39832e9b4851c76160d754267d4a169617c27d88.sol#188-190)
Low level call in TheHand.swapBack() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1113-1147):
	- (success,None) = address(teamAddress).call{value: ethForTeam}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1137)
	- (success,None) = address(marketingAddress).call{value: ethForMarketing}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1138)
	- (success,None) = address(marketingAddress).call{value: address(this).balance}() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1145)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function IUniswapV2Pair.DOMAIN_SEPARATOR() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#319) is not in mixedCase
Function IUniswapV2Pair.PERMIT_TYPEHASH() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#321) is not in mixedCase
Function IUniswapV2Pair.MINIMUM_LIQUIDITY() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#351) is not in mixedCase
Function IUniswapV2Router01.WETH() (0x39832e9b4851c76160d754267d4a169617c27d88.sol#395) is not in mixedCase
Parameter TheHand.withdrawToken(address)._tokenContract (0x39832e9b4851c76160d754267d4a169617c27d88.sol#777) is not in mixedCase
Parameter TheHand.addPresaleAddressForExclusions(address,address)._presaleAddress (0x39832e9b4851c76160d754267d4a169617c27d88.sol#904) is not in mixedCase
Parameter TheHand.addPresaleAddressForExclusions(address,address)._presaleRouterAddress (0x39832e9b4851c76160d754267d4a169617c27d88.sol#904) is not in mixedCase
Parameter TheHand.setMinimumTokensBeforeSwapAmount(uint256)._minimum (0x39832e9b4851c76160d754267d4a169617c27d88.sol#916) is not in mixedCase
Parameter TheHand.setMaxWallet(uint256)._maximum (0x39832e9b4851c76160d754267d4a169617c27d88.sol#919) is not in mixedCase
Parameter TheHand.setMaxTransaction(uint256)._maximum (0x39832e9b4851c76160d754267d4a169617c27d88.sol#922) is not in mixedCase
Parameter TheHand.calculateTaxFee(uint256)._amount (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1392) is not in mixedCase
Parameter TheHand.calculateLiquidityFee(uint256)._amount (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1396) is not in mixedCase
Parameter TheHand.setMarketingAddress(address)._marketingAddress (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1469) is not in mixedCase
Parameter TheHand.setTeamAddress(address)._teamAddress (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1476) is not in mixedCase
Parameter TheHand.setLiquidityAddress(address)._liquidityAddress (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1483) is not in mixedCase
Parameter TheHand.setSwapAndLiquifyEnabled(bool)._enabled (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1490) is not in mixedCase
Parameter TheHand.changeRouterVersion(address)._router (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1499) is not in mixedCase
Parameter TheHand.transferForeignToken(address,address)._token (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1528) is not in mixedCase
Parameter TheHand.transferForeignToken(address,address)._to (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1528) is not in mixedCase
Constant TheHand._tTotal (0x39832e9b4851c76160d754267d4a169617c27d88.sol#625) is not in UPPER_CASE_WITH_UNDERSCORES
Constant TheHand._name (0x39832e9b4851c76160d754267d4a169617c27d88.sol#631) is not in UPPER_CASE_WITH_UNDERSCORES
Constant TheHand._symbol (0x39832e9b4851c76160d754267d4a169617c27d88.sol#632) is not in UPPER_CASE_WITH_UNDERSCORES
Constant TheHand._decimals (0x39832e9b4851c76160d754267d4a169617c27d88.sol#634) is not in UPPER_CASE_WITH_UNDERSCORES
Variable TheHand._buyTaxFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#648) is not in mixedCase
Variable TheHand._buyLiquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#649) is not in mixedCase
Variable TheHand._buyMarketingFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#650) is not in mixedCase
Variable TheHand._buyTeamFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#651) is not in mixedCase
Variable TheHand._sellTaxFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#653) is not in mixedCase
Variable TheHand._sellLiquidityFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#654) is not in mixedCase
Variable TheHand._sellMarketingFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#655) is not in mixedCase
Variable TheHand._sellTeamFee (0x39832e9b4851c76160d754267d4a169617c27d88.sol#656) is not in mixedCase
Variable TheHand._isExcludedMaxTransactionAmount (0x39832e9b4851c76160d754267d4a169617c27d88.sol#672) is not in mixedCase
Variable TheHand._isExcludedMaxWalletAmount (0x39832e9b4851c76160d754267d4a169617c27d88.sol#673) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (0x39832e9b4851c76160d754267d4a169617c27d88.sol#11)" inContext (0x39832e9b4851c76160d754267d4a169617c27d88.sol#5-14)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

Loop condition i < _excluded.length (0x39832e9b4851c76160d754267d4a169617c27d88.sol#1363) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length

TheHand.limitsInEffect (0x39832e9b4851c76160d754267d4a169617c27d88.sol#629) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
./0x39832e9b4851c76160d754267d4a169617c27d88.sol analyzed (10 contracts with 94 detectors), 70 result(s) found

real	0m5.422s
user	0m5.089s
sys	0m0.334s
