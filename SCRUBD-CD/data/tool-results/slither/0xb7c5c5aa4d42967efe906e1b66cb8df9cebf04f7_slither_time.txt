'solc --version' running
'solc ./0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol:
./0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol:18:9: Warning: Return value of low-level calls not used.
        msg.sender.call.value(balances[msg.sender])();
        ^-------------------------------------------^


Reentrancy in keepMyEther.withdraw() (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#17-20):
	External calls:
	- msg.sender.call.value(balances[msg.sender])() (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#18)
	State variables written after the call(s):
	- balances[msg.sender] = 0 (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#19)
	keepMyEther.balances (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#11) can be used in cross function reentrancies:
	- keepMyEther.balances (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#11)
	- keepMyEther.fallback() (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#13-15)
	- keepMyEther.withdraw() (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#17-20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

keepMyEther.withdraw() (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#17-20) ignores return value by msg.sender.call.value(balances[msg.sender])() (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Version constraint ^0.4.23 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData.
It is used by:
	- ^0.4.23 (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#1)
solc-0.4.23 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in keepMyEther.withdraw() (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#17-20):
	- msg.sender.call.value(balances[msg.sender])() (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#18)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract keepMyEther (0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol#10-22) is not in CapWords
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
./0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7.sol analyzed (1 contracts with 94 detectors), 6 result(s) found

real	0m1.350s
user	0m1.150s
sys	0m0.203s
