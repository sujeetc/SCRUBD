'solc --version' running
'solc ./0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol:
./0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol:161:7: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
    		owner.send(msg.value);//
    		^-------------------^


EncryptedToken (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#119-170) has incorrect ERC20 function interface:TokenERC20.transfer(address,uint256) (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#71-73)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

EncryptedToken.fallback() (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#160-164) ignores return value by owner.send(msg.value) (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#161)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

owned.transferOwnership(address) (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#19-21) should emit an event for: 
	- owner = newOwner (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#20) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

owned.transferOwnership(address).newOwner (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#19) lacks a zero-check on :
		- owner = newOwner (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#20)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

TokenERC20._transfer(address,address,uint256) (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#52-69) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Version constraint ^0.4.16 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector.
It is used by:
	- ^0.4.16 (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#5)
solc-0.4.16 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract owned (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#7-22) is not in CapWords
Contract tokenRecipient (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#24) is not in CapWords
Parameter TokenERC20.transfer(address,uint256)._to (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#71) is not in mixedCase
Parameter TokenERC20.transfer(address,uint256)._value (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#71) is not in mixedCase
Parameter TokenERC20.transferFrom(address,address,uint256)._from (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#75) is not in mixedCase
Parameter TokenERC20.transferFrom(address,address,uint256)._to (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#75) is not in mixedCase
Parameter TokenERC20.transferFrom(address,address,uint256)._value (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#75) is not in mixedCase
Parameter TokenERC20.approve(address,uint256)._spender (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#82) is not in mixedCase
Parameter TokenERC20.approve(address,uint256)._value (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#82) is not in mixedCase
Parameter TokenERC20.approveAndCall(address,uint256,bytes)._spender (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#89) is not in mixedCase
Parameter TokenERC20.approveAndCall(address,uint256,bytes)._value (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#89) is not in mixedCase
Parameter TokenERC20.approveAndCall(address,uint256,bytes)._extraData (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#89) is not in mixedCase
Parameter TokenERC20.burn(uint256)._value (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#99) is not in mixedCase
Parameter TokenERC20.burnFrom(address,uint256)._from (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#108) is not in mixedCase
Parameter TokenERC20.burnFrom(address,uint256)._value (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#108) is not in mixedCase
Variable EncryptedToken.INITIAL_SUPPLY (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#120) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in EncryptedToken.fallback() (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#160-164):
	External calls:
	- owner.send(msg.value) (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#161)
	State variables written after the call(s):
	- _transfer(owner,msg.sender,amount) (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#163)
		- balanceOf[_from] -= _value (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#134)
		- balanceOf[_to] += _value (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#135)
	Event emitted after the call(s):
	- Transfer(_from,_to,_value) (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#136)
		- _transfer(owner,msg.sender,amount) (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#163)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

EncryptedToken.slitherConstructorVariables() (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#119-170) uses literals with too many digits:
	- INITIAL_SUPPLY = 900000000 (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#120)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

EncryptedToken.INITIAL_SUPPLY (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#120) should be constant 
TokenERC20.decimals (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#29) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

receiveApproval(address,uint256,address,bytes) should be declared external:
	- tokenRecipient.receiveApproval(address,uint256,address,bytes) (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#24)
approveAndCall(address,uint256,bytes) should be declared external:
	- TokenERC20.approveAndCall(address,uint256,bytes) (0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol#89-97)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
./0x287fda15f8f002e5df9f536f10bbfc0816960f36.sol analyzed (4 contracts with 94 detectors), 29 result(s) found

real	0m1.556s
user	0m1.347s
sys	0m0.213s
