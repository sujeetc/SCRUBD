'solc --version' running
'solc ./0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol:
Warning: Using ".value(...)" is deprecated. Use "{value: ...}" instead.
   --> ./0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol:559:9:
    |
559 |         uniswap.swapExactETHForTokens.value(amountEth)(0, getPathForTokenToEth(address(NDR)), address(this), now + deadline);
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: Using ".value(...)" is deprecated. Use "{value: ...}" instead.
   --> ./0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol:566:9:
    |
566 |         uniswap.addLiquidityETH.value(amountEth)
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Warning: Contract code size exceeds 24576 bytes (a limit introduced in Spurious Dragon). This contract may not be deployable on mainnet. Consider enabling the optimizer (with a low "runs" value!), turning off revert strings, or using libraries.
   --> ./0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol:426:1:
    |
426 | contract LPStaking is ReentrancyGuard, Pausable, Ownable {
    | ^ (Relevant source part starts here and spans across multiple lines).



LPStaking.stake(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#641-648) ignores return value by stakingToken.transferFrom(msg.sender,address(this),amount) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#646)
LPStaking.withdraw(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#650-659) ignores return value by stakingToken.transfer(0x1111111111111111111111111111111111111111,fee) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#656)
LPStaking.withdraw(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#650-659) ignores return value by stakingToken.transfer(msg.sender,amount.sub(fee)) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#657)
LPStaking.recoverERC20(address,uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#729-738) ignores return value by IERC20(tokenAddress).transfer(this.owner(),tokenAmount) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#736)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

LPStaking.getPriceHero(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#665-669) performs a multiplication on the result of a division:
	- price = reserves2 * 1e18 / IUniswapV2Pair(address(stakingToken)).totalSupply() * 2 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#667)
LPStaking.getPriceSupport(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#671-675) performs a multiplication on the result of a division:
	- price = reserves2 * 1e18 / IUniswapV2Pair(address(stakingToken)).totalSupply() * 2 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#673)
LPStaking.buy(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#687-707) performs a multiplication on the result of a division:
	- amountEth = (msg.value - fee) / 2 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#700)
	- addLiquidityETH(amountToken,amountEth * 99 / 100) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#705)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

LPStaking.buy(uint256).price (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#689) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

UniswapV2Library.getReserves(address,address,address) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#171-175) ignores return value by (reserve0,reserve1,None) = IUniswapV2Pair(pairFor(factory,tokenA,tokenB)).getReserves() (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#173)
LPStaking.swapExactETHForTokens(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#558-560) ignores return value by uniswap.swapExactETHForTokens.value(amountEth)(0,getPathForTokenToEth(address(NDR)),address(this),now + deadline) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#559)
LPStaking.addLiquidityETH(uint256,uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#562-568) ignores return value by IERC20(NDR).approve(address(uniswap),amountTokenDesired) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#563)
LPStaking.addLiquidityETH(uint256,uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#562-568) ignores return value by uniswap.addLiquidityETH.value(amountEth)(address(NDR),amountTokenDesired,amountTokenMin,amountEth,address(0),now + deadline) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#566-567)
LPStaking.getPriceHero(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#665-669) ignores return value by (None,reserves2) = UniswapV2Library.getReserves(address(factory),NDR,uniswap.WETH()) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#666)
LPStaking.getPriceSupport(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#671-675) ignores return value by (None,reserves2) = UniswapV2Library.getReserves(address(factory),NDR,uniswap.WETH()) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#672)
LPStaking.redeem(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#677-685) ignores return value by (None,None,None,None,hashPrice,None) = INodeRunnersNFT(address(NFT)).getFighter(tokenId) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#678)
LPStaking.buy(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#687-707) ignores return value by (None,None,None,rarity,None,series) = INodeRunnersNFT(address(NFT)).getFighter(tokenId) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#688)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

LPStaking.changeMultiplierHero(uint256,uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#599-603) should emit an event for: 
	- mulHero1 = _mulHero1 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#600) 
	- mulHero2 = _mulHero2 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#601) 
LPStaking.changeMultiplierSupport(uint256,uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#605-609) should emit an event for: 
	- mulSupport1 = _mulSupport1 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#606) 
	- mulSupport2 = _mulSupport2 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#607) 
LPStaking.changeDeadline(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#611-614) should emit an event for: 
	- deadline = _deadline (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#612) 
LPStaking.changeInterest(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#616-619) should emit an event for: 
	- interest = _interest (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#617) 
LPStaking.changeDivider(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#621-624) should emit an event for: 
	- divider = _divider (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#622) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

LPStaking.constructor(address,address,address,address,address,address,address)._treasury (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#463) lacks a zero-check on :
		- treasury = _treasury (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#471)
LPStaking.constructor(address,address,address,address,address,address,address)._NFT (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#464) lacks a zero-check on :
		- NFT = _NFT (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#472)
LPStaking.constructor(address,address,address,address,address,address,address)._NDR (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#465) lacks a zero-check on :
		- NDR = _NDR (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#473)
LPStaking.changeAddresses(address,address,address,address,address,address,address)._treasury (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#589) lacks a zero-check on :
		- treasury = _treasury (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#590)
LPStaking.changeAddresses(address,address,address,address,address,address,address)._NFT (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#589) lacks a zero-check on :
		- NFT = _NFT (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#591)
LPStaking.changeAddresses(address,address,address,address,address,address,address)._NDR (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#589) lacks a zero-check on :
		- NDR = _NDR (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#592)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in LPStaking.recoverERC20(address,uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#729-738):
	External calls:
	- IERC20(tokenAddress).transfer(this.owner(),tokenAmount) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#736)
	Event emitted after the call(s):
	- Recovered(tokenAddress,tokenAmount) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#737)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

LPStaking.min(uint256,uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#535-537) uses timestamp for comparisons
	Dangerous comparisons:
	- a < b (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#536)
LPStaking.redeem(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#677-685) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(reward >= hashPrice,not enough hash) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#681)
LPStaking.notifyRewardAmount(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#711-727) uses timestamp for comparisons
	Dangerous comparisons:
	- block.timestamp >= periodFinish (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#712)
	- require(bool,string)(rewardRate <= balance.div(rewardsDuration),Provided reward too high) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#720-723)
LPStaking.setRewardsDuration(uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#740-747) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool,string)(block.timestamp > periodFinish,Previous rewards period must be complete before changing the duration for the new period) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#741-744)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

2 different versions of Solidity are used:
	- Version constraint ^0.6.2 is used by:
		-^0.6.2 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#3)
	- Version constraint ^0.6.0 is used by:
		-^0.6.0 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#393)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used

Context._msgData() (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#212-215) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Version constraint ^0.6.2 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- MissingSideEffectsOnSelectorAccess
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ArraySliceDynamicallyEncodedBaseType
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow.
It is used by:
	- ^0.6.2 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#3)
Version constraint ^0.6.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- AbiReencodingHeadOverflowWithStaticArrayCleanup
	- DirtyBytesArrayToStorage
	- NestedCalldataArrayAbiReencodingSizeValidation
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- MissingEscapingInFormatting
	- ArraySliceDynamicallyEncodedBaseType
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- YulOptimizerRedundantAssignmentBreakContinue.
It is used by:
	- ^0.6.0 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#393)
solc-0.6.9 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Function IUniswap.WETH() (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#412) is not in mixedCase
Parameter LPStaking.changeAddresses(address,address,address,address,address,address,address)._treasury (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#589) is not in mixedCase
Parameter LPStaking.changeAddresses(address,address,address,address,address,address,address)._NFT (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#589) is not in mixedCase
Parameter LPStaking.changeAddresses(address,address,address,address,address,address,address)._NDR (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#589) is not in mixedCase
Parameter LPStaking.changeAddresses(address,address,address,address,address,address,address)._rewardsToken (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#589) is not in mixedCase
Parameter LPStaking.changeAddresses(address,address,address,address,address,address,address)._stakingToken (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#589) is not in mixedCase
Parameter LPStaking.changeAddresses(address,address,address,address,address,address,address)._uniswap (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#589) is not in mixedCase
Parameter LPStaking.changeAddresses(address,address,address,address,address,address,address)._factory (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#589) is not in mixedCase
Parameter LPStaking.changeMultiplierHero(uint256,uint256)._mulHero1 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#599) is not in mixedCase
Parameter LPStaking.changeMultiplierHero(uint256,uint256)._mulHero2 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#599) is not in mixedCase
Parameter LPStaking.changeMultiplierSupport(uint256,uint256)._mulSupport1 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#605) is not in mixedCase
Parameter LPStaking.changeMultiplierSupport(uint256,uint256)._mulSupport2 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#605) is not in mixedCase
Parameter LPStaking.changeDeadline(uint256)._deadline (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#611) is not in mixedCase
Parameter LPStaking.changeInterest(uint256)._interest (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#616) is not in mixedCase
Parameter LPStaking.changeDivider(uint256)._divider (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#621) is not in mixedCase
Parameter LPStaking.changeLpAmount(uint256,uint256)._minLp (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#626) is not in mixedCase
Parameter LPStaking.changeLpAmount(uint256,uint256)._maxLp (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#626) is not in mixedCase
Parameter LPStaking.changeFeeRate(uint256)._feeRate (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#632) is not in mixedCase
Parameter LPStaking.setRewardsDuration(uint256)._rewardsDuration (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#740) is not in mixedCase
Variable LPStaking.NFT (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#432) is not in mixedCase
Variable LPStaking.NDR (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#433) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "this (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#213)" inContext (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#207-216)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

LPStaking.slitherConstructorVariables() (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#426-770) uses literals with too many digits:
	- minLp = 2250000000000000000 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#445)
LPStaking.slitherConstructorVariables() (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#426-770) uses literals with too many digits:
	- maxLp = 22500000000000000000 (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#446)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

The function LPStaking.recoverERC20(address,uint256) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#729-738) reads IERC20(tokenAddress).transfer(this.owner(),tokenAmount) (0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol#736) with `this` which adds an extra STATICCALL.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-variable-read-in-external-context
./0x2c92744a0428e405e95dc3eb812e1b87872b22eb.sol analyzed (12 contracts with 94 detectors), 62 result(s) found

real	0m2.600s
user	0m2.390s
sys	0m0.212s
