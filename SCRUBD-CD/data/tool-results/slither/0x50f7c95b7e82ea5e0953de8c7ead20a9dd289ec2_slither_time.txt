'solc --version' running
'solc ./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:174:141: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
                                                                                                                                            ^---^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:211:7: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
      owner.send(_amountInwei);
      ^----------------------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:22:53: Warning: Unused local variable
    function totalSupply() constant public returns (uint256 supply) {}
                                                    ^------------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:26:24: Warning: Unused local variable
    function balanceOf(address _owner) constant public returns (uint256 balance) {}
                       ^------------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:26:65: Warning: Unused local variable
    function balanceOf(address _owner) constant public returns (uint256 balance) {}
                                                                ^-------------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:32:23: Warning: Unused local variable
    function transfer(address _to, uint256 _value) public returns (bool success) {}
                      ^---------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:32:36: Warning: Unused local variable
    function transfer(address _to, uint256 _value) public returns (bool success) {}
                                   ^------------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:32:68: Warning: Unused local variable
    function transfer(address _to, uint256 _value) public returns (bool success) {}
                                                                   ^----------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:39:27: Warning: Unused local variable
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
                          ^-----------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:39:42: Warning: Unused local variable
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
                                         ^---------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:39:55: Warning: Unused local variable
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
                                                      ^------------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:39:87: Warning: Unused local variable
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {}
                                                                                      ^----------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:45:22: Warning: Unused local variable
    function approve(address _spender, uint256 _value) public returns (bool success) {}
                     ^--------------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:45:40: Warning: Unused local variable
    function approve(address _spender, uint256 _value) public returns (bool success) {}
                                       ^------------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:45:72: Warning: Unused local variable
    function approve(address _spender, uint256 _value) public returns (bool success) {}
                                                                       ^----------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:50:24: Warning: Unused local variable
    function allowance(address _owner, address _spender) constant public returns (uint256 remaining) {}
                       ^------------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:50:40: Warning: Unused local variable
    function allowance(address _owner, address _spender) constant public returns (uint256 remaining) {}
                                       ^--------------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:50:83: Warning: Unused local variable
    function allowance(address _owner, address _spender) constant public returns (uint256 remaining) {}
                                                                                  ^---------------^
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:215:6: Warning: Function is marked pure. Be careful, pureness is not enforced yet.
     function mul(uint256 a, uint256 b) internal pure returns (uint256) {
     ^
Spanning multiple lines.
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:224:3: Warning: Function is marked pure. Be careful, pureness is not enforced yet.
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
  ^
Spanning multiple lines.
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:231:3: Warning: Function is marked pure. Be careful, pureness is not enforced yet.
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
  ^
Spanning multiple lines.
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol:236:3: Warning: Function is marked pure. Be careful, pureness is not enforced yet.
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
  ^
Spanning multiple lines.


BitProCoinX.withdraw(uint256) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#208-213) ignores return value by owner.send(_amountInwei) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#211)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

owned.transferOwnership(address) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#14-16) should emit an event for: 
	- owner = newOwner (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#15) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

owned.transferOwnership(address).newOwner (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#14) lacks a zero-check on :
		- owner = newOwner (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#15)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

BitProCoinX.add(uint256,uint256) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#236-240) is never used and should be removed
BitProCoinX.mul(uint256,uint256) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#215-222) is never used and should be removed
BitProCoinX.sub(uint256,uint256) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#231-234) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Deprecated standard detected ! _spender.call(bytes4(bytes32(sha3()(receiveApproval(address,uint256,address,bytes)))),msg.sender,_value,this,_extraData) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#174):
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected THROW (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#174):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Version constraint ^0.4.16 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector.
It is used by:
	- ^0.4.16 (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#1)
solc-0.4.16 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in BitProCoinX.approveAndCall(address,uint256,bytes) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#167-176):
	- ! _spender.call(bytes4(bytes32(sha3()(receiveApproval(address,uint256,address,bytes)))),msg.sender,_value,this,_extraData) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#174)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Contract owned (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#2-17) is not in CapWords
Parameter StandardToken.transfer(address,uint256)._to (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#61) is not in mixedCase
Parameter StandardToken.transfer(address,uint256)._value (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#61) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#74) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#74) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#74) is not in mixedCase
Parameter StandardToken.balanceOf(address)._owner (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#86) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#90) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#90) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#96) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#96) is not in mixedCase
Parameter BitProCoinX.approveAndCall(address,uint256,bytes)._spender (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#167) is not in mixedCase
Parameter BitProCoinX.approveAndCall(address,uint256,bytes)._value (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#167) is not in mixedCase
Parameter BitProCoinX.approveAndCall(address,uint256,bytes)._extraData (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#167) is not in mixedCase
Parameter BitProCoinX.withdraw(uint256)._amountInwei (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#208) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Redundant expression "numInvestors (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#152)" inBitProCoinX (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#107-243)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#redundant-statements

Reentrancy in BitProCoinX.sell(uint256) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#198-206):
	External calls:
	- require(bool)(msg.sender.send(revenue)) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#203)
	Event emitted after the call(s):
	- Transfer(msg.sender,this,amount) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#204)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

BitProCoinX.BitProCoinX() (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#142-153) uses literals with too many digits:
	- balances[msg.sender] = 1000000000000 (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#144)
BitProCoinX.BitProCoinX() (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#142-153) uses literals with too many digits:
	- totalSupply = 1000000000000 (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#145)
BitProCoinX.BitProCoinX() (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#142-153) uses literals with too many digits:
	- sellPrice = 7668200000 (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#149)
BitProCoinX.BitProCoinX() (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#142-153) uses literals with too many digits:
	- buyPrice = 7668200000 (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#150)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

BitProCoinX.version (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#122) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

approveAndCall(address,uint256,bytes) should be declared external:
	- BitProCoinX.approveAndCall(address,uint256,bytes) (0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol#167-176)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
./0x50f7c95b7e82ea5e0953de8c7ead20a9dd289ec2.sol analyzed (4 contracts with 94 detectors), 34 result(s) found

real	0m1.655s
user	0m1.446s
sys	0m0.213s
