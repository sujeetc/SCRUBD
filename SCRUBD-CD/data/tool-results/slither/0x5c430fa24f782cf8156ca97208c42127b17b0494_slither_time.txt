'solc --version' running
'solc ./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:85:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'.
        if (getCodeSize(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed)>0){ //mainnet
                        ^----------------------------------------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:86:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'.
            OAR = OraclizeAddrResolverI(0x1d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed);
                                        ^----------------------------------------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:89:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'.
        if (getCodeSize(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1)>0){ //ropsten testnet
                        ^----------------------------------------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:90:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'.
            OAR = OraclizeAddrResolverI(0xc03a2615d5efaf5f49f60b7bb6583eaec212fdf1);
                                        ^----------------------------------------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:93:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'.
        if (getCodeSize(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf)>0){ //ether.camp ide
                        ^----------------------------------------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:94:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'.
            OAR = OraclizeAddrResolverI(0x20e12a1f859b3feae5fb2a0a32c18f5a65555bbf);
                                        ^----------------------------------------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:97:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'.
        if (getCodeSize(0x93bbbe5ce77034e3095f0479919962a903f898ad)>0){ //norsborg testnet
                        ^----------------------------------------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:98:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'.
            OAR = OraclizeAddrResolverI(0x93bbbe5ce77034e3095f0479919962a903f898ad);
                                        ^----------------------------------------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:101:25: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'.
        if (getCodeSize(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa)>0){ //browser-solidity
                        ^----------------------------------------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:102:41: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'.
            OAR = OraclizeAddrResolverI(0x51efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa);
                                        ^----------------------------------------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:442:9: Warning: Failure condition of 'send' ignored. Consider using 'transfer' instead.
        owner.send(amount);
        ^----------------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:84:34: Warning: Unused local variable
    function oraclize_setNetwork(uint8 networkID) internal returns(bool){
                                 ^-------------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:111:25: Warning: Unused local variable
    function __callback(bytes32 myid, string result, bytes proof) {
                        ^----------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:111:39: Warning: Unused local variable
    function __callback(bytes32 myid, string result, bytes proof) {
                                      ^-----------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:111:54: Warning: Unused local variable
    function __callback(bytes32 myid, string result, bytes proof) {
                                                     ^---------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:174:26: Warning: Unused local variable
    function getCodeSize(address _addr) constant internal returns(uint _size) {
                         ^-----------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:174:67: Warning: Unused local variable
    function getCodeSize(address _addr) constant internal returns(uint _size) {
                                                                  ^--------^
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol:380:7: Warning: Unused local variable
  	   uint random_number;
  	   ^----------------^


usingOraclize.getCodeSize(address) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#174-178) is declared view but contains assembly code
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#constant-functions-using-assembly-code

HackDao.ownerWithdrawl(uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#441-443) ignores return value by owner.send(amount) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#442)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-send

HackDao.__callback(bytes32,string).koef (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#411) is a local variable never initialized
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-local-variables

Reentrancy in HackDao.game(uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#357-391):
	External calls:
	- myid = oraclize_query(WolframAlpha,random integer number between 1 and 10) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#382)
		- price = oraclize.getPrice(datasource) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#122)
		- oraclize = OraclizeI(OAR.getAddress()) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#75)
		- oraclize.query.value(price)(0,datasource,arg) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#124)
	External calls sending eth:
	- myid = oraclize_query(WolframAlpha,random integer number between 1 and 10) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#382)
		- oraclize.query.value(price)(0,datasource,arg) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#124)
	State variables written after the call(s):
	- bets[myid] = msg.sender (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#384)
	- betslevel[myid] = level (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#386)
	- betsvalue[myid] = msg.value (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#385)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in HackDao.game(uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#357-391):
	External calls:
	- myid = oraclize_query(WolframAlpha,random integer number between 1 and 10) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#382)
		- price = oraclize.getPrice(datasource) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#122)
		- oraclize = OraclizeI(OAR.getAddress()) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#75)
		- oraclize.query.value(price)(0,datasource,arg) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#124)
	External calls sending eth:
	- myid = oraclize_query(WolframAlpha,random integer number between 1 and 10) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#382)
		- oraclize.query.value(price)(0,datasource,arg) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#124)
	Event emitted after the call(s):
	- LogB(myid) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#388)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

usingOraclize.getCodeSize(address) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#174-178) uses assembly
	- INLINE ASM (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#175-178)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#assembly-usage

2 different versions of Solidity are used:
	- Version constraint ^0.4.8 is used by:
		-^0.4.8 (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#5)
	- Version constraint ^0.4.0 is used by:
		-^0.4.0 (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#39)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#different-pragma-directives-are-used

HackDao.__callback(bytes32,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#396-434) has a high cyclomatic complexity (12).
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cyclomatic-complexity

usingOraclize.indexOf(string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#218-244) is never used and should be removed
usingOraclize.oraclize_getPrice(string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#114-116) is never used and should be removed
usingOraclize.oraclize_getPrice(string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#117-119) is never used and should be removed
usingOraclize.oraclize_query(string,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#141-145) is never used and should be removed
usingOraclize.oraclize_query(string,string,string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#156-160) is never used and should be removed
usingOraclize.oraclize_query(string,string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#136-140) is never used and should be removed
usingOraclize.oraclize_query(uint256,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#126-130) is never used and should be removed
usingOraclize.oraclize_query(uint256,string,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#146-150) is never used and should be removed
usingOraclize.oraclize_query(uint256,string,string,string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#151-155) is never used and should be removed
usingOraclize.oraclize_query(uint256,string,string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#131-135) is never used and should be removed
usingOraclize.oraclize_setConfig(bytes32) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#170-172) is never used and should be removed
usingOraclize.oraclize_setCustomGasPrice(uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#167-169) is never used and should be removed
usingOraclize.oraclize_setProof(bytes1) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#164-166) is never used and should be removed
usingOraclize.parseAddr(string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#181-197) is never used and should be removed
usingOraclize.strCompare(string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#200-216) is never used and should be removed
usingOraclize.strConcat(string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#271-273) is never used and should be removed
usingOraclize.strConcat(string,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#267-269) is never used and should be removed
usingOraclize.strConcat(string,string,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#263-265) is never used and should be removed
usingOraclize.strConcat(string,string,string,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#246-261) is never used and should be removed
usingOraclize.uint2str(uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#299-314) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Deprecated standard detected THROW (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#342):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#359):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#360):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#361):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#378):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#399):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#400):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#402):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#349):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Version constraint ^0.4.8 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput
	- SkipEmptyStringLiteral
	- ConstantOptimizerSubtraction.
It is used by:
	- ^0.4.8 (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#5)
Version constraint ^0.4.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput
	- SkipEmptyStringLiteral
	- ConstantOptimizerSubtraction
	- IdentityPrecompileReturnIgnored
	- HighOrderByteCleanStorage
	- OptimizerStaleKnowledgeAboutSHA3
	- LibrariesNotCallableFromPayableFunctions.
It is used by:
	- ^0.4.0 (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#39)
solc-0.4.11 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Function OraclizeI.query_withGasLimit(uint256,string,string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#44) is not in mixedCase
Function OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#46) is not in mixedCase
Contract usingOraclize (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#57-318) is not in CapWords
Function usingOraclize.oraclize_setNetwork(uint8) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#84-106) is not in mixedCase
Function usingOraclize.__callback(bytes32,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#108-110) is not in mixedCase
Function usingOraclize.__callback(bytes32,string,bytes) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#111-112) is not in mixedCase
Function usingOraclize.oraclize_getPrice(string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#114-116) is not in mixedCase
Function usingOraclize.oraclize_getPrice(string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#117-119) is not in mixedCase
Function usingOraclize.oraclize_query(string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#121-125) is not in mixedCase
Function usingOraclize.oraclize_query(uint256,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#126-130) is not in mixedCase
Function usingOraclize.oraclize_query(uint256,string,string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#131-135) is not in mixedCase
Function usingOraclize.oraclize_query(string,string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#136-140) is not in mixedCase
Function usingOraclize.oraclize_query(string,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#141-145) is not in mixedCase
Function usingOraclize.oraclize_query(uint256,string,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#146-150) is not in mixedCase
Function usingOraclize.oraclize_query(uint256,string,string,string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#151-155) is not in mixedCase
Function usingOraclize.oraclize_query(string,string,string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#156-160) is not in mixedCase
Function usingOraclize.oraclize_cbAddress() (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#161-163) is not in mixedCase
Function usingOraclize.oraclize_setProof(bytes1) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#164-166) is not in mixedCase
Function usingOraclize.oraclize_setCustomGasPrice(uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#167-169) is not in mixedCase
Function usingOraclize.oraclize_setConfig(bytes32) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#170-172) is not in mixedCase
Parameter usingOraclize.parseAddr(string)._a (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#181) is not in mixedCase
Parameter usingOraclize.strCompare(string,string)._a (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#200) is not in mixedCase
Parameter usingOraclize.strCompare(string,string)._b (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#200) is not in mixedCase
Parameter usingOraclize.indexOf(string,string)._haystack (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#218) is not in mixedCase
Parameter usingOraclize.indexOf(string,string)._needle (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#218) is not in mixedCase
Parameter usingOraclize.strConcat(string,string,string,string,string)._a (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#246) is not in mixedCase
Parameter usingOraclize.strConcat(string,string,string,string,string)._b (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#246) is not in mixedCase
Parameter usingOraclize.strConcat(string,string,string,string,string)._c (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#246) is not in mixedCase
Parameter usingOraclize.strConcat(string,string,string,string,string)._d (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#246) is not in mixedCase
Parameter usingOraclize.strConcat(string,string,string,string,string)._e (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#246) is not in mixedCase
Parameter usingOraclize.strConcat(string,string,string,string)._a (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#263) is not in mixedCase
Parameter usingOraclize.strConcat(string,string,string,string)._b (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#263) is not in mixedCase
Parameter usingOraclize.strConcat(string,string,string,string)._c (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#263) is not in mixedCase
Parameter usingOraclize.strConcat(string,string,string,string)._d (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#263) is not in mixedCase
Parameter usingOraclize.strConcat(string,string,string)._a (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#267) is not in mixedCase
Parameter usingOraclize.strConcat(string,string,string)._b (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#267) is not in mixedCase
Parameter usingOraclize.strConcat(string,string,string)._c (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#267) is not in mixedCase
Parameter usingOraclize.strConcat(string,string)._a (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#271) is not in mixedCase
Parameter usingOraclize.strConcat(string,string)._b (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#271) is not in mixedCase
Parameter usingOraclize.parseInt(string)._a (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#276) is not in mixedCase
Parameter usingOraclize.parseInt(string,uint256)._a (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#281) is not in mixedCase
Parameter usingOraclize.parseInt(string,uint256)._b (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#281) is not in mixedCase
Constant usingOraclize.day (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#58) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.week (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#59) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.month (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#60) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.proofType_NONE (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#61) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.proofType_TLSNotary (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#62) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.proofStorage_IPFS (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#63) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.networkID_auto (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#64) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.networkID_mainnet (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#65) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.networkID_testnet (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#66) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.networkID_morden (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#67) is not in UPPER_CASE_WITH_UNDERSCORES
Constant usingOraclize.networkID_consensys (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#68) is not in UPPER_CASE_WITH_UNDERSCORES
Variable usingOraclize.OAR (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#70) is not in mixedCase
Function HackDao.__callback(bytes32,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#396-434) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in HackDao.__callback(bytes32,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#396-434):
	External calls:
	- ! bets[myid].send(betsvalue[myid] * koef / 100) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#422)
	State variables written after the call(s):
	- delete bets[myid] (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#430)
	- delete betslevel[myid] (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#432)
	- delete betsvalue[myid] (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#433)
	- delete results[myid] (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#431)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

usingOraclize.oraclize_query(string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#121-125) uses literals with too many digits:
	- price > 1000000000000000000 + tx.gasprice * 200000 (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#123)
usingOraclize.oraclize_query(uint256,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#126-130) uses literals with too many digits:
	- price > 1000000000000000000 + tx.gasprice * 200000 (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#128)
usingOraclize.oraclize_query(string,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#141-145) uses literals with too many digits:
	- price > 1000000000000000000 + tx.gasprice * 200000 (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#143)
usingOraclize.oraclize_query(uint256,string,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#146-150) uses literals with too many digits:
	- price > 1000000000000000000 + tx.gasprice * 200000 (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#148)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

usingOraclize.day (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#58) is never used in HackDao (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#323-446)
usingOraclize.week (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#59) is never used in HackDao (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#323-446)
usingOraclize.month (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#60) is never used in HackDao (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#323-446)
usingOraclize.proofType_NONE (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#61) is never used in HackDao (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#323-446)
usingOraclize.proofType_TLSNotary (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#62) is never used in HackDao (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#323-446)
usingOraclize.proofStorage_IPFS (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#63) is never used in HackDao (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#323-446)
usingOraclize.networkID_mainnet (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#65) is never used in HackDao (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#323-446)
usingOraclize.networkID_testnet (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#66) is never used in HackDao (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#323-446)
usingOraclize.networkID_morden (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#67) is never used in HackDao (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#323-446)
usingOraclize.networkID_consensys (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#68) is never used in HackDao (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#323-446)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

query(uint256,string,string) should be declared external:
	- OraclizeI.query(uint256,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#43)
query_withGasLimit(uint256,string,string,uint256) should be declared external:
	- OraclizeI.query_withGasLimit(uint256,string,string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#44)
query2(uint256,string,string,string) should be declared external:
	- OraclizeI.query2(uint256,string,string,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#45)
query2_withGasLimit(uint256,string,string,string,uint256) should be declared external:
	- OraclizeI.query2_withGasLimit(uint256,string,string,string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#46)
getPrice(string) should be declared external:
	- OraclizeI.getPrice(string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#47)
getPrice(string,uint256) should be declared external:
	- OraclizeI.getPrice(string,uint256) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#48)
useCoupon(string) should be declared external:
	- OraclizeI.useCoupon(string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#49)
__callback(bytes32,string) should be declared external:
	- HackDao.__callback(bytes32,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#396-434)
	- usingOraclize.__callback(bytes32,string) (0x5c430fa24f782cf8156ca97208c42127b17b0494.sol#108-110)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
./0x5c430fa24f782cf8156ca97208c42127b17b0494.sol analyzed (4 contracts with 94 detectors), 118 result(s) found

real	0m2.818s
user	0m2.592s
sys	0m0.228s
