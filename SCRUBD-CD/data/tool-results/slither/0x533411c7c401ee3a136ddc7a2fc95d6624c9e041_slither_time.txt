'solc --version' running
'solc ./0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/empirical-study/data/extracted_solc_codes/crowdsource_contracts' running
Compilation warnings/errors on ./0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol:
./0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol:162:3: Warning: No visibility specified. Defaulting to "public".
  function tokenFallback(address from, uint value, bytes data) {
  ^ (Relevant source part starts here and spans across multiple lines).
./0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol:64:14: Warning: This looks like an address but has an invalid checksum. If this is not used as an address, please prepend '00'. Correct checksummed address: '0x0e0Da823836499790eCbe17BA075a2a7CBE970E2'. For more information please see https://solidity.readthedocs.io/en/develop/types.html#address-literals
    initData(0x0e0da823836499790ecbe17ba075a2a7cbe970e2, 1806343 * 10**18);
             ^----------------------------------------^
./0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol:162:26: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback(address from, uint value, bytes data) {
                         ^----------^
./0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol:162:40: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback(address from, uint value, bytes data) {
                                       ^--------^
./0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol:162:52: Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.
  function tokenFallback(address from, uint value, bytes data) {
                                                   ^--------^
./0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol:162:3: Warning: Function state mutability can be restricted to pure
  function tokenFallback(address from, uint value, bytes data) {
  ^ (Relevant source part starts here and spans across multiple lines).


VestingContractWTTEST (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#11-166) contract sets array length with a user-controlled value:
	- periods.push(2 ** 256 - 1) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#61)
VestingContractWTTEST (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#11-166) contract sets array length with a user-controlled value:
	- periods.push(1527003900) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#60)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

VestingContractWTTEST (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#11-166) has incorrect ERC20 function interface:VestingContractWTTEST.transfer(address,uint256) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#144-158)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

Contract locking ether found:
	Contract VestingContractWTTEST (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#11-166) has payable functions:
	 - VestingContractWTTEST.fallback() (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#68-73)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether

Reentrancy in VestingContractWTTEST.transfer(address,uint256) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#144-158):
	External calls:
	- require(bool)(value <= we_test_token.balanceOf(this) && value <= account_data[msg.sender].current_balance && account_data[msg.sender].current_transferred + value <= account_data[msg.sender].current_limit) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#148-150)
	- we_test_token.transfer(to,value) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#152)
	State variables written after the call(s):
	- account_data[msg.sender].current_transferred += value (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#154)
	VestingContractWTTEST.account_data (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#26) can be used in cross function reentrancies:
	- VestingContractWTTEST.account_data (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#26)
	- VestingContractWTTEST.initData(address,uint256) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#84-93)
	- VestingContractWTTEST.ownerTransfer(address,uint256) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#106-116)
	- VestingContractWTTEST.transfer(address,uint256) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#144-158)
	- VestingContractWTTEST.updateCurrentPeriod() (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#118-142)
	- account_data[msg.sender].current_balance -= value (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#155)
	VestingContractWTTEST.account_data (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#26) can be used in cross function reentrancies:
	- VestingContractWTTEST.account_data (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#26)
	- VestingContractWTTEST.initData(address,uint256) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#84-93)
	- VestingContractWTTEST.ownerTransfer(address,uint256) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#106-116)
	- VestingContractWTTEST.transfer(address,uint256) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#144-158)
	- VestingContractWTTEST.updateCurrentPeriod() (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#118-142)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Reentrancy in VestingContractWTTEST.ownerTransfer(address,uint256) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#106-116):
	External calls:
	- require(bool)(getBalance() > current_balance_all && value <= getBalance() - current_balance_all) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#113)
		- we_test_token.balanceOf(this) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#81)
	- we_test_token.transfer(to,value) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#114)
	Event emitted after the call(s):
	- OwnerTransfer(to,value) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#115)
Reentrancy in VestingContractWTTEST.transfer(address,uint256) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#144-158):
	External calls:
	- require(bool)(value <= we_test_token.balanceOf(this) && value <= account_data[msg.sender].current_balance && account_data[msg.sender].current_transferred + value <= account_data[msg.sender].current_limit) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#148-150)
	- we_test_token.transfer(to,value) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#152)
	Event emitted after the call(s):
	- Transfer(to,value) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#156)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

VestingContractWTTEST.updateCurrentPeriod() (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#118-142) uses timestamp for comparisons
	Dangerous comparisons:
	- periods[i] > now (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#125)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Version constraint ^0.4.21 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData
	- NestedArrayFunctionCallDecoder.
It is used by:
	- ^0.4.21 (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#1)
solc-0.4.21 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

VestingContractWTTEST (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#11-166) should inherit from WeTestToken (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#3-9)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-inheritance

Parameter VestingContractWTTEST.setOwner(address)._owner (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#95) is not in mixedCase
Variable VestingContractWTTEST.we_test_token (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#25) is not in mixedCase
Variable VestingContractWTTEST.account_data (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#26) is not in mixedCase
Variable VestingContractWTTEST.current_period (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#27) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Loop condition i < accounts.length (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#111) should use cached array length instead of referencing `length` member of the storage array.
 Loop condition i < periods.length (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#124) should use cached array length instead of referencing `length` member of the storage array.
 Loop condition i < accounts.length (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#133) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length

tokenFallback(address,uint256,bytes) should be declared external:
	- VestingContractWTTEST.tokenFallback(address,uint256,bytes) (0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol#162-164)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
./0x533411c7c401ee3a136ddc7a2fc95d6624c9e041.sol analyzed (2 contracts with 94 detectors), 19 result(s) found

real	0m1.684s
user	0m1.381s
sys	0m0.305s
