{"error": null, "issues": [{"address": 11, "code": "function A_Free_Ether_A_Day()  { // create the contract\r\n\r\n             the_stupid_guy = msg.sender;  \r\n             minimum_cash_proof_amount = 100 ether;\r\n\r\n    }", "contract": "A_Free_Ether_A_Day", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x9d31ff892f984a83e8b342a5ece8e8911ed909e0.sol", "function": "constructor", "lineno": 19, "max_gas_used": 131, "min_gas_used": 36, "severity": "Medium", "sourceMap": "566:164", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000c57fe5b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555068056bc75e2d631000006001819055505b5b6103168061006f6000396000f30060606040523615610060576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063100349fa146100695780631ff421951461007b578063904d5ed6146100a1578063c567e43a146100c1575b6100675b5b565b005b341561007157fe5b6100796100df565b005b341561008357fe5b61008b610179565b6040518082815260200191505060405180910390f35b34156100a957fe5b6100bf600480803590602001909190505061017f565b005b6100c96101e7565b6040518082815260200191505060405180910390f35b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561013c5760006000fd5b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b60015481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101dc5760006000fd5b806001819055505b50565b600060006000600060006001543410156102015760006000fd5b349350670de0b6b3a764000092503373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561026e5760009250600093505b82840191503073ffffffffffffffffffffffffffffffffffffffff16318211156102985760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051809050600060405180830381858888f1935050505090508015156102df5760006000fd5b8194505b50505050905600a165627a7a7230582049c5ea8de1dd4756490e4597ccfb2a62317dc77301842b099be3f612bab51b980029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}}, {"address": 112, "code": "function Good_Bye_World(){\r\n\t\r\n        if ( msg.sender != the_stupid_guy ) throw;\r\n        selfdestruct(the_stupid_guy); \r\n\t\t\r\n    }", "contract": "A_Free_Ether_A_Day", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0x9d31ff892f984a83e8b342a5ece8e8911ed909e0.sol", "function": "Good_Bye_World()", "lineno": 70, "max_gas_used": 195, "min_gas_used": 100, "severity": "Medium", "sourceMap": "2578:132", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000c57fe5b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555068056bc75e2d631000006001819055505b5b6103168061006f6000396000f30060606040523615610060576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063100349fa146100695780631ff421951461007b578063904d5ed6146100a1578063c567e43a146100c1575b6100675b5b565b005b341561007157fe5b6100796100df565b005b341561008357fe5b61008b610179565b6040518082815260200191505060405180910390f35b34156100a957fe5b6100bf600480803590602001909190505061017f565b005b6100c96101e7565b6040518082815260200191505060405180910390f35b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561013c5760006000fd5b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b60015481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101dc5760006000fd5b806001819055505b50565b600060006000600060006001543410156102015760006000fd5b349350670de0b6b3a764000092503373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561026e5760009250600093505b82840191503073ffffffffffffffffffffffffffffffffffffffff16318211156102985760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051809050600060405180830381858888f1935050505090508015156102df5760006000fd5b8194505b50505050905600a165627a7a7230582049c5ea8de1dd4756490e4597ccfb2a62317dc77301842b099be3f612bab51b980029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x100349fa", "input": "0x100349fa", "name": "Good_Bye_World()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x1"}]}}, {"address": 715, "code": "msg.sender.send(payout)", "contract": "A_Free_Ether_A_Day", "description": "Any sender can withdraw Ether from the contract account.\nArbitrary senders other than the contract creator can profitably extract Ether from the contract account. Verify the business logic carefully and make sure that appropriate security controls are in place to prevent unexpected loss of funds.", "filename": "./0x9d31ff892f984a83e8b342a5ece8e8911ed909e0.sol", "function": "show_me_the_money()", "lineno": 60, "max_gas_used": 38423, "min_gas_used": 3531, "severity": "High", "sourceMap": "2412:23", "swc-id": "105", "title": "Unprotected Ether Withdrawal", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x56bc75e2d63100000", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x56bc75e2d63100000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000c57fe5b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555068056bc75e2d631000006001819055505b5b6103168061006f6000396000f30060606040523615610060576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063100349fa146100695780631ff421951461007b578063904d5ed6146100a1578063c567e43a146100c1575b6100675b5b565b005b341561007157fe5b6100796100df565b005b341561008357fe5b61008b610179565b6040518082815260200191505060405180910390f35b34156100a957fe5b6100bf600480803590602001909190505061017f565b005b6100c96101e7565b6040518082815260200191505060405180910390f35b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561013c5760006000fd5b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b60015481565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101dc5760006000fd5b806001819055505b50565b600060006000600060006001543410156102015760006000fd5b349350670de0b6b3a764000092503373ffffffffffffffffffffffffffffffffffffffff16600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561026e5760009250600093505b82840191503073ffffffffffffffffffffffffffffffffffffffff16318211156102985760006000fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051809050600060405180830381858888f1935050505090508015156102df5760006000fd5b8194505b50505050905600a165627a7a7230582049c5ea8de1dd4756490e4597ccfb2a62317dc77301842b099be3f612bab51b980029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xc567e43a", "input": "0xc567e43a", "name": "show_me_the_money()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x56bc75e2d63100000"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xc567e43a", "input": "0xc567e43a", "name": "show_me_the_money()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x56bc75e2d63100000"}]}}], "success": true}
