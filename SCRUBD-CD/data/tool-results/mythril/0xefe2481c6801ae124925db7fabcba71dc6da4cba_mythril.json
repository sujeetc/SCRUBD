{"error": null, "issues": [{"address": 11, "code": "contract XG4KCrowdFunding {\r\n    // data structure to hold information about campaign contributors\r\n    struct Funder {\r\n        address addr;\r\n        uint amount;\r\n    }\r\n    // Campaign data structure\r\n    struct Campaign {\r\n        address beneficiary;\r\n        uint fundingGoal;\r\n        uint numFunders;\r\n        uint amount;\r\n        uint deadline;\r\n        mapping (uint => Funder) funders;\r\n    }\r\n    //Declares a state variable 'numCampaigns'\r\n    uint numCampaigns;\r\n    //Creates a mapping of Campaign datatypes\r\n    mapping (uint => Campaign) campaigns;\r\n    //first function sets up a new campaign\r\n    function newCampaign(address beneficiary, uint goal, uint deadline) returns (uint campaignID) {\r\n        campaignID = numCampaigns++; // campaignID is return variable\r\n        Campaign c = campaigns[campaignID]; // assigns reference\r\n        c.beneficiary = beneficiary;\r\n        c.fundingGoal = goal;\r\n        c.deadline = block.number + deadline;\r\n    }\r\n    //function to contributes to the campaign\r\n    function contribute(uint campaignID) {\r\n        Campaign c = campaigns[campaignID];\r\n        Funder f = c.funders[c.numFunders++];\r\n        f.addr = msg.sender;\r\n        f.amount = msg.value;\r\n        c.amount += f.amount;\r\n    }\r\n    // checks if the goal or time limit has been reached and ends the campaign\r\n    function checkGoalReached(uint campaignID) returns (bool reached) {\r\n        Campaign c = campaigns[campaignID];\r\n        if (c.amount >= c.fundingGoal){\r\n            c.beneficiary.send(c.amount);\r\n            clean(campaignID);\r\n        \treturn true;\r\n        }\r\n        if (c.deadline <= block.number){\r\n            uint j = 0;\r\n            uint n = c.numFunders;\r\n            while (j <= n){\r\n                c.funders[j].addr.send(c.funders[j].amount);\r\n                j++;\r\n            }\r\n            clean(campaignID);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    function clean(uint id) private{\r\n    \tCampaign c = campaigns[id];\r\n    \tuint i = 0;\r\n    \tuint n = c.numFunders;\r\n    \tc.amount = 0;\r\n        c.beneficiary = 0;\r\n        c.fundingGoal = 0;\r\n        c.deadline = 0;\r\n        c.numFunders = 0;\r\n        while (i <= n){\r\n            c.funders[i].addr = 0;\r\n            c.funders[i].amount = 0;\r\n            i++;\r\n        }\r\n    }\r\n}", "contract": "XG4KCrowdFunding", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0xefe2481c6801ae124925db7fabcba71dc6da4cba.sol", "function": "constructor", "lineno": 2, "max_gas_used": 131, "min_gas_used": 36, "severity": "Medium", "sourceMap": "25:2318:0:-", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000c57fe5b5b6105058061001c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635b2329d414610051578063c1cbbca714610089578063df175e9b146100a9575bfe5b341561005957fe5b61006f6004808035906020019091905050610105565b604051808215151515815260200191505060405180910390f35b341561009157fe5b6100a7600480803590602001909190505061027d565b005b34156100b157fe5b6100ef600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610327565b6040518082815260200191505060405180910390f35b6000600060006000600160008681526020019081526020016000209250826001015483600301541015156101a6578260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc84600301549081150290604051809050600060405180830381858888f193505050505061019d856103b3565b60019350610275565b4383600401541115156102705760009150826002015490505b808211151561025e5782600501600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc846005016000858152602001908152602001600020600101549081150290604051809050600060405180830381858888f193505050505081806001019250506101bf565b610267856103b3565b60019350610275565b600093505b505050919050565b600060006001600084815260200190815260200160002091508160050160008360020160008154809291906001019190505581526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348160010181905550806001015482600301600082825401925050819055505b505050565b6000600060006000815480929190600101919050559150600160008381526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816001018190555082430181600401819055505b509392505050565b60006000600060016000858152602001908152602001600020925060009150826002015490506000836003018190555060008360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836001018190555060008360040181905550600083600201819055505b80821115156104d257600083600501600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836005016000848152602001908152602001600020600101819055508180600101925050610446565b5b505050505600a165627a7a723058202adad7fd08ad22ade2fbaaec8ab9df22ca465137daa5d3bdb3c43c5b788eedc30029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}}, {"address": 88, "code": "function checkGoalReached(uint campaignID) returns (bool reached) {\r\n        Campaign c = campaigns[campaignID];\r\n        if (c.amount >= c.fundingGoal){\r\n            c.beneficiary.send(c.amount);\r\n            clean(campaignID);\r\n        \treturn true;\r\n        }\r\n        if (c.deadline <= block.number){\r\n            uint j = 0;\r\n            uint n = c.numFunders;\r\n            while (j <= n){\r\n                c.funders[j].addr.send(c.funders[j].amount);\r\n                j++;\r\n            }\r\n            clean(campaignID);\r\n            return true;\r\n        }\r\n        return false;\r\n    }", "contract": "XG4KCrowdFunding", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0xefe2481c6801ae124925db7fabcba71dc6da4cba.sol", "function": "checkGoalReached(uint256)", "lineno": 38, "max_gas_used": 177, "min_gas_used": 82, "severity": "Medium", "sourceMap": "1366:592", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000c57fe5b5b6105058061001c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635b2329d414610051578063c1cbbca714610089578063df175e9b146100a9575bfe5b341561005957fe5b61006f6004808035906020019091905050610105565b604051808215151515815260200191505060405180910390f35b341561009157fe5b6100a7600480803590602001909190505061027d565b005b34156100b157fe5b6100ef600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610327565b6040518082815260200191505060405180910390f35b6000600060006000600160008681526020019081526020016000209250826001015483600301541015156101a6578260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc84600301549081150290604051809050600060405180830381858888f193505050505061019d856103b3565b60019350610275565b4383600401541115156102705760009150826002015490505b808211151561025e5782600501600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc846005016000858152602001908152602001600020600101549081150290604051809050600060405180830381858888f193505050505081806001019250506101bf565b610267856103b3565b60019350610275565b600093505b505050919050565b600060006001600084815260200190815260200160002091508160050160008360020160008154809291906001019190505581526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348160010181905550806001015482600301600082825401925050819055505b505050565b6000600060006000815480929190600101919050559150600160008381526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816001018190555082430181600401819055505b509392505050565b60006000600060016000858152602001908152602001600020925060009150826002015490506000836003018190555060008360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836001018190555060008360040181905550600083600201819055505b80821115156104d257600083600501600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836005016000848152602001908152602001600020600101819055508180600101925050610446565b5b505050505600a165627a7a723058202adad7fd08ad22ade2fbaaec8ab9df22ca465137daa5d3bdb3c43c5b788eedc30029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x5b2329d4", "input": "0x5b2329d4", "name": "checkGoalReached(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x1"}]}}, {"address": 398, "code": "c.beneficiary.send(c.amount)", "contract": "XG4KCrowdFunding", "description": "The value of the call is dependent on balance or storage write\nThis can lead to race conditions. An attacker may be able to run a transaction after our transaction which can change the value of the call", "filename": "./0xefe2481c6801ae124925db7fabcba71dc6da4cba.sol", "function": "checkGoalReached(uint256)", "lineno": 41, "max_gas_used": 218782, "min_gas_used": 42470, "severity": "Medium", "sourceMap": "1533:28", "swc-id": "114", "title": "Transaction Order Dependence", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000c57fe5b5b6105058061001c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635b2329d414610051578063c1cbbca714610089578063df175e9b146100a9575bfe5b341561005957fe5b61006f6004808035906020019091905050610105565b604051808215151515815260200191505060405180910390f35b341561009157fe5b6100a7600480803590602001909190505061027d565b005b34156100b157fe5b6100ef600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610327565b6040518082815260200191505060405180910390f35b6000600060006000600160008681526020019081526020016000209250826001015483600301541015156101a6578260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc84600301549081150290604051809050600060405180830381858888f193505050505061019d856103b3565b60019350610275565b4383600401541115156102705760009150826002015490505b808211151561025e5782600501600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc846005016000858152602001908152602001600020600101549081150290604051809050600060405180830381858888f193505050505081806001019250506101bf565b610267856103b3565b60019350610275565b600093505b505050919050565b600060006001600084815260200190815260200160002091508160050160008360020160008154809291906001019190505581526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348160010181905550806001015482600301600082825401925050819055505b505050565b6000600060006000815480929190600101919050559150600160008381526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816001018190555082430181600401819055505b509392505050565b60006000600060016000858152602001908152602001600020925060009150826002015490506000836003018190555060008360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836001018190555060008360040181905550600083600201819055505b80821115156104d257600083600501600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836005016000848152602001908152602001600020600101819055508180600101925050610446565b5b505050505600a165627a7a723058202adad7fd08ad22ade2fbaaec8ab9df22ca465137daa5d3bdb3c43c5b788eedc30029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x5b2329d4", "input": "0x5b2329d4", "name": "checkGoalReached(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 398, "code": "c.beneficiary.send(c.amount)", "contract": "XG4KCrowdFunding", "description": "The return value of a message call is not checked.\nExternal calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.", "filename": "./0xefe2481c6801ae124925db7fabcba71dc6da4cba.sol", "function": "checkGoalReached(uint256)", "lineno": 41, "max_gas_used": 270612, "min_gas_used": 53590, "severity": "Medium", "sourceMap": "1533:28", "swc-id": "104", "title": "Unchecked return value from external call.", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000c57fe5b5b6105058061001c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635b2329d414610051578063c1cbbca714610089578063df175e9b146100a9575bfe5b341561005957fe5b61006f6004808035906020019091905050610105565b604051808215151515815260200191505060405180910390f35b341561009157fe5b6100a7600480803590602001909190505061027d565b005b34156100b157fe5b6100ef600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610327565b6040518082815260200191505060405180910390f35b6000600060006000600160008681526020019081526020016000209250826001015483600301541015156101a6578260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc84600301549081150290604051809050600060405180830381858888f193505050505061019d856103b3565b60019350610275565b4383600401541115156102705760009150826002015490505b808211151561025e5782600501600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc846005016000858152602001908152602001600020600101549081150290604051809050600060405180830381858888f193505050505081806001019250506101bf565b610267856103b3565b60019350610275565b600093505b505050919050565b600060006001600084815260200190815260200160002091508160050160008360020160008154809291906001019190505581526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348160010181905550806001015482600301600082825401925050819055505b505050565b6000600060006000815480929190600101919050559150600160008381526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816001018190555082430181600401819055505b509392505050565b60006000600060016000858152602001908152602001600020925060009150826002015490506000836003018190555060008360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836001018190555060008360040181905550600083600201819055505b80821115156104d257600083600501600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836005016000848152602001908152602001600020600101819055508180600101925050610446565b5b505050505600a165627a7a723058202adad7fd08ad22ade2fbaaec8ab9df22ca465137daa5d3bdb3c43c5b788eedc30029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xc1cbbca7", "input": "0xc1cbbca7", "name": "contribute(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x5b2329d4", "input": "0x5b2329d4", "name": "checkGoalReached(uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}, {"address": 435, "code": "if (c.deadline <= block.number){\r\n            uint j = 0;\r\n            uint n = c.numFunders;\r\n            while (j <= n){\r\n                c.funders[j].addr.send(c.funders[j].amount);\r\n                j++;\r\n            }\r\n            clean(campaignID);\r\n            return true;\r\n        }", "contract": "XG4KCrowdFunding", "description": "A control flow decision is made based on The block.number environment variable.\nThe block.number environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.", "filename": "./0xefe2481c6801ae124925db7fabcba71dc6da4cba.sol", "function": "checkGoalReached(uint256)", "lineno": 45, "max_gas_used": 2979, "min_gas_used": 2694, "severity": "Low", "sourceMap": "1638:290", "swc-id": "120", "title": "Dependence on predictable environment variable", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000c57fe5b5b6105058061001c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635b2329d414610051578063c1cbbca714610089578063df175e9b146100a9575bfe5b341561005957fe5b61006f6004808035906020019091905050610105565b604051808215151515815260200191505060405180910390f35b341561009157fe5b6100a7600480803590602001909190505061027d565b005b34156100b157fe5b6100ef600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610327565b6040518082815260200191505060405180910390f35b6000600060006000600160008681526020019081526020016000209250826001015483600301541015156101a6578260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc84600301549081150290604051809050600060405180830381858888f193505050505061019d856103b3565b60019350610275565b4383600401541115156102705760009150826002015490505b808211151561025e5782600501600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc846005016000858152602001908152602001600020600101549081150290604051809050600060405180830381858888f193505050505081806001019250506101bf565b610267856103b3565b60019350610275565b600093505b505050919050565b600060006001600084815260200190815260200160002091508160050160008360020160008154809291906001019190505581526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348160010181905550806001015482600301600082825401925050819055505b505050565b6000600060006000815480929190600101919050559150600160008381526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816001018190555082430181600401819055505b509392505050565b60006000600060016000858152602001908152602001600020925060009150826002015490506000836003018190555060008360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836001018190555060008360040181905550600083600201819055505b80821115156104d257600083600501600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836005016000848152602001908152602001600020600101819055508180600101925050610446565b5b505050505600a165627a7a723058202adad7fd08ad22ade2fbaaec8ab9df22ca465137daa5d3bdb3c43c5b788eedc30029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xdf175e9b010101010101010101010101010101010101010101010101010101000000000102", "input": "0xdf175e9b010101010101010101010101010101010101010101010101010101000000000102", "name": "newCampaign(address,uint256,uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x5b2329d4", "input": "0x5b2329d4", "name": "checkGoalReached(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 587, "code": "c.funders[j].addr.send(c.funders[j].amount)", "contract": "XG4KCrowdFunding", "description": "The value of the call is dependent on balance or storage write\nThis can lead to race conditions. An attacker may be able to run a transaction after our transaction which can change the value of the call", "filename": "./0xefe2481c6801ae124925db7fabcba71dc6da4cba.sol", "function": "checkGoalReached(uint256)", "lineno": 49, "max_gas_used": 221075, "min_gas_used": 44383, "severity": "Medium", "sourceMap": "1778:43", "swc-id": "114", "title": "Transaction Order Dependence", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000c57fe5b5b6105058061001c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635b2329d414610051578063c1cbbca714610089578063df175e9b146100a9575bfe5b341561005957fe5b61006f6004808035906020019091905050610105565b604051808215151515815260200191505060405180910390f35b341561009157fe5b6100a7600480803590602001909190505061027d565b005b34156100b157fe5b6100ef600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610327565b6040518082815260200191505060405180910390f35b6000600060006000600160008681526020019081526020016000209250826001015483600301541015156101a6578260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc84600301549081150290604051809050600060405180830381858888f193505050505061019d856103b3565b60019350610275565b4383600401541115156102705760009150826002015490505b808211151561025e5782600501600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc846005016000858152602001908152602001600020600101549081150290604051809050600060405180830381858888f193505050505081806001019250506101bf565b610267856103b3565b60019350610275565b600093505b505050919050565b600060006001600084815260200190815260200160002091508160050160008360020160008154809291906001019190505581526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348160010181905550806001015482600301600082825401925050819055505b505050565b6000600060006000815480929190600101919050559150600160008381526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816001018190555082430181600401819055505b509392505050565b60006000600060016000858152602001908152602001600020925060009150826002015490506000836003018190555060008360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836001018190555060008360040181905550600083600201819055505b80821115156104d257600083600501600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836005016000848152602001908152602001600020600101819055508180600101925050610446565b5b505050505600a165627a7a723058202adad7fd08ad22ade2fbaaec8ab9df22ca465137daa5d3bdb3c43c5b788eedc30029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xdf175e9b000240800400001020400002000000000000000000000000000000000000100008", "input": "0xdf175e9b000240800400001020400002000000000000000000000000000000000000100008", "name": "newCampaign(address,uint256,uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x5b2329d4", "input": "0x5b2329d4", "name": "checkGoalReached(uint256)", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 587, "code": "c.funders[j].addr.send(c.funders[j].amount)", "contract": "XG4KCrowdFunding", "description": "The return value of a message call is not checked.\nExternal calls return a boolean value. If the callee halts with an exception, 'false' is returned and execution continues in the caller. The caller should check whether an exception happened and react accordingly to avoid unexpected behavior. For example it is often desirable to wrap external calls in require() so the transaction is reverted if the call fails.", "filename": "./0xefe2481c6801ae124925db7fabcba71dc6da4cba.sol", "function": "checkGoalReached(uint256)", "lineno": 49, "max_gas_used": 221075, "min_gas_used": 44383, "severity": "Medium", "sourceMap": "1778:43", "swc-id": "104", "title": "Unchecked return value from external call.", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x6060604052341561000c57fe5b5b6105058061001c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680635b2329d414610051578063c1cbbca714610089578063df175e9b146100a9575bfe5b341561005957fe5b61006f6004808035906020019091905050610105565b604051808215151515815260200191505060405180910390f35b341561009157fe5b6100a7600480803590602001909190505061027d565b005b34156100b157fe5b6100ef600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610327565b6040518082815260200191505060405180910390f35b6000600060006000600160008681526020019081526020016000209250826001015483600301541015156101a6578260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc84600301549081150290604051809050600060405180830381858888f193505050505061019d856103b3565b60019350610275565b4383600401541115156102705760009150826002015490505b808211151561025e5782600501600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc846005016000858152602001908152602001600020600101549081150290604051809050600060405180830381858888f193505050505081806001019250506101bf565b610267856103b3565b60019350610275565b600093505b505050919050565b600060006001600084815260200190815260200160002091508160050160008360020160008154809291906001019190505581526020019081526020016000209050338160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550348160010181905550806001015482600301600082825401925050819055505b505050565b6000600060006000815480929190600101919050559150600160008381526020019081526020016000209050848160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083816001018190555082430181600401819055505b509392505050565b60006000600060016000858152602001908152602001600020925060009150826002015490506000836003018190555060008360000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836001018190555060008360040181905550600083600201819055505b80821115156104d257600083600501600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000836005016000848152602001908152602001600020600101819055508180600101925050610446565b5b505050505600a165627a7a723058202adad7fd08ad22ade2fbaaec8ab9df22ca465137daa5d3bdb3c43c5b788eedc30029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xdf175e9b010101010101010101010101100000000000000000000040000100010201010280", "input": "0xdf175e9b010101010101010101010101100000000000000000000040000100010201010280", "name": "newCampaign(address,uint256,uint256)", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x5b2329d4", "input": "0x5b2329d4", "name": "checkGoalReached(uint256)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}]}}], "success": true}
