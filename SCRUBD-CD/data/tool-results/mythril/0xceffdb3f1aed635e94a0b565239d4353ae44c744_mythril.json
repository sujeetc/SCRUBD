{"error": null, "issues": [{"address": 266, "code": "contract BancorBuyer {\r\n  // Store the amount of ETH deposited or BNT owned by each account.\r\n  mapping (address => uint) public balances;\r\n  // Track whether the contract has bought the tokens yet.\r\n  bool public bought_tokens;\r\n  // Record the time the contract bought the tokens.\r\n  uint public time_bought;\r\n  \r\n  // The Bancor Token Sale address.\r\n  address sale = 0xBbc79794599b19274850492394004087cBf89710;\r\n  // Bancor Smart Token Contract address.\r\n  address token = 0x1F573D6Fb3F13d689FF844B4cE37794d79a7FF1C;\r\n  // The developer address.\r\n  address developer = 0x4e6A1c57CdBfd97e8efe831f8f4418b1F2A09e6e;\r\n  \r\n  // Withdraws all ETH deposited by the sender.\r\n  // Called to cancel a user's participation in the sale.\r\n  function withdraw(){\r\n    // Store the user's balance prior to withdrawal in a temporary variable.\r\n    uint amount = balances[msg.sender];\r\n    // Update the user's balance prior to sending ETH to prevent recursive call.\r\n    balances[msg.sender] = 0;\r\n    // Return the user's funds.  Throws on failure to prevent loss of funds.\r\n    msg.sender.transfer(amount);\r\n  }\r\n  \r\n  // Buys tokens in the crowdsale, callable by anyone.\r\n  function buy(){\r\n    // Transfer all funds to the Bancor crowdsale contract to buy tokens.\r\n    // Throws if the crowdsale hasn't started yet or has\r\n    // already completed, preventing loss of funds.\r\n    sale.transfer(this.balance);\r\n    // Record that the contract has bought the tokens.\r\n    bought_tokens = true;\r\n    // Record the time the contract bought the tokens.\r\n    time_bought = now;\r\n  }\r\n  \r\n  function () payable {\r\n    // Only allow deposits if the contract hasn't already purchased the tokens.\r\n    if (!bought_tokens) {\r\n      // Update records of deposited ETH to include the received amount.\r\n      balances[msg.sender] += msg.value;\r\n    }\r\n    // Withdraw the sender's tokens if the contract has already purchased them.\r\n    else {\r\n      // Store the user's BNT balance in a temporary variable (1 ETHWei -> 100 BNTWei).\r\n      uint amount = balances[msg.sender] * 100;\r\n      // Update the user's balance prior to sending BNT to prevent recursive call.\r\n      balances[msg.sender] = 0;\r\n      // No fee for withdrawing during the crowdsale.\r\n      uint fee = 0;\r\n      // 1% fee for withdrawing after the crowdsale has ended.\r\n      if (now > time_bought + 1 hours) {\r\n        fee = amount / 100;\r\n      }\r\n      // Transfer the tokens to the sender and the developer.\r\n      ERC20(token).transfer(msg.sender, amount - fee);\r\n      ERC20(token).transfer(developer, fee);\r\n      // Refund any ETH sent after the contract has already purchased tokens.\r\n      msg.sender.transfer(msg.value);\r\n    }\r\n  }\r\n}", "contract": "BancorBuyer", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "constructor", "lineno": 18, "max_gas_used": 78722, "min_gas_used": 17637, "severity": "Medium", "sourceMap": "316:2693", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x2", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x1"}]}}, {"address": 368, "code": "time_bought + 1 hours", "contract": "BancorBuyer", "description": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. ", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "fallback", "lineno": 71, "max_gas_used": 140194, "min_gas_used": 14523, "severity": "High", "sourceMap": ":21", "swc-id": "101", "title": "Integer Arithmetic Bugs", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x8000000", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xa6f2ae3a", "input": "0xa6f2ae3a", "name": "buy()", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00", "input": "0x00", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 375, "code": "if (now > time_bought + 1 hours) {\r\n        fee = amount / 100;\r\n      }", "contract": "BancorBuyer", "description": "A control flow decision is made based on The block.timestamp environment variable.\nThe block.timestamp environment variable is used to determine a control flow decision. Note that the values of variables like coinbase, gaslimit, block number and timestamp are predictable and can be manipulated by a malicious miner. Also keep in mind that attackers know hashes of earlier blocks. Don't use any of those environment variables as sources of randomness and be aware that use of these variables introduces a certain level of trust into miners.", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "fallback", "lineno": 71, "max_gas_used": 28547, "min_gas_used": 7742, "severity": "Low", "sourceMap": "2639:72", "swc-id": "116", "title": "Dependence on predictable environment variable", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x10000000000000000", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xa6f2ae3a", "input": "0xa6f2ae3a", "name": "buy()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x", "input": "0x", "name": "unknown", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "value": "0x0"}]}}, {"address": 626, "code": "token", "contract": "BancorBuyer", "description": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "fallback", "lineno": 76, "max_gas_used": 140194, "min_gas_used": 14523, "severity": "Low", "sourceMap": "2844:5", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xa6f2ae3a", "input": "0xa6f2ae3a", "name": "buy()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00", "input": "0x00", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}}, {"address": 688, "code": "developer", "contract": "BancorBuyer", "description": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "fallback", "lineno": 76, "max_gas_used": 140194, "min_gas_used": 14523, "severity": "Low", "sourceMap": "2860:9", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xa6f2ae3a", "input": "0xa6f2ae3a", "name": "buy()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00", "input": "0x00", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}}, {"address": 862, "code": "ERC20(token).transfer(developer, fee)", "contract": "BancorBuyer", "description": "Multiple calls are executed in the same transaction.\nThis call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\u2019re part of your own codebase).", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "fallback", "lineno": 76, "max_gas_used": 140194, "min_gas_used": 14523, "severity": "Low", "sourceMap": "2838:37", "swc-id": "113", "title": "Multiple Calls in a Single Transaction", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x10000000000000", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xa6f2ae3a", "input": "0xa6f2ae3a", "name": "buy()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00", "input": "0x00", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 862, "code": "ERC20(token).transfer(developer, fee)", "contract": "BancorBuyer", "description": "Write to persistent state following external call\nThe contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "fallback", "lineno": 76, "max_gas_used": 140194, "min_gas_used": 14523, "severity": "Low", "sourceMap": "2838:37", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xa6f2ae3a", "input": "0xa6f2ae3a", "name": "buy()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x00", "input": "0x00", "name": "unknown", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "value": "0x0"}]}}, {"address": 932, "code": "msg.sender.transfer(msg.value)", "contract": "BancorBuyer", "description": "Write to persistent state following external call\nThe contract account state is accessed after an external call to a fixed address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "fallback", "lineno": 78, "max_gas_used": 140061, "min_gas_used": 14390, "severity": "Low", "sourceMap": "2963:30", "swc-id": "107", "title": "State access after external call", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x1", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xa6f2ae3a", "input": "0xa6f2ae3a", "name": "buy()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x", "input": "0x", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}]}}, {"address": 960, "code": "mapping (address => uint) public balances", "contract": "BancorBuyer", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "balances(address)", "lineno": 20, "max_gas_used": 195, "min_gas_used": 100, "severity": "Medium", "sourceMap": "412:41", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x27e235e3", "input": "0x27e235e3", "name": "balances(address)", "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa", "resolved_input": null, "value": "0x1"}]}}, {"address": 1355, "code": "msg.sender.transfer(amount)", "contract": "BancorBuyer", "description": "The value of the call is dependent on balance or storage write\nThis can lead to race conditions. An attacker may be able to run a transaction after our transaction which can change the value of the call", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "withdraw()", "lineno": 41, "max_gas_used": 61620, "min_gas_used": 6959, "severity": "Medium", "sourceMap": "1383:27", "swc-id": "114", "title": "Transaction Order Dependence", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x3ccfd60b", "input": "0x3ccfd60b", "name": "withdraw()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 1367, "code": "function withdraw(){\r\n    // Store the user's balance prior to withdrawal in a temporary variable.\r\n    uint amount = balances[msg.sender];\r\n    // Update the user's balance prior to sending ETH to prevent recursive call.\r\n    balances[msg.sender] = 0;\r\n    // Return the user's funds.  Throws on failure to prevent loss of funds.\r\n    msg.sender.transfer(amount);\r\n  }", "contract": "BancorBuyer", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "withdraw()", "lineno": 35, "max_gas_used": 61607, "min_gas_used": 6946, "severity": "Medium", "sourceMap": "1047:369", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0x3ccfd60b", "input": "0x3ccfd60b", "name": "withdraw()", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "resolved_input": null, "value": "0x0"}]}}, {"address": 1499, "code": "sale.transfer(this.balance)", "contract": "BancorBuyer", "description": "The value of the call is dependent on balance or storage write\nThis can lead to race conditions. An attacker may be able to run a transaction after our transaction which can change the value of the call", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "buy()", "lineno": 49, "max_gas_used": 88361, "min_gas_used": 13420, "severity": "Medium", "sourceMap": "1687:27", "swc-id": "114", "title": "Transaction Order Dependence", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xa6f2ae3a", "input": "0xa6f2ae3a", "name": "buy()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}, {"address": 1511, "code": "function buy(){\r\n    // Transfer all funds to the Bancor crowdsale contract to buy tokens.\r\n    // Throws if the crowdsale hasn't started yet or has\r\n    // already completed, preventing loss of funds.\r\n    sale.transfer(this.balance);\r\n    // Record that the contract has bought the tokens.\r\n    bought_tokens = true;\r\n    // Record the time the contract bought the tokens.\r\n    time_bought = now;\r\n  }", "contract": "BancorBuyer", "description": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).", "filename": "./0xceffdb3f1aed635e94a0b565239d4353ae44c744.sol", "function": "buy()", "lineno": 45, "max_gas_used": 37140, "min_gas_used": 2529, "severity": "Medium", "sourceMap": "1480:403", "swc-id": "110", "title": "Exception State", "tx_sequence": {"initialState": {"accounts": {"0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}, "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {"balance": "0x0", "code": "", "nonce": 0, "storage": "{}"}}}, "steps": [{"address": "", "calldata": "", "input": "0x606060405273bbc79794599b19274850492394004087cbf89710600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550731f573d6fb3f13d689ff844b4ce37794d79a7ff1c600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550734e6a1c57cdbfd97e8efe831f8f4418b1f2a09e6e600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550341561010b57fe5b5b61063f8061011b6000396000f3006060604052361561006b576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327e235e3146103b95780633ccfd60b146104035780636360fc3f14610415578063a6f2ae3a1461043f578063c3dac9a114610451575b6103b75b60006000600160009054906101000a900460ff1615156100db5734600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055506103b2565b6064600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540291506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060009050610e10600254014211156101875760648281151561018357fe5b0490505b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb338385036000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561025357fe5b6102c65a03f1151561026157fe5b5050506040518051905050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b151561035857fe5b6102c65a03f1151561036657fe5b50505060405180519050503373ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051809050600060405180830381858888f1935050505015156103b157fe5b5b5b5050565b005b34156103c157fe5b6103ed600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610477565b6040518082815260200191505060405180910390f35b341561040b57fe5b61041361048f565b005b341561041d57fe5b61042561055c565b604051808215151515815260200191505060405180910390f35b341561044757fe5b61044f61056f565b005b341561045957fe5b61046161060d565b6040518082815260200191505060405180910390f35b60006020528060005260406000206000915090505481565b6000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051809050600060405180830381858888f19350505050151561055857fe5b5b50565b600160009054906101000a900460ff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051809050600060405180830381858888f1935050505015156105e857fe5b6001600160006101000a81548160ff021916908315150217905550426002819055505b565b600254815600a165627a7a72305820a1abe4c992b6f9e23f126c53c6515fb4e4a3d6e0c5209f2fdb4d507d8ab106af0029", "name": "unknown", "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe", "value": "0x0"}, {"address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f", "calldata": "0xa6f2ae3a", "input": "0xa6f2ae3a", "name": "buy()", "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef", "resolved_input": null, "value": "0x0"}]}}], "success": true}
