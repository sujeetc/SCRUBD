{
    "file_name": "dao_symex_path_15.json",
    "from_function": "non_buggy_multi_call_if_1",
    "to_function": "non_buggy_multi_call_if_1",
    "bug_type": "dao",
    "src_node": "\"BlockID: 356\nCall context: \nNone\nENTRY_POINT None\"",
    "dest_node": [
        "\"BlockID: 370\nCall context: \nNone\nTMP_9 := b\nb = b + 1\nTMP_10 = TMP_9 < 10\nTMP_11 = TMP_8 && TMP_10\nTMP_12 := b\nb = b + 1\nTMP_14(bool) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[] value:TMP_12 \""
    ],
    "executable_instructions": 86,
    "state_variable": "b",
    "error": "",
    "result": "SAT",
    "execution_details": "# using file \/ethereum-security\/manual_dataset\/sailfish\/dot-pdf\/dao_symex_path_15.json\n# attack type: range\n# solver type: z3\n# block execution bound: 10\n# verbose: #f\n# debug: #f\n# building structs\n# building global scope\n  > loading global blocks\n    > adding global block: 0x22@__GLOBAL__\n    > adding global block: 0x23@__GLOBAL__\n    > adding global block: 0x24@__GLOBAL__\n    > adding global block: 0x2f@__GLOBAL__\n    > adding global block: 0x30@__GLOBAL__\n    > adding global block: 0x31@__GLOBAL__\n    > adding global block: 0x3c@__GLOBAL__\n    > adding global block: 0x3d@__GLOBAL__\n    > adding global block: 0x3e@__GLOBAL__\n    > adding global block: 0x4a@__GLOBAL__\n    > adding global block: 0x4b@__GLOBAL__\n    > adding global block: 0x4c@__GLOBAL__\n    > adding global block: 0x5b@__GLOBAL__\n    > adding global block: 0x5c@__GLOBAL__\n    > adding global block: 0x5d@__GLOBAL__\n    > adding global block: 0x6b@__GLOBAL__\n    > adding global block: 0x6c@__GLOBAL__\n    > adding global block: 0x6d@__GLOBAL__\n    > adding global block: 0x7c@__GLOBAL__\n    > adding global block: 0x7d@__GLOBAL__\n    > adding global block: 0x7e@__GLOBAL__\n    > adding global block: 0x8c@__GLOBAL__\n    > adding global block: 0x8d@__GLOBAL__\n    > adding global block: 0x8e@__GLOBAL__\n    > adding global block: 0x97@__GLOBAL__\n    > adding global block: 0x98@__GLOBAL__\n    > adding global block: 0x99@__GLOBAL__\n    > adding global block: 0xa5@__GLOBAL__\n    > adding global block: 0xa6@__GLOBAL__\n    > adding global block: 0xa7@__GLOBAL__\n    > adding global block: 0xb3@__GLOBAL__\n    > adding global block: 0xb4@__GLOBAL__\n    > adding global block: 0xb5@__GLOBAL__\n    > adding global block: 0xc0@__GLOBAL__\n    > adding global block: 0xc1@__GLOBAL__\n    > adding global block: 0xc2@__GLOBAL__\n    > adding global block: 0xcd@__GLOBAL__\n    > adding global block: 0xce@__GLOBAL__\n    > adding global block: 0xcf@__GLOBAL__\n    > adding global block: 0xdc@__GLOBAL__\n    > adding global block: 0xdd@__GLOBAL__\n    > adding global block: 0xde@__GLOBAL__\n    > adding global block: 0xeb@__GLOBAL__\n    > adding global block: 0xec@__GLOBAL__\n    > adding global block: 0xed@__GLOBAL__\n  > start adding and initializing global variables\n    > declaring global variable: block\n    > initializing global variable: block\n    > declaring global variable: msg\n    > initializing global variable: msg\n\n    > declaring global variable: now\n    > initializing global variable: now\n    > declaring global variable: tx\n    > initializing global variable: tx\n    > declaring global variable: this\n    > initializing global variable: this\n\n    > declaring global variable: msg_sender\n    > initializing global variable: msg_sender\n\n    > declaring global variable: addmod\n    > initializing global variable: addmod\n    > declaring global variable: mulmod\n    > initializing global variable: mulmod\n    > declaring global variable: keccak\n    > initializing global variable: keccak\n    > declaring global variable: sha256\n    > initializing global variable: sha256\n    > declaring global variable: sha3\n    > initializing global variable: sha3\n    > declaring global variable: ripemd160\n    > initializing global variable: ripemd160\n    > declaring global variable: ecrecover\n    > initializing global variable: ecrecover\n    > declaring global variable: blockhash\n    > initializing global variable: blockhash\n    > declaring global variable: Acc\n    > initializing global variable: Acc\n    > declaring global variable: x\n    > initializing global variable: x\n    > declaring global variable: a\n    > initializing global variable: a\n    > declaring global variable: b\n    > initializing global variable: b\n    > declaring global variable: c\n    > initializing global variable: c\n    > declaring global variable: SimpleDAO\n    > initializing global variable: SimpleDAO\n# building ranges\n  > start adding range variables\n    > adding: x -> (0x2@__RANGE__ 0x3@__RANGE__ 0x7@__RANGE__ 0xd@__RANGE__ 0x14@__RANGE__ 0x1a@__RANGE__ 0x21@__RANGE__)\n    > adding: b -> (0x2@__RANGE__ 0x4@__RANGE__ 0x5@__RANGE__ 0x8@__RANGE__ 0x9@__RANGE__ 0xb@__RANGE__ 0x11@__RANGE__ 0x15@__RANGE__ 0x16@__RANGE__ 0x1e@__RANGE__)\n    > adding: a -> (0x2@__RANGE__ 0xe@__RANGE__ 0xf@__RANGE__ 0x1b@__RANGE__ 0x1c@__RANGE__)\n    > adding: c -> (0x2@__RANGE__ 0x18@__RANGE__)\n  > range entry addresses: (0x8@__RANGE__ 0x2@__RANGE__ 0x3@__RANGE__ 0x21@__RANGE__ 0xd@__RANGE__ 0x16@__RANGE__ 0x14@__RANGE__ 0x5@__RANGE__ 0x7@__RANGE__ 0x1b@__RANGE__ 0x4@__RANGE__ 0x9@__RANGE__ 0x15@__RANGE__ 0xf@__RANGE__ 0xe@__RANGE__ 0x18@__RANGE__ 0x1c@__RANGE__ 0x11@__RANGE__ 0x1e@__RANGE__ 0xb@__RANGE__ 0x1a@__RANGE__)\n  > loading range blocks\n    > adding range block: 0x1@__RANGE__\n    > adding range block: 0x2@__RANGE__\n    > adding range block: 0x3@__RANGE__\n    > adding range block: 0x5@__RANGE__\n    > adding range block: 0x7@__RANGE__\n    > adding range block: 0x6@__RANGE__\n    > adding range block: 0xb@__RANGE__\n    > adding range block: 0xc@__RANGE__\n    > adding range block: 0xa@__RANGE__\n    > adding range block: 0xd@__RANGE__\n    > adding range block: 0xf@__RANGE__\n    > adding range block: 0x11@__RANGE__\n    > adding range block: 0x12@__RANGE__\n    > adding range block: 0x13@__RANGE__\n    > adding range block: 0x10@__RANGE__\n    > adding range block: 0x14@__RANGE__\n    > adding range block: 0x16@__RANGE__\n    > adding range block: 0x18@__RANGE__\n    > adding range block: 0x19@__RANGE__\n    > adding range block: 0x17@__RANGE__\n    > adding range block: 0x1a@__RANGE__\n    > adding range block: 0x1c@__RANGE__\n    > adding range block: 0x1e@__RANGE__\n    > adding range block: 0x1f@__RANGE__\n    > adding range block: 0x20@__RANGE__\n    > adding range block: 0x1d@__RANGE__\n    > adding range block: 0x21@__RANGE__\n# building normal scopes\n  > root addr: 0xee\n  > dest addrs: (0xf7)\n  > loading normal blocks\n    > adding normal block: 0xee\n    > adding normal block: 0xef\n    > adding normal block: 0xf0\n    > adding normal block: 0xf1\n    > adding normal block: 0xf2\n    > adding normal block: 0xf3\n    > adding normal block: 0xf4\n    > adding normal block: 0xf6\n    > adding normal block: 0xf7\n    > adding normal block: 0xf5\n# start interpretation of normal blocks...\n\n# asserts size: 8\n# using solver: #<z3>\n# result: #t\n"
}