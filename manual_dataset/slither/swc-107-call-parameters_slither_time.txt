'solc --version' running
'solc ./swc-107-call-parameters.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/manual_dataset' running

SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(a)()) (swc-107-call-parameters.sol#25)
SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(amount + a)()) (swc-107-call-parameters.sol#39)
SimpleDAO.withdraw_call_2(uint256) (swc-107-call-parameters.sol#49-52) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(amount + e)()) (swc-107-call-parameters.sol#50)
SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(amount)()) (swc-107-call-parameters.sol#60)
SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(amount)()) (swc-107-call-parameters.sol#80)
SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#103)
SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#116)
SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#125)
SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174) sends eth to arbitrary user
	Dangerous calls:
	- success = msg.sender.call.value(b)() (swc-107-call-parameters.sol#166)
SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#184)
SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#196)
SimpleDAO.test() (swc-107-call-parameters.sol#200-211) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#205)
SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#219)
SimpleDAO.testz() (swc-107-call-parameters.sol#228-239) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#233)
SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#247)
SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(x)()) (swc-107-call-parameters.sol#270)
SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#283)
SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#291)
SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#300)
SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#314)
SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#332)
SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#337)
SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.send(amount + a)) (swc-107-call-parameters.sol#344)
SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(amount + a) (swc-107-call-parameters.sol#353)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Reentrancy in SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174):
	External calls:
	- success = msg.sender.call.value(b)() (swc-107-call-parameters.sol#166)
	State variables written after the call(s):
	- x = x - 10 (swc-107-call-parameters.sol#170)
	SimpleDAO.x (swc-107-call-parameters.sol#19) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.x (swc-107-call-parameters.sol#19)
Reentrancy in SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186):
	External calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#184)
	State variables written after the call(s):
	- d = d + 10 (swc-107-call-parameters.sol#185)
	SimpleDAO.d (swc-107-call-parameters.sol#12) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.d (swc-107-call-parameters.sol#12)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272):
	External calls:
	- require(bool)(msg.sender.call.value(x)()) (swc-107-call-parameters.sol#270)
	State variables written after the call(s):
	- a = a - 1 (swc-107-call-parameters.sol#271)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198):
	External calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#196)
	State variables written after the call(s):
	- a = a - 10 (swc-107-call-parameters.sol#197)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30):
	External calls:
	- require(bool)(msg.sender.call.value(a)()) (swc-107-call-parameters.sol#25)
	State variables written after the call(s):
	- d = 0 (swc-107-call-parameters.sol#29)
	SimpleDAO.d (swc-107-call-parameters.sol#12) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.d (swc-107-call-parameters.sol#12)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.test() (swc-107-call-parameters.sol#200-211):
	External calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#205)
	State variables written after the call(s):
	- a = a (swc-107-call-parameters.sol#206)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.testz() (swc-107-call-parameters.sol#228-239):
	External calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#233)
	State variables written after the call(s):
	- a = a (swc-107-call-parameters.sol#234)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
	- a = a - 1 (swc-107-call-parameters.sol#237)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225):
	External calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#219)
	State variables written after the call(s):
	- a = a (swc-107-call-parameters.sol#220)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253):
	External calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#247)
	State variables written after the call(s):
	- a = a (swc-107-call-parameters.sol#248)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
	- a = a - 1 (swc-107-call-parameters.sol#251)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
	- z = a (swc-107-call-parameters.sol#252)
	SimpleDAO.z (swc-107-call-parameters.sol#14) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.z (swc-107-call-parameters.sol#14)
Reentrancy in SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47):
	External calls:
	- require(bool)(msg.sender.call.value(amount + a)()) (swc-107-call-parameters.sol#39)
	State variables written after the call(s):
	- a -= amount (swc-107-call-parameters.sol#44)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
	- d = d - 5 (swc-107-call-parameters.sol#40)
	SimpleDAO.d (swc-107-call-parameters.sol#12) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.d (swc-107-call-parameters.sol#12)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.withdraw_call_2(uint256) (swc-107-call-parameters.sol#49-52):
	External calls:
	- require(bool)(msg.sender.call.value(amount + e)()) (swc-107-call-parameters.sol#50)
	State variables written after the call(s):
	- e = e + 10 (swc-107-call-parameters.sol#51)
	SimpleDAO.e (swc-107-call-parameters.sol#13) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.e (swc-107-call-parameters.sol#13)
	- SimpleDAO.withdraw_call_2(uint256) (swc-107-call-parameters.sol#49-52)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
Reentrancy in SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73):
	External calls:
	- require(bool)(msg.sender.call.value(amount)()) (swc-107-call-parameters.sol#60)
	State variables written after the call(s):
	- c = c + 10 (swc-107-call-parameters.sol#70)
	SimpleDAO.c (swc-107-call-parameters.sol#11) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.c (swc-107-call-parameters.sol#11)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93):
	External calls:
	- require(bool)(msg.sender.call.value(amount)()) (swc-107-call-parameters.sol#80)
	State variables written after the call(s):
	- c = c + 10 (swc-107-call-parameters.sol#90)
	SimpleDAO.c (swc-107-call-parameters.sol#11) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.c (swc-107-call-parameters.sol#11)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334):
	External calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#332)
	State variables written after the call(s):
	- a = d + 10 (swc-107-call-parameters.sol#333)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340):
	External calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#337)
	State variables written after the call(s):
	- c = d + 10 (swc-107-call-parameters.sol#339)
	SimpleDAO.c (swc-107-call-parameters.sol#11) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.c (swc-107-call-parameters.sol#11)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106):
	External calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#103)
	State variables written after the call(s):
	- a = a + 10 (swc-107-call-parameters.sol#105)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119):
	External calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#116)
	State variables written after the call(s):
	- a = a + 10 (swc-107-call-parameters.sol#118)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286):
	External calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#283)
	State variables written after the call(s):
	- c = a + 10 (swc-107-call-parameters.sol#285)
	SimpleDAO.c (swc-107-call-parameters.sol#11) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.c (swc-107-call-parameters.sol#11)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293):
	External calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#291)
	State variables written after the call(s):
	- a -- (swc-107-call-parameters.sol#290)
	SimpleDAO.a (swc-107-call-parameters.sol#9) can be used in cross function reentrancies:
	- SimpleDAO.a (swc-107-call-parameters.sol#9)
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186)
	- SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30)
	- SimpleDAO.test() (swc-107-call-parameters.sol#200-211)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348)
	- SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302):
	External calls:
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#300)
	State variables written after the call(s):
	- c = c - 10 (swc-107-call-parameters.sol#299)
	SimpleDAO.c (swc-107-call-parameters.sol#11) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.c (swc-107-call-parameters.sol#11)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reentrancy in SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317):
	External calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#314)
	State variables written after the call(s):
	- c = a + 10 (swc-107-call-parameters.sol#316)
	SimpleDAO.c (swc-107-call-parameters.sol#11) can be used in cross function reentrancies:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
	- SimpleDAO.c (swc-107-call-parameters.sol#11)
	- SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198)
	- SimpleDAO.testz() (swc-107-call-parameters.sol#228-239)
	- SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253)
	- SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47)
	- SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73)
	- SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93)
	- SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334)
	- SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340)
	- SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126)
	- SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106)
	- SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119)
	- SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286)
	- SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293)
	- SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302)
	- SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

SimpleDAO.n (swc-107-call-parameters.sol#16) is never initialized. It is used in:
	- SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables

SimpleDAO.b (swc-107-call-parameters.sol#10) is written in both
	b = b - 10 (swc-107-call-parameters.sol#217)
	b = a (swc-107-call-parameters.sol#218)
SimpleDAO.b (swc-107-call-parameters.sol#10) is written in both
	b = b - 10 (swc-107-call-parameters.sol#245)
	b = a (swc-107-call-parameters.sol#246)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#write-after-write

SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293) has external calls inside a loop: require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#291)
SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302) has external calls inside a loop: require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#300)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation/#calls-inside-a-loop

Reentrancy in SimpleDAO.testz() (swc-107-call-parameters.sol#228-239):
	External calls:
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#233)
	State variables written after the call(s):
	- z = a (swc-107-call-parameters.sol#238)
Reentrancy in SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47):
	External calls:
	- require(bool)(msg.sender.call.value(amount + a)()) (swc-107-call-parameters.sol#39)
	State variables written after the call(s):
	- b = b - 10 (swc-107-call-parameters.sol#46)
Reentrancy in SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73):
	External calls:
	- require(bool)(msg.sender.call.value(amount)()) (swc-107-call-parameters.sol#60)
	State variables written after the call(s):
	- e = e + 10 (swc-107-call-parameters.sol#67)
	- z = z + 45 (swc-107-call-parameters.sol#69)
Reentrancy in SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93):
	External calls:
	- require(bool)(msg.sender.call.value(amount)()) (swc-107-call-parameters.sol#80)
	State variables written after the call(s):
	- e = e + 10 (swc-107-call-parameters.sol#87)
	- z = z + 45 (swc-107-call-parameters.sol#89)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293) has costly operations inside a loop:
	- a -- (swc-107-call-parameters.sol#290)
SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302) has costly operations inside a loop:
	- c = c - 10 (swc-107-call-parameters.sol#299)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#costly-operations-inside-a-loop

Version constraint 0.4.24 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData.
It is used by:
	- 0.4.24 (swc-107-call-parameters.sol#6)
solc-0.4.24 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30):
	- require(bool)(msg.sender.call.value(a)()) (swc-107-call-parameters.sol#25)
Low level call in SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47):
	- require(bool)(msg.sender.call.value(amount + a)()) (swc-107-call-parameters.sol#39)
Low level call in SimpleDAO.withdraw_call_2(uint256) (swc-107-call-parameters.sol#49-52):
	- require(bool)(msg.sender.call.value(amount + e)()) (swc-107-call-parameters.sol#50)
Low level call in SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73):
	- require(bool)(msg.sender.call.value(amount)()) (swc-107-call-parameters.sol#60)
Low level call in SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93):
	- require(bool)(msg.sender.call.value(amount)()) (swc-107-call-parameters.sol#80)
Low level call in SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106):
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#103)
Low level call in SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119):
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#116)
Low level call in SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126):
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#125)
Low level call in SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174):
	- success = msg.sender.call.value(b)() (swc-107-call-parameters.sol#166)
Low level call in SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186):
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#184)
Low level call in SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198):
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#196)
Low level call in SimpleDAO.test() (swc-107-call-parameters.sol#200-211):
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#205)
Low level call in SimpleDAO.testzz() (swc-107-call-parameters.sol#214-225):
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#219)
Low level call in SimpleDAO.testz() (swc-107-call-parameters.sol#228-239):
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#233)
Low level call in SimpleDAO.testzzz() (swc-107-call-parameters.sol#242-253):
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#247)
Low level call in SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272):
	- require(bool)(msg.sender.call.value(x)()) (swc-107-call-parameters.sol#270)
Low level call in SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286):
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#283)
Low level call in SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293):
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#291)
Low level call in SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302):
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#300)
Low level call in SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317):
	- require(bool)(msg.sender.call.value(b)()) (swc-107-call-parameters.sol#314)
Low level call in SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334):
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#332)
Low level call in SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340):
	- require(bool)(msg.sender.call.value(c)()) (swc-107-call-parameters.sol#337)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function SimpleDAO.non_reentrant() (swc-107-call-parameters.sol#22-30) is not in mixedCase
Function SimpleDAO.withdraw_call(uint256) (swc-107-call-parameters.sol#33-47) is not in mixedCase
Function SimpleDAO.withdraw_call_2(uint256) (swc-107-call-parameters.sol#49-52) is not in mixedCase
Function SimpleDAO.withdraw_call_3(uint256) (swc-107-call-parameters.sol#55-73) is not in mixedCase
Function SimpleDAO.withdraw_call_3z(uint256) (swc-107-call-parameters.sol#75-93) is not in mixedCase
Function SimpleDAO.withdraw_call_if() (swc-107-call-parameters.sol#95-106) is not in mixedCase
Function SimpleDAO.withdraw_call_ifz() (swc-107-call-parameters.sol#108-119) is not in mixedCase
Function SimpleDAO.withdraw_call_else() (swc-107-call-parameters.sol#121-126) is not in mixedCase
Function SimpleDAO.buggy_multi_dep() (swc-107-call-parameters.sol#132-174) is not in mixedCase
Function SimpleDAO.buggy_require_1() (swc-107-call-parameters.sol#178-186) is not in mixedCase
Function SimpleDAO.non_buggy_1() (swc-107-call-parameters.sol#190-198) is not in mixedCase
Function SimpleDAO.buggy_wbc_1() (swc-107-call-parameters.sol#263-272) is not in mixedCase
Function SimpleDAO.withdraw_while_loop() (swc-107-call-parameters.sol#277-286) is not in mixedCase
Function SimpleDAO.withdraw_while_loop_2() (swc-107-call-parameters.sol#287-293) is not in mixedCase
Function SimpleDAO.withdraw_while_loop_3() (swc-107-call-parameters.sol#296-302) is not in mixedCase
Function SimpleDAO.withdraw_while_loopz() (swc-107-call-parameters.sol#306-317) is not in mixedCase
Function SimpleDAO.withdraw_call_4() (swc-107-call-parameters.sol#329-334) is not in mixedCase
Function SimpleDAO.withdraw_call_5() (swc-107-call-parameters.sol#335-340) is not in mixedCase
Function SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348) is not in mixedCase
Function SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in SimpleDAO.withdraw_send(uint256) (swc-107-call-parameters.sol#342-348):
	External calls:
	- require(bool)(msg.sender.send(amount + a)) (swc-107-call-parameters.sol#344)
	State variables written after the call(s):
	- a -= amount (swc-107-call-parameters.sol#345)
	- b = b - 10 (swc-107-call-parameters.sol#347)
Reentrancy in SimpleDAO.withdraw_transfer(uint256) (swc-107-call-parameters.sol#351-357):
	External calls:
	- msg.sender.transfer(amount + a) (swc-107-call-parameters.sol#353)
	State variables written after the call(s):
	- a -= amount (swc-107-call-parameters.sol#354)
	- b = b - 10 (swc-107-call-parameters.sol#356)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

SimpleDAO.n (swc-107-call-parameters.sol#16) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
./swc-107-call-parameters.sol analyzed (1 contracts with 94 detectors), 103 result(s) found

real	0m2.784s
user	0m2.627s
sys	0m0.160s
