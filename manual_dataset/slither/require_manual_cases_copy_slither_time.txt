'solc --version' running
'solc ./require_manual_cases_copy.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/manual_dataset' running
Compilation warnings/errors on ./require_manual_cases_copy.sol:
./require_manual_cases_copy.sol:113:9: Warning: Return value of low-level calls not used.
        msg.sender.call.value(b)();
        ^------------------------^
./require_manual_cases_copy.sol:123:9: Warning: Return value of low-level calls not used.
        msg.sender.call.value(b)();
        ^------------------------^
./require_manual_cases_copy.sol:133:9: Warning: Return value of low-level calls not used.
        msg.sender.call.value(b)();
        ^------------------------^
./require_manual_cases_copy.sol:141:9: Warning: Return value of low-level calls not used.
        msg.sender.call.value(b)();
        ^------------------------^
./require_manual_cases_copy.sol:155:9: Warning: Return value of low-level calls not used.
        msg.sender.call.value(z)();
        ^------------------------^
./require_manual_cases_copy.sol:169:9: Warning: Return value of low-level calls not used.
        msg.sender.call.value(b)();
        ^------------------------^
./require_manual_cases_copy.sol:179:9: Warning: Return value of low-level calls not used.
        msg.sender.call.value(b)();     // c will get updated if reentrant calls set a greater than 50
        ^------------------------^
./require_manual_cases_copy.sol:192:9: Warning: Return value of low-level calls not used.
        msg.sender.call.value(b)();
        ^------------------------^
./require_manual_cases_copy.sol:206:9: Warning: Return value of low-level calls not used.
        msg.sender.call.value(b)();
        ^------------------------^
./require_manual_cases_copy.sol:217:13: Warning: Return value of low-level calls not used.
            msg.sender.call.value(b)();
            ^------------------------^


SimpleDAO.slither_fn_1() (require_manual_cases_copy.sol#64-67) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(b ++)()) (require_manual_cases_copy.sol#66)
SimpleDAO.bug_require() (require_manual_cases_copy.sol#69-74) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(b)()) (require_manual_cases_copy.sol#72)
SimpleDAO.bug_require_22() (require_manual_cases_copy.sol#76-81) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(b)()) (require_manual_cases_copy.sol#79)
SimpleDAO.slither_2a() (require_manual_cases_copy.sol#83-86) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(a ++ < 10 && msg.sender.call.value(a)()) (require_manual_cases_copy.sol#85)
SimpleDAO.slither_2a_1() (require_manual_cases_copy.sol#88-91) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(a ++ < 10 && msg.sender.call.value(b)()) (require_manual_cases_copy.sol#90)
SimpleDAO.slither_2b() (require_manual_cases_copy.sol#93-97) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(a)() && a ++ < 10) (require_manual_cases_copy.sol#96)
SimpleDAO.slither_2b_2() (require_manual_cases_copy.sol#99-102) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(msg.sender.call.value(b)() && a ++ < 10) (require_manual_cases_copy.sol#101)
SimpleDAO.slither_2() (require_manual_cases_copy.sol#104-107) sends eth to arbitrary user
	Dangerous calls:
	- require(bool)(a ++ < 10 && msg.sender.call.value(a)() && a < 10) (require_manual_cases_copy.sol#106)
SimpleDAO.slither_13() (require_manual_cases_copy.sol#109-116) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#113)
SimpleDAO.slither_32341() (require_manual_cases_copy.sol#119-127) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#123)
SimpleDAO.slither_3_DD() (require_manual_cases_copy.sol#129-135) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#133)
SimpleDAO.slither_123() (require_manual_cases_copy.sol#137-145) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#141)
SimpleDAO.slither_3() (require_manual_cases_copy.sol#147-162) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(z)() (require_manual_cases_copy.sol#155)
SimpleDAO.slither_321() (require_manual_cases_copy.sol#164-174) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#169)
SimpleDAO.slither_12131() (require_manual_cases_copy.sol#176-184) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#179)
SimpleDAO.slither_n31() (require_manual_cases_copy.sol#186-194) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#192)
SimpleDAO.slither_31() (require_manual_cases_copy.sol#199-209) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#206)
SimpleDAO.slither_318() (require_manual_cases_copy.sol#211-222) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#217)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Reentrancy in SimpleDAO.bug_require() (require_manual_cases_copy.sol#69-74):
	External calls:
	- require(bool)(msg.sender.call.value(b)()) (require_manual_cases_copy.sol#72)
	State variables written after the call(s):
	- not_called = false (require_manual_cases_copy.sol#73)
	SimpleDAO.not_called (require_manual_cases_copy.sol#52) can be used in cross function reentrancies:
	- SimpleDAO.bug_require() (require_manual_cases_copy.sol#69-74)
	- SimpleDAO.not_called (require_manual_cases_copy.sol#52)
Reentrancy in SimpleDAO.slither_123() (require_manual_cases_copy.sol#137-145):
	External calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#141)
	State variables written after the call(s):
	- c = c + 4 (require_manual_cases_copy.sol#143)
	SimpleDAO.c (require_manual_cases_copy.sol#42) can be used in cross function reentrancies:
	- SimpleDAO.c (require_manual_cases_copy.sol#42)
	- SimpleDAO.slither_12131() (require_manual_cases_copy.sol#176-184)
	- SimpleDAO.slither_123() (require_manual_cases_copy.sol#137-145)
	- SimpleDAO.slither_13() (require_manual_cases_copy.sol#109-116)
	- SimpleDAO.slither_3() (require_manual_cases_copy.sol#147-162)
	- SimpleDAO.slither_31() (require_manual_cases_copy.sol#199-209)
	- SimpleDAO.slither_321() (require_manual_cases_copy.sol#164-174)
	- SimpleDAO.slither_32341() (require_manual_cases_copy.sol#119-127)
	- SimpleDAO.slither_3_DD() (require_manual_cases_copy.sol#129-135)
	- SimpleDAO.slither_n31() (require_manual_cases_copy.sol#186-194)
Reentrancy in SimpleDAO.slither_13() (require_manual_cases_copy.sol#109-116):
	External calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#113)
	State variables written after the call(s):
	- a += 10 (require_manual_cases_copy.sol#115)
	SimpleDAO.a (require_manual_cases_copy.sol#40) can be used in cross function reentrancies:
	- SimpleDAO.a (require_manual_cases_copy.sol#40)
	- SimpleDAO.bug_require_22() (require_manual_cases_copy.sol#76-81)
	- SimpleDAO.slither_12131() (require_manual_cases_copy.sol#176-184)
	- SimpleDAO.slither_123() (require_manual_cases_copy.sol#137-145)
	- SimpleDAO.slither_13() (require_manual_cases_copy.sol#109-116)
	- SimpleDAO.slither_2() (require_manual_cases_copy.sol#104-107)
	- SimpleDAO.slither_2a() (require_manual_cases_copy.sol#83-86)
	- SimpleDAO.slither_2a_1() (require_manual_cases_copy.sol#88-91)
	- SimpleDAO.slither_2b() (require_manual_cases_copy.sol#93-97)
	- SimpleDAO.slither_2b_2() (require_manual_cases_copy.sol#99-102)
	- SimpleDAO.slither_3() (require_manual_cases_copy.sol#147-162)
	- SimpleDAO.slither_31() (require_manual_cases_copy.sol#199-209)
	- SimpleDAO.slither_318() (require_manual_cases_copy.sol#211-222)
	- SimpleDAO.slither_321() (require_manual_cases_copy.sol#164-174)
	- SimpleDAO.slither_32341() (require_manual_cases_copy.sol#119-127)
	- SimpleDAO.slither_3_DD() (require_manual_cases_copy.sol#129-135)
	- SimpleDAO.slither_n31() (require_manual_cases_copy.sol#186-194)
Reentrancy in SimpleDAO.slither_31() (require_manual_cases_copy.sol#199-209):
	External calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#206)
	State variables written after the call(s):
	- a = a + 50 (require_manual_cases_copy.sol#207)
	SimpleDAO.a (require_manual_cases_copy.sol#40) can be used in cross function reentrancies:
	- SimpleDAO.a (require_manual_cases_copy.sol#40)
	- SimpleDAO.bug_require_22() (require_manual_cases_copy.sol#76-81)
	- SimpleDAO.slither_12131() (require_manual_cases_copy.sol#176-184)
	- SimpleDAO.slither_123() (require_manual_cases_copy.sol#137-145)
	- SimpleDAO.slither_13() (require_manual_cases_copy.sol#109-116)
	- SimpleDAO.slither_2() (require_manual_cases_copy.sol#104-107)
	- SimpleDAO.slither_2a() (require_manual_cases_copy.sol#83-86)
	- SimpleDAO.slither_2a_1() (require_manual_cases_copy.sol#88-91)
	- SimpleDAO.slither_2b() (require_manual_cases_copy.sol#93-97)
	- SimpleDAO.slither_2b_2() (require_manual_cases_copy.sol#99-102)
	- SimpleDAO.slither_3() (require_manual_cases_copy.sol#147-162)
	- SimpleDAO.slither_31() (require_manual_cases_copy.sol#199-209)
	- SimpleDAO.slither_318() (require_manual_cases_copy.sol#211-222)
	- SimpleDAO.slither_321() (require_manual_cases_copy.sol#164-174)
	- SimpleDAO.slither_32341() (require_manual_cases_copy.sol#119-127)
	- SimpleDAO.slither_3_DD() (require_manual_cases_copy.sol#129-135)
	- SimpleDAO.slither_n31() (require_manual_cases_copy.sol#186-194)
Reentrancy in SimpleDAO.slither_32341() (require_manual_cases_copy.sol#119-127):
	External calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#123)
	State variables written after the call(s):
	- c = c + 4 (require_manual_cases_copy.sol#125)
	SimpleDAO.c (require_manual_cases_copy.sol#42) can be used in cross function reentrancies:
	- SimpleDAO.c (require_manual_cases_copy.sol#42)
	- SimpleDAO.slither_12131() (require_manual_cases_copy.sol#176-184)
	- SimpleDAO.slither_123() (require_manual_cases_copy.sol#137-145)
	- SimpleDAO.slither_13() (require_manual_cases_copy.sol#109-116)
	- SimpleDAO.slither_3() (require_manual_cases_copy.sol#147-162)
	- SimpleDAO.slither_31() (require_manual_cases_copy.sol#199-209)
	- SimpleDAO.slither_321() (require_manual_cases_copy.sol#164-174)
	- SimpleDAO.slither_32341() (require_manual_cases_copy.sol#119-127)
	- SimpleDAO.slither_3_DD() (require_manual_cases_copy.sol#129-135)
	- SimpleDAO.slither_n31() (require_manual_cases_copy.sol#186-194)
Reentrancy in SimpleDAO.slither_3_DD() (require_manual_cases_copy.sol#129-135):
	External calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#133)
	State variables written after the call(s):
	- a = a + 10 (require_manual_cases_copy.sol#134)
	SimpleDAO.a (require_manual_cases_copy.sol#40) can be used in cross function reentrancies:
	- SimpleDAO.a (require_manual_cases_copy.sol#40)
	- SimpleDAO.bug_require_22() (require_manual_cases_copy.sol#76-81)
	- SimpleDAO.slither_12131() (require_manual_cases_copy.sol#176-184)
	- SimpleDAO.slither_123() (require_manual_cases_copy.sol#137-145)
	- SimpleDAO.slither_13() (require_manual_cases_copy.sol#109-116)
	- SimpleDAO.slither_2() (require_manual_cases_copy.sol#104-107)
	- SimpleDAO.slither_2a() (require_manual_cases_copy.sol#83-86)
	- SimpleDAO.slither_2a_1() (require_manual_cases_copy.sol#88-91)
	- SimpleDAO.slither_2b() (require_manual_cases_copy.sol#93-97)
	- SimpleDAO.slither_2b_2() (require_manual_cases_copy.sol#99-102)
	- SimpleDAO.slither_3() (require_manual_cases_copy.sol#147-162)
	- SimpleDAO.slither_31() (require_manual_cases_copy.sol#199-209)
	- SimpleDAO.slither_318() (require_manual_cases_copy.sol#211-222)
	- SimpleDAO.slither_321() (require_manual_cases_copy.sol#164-174)
	- SimpleDAO.slither_32341() (require_manual_cases_copy.sol#119-127)
	- SimpleDAO.slither_3_DD() (require_manual_cases_copy.sol#129-135)
	- SimpleDAO.slither_n31() (require_manual_cases_copy.sol#186-194)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

SimpleDAO.y (require_manual_cases_copy.sol#49) is never initialized. It is used in:
	- SimpleDAO.slither_123() (require_manual_cases_copy.sol#137-145)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables

SimpleDAO.slither_13() (require_manual_cases_copy.sol#109-116) ignores return value by msg.sender.call.value(b)() (require_manual_cases_copy.sol#113)
SimpleDAO.slither_32341() (require_manual_cases_copy.sol#119-127) ignores return value by msg.sender.call.value(b)() (require_manual_cases_copy.sol#123)
SimpleDAO.slither_3_DD() (require_manual_cases_copy.sol#129-135) ignores return value by msg.sender.call.value(b)() (require_manual_cases_copy.sol#133)
SimpleDAO.slither_123() (require_manual_cases_copy.sol#137-145) ignores return value by msg.sender.call.value(b)() (require_manual_cases_copy.sol#141)
SimpleDAO.slither_3() (require_manual_cases_copy.sol#147-162) ignores return value by msg.sender.call.value(z)() (require_manual_cases_copy.sol#155)
SimpleDAO.slither_321() (require_manual_cases_copy.sol#164-174) ignores return value by msg.sender.call.value(b)() (require_manual_cases_copy.sol#169)
SimpleDAO.slither_12131() (require_manual_cases_copy.sol#176-184) ignores return value by msg.sender.call.value(b)() (require_manual_cases_copy.sol#179)
SimpleDAO.slither_n31() (require_manual_cases_copy.sol#186-194) ignores return value by msg.sender.call.value(b)() (require_manual_cases_copy.sol#192)
SimpleDAO.slither_31() (require_manual_cases_copy.sol#199-209) ignores return value by msg.sender.call.value(b)() (require_manual_cases_copy.sol#206)
SimpleDAO.slither_318() (require_manual_cases_copy.sol#211-222) ignores return value by msg.sender.call.value(b)() (require_manual_cases_copy.sol#217)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Reentrancy in SimpleDAO.slither_12131() (require_manual_cases_copy.sol#176-184):
	External calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#179)
	State variables written after the call(s):
	- c = c + 14 (require_manual_cases_copy.sol#182)
Reentrancy in SimpleDAO.slither_3() (require_manual_cases_copy.sol#147-162):
	External calls:
	- msg.sender.call.value(z)() (require_manual_cases_copy.sol#155)
	State variables written after the call(s):
	- a = a + 4 (require_manual_cases_copy.sol#160)
	- c = c + 4 (require_manual_cases_copy.sol#157)
Reentrancy in SimpleDAO.slither_321() (require_manual_cases_copy.sol#164-174):
	External calls:
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#169)
	State variables written after the call(s):
	- c = c + 4 (require_manual_cases_copy.sol#171)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Version constraint 0.4.24 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData.
It is used by:
	- 0.4.24 (require_manual_cases_copy.sol#1)
solc-0.4.24 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in SimpleDAO.slither_fn_1() (require_manual_cases_copy.sol#64-67):
	- require(bool)(msg.sender.call.value(b ++)()) (require_manual_cases_copy.sol#66)
Low level call in SimpleDAO.bug_require() (require_manual_cases_copy.sol#69-74):
	- require(bool)(msg.sender.call.value(b)()) (require_manual_cases_copy.sol#72)
Low level call in SimpleDAO.bug_require_22() (require_manual_cases_copy.sol#76-81):
	- require(bool)(msg.sender.call.value(b)()) (require_manual_cases_copy.sol#79)
Low level call in SimpleDAO.slither_2a() (require_manual_cases_copy.sol#83-86):
	- require(bool)(a ++ < 10 && msg.sender.call.value(a)()) (require_manual_cases_copy.sol#85)
Low level call in SimpleDAO.slither_2a_1() (require_manual_cases_copy.sol#88-91):
	- require(bool)(a ++ < 10 && msg.sender.call.value(b)()) (require_manual_cases_copy.sol#90)
Low level call in SimpleDAO.slither_2b() (require_manual_cases_copy.sol#93-97):
	- require(bool)(msg.sender.call.value(a)() && a ++ < 10) (require_manual_cases_copy.sol#96)
Low level call in SimpleDAO.slither_2b_2() (require_manual_cases_copy.sol#99-102):
	- require(bool)(msg.sender.call.value(b)() && a ++ < 10) (require_manual_cases_copy.sol#101)
Low level call in SimpleDAO.slither_2() (require_manual_cases_copy.sol#104-107):
	- require(bool)(a ++ < 10 && msg.sender.call.value(a)() && a < 10) (require_manual_cases_copy.sol#106)
Low level call in SimpleDAO.slither_13() (require_manual_cases_copy.sol#109-116):
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#113)
Low level call in SimpleDAO.slither_32341() (require_manual_cases_copy.sol#119-127):
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#123)
Low level call in SimpleDAO.slither_3_DD() (require_manual_cases_copy.sol#129-135):
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#133)
Low level call in SimpleDAO.slither_123() (require_manual_cases_copy.sol#137-145):
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#141)
Low level call in SimpleDAO.slither_3() (require_manual_cases_copy.sol#147-162):
	- msg.sender.call.value(z)() (require_manual_cases_copy.sol#155)
Low level call in SimpleDAO.slither_321() (require_manual_cases_copy.sol#164-174):
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#169)
Low level call in SimpleDAO.slither_12131() (require_manual_cases_copy.sol#176-184):
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#179)
Low level call in SimpleDAO.slither_n31() (require_manual_cases_copy.sol#186-194):
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#192)
Low level call in SimpleDAO.slither_31() (require_manual_cases_copy.sol#199-209):
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#206)
Low level call in SimpleDAO.slither_318() (require_manual_cases_copy.sol#211-222):
	- msg.sender.call.value(b)() (require_manual_cases_copy.sol#217)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function SimpleDAO.slither_fn_1() (require_manual_cases_copy.sol#64-67) is not in mixedCase
Function SimpleDAO.bug_require() (require_manual_cases_copy.sol#69-74) is not in mixedCase
Function SimpleDAO.bug_require_22() (require_manual_cases_copy.sol#76-81) is not in mixedCase
Function SimpleDAO.slither_2a() (require_manual_cases_copy.sol#83-86) is not in mixedCase
Function SimpleDAO.slither_2a_1() (require_manual_cases_copy.sol#88-91) is not in mixedCase
Function SimpleDAO.slither_2b() (require_manual_cases_copy.sol#93-97) is not in mixedCase
Function SimpleDAO.slither_2b_2() (require_manual_cases_copy.sol#99-102) is not in mixedCase
Function SimpleDAO.slither_2() (require_manual_cases_copy.sol#104-107) is not in mixedCase
Function SimpleDAO.slither_13() (require_manual_cases_copy.sol#109-116) is not in mixedCase
Function SimpleDAO.slither_32341() (require_manual_cases_copy.sol#119-127) is not in mixedCase
Function SimpleDAO.slither_3_DD() (require_manual_cases_copy.sol#129-135) is not in mixedCase
Function SimpleDAO.slither_123() (require_manual_cases_copy.sol#137-145) is not in mixedCase
Function SimpleDAO.slither_3() (require_manual_cases_copy.sol#147-162) is not in mixedCase
Function SimpleDAO.slither_321() (require_manual_cases_copy.sol#164-174) is not in mixedCase
Function SimpleDAO.slither_12131() (require_manual_cases_copy.sol#176-184) is not in mixedCase
Function SimpleDAO.slither_n31() (require_manual_cases_copy.sol#186-194) is not in mixedCase
Function SimpleDAO.slither_31() (require_manual_cases_copy.sol#199-209) is not in mixedCase
Function SimpleDAO.slither_318() (require_manual_cases_copy.sol#211-222) is not in mixedCase
Variable SimpleDAO.not_called (require_manual_cases_copy.sol#52) is not in mixedCase
Variable SimpleDAO.Acc (require_manual_cases_copy.sol#60) is not in mixedCase
Variable SimpleDAO.MinSum (require_manual_cases_copy.sol#62) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

SimpleDAO.MinSum (require_manual_cases_copy.sol#62) should be constant 
SimpleDAO.called (require_manual_cases_copy.sol#53) should be constant 
SimpleDAO.e (require_manual_cases_copy.sol#44) should be constant 
SimpleDAO.m (require_manual_cases_copy.sol#46) should be constant 
SimpleDAO.n (require_manual_cases_copy.sol#47) should be constant 
SimpleDAO.w (require_manual_cases_copy.sol#51) should be constant 
SimpleDAO.x (require_manual_cases_copy.sol#50) should be constant 
SimpleDAO.y (require_manual_cases_copy.sol#49) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
./require_manual_cases_copy.sol analyzed (1 contracts with 94 detectors), 87 result(s) found

real	0m1.626s
user	0m1.461s
sys	0m0.169s
