'solc --version' running
'solc ./require_slither_plus_cases.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/manual_dataset' running
Compilation warnings/errors on ./require_slither_plus_cases.sol:
./require_slither_plus_cases.sol:58:5: Warning: Return value of low-level calls not used.
    msg.sender.call.value(b)();
    ^------------------------^
./require_slither_plus_cases.sol:71:5: Warning: Return value of low-level calls not used.
    msg.sender.call.value(b)();
    ^------------------------^
./require_slither_plus_cases.sol:86:5: Warning: Return value of low-level calls not used.
    msg.sender.call.value(b)();
    ^------------------------^
./require_slither_plus_cases.sol:106:5: Warning: Return value of low-level calls not used.
    msg.sender.call.value(b)();
    ^------------------------^
./require_slither_plus_cases.sol:119:5: Warning: Return value of low-level calls not used.
    msg.sender.call.value(b)();
    ^------------------------^


SimpleDAO.slithermine_1() (require_slither_plus_cases.sol#54-65) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#58)
SimpleDAO.slithermine_2() (require_slither_plus_cases.sol#67-78) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#71)
SimpleDAO.buggy_require_1() (require_slither_plus_cases.sol#80-96) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#86)
SimpleDAO.slithermine_18() (require_slither_plus_cases.sol#100-110) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#106)
SimpleDAO.slithermine_24() (require_slither_plus_cases.sol#112-123) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#119)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

Reentrancy in SimpleDAO.slithermine_18() (require_slither_plus_cases.sol#100-110):
	External calls:
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#106)
	State variables written after the call(s):
	- a = a + 10 (require_slither_plus_cases.sol#108)
	SimpleDAO.a (require_slither_plus_cases.sol#18) can be used in cross function reentrancies:
	- SimpleDAO.a (require_slither_plus_cases.sol#18)
	- SimpleDAO.buggy_require_1() (require_slither_plus_cases.sol#80-96)
	- SimpleDAO.slithermine_1() (require_slither_plus_cases.sol#54-65)
	- SimpleDAO.slithermine_18() (require_slither_plus_cases.sol#100-110)
	- SimpleDAO.slithermine_2() (require_slither_plus_cases.sol#67-78)
	- SimpleDAO.slithermine_24() (require_slither_plus_cases.sol#112-123)
Reentrancy in SimpleDAO.slithermine_24() (require_slither_plus_cases.sol#112-123):
	External calls:
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#119)
	State variables written after the call(s):
	- a = a + 10 (require_slither_plus_cases.sol#121)
	SimpleDAO.a (require_slither_plus_cases.sol#18) can be used in cross function reentrancies:
	- SimpleDAO.a (require_slither_plus_cases.sol#18)
	- SimpleDAO.buggy_require_1() (require_slither_plus_cases.sol#80-96)
	- SimpleDAO.slithermine_1() (require_slither_plus_cases.sol#54-65)
	- SimpleDAO.slithermine_18() (require_slither_plus_cases.sol#100-110)
	- SimpleDAO.slithermine_2() (require_slither_plus_cases.sol#67-78)
	- SimpleDAO.slithermine_24() (require_slither_plus_cases.sol#112-123)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

SimpleDAO.b (require_slither_plus_cases.sol#20) is never initialized. It is used in:
	- SimpleDAO.slithermine_1() (require_slither_plus_cases.sol#54-65)
	- SimpleDAO.slithermine_2() (require_slither_plus_cases.sol#67-78)
	- SimpleDAO.buggy_require_1() (require_slither_plus_cases.sol#80-96)
	- SimpleDAO.slithermine_18() (require_slither_plus_cases.sol#100-110)
	- SimpleDAO.slithermine_24() (require_slither_plus_cases.sol#112-123)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#uninitialized-state-variables

SimpleDAO.slithermine_1() (require_slither_plus_cases.sol#54-65) ignores return value by msg.sender.call.value(b)() (require_slither_plus_cases.sol#58)
SimpleDAO.slithermine_2() (require_slither_plus_cases.sol#67-78) ignores return value by msg.sender.call.value(b)() (require_slither_plus_cases.sol#71)
SimpleDAO.buggy_require_1() (require_slither_plus_cases.sol#80-96) ignores return value by msg.sender.call.value(b)() (require_slither_plus_cases.sol#86)
SimpleDAO.slithermine_18() (require_slither_plus_cases.sol#100-110) ignores return value by msg.sender.call.value(b)() (require_slither_plus_cases.sol#106)
SimpleDAO.slithermine_24() (require_slither_plus_cases.sol#112-123) ignores return value by msg.sender.call.value(b)() (require_slither_plus_cases.sol#119)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-low-level-calls

Reentrancy in SimpleDAO.buggy_require_1() (require_slither_plus_cases.sol#80-96):
	External calls:
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#86)
	State variables written after the call(s):
	- a = a + 10 (require_slither_plus_cases.sol#89)
	- c = c + 8 (require_slither_plus_cases.sol#94)
Reentrancy in SimpleDAO.slithermine_1() (require_slither_plus_cases.sol#54-65):
	External calls:
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#58)
	State variables written after the call(s):
	- c = c + 4 (require_slither_plus_cases.sol#61)
Reentrancy in SimpleDAO.slithermine_2() (require_slither_plus_cases.sol#67-78):
	External calls:
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#71)
	State variables written after the call(s):
	- c = c + 4 (require_slither_plus_cases.sol#76)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Version constraint 0.4.24 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData.
It is used by:
	- 0.4.24 (require_slither_plus_cases.sol#12)
solc-0.4.24 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in SimpleDAO.slithermine_1() (require_slither_plus_cases.sol#54-65):
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#58)
Low level call in SimpleDAO.slithermine_2() (require_slither_plus_cases.sol#67-78):
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#71)
Low level call in SimpleDAO.buggy_require_1() (require_slither_plus_cases.sol#80-96):
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#86)
Low level call in SimpleDAO.slithermine_18() (require_slither_plus_cases.sol#100-110):
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#106)
Low level call in SimpleDAO.slithermine_24() (require_slither_plus_cases.sol#112-123):
	- msg.sender.call.value(b)() (require_slither_plus_cases.sol#119)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function SimpleDAO.slithermine_1() (require_slither_plus_cases.sol#54-65) is not in mixedCase
Function SimpleDAO.slithermine_2() (require_slither_plus_cases.sol#67-78) is not in mixedCase
Function SimpleDAO.buggy_require_1() (require_slither_plus_cases.sol#80-96) is not in mixedCase
Function SimpleDAO.slithermine_18() (require_slither_plus_cases.sol#100-110) is not in mixedCase
Function SimpleDAO.slithermine_24() (require_slither_plus_cases.sol#112-123) is not in mixedCase
Variable SimpleDAO.not_called (require_slither_plus_cases.sol#48) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

SimpleDAO.intitalized (require_slither_plus_cases.sol#50) is never used in SimpleDAO (require_slither_plus_cases.sol#16-124)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-state-variable

SimpleDAO.b (require_slither_plus_cases.sol#20) should be constant 
SimpleDAO.e (require_slither_plus_cases.sol#26) should be constant 
SimpleDAO.f (require_slither_plus_cases.sol#36) should be constant 
SimpleDAO.intitalized (require_slither_plus_cases.sol#50) should be constant 
SimpleDAO.k (require_slither_plus_cases.sol#38) should be constant 
SimpleDAO.m (require_slither_plus_cases.sol#30) should be constant 
SimpleDAO.n (require_slither_plus_cases.sol#32) should be constant 
SimpleDAO.not_called (require_slither_plus_cases.sol#48) should be constant 
SimpleDAO.w (require_slither_plus_cases.sol#46) should be constant 
SimpleDAO.x (require_slither_plus_cases.sol#44) should be constant 
SimpleDAO.y (require_slither_plus_cases.sol#42) should be constant 
SimpleDAO.z (require_slither_plus_cases.sol#28) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
./require_slither_plus_cases.sol analyzed (1 contracts with 94 detectors), 42 result(s) found

real	0m1.120s
user	0m0.957s
sys	0m0.167s
