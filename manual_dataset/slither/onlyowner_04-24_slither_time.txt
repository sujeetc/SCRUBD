'solc --version' running
'solc ./onlyowner_04-24.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/ethereum-security/manual_dataset' running

Reentrancy in VulnerableContract.withdraw_not_only_owner(uint256) (onlyowner_04-24.sol#30-39):
	External calls:
	- sent = msg.sender.call.value(_amount)() (onlyowner_04-24.sol#34)
	State variables written after the call(s):
	- balances[msg.sender] -= _amount (onlyowner_04-24.sol#38)
	VulnerableContract.balances (onlyowner_04-24.sol#6) can be used in cross function reentrancies:
	- VulnerableContract.balances (onlyowner_04-24.sol#6)
	- VulnerableContract.withdraw_not_only_owner(uint256) (onlyowner_04-24.sol#30-39)
	- VulnerableContract.withdraw_onlyowner(uint256) (onlyowner_04-24.sol#18-27)
Reentrancy in VulnerableContract.withdraw_onlyowner(uint256) (onlyowner_04-24.sol#18-27):
	External calls:
	- sent = msg.sender.call.value(_amount)() (onlyowner_04-24.sol#22)
	State variables written after the call(s):
	- balances[msg.sender] -= _amount (onlyowner_04-24.sol#26)
	VulnerableContract.balances (onlyowner_04-24.sol#6) can be used in cross function reentrancies:
	- VulnerableContract.balances (onlyowner_04-24.sol#6)
	- VulnerableContract.withdraw_not_only_owner(uint256) (onlyowner_04-24.sol#30-39)
	- VulnerableContract.withdraw_onlyowner(uint256) (onlyowner_04-24.sol#18-27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities

Version constraint ^0.4.24 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData.
It is used by:
	- ^0.4.24 (onlyowner_04-24.sol#2)
solc-0.4.24 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in VulnerableContract.withdraw_onlyowner(uint256) (onlyowner_04-24.sol#18-27):
	- sent = msg.sender.call.value(_amount)() (onlyowner_04-24.sol#22)
Low level call in VulnerableContract.withdraw_not_only_owner(uint256) (onlyowner_04-24.sol#30-39):
	- sent = msg.sender.call.value(_amount)() (onlyowner_04-24.sol#34)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function VulnerableContract.withdraw_onlyowner(uint256) (onlyowner_04-24.sol#18-27) is not in mixedCase
Parameter VulnerableContract.withdraw_onlyowner(uint256)._amount (onlyowner_04-24.sol#18) is not in mixedCase
Function VulnerableContract.withdraw_not_only_owner(uint256) (onlyowner_04-24.sol#30-39) is not in mixedCase
Parameter VulnerableContract.withdraw_not_only_owner(uint256)._amount (onlyowner_04-24.sol#30) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions
./onlyowner_04-24.sol analyzed (1 contracts with 94 detectors), 10 result(s) found

real	0m1.195s
user	0m1.019s
sys	0m0.179s
