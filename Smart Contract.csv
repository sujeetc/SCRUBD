Smart Contract,Function Name,new label,Reason_English,Function Security,Gas limit,Trusty Address,RE,is_student,Comments
0x000000000000541e251335090ac5b47176af4f7e,dexBlue.spendGasTokens,0.0,"It is probably not REE, the address is calculated externally and is uncontrollable, modified by Internal, and other basic functions will call it; it is a recycling function.",,,,1.0,1.0,RE -- Multi call bug
0x000000000000541e251335090ac5b47176af4f7e,dexBlueSettlementModule.matchOrderWithReserve,0.0,"It is not REE; the call is using address(this), and there is a gas limit on the call.",,,1.0,1.0,0.0,RE -- balances[order.sellToken][order.signee]
0x000000000000541e251335090ac5b47176af4f7e,dexBlueSettlementModule.matchOrderWithReserveWithData,0.0,"It is not REE, the call invocation is address(this), and the invocation has a gas limit.",,,1.0,1.0,0.0,RE -- balances[order.sellToken][order.signee]
0x000000000000541e251335090ac5b47176af4f7e,dexBlueSettlementModule.settleRingTrade,0.0,"It is not REE; the function itself also calls require(arbiters[msg.sender] && marketActive); can it be identified that this requires owner confirmation? The variable reserve is assigned by the expression address reserve = reserves[trades[I].identifier]; and reserves are assigned in the function cacheReserveAddress, which contains require(arbiters[msg.sender]); and arbiters are assigned in nominateArbiter, which must be operated by the owner. trades[prev].giveToken ultimately comes from the tokens array, and similarly, the tokens array must also be operated by the owner.",1.0,,,1.0,0.0,RE -- balances[trades[i].giveToken][reserve]
0x000000000000541e251335090ac5b47176af4f7e,dexBlueSettlementModule.settleRingTradeWithData,0.0,"Not REE, same as above.",1.0,,,1.0,0.0,RE -- balances[trades[i].giveToken][reserve]
0x000000000000541e251335090ac5b47176af4f7e,dexBlueSettlementModule.swapWithReserve,0.0,"It is not REE (can be re-entered but does not appear to constitute an attack or threat). The first jump function Token(sell_token).transferFrom(msg.sender, reserve, sell_amount) is where msg.sender deposits money into the account; the second jump is for the same reason.",1.0,,,0.0,0.0,"
"
0x0000000000b3f879cb30fe243b4dfee438691c04,GasToken2.destroyChildren,0.0,"It is not REE, but GPT's reasoning has a bit of a false report. mk_contract_addree(this, i) calculates an address based on the address of this, which is uncontrollable externally (cannot collide to produce a private key). It is modified as Internal, and basically, other functions will call it; it is a reclamation function.",,,,1.0,0.0,RE -- Multi call bug
0x00195777bed7025e78819156281192c85fb3cf9b,GAME.startRaffle,0.0,It is not REE; transfer has a gas limit; the other variables are assigned values in the constructor and are not modified by other functions.,,1.0,1.0,1.0,1.0,---------- RE -- state var jackpot
0x0030f75e27f6df16383f47ae11ae34abc21f5f2c,TYRANT.internalTransfer,0.0,"It's not REE; taxTokenSwap is an indirect external call, where uniV2Router in addLiquidity is hardcoded in the GoLive function, which is OnlyOwner; both marketingaddress and devaddress are hardcoded in the constructor.",,,1.0,1.0,0.0,"
"
0x0043a4a809be33afa17c1e3e37e19977622e4700,WithdrawableV2._withdrawAllSurcharges,0.0,"It is not REE, _withdrawAllSurcharges itself is a private function, and the two functions that call it both have a modifier to select the user.",1.0,,,1.0,1.0,--------
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain._mintFarmTokenAmount,1.0,"It may be REE, _farmTokenCollection is initialized in the init function, and init is not protected by a modifier; although it is a private function, there is also no obvious protective code for calling this function.",,,,1.0,0.0,"
"
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain._removeLiquidity,1.0,"It may be REE, IAMM(setupInfo.ammPlugin).removeLiquidity(lpData), where setupInfo is assigned a value in _setOrAddFarmingSetupInfo, and the init that calls this function has no safety protection.",,,,1.0,0.0,"RE -- _safeTransfer(setupInfo.liquidityPoolTokenAddress, exitFeeWallet, fee);"
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain._toggleSetup,1.0,"It may be REE, the extension variable is assigned a value in init, but init does not provide protection.",,,,1.0,1.0,"RE -- require(block.number > _setupsInfo[setup.infoIndex].startBlock, ""Too early for this setup"");--------"
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain.addLiquidity,0.0,"It is not REE, and there is protection modified by byPositionOwner.",1.0,,,0.0,0.0,No RE --- no ext call
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain.openPosition,1.0,"It may be REE, the jump variable amm comes from the function.",,,,1.0,1.0,--------
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain.unlock,0.0,"Not REE, there is protection modified by byPositionOwner.",1.0,,,1.0,0.0,"
"
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain.withdrawLiquidity,1.0,"It may be REE, the init function is not protected.",,,,1.0,0.0,"RE -- withdrawReward, delete setups[]"
0x00898f652934eff850886289a94d41cf9457e7af,FarmMain.withdrawReward,0.0,"It is not REE, there is protection modified by byPositionOwner.",1.0,,,1.0,1.0,RE -- delete _positions[positionId];--------
0x00b25822e3b8f8720b327f2df8e7c6f96271c8dc,JINJAINU.ContractTransfer,0.0,"It is not REE, taxTokenSwap is an indirect external call, where uniV2Router in addLiquidity is hard-coded in the GoLive function, which is OnlyOwner; both marketingaddress and devaddress are hard-coded in the constructor.",,,1.0,0.0,0.0,no RE -- ext call at the end
0x00b6358d1ac8d3731defd6b4d593b6ba04f9b8ea,EtherRolling.emergencyWithdraw,0.0,"It is not REE, payable(msg.sender).transfer(to_payout); there is a gas limit.",,1.0,,1.0,0.0,"
"
0x00b6358d1ac8d3731defd6b4d593b6ba04f9b8ea,EtherRolling.withdraw,0.0,"It is not REE, payable(msg.sender).transfer(to_payout); there is a gas limit; _token is private in the contract and is initialized in the constructor.",,1.0,1.0,1.0,1.0,--------
0x00dd5ad8f5d9c5118bceeb526c55ea6b2c07e922,Venify._transfer,0.0,"It is not REE; the address called in swapTokensForETH is hardcoded. The sendETH function may seem to have REE, but the incoming parameters result in the address being hardcoded, and changeBuyBackWallet is OnlyOwner.",,,1.0,0.0,0.0,No RE --- Sends ETH to a fixed address
0x00fe8ef58dc8282cac6e1d275acf0821c5084e88,Wallet.confirm,0.0,It is not REE; the modifier onlymanyowners allows execution only after all owners have accessed it.,1.0,,,0.0,1.0,No RE --- modifier onlymanywoners---------- No RE : modifieronlymanyowners
0x01fd49a2042e962eb9b4f7fa1efaa8eac4cefeed,Finplether.doInvest,1.0,"It is REE, notFromContract prevents calls from contracts, thereby preventing reentrancy (update, some checks whether it is a contract use codesize, but this can be bypassed and is therefore unreliable). It is REE, referrerAddr.notZero() where refererAddr is a user input variable.",,,,1.0,1.0,--------
0x02dd48ff449f57a4632c39068e0ca0f4325c3a8d,CB_BANK.Collect,1.0,Typical REE structure.,,,,1.0,1.0,---------- Reason for RE: state var. acc.balance
0x0321be5f545ea569424aace4dc08d60f467229ac,BlackErc20.mintProof,0.0,"It's not REE, the wethAddress was already hardcoded when declared.",,,1.0,1.0,0.0,"
"
0x03358425ada4620246dd703dc1f2246b8e148d22,BoomerangLiquidity.payout,1.0,"It may cause REE, participants[payoutOrder].etherAddress.call.value(payoutToSend).gas(1000000)(); External calls are externally controllable (but may not constitute an attack).",,,,1.0,1.0,--------UX: participants[payoutOrder].etherAddress.call.value(payoutToSend).gas(1000000)(); -- not checked -- RE: payoutOrder
0x03fb31bb6def4dd3a7ea3b0fa6bdecc940e75795,BrokerV2.bid,1.0,"It could be REE, the Token is assigned by _mintableToken, but this is a function parameter.",,,,1.0,0.0,"
"
0x03fb31bb6def4dd3a7ea3b0fa6bdecc940e75795,BrokerV2.buy,1.0,"It might be REE, the ERC20 Token address is not trustworthy.",,,,1.0,0.0,"
"
0x03fb31bb6def4dd3a7ea3b0fa6bdecc940e75795,BrokerV2.collect,1.0,"It could be REE, the Token is assigned by _mintableToken, but this is a function parameter.",,,,1.0,0.0,"
"
0x03fb31bb6def4dd3a7ea3b0fa6bdecc940e75795,BrokerV2.withdrawERC20,0.0,"It is not REE, there is onlyOwner modification.",1.0,,,0.0,1.0,No RE because of onlyOwner--------
0x0453aa2dafff030614d9afef6c724ec2bee60876,SwifyStaking.closePosition,0.0,"Not REE, there is a nonReentrant modifier.",1.0,,,0.0,1.0,No RE because of modifier non reentrant--------
0x0461c4e4b916bfc9449f853c7a854033b43c3a6c,Auction.start,0.0,"Not REE, with lock modification.",1.0,,,0.0,1.0,No RE because of modifier lock---------- UX: WRAPPED_ETH.deposit.value(balance)();
0x049658b3cc6ec345aaf2be7233a33da24ee82150,Bozu.internalTransfer,0.0,"It is not REE, taxTokenSwap is an indirect external call, and the uniV2Router in addLiquidity is hardcoded in the GoLive function, which is OnlyOwner.",,,1.0,1.0,0.0,"
"
0x04d660832910ff492e940daff9ec7b3497e886ac,Revolution2.doInvest,1.0,"It is REE, although notFromContract prevents calls from contracts, thereby preventing reentrancy. (Update: some checks for whether it is a contract use codesize, but this can be bypassed, so it is unreliable.) It is REE, in referrerAddr.notZero(), refererAddr is a user input variable.",,,,1.0,1.0,--------
0x04f062809b244e37e7fdc21d9409469c989c2342,Joyso.migrateByAdmin_DQV,0.0,"Not REE, there is OnlyAdmin modification.",1.0,,,0.0,1.0,No RE -- onlyAdmin--------
0x051bda85fbc58ace9d6060ba9488abe120ac072d,CRYPTOVATOR._transfer,0.0,It is not REE; the swapBack() function has the lockTheSwap modifier.,1.0,,,0.0,0.0,"
"
0x0544ada225de796baa4030877314a96faacea7fc,ExclusiveDividendTracker._withdrawDividendOfUser,0.0,"It is not REE, (bool success,) = user.call{value : _withdrawableDividend, gas : 3000}(""""); There is a gas limit restriction.",,1.0,,0.0,1.0,--------
0x0544ada225de796baa4030877314a96faacea7fc,ExclusiveDividendTracker.process,0.0,"It is not REE, but an indirect external call continues to call _withdrawDividendOfUser in processAccount, with the ultimate reason being the same as above.",,1.0,,0.0,1.0,--------
0x05af72594440cf75c0fdcbbd9993fc26f62c7afc,TwelveHourAuction.buy,0.0,"Not REE, (and controlled by the disableContract flag) multi-hop indirect calls, all jumps must either be transfers with gas limits, or TwelveHourToken is assigned in the setTwelveHourToken function modified by onlyowner.",,1.0,1.0,1.0,0.0,RE -- repay = ...g.keyLevel
0x06012c8cf97bead5deae237070f9587f8e7a266d,KittyBreeding.giveBirth,0.0,"It is not REE, geneScience.mixGenes(matron.genes, sire.genes, matron.cooldownEndBlock-1) in which geneScience is assigned a value in setGeneScienceAddress, and it has OnlyCEO modifier.",,,1.0,1.0,1.0,RE -- mixGenes can reenter--------
0x0608d0d987ca8371af38fa0b6e028760110b987e,DeflatLottoBurn.fallback,0.0,"Not REE, send has a gas limit, tokenReward is hardcoded.",,1.0,1.0,1.0,1.0,---------- Reason for RE: playerPool.length
0x064c81842a12127759b85f3b2d261abcacc2bfb0,VotingChallenge.sendReward,0.0,"Not REE, to.transfer has a gas limit, the forwarder is initialized in the constructor.",,1.0,1.0,1.0,1.0,RE -- voters[to].fullVotes[winner]--------
0x0654b7f747c9ee9f5fb5eba443e9fe64f1fa77ef,SAFX._transferFrom,0.0,"Not REE, the router is hardcoded at declaration, and the swapping modifier has a locking effect.",1.0,,1.0,0.0,0.0,"
"
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.DayQuKuan,0.0,"It is not REE, transfer has a gas limit, bebTokenTransfer is assigned a value in the constructor.",,1.0,1.0,1.0,1.0,--------
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.DayQuKuanUsdt,0.0,"It is not REE, transfer has a gas limit, same as above.",,1.0,1.0,1.0,0.0,"
"
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.quhuiBET,0.0,"Not REE, transfer has a gas limit, same as above.",,1.0,1.0,1.0,0.0,"
"
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.setETH,0.0,"It is not REE, bebTokenTransfer is assigned a value in the constructor.",,,1.0,1.0,0.0,"
"
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.setUSDT,0.0,"It’s not REE, bebTokenTransfer is assigned a value in the constructor.",,,1.0,1.0,0.0,"
"
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.setVoteFandui,0.0,"It is not REE, bebTokenTransferBET is assigned a value in the constructor.",,,1.0,1.0,0.0,"
"
0x066416dc99bea2c852e46acf88128480479cf191,bebBUYtwo.setVoteZancheng,0.0,"It is not REE, bebTokenTransferBET is assigned a value in the constructor.",,,1.0,1.0,1.0,--------
0x06ef66ab59919e1c3b25ad4732a002f644fe0f8e,MonkeyScam.determinePID,0.0,"It is not REE, PlayerBook was hardcoded at the time of the declaration.",,,1.0,1.0,0.0,RE -- getPlayerName can reenter
0x06ef66ab59919e1c3b25ad4732a002f644fe0f8e,MonkeyScam.endRound,0.0,"Not REE, MonkeyKingCorp was hardcoded during the statement.",,,1.0,0.0,1.0,No RE --sending Eth to fixed address---------- No RE: address MonkeyKingCorp is fixed
0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8,charge.claimFarmedToken,0.0,"It is not REE, _isWithdrawing has a lock structure, and _UniswapRouter in claimFarmedToken is initialized in the constructor.",1.0,,,1.0,0.0,"
"
0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7,Multiplier.pay,0.0,"Not REE, send has a gas limit.",,1.0,,1.0,1.0,--------
0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7,Multiplier.refunding,0.0,"It's not REE, send has a gas limit.",,1.0,,1.0,1.0,--------
0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7,Multiplier.singleRefunding,0.0,"It is not REE, send has a gas limit.",,1.0,,1.0,1.0,--------
0x07c1c8c2bce6290daa554118b7d208041615ce54,RC.refundEther,0.0,"Not REE, onlyTokenSaleOwner modification.",1.0,,,0.0,0.0,No RE due to modifier
0x07c1c8c2bce6290daa554118b7d208041615ce54,RC.takeEther,0.0,It is not REE; tokenSaleContract is assigned a value in the constructor.,,,1.0,0.0,0.0,"
"
0x07c1c8c2bce6290daa554118b7d208041615ce54,RCpro.refundEther,0.0,"Not REE, only Token Sale Owner modification.",1.0,,,0.0,0.0,No RE -- modifier
0x07c1c8c2bce6290daa554118b7d208041615ce54,RCpro.takeEther,0.0,Not REE; tokenSaleContract is assigned a value in the constructor.,,,1.0,0.0,0.0,"
"
0x07ef026be5f1452f494e7af1b13a3333d5cd2d23,DividendDistributor.distributeDividend,0.0,"Not REE, EP hardcoded. Transfer has a gas limit.",,,1.0,1.0,1.0,--------
0x07ef026be5f1452f494e7af1b13a3333d5cd2d23,IceMachine._transferFrom,0.0,"It is not REE, and both indirect external calls are protected by a swapping modifier.",1.0,,,1.0,0.0,"
"
0x081d8a340d384cffca0c2dafbf45020d760d7576,SOLIDBLOCK.transferFrom,0.0,"Not REE, there is a lockTheSwap modification.",1.0,,,0.0,0.0,"
"
0x08715190074e24cf2145e8a61b784a1b5ac9a505,DogeviathanBasic.createCollectible,1.0,"It may be REE, Conclusion: This function will cause REE Problem. Conclusion: This function will not cause REE Problem.）to is the function parameter, and although it uses isContract to restrict non-contract calls, there is a possibility of being bypassed.",,,,1.0,1.0,--------
0x08759550264b7f8078d95eff8a0577001c833483,Canvas.buy,1.0,"It is REE. GPT believes that the holder is controllable, but aside from the initial assignment, anyone can call and switch the holder in the buy function or other functions. Meanwhile, the gas for the buy function is relatively high, leading to the problem of reentrancy where purchases can be repeated at an unchanged price.",,,,1.0,1.0,---------- gas limit may change in future
0x08cce68cfe23bbf13e3151c2a43dcc02623710d6,MoneyPrinter.distributeDividend,0.0,"Not REE, hardcoded. Transfer has a gas limit restriction.",,,1.0,1.0,1.0,--------
0x08cce68cfe23bbf13e3151c2a43dcc02623710d6,SaylorsLastHope._transfer,0.0,"Not REE, there is lockTheSwap modification.",1.0,,,0.0,0.0,"No RE -- 2nd external call at the end, 1st begining ext call does not reenter"
0x091ac882e57b89e071c8b153be3aab668a80303d,Town.claimExternalTokens,1.0,"It may be possible to REE, external calls are not trusted (but the risk or whether it constitutes an attack is unknown).",,,,1.0,1.0,--------
0x091ac882e57b89e071c8b153be3aab668a80303d,Town.claimFunds,0.0,"It is not REE, transfer has a gas limit.",,1.0,,1.0,0.0,"
"
0x091ac882e57b89e071c8b153be3aab668a80303d,Town.getTownTokens,0.0,"It is not REE, the transfer has a gas limit, and can be controlled in the _token constructor.",,1.0,1.0,1.0,1.0,--------
0x091ac882e57b89e071c8b153be3aab668a80303d,Town.remuneration,0.0,"It is not REE, the _token is assigned a value in the constructor.",,,1.0,1.0,1.0,RE -- if (restOfTokens > 0) {--------
0x092e038af43a42e0332810db3f50b923fb256ff0,Free3.claim,0.0,"Not REE, transfer has a gas limit, free is assigned a value in the constructor.",,1.0,1.0,1.0,1.0,---------- RE: stake.totalStaked
0x097a5e3d974332aa5612675caaaeb117091dc743,CoolUncle.distributeDividend,0.0,It is not REE; the SHIL address hardcoded transfer has a gas limit.,,,1.0,1.0,1.0,RE -- shares[shareholder].totalExcluded is used in getUnpaidEarnings----------No RE: protected by modifiers
0x097a5e3d974332aa5612675caaaeb117091dc743,ShibaUncle._transfer,0.0,"Not REE, lockTheSwap.",1.0,,,0.0,0.0,"No RE -- external call at the end, begining ext call does not reenter"
0x099764910a38190bbd317857e635e6f461b11119,IronHands.payout,1.0,"It may be REE, but the pit does not constitute an attack. participants[payoutOrder] is unreliable and user-controlled.",,,,1.0,1.0,---------- RE: payoutOrder
0x09a80172ed7335660327cd664876b5df6fe06108,Distribution.doPayments,0.0,"Not REE, transfer has a gas limit.",,1.0,,1.0,0.0,"
"
0x09a80172ed7335660327cd664876b5df6fe06108,OMPxContract.getFee,0.0,"It is not REE, the feeReceiverContract is trustworthy. There is a gas keyword.",,,1.0,1.0,1.0,--------
0x09ab651217b86d1ee7236e0fad1ebb19185fe769,MonkeyScam.determinePID,0.0,It is not REE; PlayerBook was hardcoded at the time of the statement.,,,1.0,1.0,0.0,RE -- getPlayerName can reenter
0x09ab651217b86d1ee7236e0fad1ebb19185fe769,MonkeyScam.endRound,0.0,It is not REE; MonkeyKing was hardcoded during the statement.,,,1.0,0.0,1.0,No RE -- send Eth to fixed address--------
0x09d063d9950cdf02d545ec6fb0166491e3ea4fd2,BEAST._transfer,0.0,"Not REE, there is a lockTheSwap modification.",1.0,,,0.0,0.0,"
"
0x09d063d9950cdf02d545ec6fb0166491e3ea4fd2,BensRevival.distributeDividend,0.0,"Not REE, REVIVAL hardcoded. Transfer has a gas limit.",,,1.0,1.0,1.0,----------No RE: protected by modifiers
0x09f5f9413cefd61044db02940540155507bdcc55,TwoCoinsOneMoonGame.withdraw,0.0,"It is not REE, the feeCollector has hardcoded.",,,1.0,0.0,1.0,"No RE -- 1st cann sends eth to fixed address, 2nd call is at the end--------"
0x09f6a183dc0375ccf8032c367881f3aafb5342ef,Bussiness.buy,0.0,"It is not REE, transfer has a gas limit, erc20 has hardcode.",,1.0,1.0,1.0,1.0,--------
0x09f6a183dc0375ccf8032c367881f3aafb5342ef,Bussiness.buyByUsdt,0.0,"It is not REE, the erc721Address and usdtToken are both hardcoded.",,,1.0,1.0,0.0,"
"
0x09f6a183dc0375ccf8032c367881f3aafb5342ef,Bussiness.removePrice,0.0,"It is not REE, transfer has a gas limit.",,1.0,,0.0,0.0,"
"
0x0a42ef719ee77820993b27369089ae2c6bd6ced5,dapMultisig.executeTokenTxn,0.0,"It is not REE, but modified by onlyOwner.",1.0,,,0.0,0.0,No RE -- modifier onlyOwner
0x0a42ef719ee77820993b27369089ae2c6bd6ced5,dapMultisig.executeTxn,0.0,"It is not REE, it has an onlyOwner modifier.",1.0,,,0.0,1.0,No RE -- modifier onlyOwner--------
0x0a5a0a14419f9db1da68cf2f550720e5df49d4fe,YZYVault._sendLotteryAmount,0.0,"It's not REE, yzy controllable transfer has a gas limit.",,,1.0,1.0,1.0,--------
0x0a5a0a14419f9db1da68cf2f550720e5df49d4fe,YZYVault.stake,0.0,"Not REE, the invocation point is controllable, fromTokenAddress is a function parameter, but since the function is internal, the parameters passed to the function are all public variables, those variables are safe.",,,1.0,0.0,1.0,No RE -- dynamic analysis is needed to detect the bug -- staker.stakedAmount = staker.stakedAmount.add(newBalance);--------
0x0a5a0a14419f9db1da68cf2f550720e5df49d4fe,YZYVault.unstake,0.0,"It is not REE, the call point is controllable, fromTokenAddress is a function parameter, but since the function is internal, the parameters passed into the function are all public variables, those variables are safe.",,,1.0,1.0,1.0,RE -- staker.stakedAmount--------
0x0a5b38ac2d24c4fafc19ceb2591b70ece0d005d1,Daoclub.liquidate,0.0,"It is not REE. Although there are onlyGpAndLp modifiers, it only requires balance > 0 or onlyowner -> which can confuse LLM; mainly because transfer has a gas limit, and _targetToken is hardcoded in init (even though it is not modified).",,1.0,1.0,1.0,1.0,--------RE: _amountOfGrandTotalLiquidation
0x0a5b38ac2d24c4fafc19ceb2591b70ece0d005d1,Daoclub.redemptionApproveOne,0.0,"Not REE, there is OnlyOwner modifier.",1.0,,,0.0,0.0,No RE -- modifier onlyOwner
0x0a5b38ac2d24c4fafc19ceb2591b70ece0d005d1,Daoclub.subscriptionCancel,0.0,"Not REE, transfer has a gas limit, _targetToken is hardcoded in init (although it is not modified).",,1.0,1.0,1.0,1.0,--------
0x0aabf9daefcd484405479d2748cbaedb53c33d87,DividendPayingToken._withdrawDividendOfUser,1.0,"The user is msg.sender, which will lead to a REE issue.",,,,0.0,1.0,--------
0x0aabf9daefcd484405479d2748cbaedb53c33d87,MRFROG.updateDividendTracker,0.0,"Not REE, has OnlyOwner modifier.",1.0,,,0.0,0.0,"
"
0x0aabf9daefcd484405479d2748cbaedb53c33d87,MRFROGDividendTracker.process,0.0,"It is not REE, its reported processAccount function has the Onlyowner modifier.",1.0,,,0.0,1.0,--------
0x0af27f9be4ac583a491ee6573ebdccf32d1b561c,TheBureau121._RFT,0.0,"Not REE, has OnlyOwner modifier.",1.0,,,0.0,0.0,"
"
0x0af27f9be4ac583a491ee6573ebdccf32d1b561c,TheBureau121.transferOwner,0.0,"It is not REE, it has OnlyOwner modifier.",1.0,,,0.0,1.0,no RE -- modifier onlyOwner --------
0x0b452278223d3954f4ac050949d7998e373e7e43,SUZUME.intializeContract,0.0,"It is not REE, it has the OnlyOwner modifier.",1.0,,,0.0,0.0,no RE -- modifier onlyOwner
0x0b452278223d3954f4ac050949d7998e373e7e43,SUZUME.transferOwner,0.0,"Not a REE, has OnlyOwner modifier.",1.0,,,0.0,1.0,no RE -- modifier onlyOwner ---------- no UX: given functions always return true
0x0b5ecbb411d8fe829e5eac253ee1f2dc05d8d1ae,KUNOICHIX._transfer,0.0,"Not REE, there is lockTheSwap modification.",1.0,,,0.0,0.0,no RE -- no ext call in _transfer
0x0b9e8415f47da353ccc7ad58234321f50d49063a,Emeejis.orderEmeejis,0.0,"Not REE, there is a reentrancy lock protection.",1.0,,,0.0,1.0,no RE -- reentrancyLock--------
0x0bc95951bb59d6fd063ce7ad5c3b3dcaace98132,ViVICO.contribute,0.0,"Not REE, external calls are trusted. Transfer has a gas limit.",,,1.0,1.0,0.0,RE -- totalDistributed
0x0c073c92e7684031cfc297b83ecc33619e864d18,XetherGames.placeBet,0.0,"It is not REE, xEtherTokensContract is assigned a value in the setXEtherContract method modified by onlyOwner.",,,1.0,1.0,0.0,RE -- bet.gambler
0x0c073c92e7684031cfc297b83ecc33619e864d18,XetherGames.placeBetRoulette,0.0,"It is not REE, xEtherTokensContract is assigned in setXEtherContract, which is decorated by onlyOwner.",,,1.0,1.0,0.0,"
"
0x0c073c92e7684031cfc297b83ecc33619e864d18,XetherGames.sendDividends,0.0,"It is not REE; xEtherTokensContract is assigned in setXEtherContract, which is modified by onlyOwner.",,,1.0,1.0,1.0,--------
0x0c2795fc4e1f57614eb78923dc78521ff0676fb8,BitChordCrowdsale.buy,0.0,"It is not REE, the transfer has a gas limit, the token is trustworthy.",,1.0,,1.0,0.0,RE -- stage_1_TokensSold
0x0c78003843b4a72b765938cb3b14aecb188dbc6a,Crowdsale.__callback,0.0,"""Not REE, if (msg.sender != oraclize_cbAddress()) revert();""",1.0,,,1.0,0.0,"
"
0x0c78003843b4a72b765938cb3b14aecb188dbc6a,Crowdsale.buyTokens,0.0,"It's not REE, the transfer has a gas limit, and the token is trustworthy.",,1.0,1.0,0.0,1.0,--------
0x0c7e06db03aee1d592887deeb5cd20ce79f7bdbe,VotingChallenge.sendReward,0.0,"It is not REE, transfer has a gas limit, and the forwarder is assigned a value in the constructor.",,1.0,1.0,1.0,1.0,RE -- voters[to].weightedVotes[winner]--------
0x0c8f5a446e8df687dfa460d743cf3fc73a6b1676,Wallet.confirm,0.0,"Not REE, there is onlymanyowners protection.",1.0,,,0.0,1.0,no RE -- modifier onlymanywoners--------
0x0cb0a2136f2e80662eb5c50b96bfa3de85f335ce,IGLOO._transferFrom,0.0,"It is not REE, there is swapping protection.",1.0,,,0.0,0.0,no RE -- external call do not reenter
0x0ceae0bd68f89e41a1ed5dc20ca930c0c41856d7,EscrowGoods.arbYes,0.0,"It’s not REE, there is OnlyArbiter protection.",1.0,,,0.0,0.0,no RE -- external call is equipped with safetly lock against reentrancy
0x0ceae0bd68f89e41a1ed5dc20ca930c0c41856d7,EscrowGoods.getFees,0.0,"Not REE, there is OnlyArbiter protection.",1.0,,,0.0,1.0,no RE -- external call is equipped with safetly lock against reentrancy--------
0x0ceae0bd68f89e41a1ed5dc20ca930c0c41856d7,EscrowGoods.getMoney,0.0,"It is not REE, it has an atomic lock structure inside.",1.0,,,0.0,1.0,no RE -- external call is equipped with safetly lock against reentrancy---------- RE: safesend() sends ether
0x0ceae0bd68f89e41a1ed5dc20ca930c0c41856d7,EscrowGoods.yes,0.0,"It is not REE, it has an atomic lock structure inside.",1.0,,,0.0,0.0,no RE -- external call is equipped with safetly lock against reentrancy
0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e,SEISHI.transferFrom,0.0,"It's not REE, there is locktheSwap protection.",1.0,,,1.0,0.0,"
"
0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb,FUEGO.transferFrom,0.0,"It is not REE, there is locktheSwap protection.",1.0,,,1.0,0.0,"
"
0x0d7c864bf6c86bf11da2c8068b4c4edee4d76080,DappVolumeAd.updateAd,0.0,"Not REE, send has a gas limit.",,1.0,,1.0,1.0,---------- Reason for RE: reentering the function again can set the value of state var. purchaseTimestamp wrongly. It would affect other functions
0x0d7c864bf6c86bf11da2c8068b4c4edee4d76080,DappVolumeAd.updateInvestor,0.0,"Not REE, send has a gas limit.",,1.0,,0.0,1.0,"no RE -- sending 60% of msg.value -- no benefit to attacker, moreover there is no need of reentrancy to perform the attack--------"
0x0d7e1053924599ceac270d3a28b839282781ecec,ExchangerV4.buy,0.0,It is not REE; formulaContract and tokenContract are assigned values in the constructor.,,,1.0,0.0,1.0,"no RE -- 1st call sends eth to owner, 2nd call at the end--------"
0x0e24224484c7e445438ae9ed9b03a0108ad798f2,ChipToken._transfer,0.0,"It is not REE, there is a modification of lockTheSwap.",1.0,,,0.0,0.0,"
"
0x0e30bc9512306534b85afd0c75065b455af55d45,COPIUM._transfer,0.0,"It's not REE, there is a lockTheSwap modification.",1.0,,,0.0,0.0,"
"
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,NamiExchange.buyNac,0.0,"It is not REE, NamiAddr is modified in the constructor.",,,1.0,1.0,0.0,RE -- ask[_seller].volume = 0;
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,NamiExchange.closeAskOrder,0.0,"It is not REE, NamiAddr is modified in the constructor.",,,1.0,0.0,0.0,RE. --  namitoken.transfer cannot reenter
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,NamiExchange.closeBidOrder,0.0,"It is not REE, transfer has a gas limit.",,1.0,,1.0,0.0,"
"
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,NamiExchange.sellNac,0.0,"Not REE, NamiAddr is modified in the constructor.",,,1.0,1.0,0.0,RE -- bid[_buyer].eth = 0;
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,NamiPool._withdrawNAC,0.0,"It's not REE, NamiAddr is modified in the constructor.",,,1.0,0.0,0.0,no RE -- namitoken.transfer cannot reenter
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,NamiPool.withdrawTop,0.0,"Not REE, transfer has a gas limit.",,1.0,,1.0,0.0,"
"
0x0e3ea79e194aef78b69209447f0f6c17ed96a5d6,Web3NameService.allowListSubdomain,0.0,"It is not REE, transfer has a gas limit.",,1.0,,1.0,0.0,RE -- require(tokenAddressandID[new_domain] == 0)
0x0e3ea79e194aef78b69209447f0f6c17ed96a5d6,Web3NameService.register,0.0,It's not REE; transfer has a gas limit.,,1.0,,0.0,0.0,"
"
0x0e3ea79e194aef78b69209447f0f6c17ed96a5d6,Web3NameService.registerSubdomain,0.0,"It is not REE, transfer has a gas limit.",,1.0,,1.0,0.0,RE -- require(tokenAddressandID[new_domain] == 0)
0x0e82b29a77a53880dd4ee8326cfea9b4c68db638,DappIncubator.transfer,0.0,"Not REE, has nonReentrant modifier.",1.0,,,0.0,0.0,no RE -- external call() has modifier -- non-reentrant
0x0e9186d1d0c7aa2212e3f42405eda1bc35d826a9,dividendsContract.collectDividends,0.0,"It is not REE; dc is assigned a value in the ICO address, and this function is modified by onlyOwner.",,,1.0,1.0,1.0,---------- Reason for RE: state var. paid[member] and state var. totalPaid
0x0e94278497e51629c78697dac758fded6c8f188f,Dividends.fallback,0.0,"It’s not REE, transfer has a gas limit, and tokenReward is assigned a value in the constructor.",,1.0,1.0,1.0,1.0,---------- Reason for RE: State variable users[user]-- It has reentrancy because of updation of the variable users[user] after transfer; it is checked in if condition (users[user] != 1) -- Reason for no UX: transfer function returns exception on fail
0x0eabed78fd49ad3c0a3e445954f29522025c09a0,WOAI.reserveWoai,0.0,"It is not REE, it has OnlyOwner modifier.",1.0,,,0.0,1.0,no RE --  -- onlyowner modifier--------NO COMMENTS SPECIFIED
0x0eb65b4c3d3de340e1b15384f8f211784247a37a,ReserveAuctionMarketplace._removeReserveAuctionListing,0.0,"Not REE, a private function, called by two functions modified with nonReentrant.",1.0,,,1.0,1.0,---------- no RE: _removeReserveAuctionListing is private and this function is called from onlythose functions which are non reentrant
0x0efef0b34638addc8833ba729ae20016b5f24ffc,WithdrawContract.withdraw,0.0,"Not REE, rewardToken is assigned in the constructor, deposits are controllable. Transfer has a gas limit.",,,1.0,1.0,1.0,RE -- currentToken != d.token--------
0x0f6423618083e15989be7e4208c222cf759f99fb,TradableErc20.makeLiquidity,0.0,"Not REE, has OnlyOwner modifier.",1.0,,,0.0,1.0,no RE -- modifier--------
0x0f7f8ca2c9b617b4dabb1a16c3e2dc5d83faf907,PreOrder.confirmOrder,0.0,"It is not REE, the controllable transfer in the tokenAddress constructor has a gas limit.",,,1.0,1.0,1.0,"---------- Reason for RE: Token(tokenAddress).transfer(owneraddress;price) can reenter and stat. var named ""status"""
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.ETHsend,0.0,"It is not REE, there is secondaryUserLock.",1.0,,,0.0,0.0,"
"
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.addKey,0.0,"It is not REE, there is a secondaryUserLock.",1.0,,,0.0,0.0,"
"
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.deposit,0.0,"It is not REE, there is userLock.",1.0,,,1.0,0.0,"
"
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.emergencyWithdraw,0.0,"It is not REE, there is userLock.",1.0,,,0.0,0.0,No RE --userLock[msg.sender] = true; -- reentrancy lock
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.paySubscription,0.0,"It is not REE, there is a secondaryUserLock.",1.0,,,0.0,0.0,No RE -- secondaryUserLock[msg.sender] = false; -- reentrancy lock
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.preApproveTokens,0.0,"Not REE, there is a secondaryUserLock.",1.0,,,0.0,0.0,No RE -- secondaryUserLock[msg.sender] = false; -- reentrancy lock
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.sendtoRecipient,0.0,"Not REE, internal function, only called by specialdeposit, this function has userlock.",1.0,,,1.0,0.0,"
"
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.tokenSend,0.0,"It is not REE, there is a secondaryUserLock.",1.0,,,0.0,0.0,No RE -- secondaryUserLock[msg.sender] = false; -- reentrancy lock
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.withdraw,0.0,"Not REE, has userLock.",1.0,,,1.0,0.0,"
"
0x10452f898766f59a8514dc6856ff62bbdc6a0f51,Piggy_BNK.Collect,1.0,Classic REE structure.,,,,1.0,1.0,--------Reentrancy is the a vulnerability where an external contract can call back into the current contract before the current function has completed. This can potentially lead to unexpected behavior. In the above code snippet the 'msg.sender.call.value(_am)()' line is a call to an external contract using the low-level 'call' function.
0x10819fae72282b9a594e34c647a7bc446ef4ad2e,CryptoFun.doInvest,1.0,"It is REE, refererAddr.notZero() where refererAddr is a user input variable.",,,,1.0,1.0,--------
0x108523415a8cd7cb8ef2d6b12177181f489ec210,DividendDistributor.distributeDividend,0.0,"It is not REE, USDC hardcoded transfer has a gas limit.",,,1.0,1.0,1.0,--------
0x10bbbebacd34509b1388a528003dbb77c20b22ba,MappingTokenFactory._createMappingToken,0.0,"It's not REE; create2 ultimately generates a proxy contract, and the corresponding implementation inside it can only be called by the governor. I'm not sure, the mapping token is created using assembly language, and it should be controllable by the user.",,,,1.0,0.0,"
"
0x10bbbebacd34509b1388a528003dbb77c20b22ba,MappingTokenFactory.createMappableToken,0.0,"It is not the same as REE above, uncertain, mapping token is created through assembly language and should be controllable by the user.",,,,1.0,0.0,"
"
0x10bbbebacd34509b1388a528003dbb77c20b22ba,MappingTokenFactory.createTokenMapped,0.0,"It is not the same as REE, not sure, tokenMapped is created through assembly language and should be controllable by the user.",,,,1.0,1.0,--------
0x1190074795dad0e61b61270de48e108427f8f817,CoinMerge.teamWithdraw,0.0,"It's not REE, transfer has a gas limit.",,1.0,,1.0,0.0,"
"
0x119f4c9de5539fd053aed5091db4ba59f83330d7,DividendPayingToken._withdrawDividendOfUser,0.0,"Not REE, has gas keyword, initially set to 3000, and only the owner can adjust it.",,1.0,,0.0,1.0,--------
0x119f4c9de5539fd053aed5091db4ba59f83330d7,PENGUDividendTracker.process,0.0,"It is not REE, the processAccount in the indirect call has the onlyowner modifier.",1.0,,,0.0,0.0,No RE --- ext calls not malicious
0x121726eaab9965b918f00b9871c25c4baf5cc960,Event.distribute,1.0,"It is REE, attends are unreliable.",,,,0.0,1.0,No RE ---  --             states[attendees[i]] = ATTENDEE_REWARDED;--------
0x125365069020439b830c9eac9dd402f8aa762569,RatScam.determinePID,0.0,It is not REE; RatBook was hardcoded in the statement.,,,1.0,1.0,0.0,RE --  getPlayerID can reenter
0x125365069020439b830c9eac9dd402f8aa762569,RatScam.endRound,0.0,"It is not REE, RatKingCorp was hardcoded in the statement.",,,1.0,0.0,1.0,No RE ---  sends eth to fixed address--------
0x12d82d7cf17d909fb5808707136200ed200b6d52,Investment.processUserTransactions,0.0,"It's not REE, there is onlyOne modifier.",1.0,,,0.0,0.0,No RE --- modifier onlyOwner
0x12d82d7cf17d909fb5808707136200ed200b6d52,Investment.removeOrder,1.0,"It is REE, and the first condition mentioned later is an unreliable condition. There is require(_userActions[indexOfOrder].user == msg.sender || msg.sender == owner() || msg.sender == address(this));.",,,,1.0,1.0,--------
0x12db622c98d75f6f19493d9acbc7479fe382ec44,TBECrowdsale.fallback,0.0,"It is not REE, transfer has a gas limit, and tokenReward is reliable.",,1.0,1.0,1.0,1.0,---------- Reason for no UX: tokenReward.transfer() does not return any value -- Reason for RE: whitelistedMax[msg.sender]
0x132e2b67e91bf0294536b16d772e8dee099fc40c,Brave3d.overStage,0.0,"It is not REE, p3dContract is hardcoded at the time of declaration.",,,1.0,1.0,0.0,"
"
0x132e2b67e91bf0294536b16d772e8dee099fc40c,Brave3d.withdraw,0.0,"It is not REE, transfer has a gas limit; p3dContract is hardcoded at declaration.",,1.0,1.0,0.0,1.0,--------
0x136e99a415957fc3f23e0a6885b22bcd0c475ab4,Voting.addDestructionProposal,0.0,"It's not REE, transfer has a gas limit; poolAddr is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,No RE ---  addProposal -- sends Eth to a fixed address--------
0x136e99a415957fc3f23e0a6885b22bcd0c475ab4,Voting.addRaiseTapProposal,0.0,"Not REE, transfer has a gas limit; poolAddr is assigned a value in the constructor.",,1.0,1.0,0.0,0.0,No RE ---  addProposal -- sends Eth to a fixed address
0x13d6cfd3b119dadaadd7561fe9a864064259bc56,SafeDif.distributeRef,0.0,"Not REE, transfer has a gas limit.",,1.0,,0.0,0.0,"
"
0x13d6cfd3b119dadaadd7561fe9a864064259bc56,SafeDif.withdraw,0.0,"It’s not REE, send has a gas limit.",,1.0,,1.0,1.0,---------- Reason for UX: sender.send()-- Reason for RE: player_[uid].plans[i].isClose = bClose;
0x13ddd5c273a027608a42727a46f8250011645166,Fund.fundWithdraw,0.0,"Not REE, with _rA modification.",1.0,,,0.0,1.0,No RE ---  modifier---------- Reason for no UX: transfer() function throws error if it fails
0x143eea4413231878f58dc812b3dc6f22835a5dd6,cb_BANK.Collect,1.0,Typical REE structure.,,,,1.0,1.0,--------
0x150dbfc384ba5c13c304efd2efee73cc57cc2c16,Lottery10ETH.drawing,0.0,"It is not REE, send has a gas limit; x, LT, WT, and RS are assigned values in the constructor.",,1.0,1.0,1.0,1.0,--------
0x150dbfc384ba5c13c304efd2efee73cc57cc2c16,Lottery10ETH.fallback,0.0,"It is not REE, transfer, send has a gas limit; x, LT, WT, RS are assigned values in the constructor.",,1.0,1.0,0.0,0.0,No RE --- array issue player_[_affID2].aff is updated and dependency on other
0x15ada2a8e62134806a86db3030fefc0a2a13cc99,PonyBreeding.giveBirth,0.0,"It is not REE; geneScience is assigned in the setGeneScienceAddress function, which is protected by OnlyCEO.",,,1.0,1.0,0.0,RE --mixGenes() can reenter
0x15ada2a8e62134806a86db3030fefc0a2a13cc99,PonyUpgrade.upgradePony,0.0,"It is not REE, geneScience is assigned in the setGeneScienceAddress function, which has OnlyCEO protection.",,,1.0,1.0,0.0,RE -- upgradeponyResult can callback
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,Depot.exchangeEtherForSynths,0.0,"It is not REE; transfer and send have a gas limit, and synth is controllable.",,1.0,1.0,1.0,1.0,RE -- multi call--------
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,Synthetix.removeSynth,0.0,"It is not REE, there is optionalProxy_onlyOwner protection.",1.0,,,0.0,0.0,No RE ---  modifier
0x1684843a68f7e6489c666d524f178edb1af27772,BabyDubbz._transferFrom,0.0,"It is not REE, but has swapping modification.",1.0,,,0.0,0.0,"
"
0x1684843a68f7e6489c666d524f178edb1af27772,DividendDistributor.distributeDividend,0.0,"Not REE, the address is trustworthy, transfer has a gas limit.",,,1.0,1.0,1.0,--------
0x172e09691dfbbc035e37c73b62095caa16ee2388,Depot.exchangeEtherForSynths,0.0,It is not REE; transfer and send have gas limits.,,1.0,,1.0,1.0,--------
0x172e09691dfbbc035e37c73b62095caa16ee2388,Synthetix.removeSynth,0.0,"Not REE, there is optionalProxy_onlyOwner protection.",1.0,,,0.0,0.0,No RE --- modifier
0x1806b3527c18fb532c46405f6f014c1f381b499a,PlanetCryptoToken.buyLand,0.0,It's not REE; planetCryptoUtils_interface is assigned a value in the constructor.,,,1.0,1.0,0.0,"
"
0x190956a704fbb70f0acce8338870771d17654952,MessierAnonymity.swapAndShare,0.0,"Not REE, private functions, called by functions decorated with nonReentrant and OnlyOwner.",1.0,,,0.0,1.0,No RE ---  array issue -- shareOfReward--------
0x1963737af12d3649f6f319fb64af2aa29f7256b7,MessierAnonymity.swapAndShare,0.0,"It is not REE, a private function called by functions modified by nonReentrant and OnlyOwner.",1.0,,,0.0,1.0,No RE ---  array issue -- shareOfReward--------
0x19b423e5131d8e4996a18e69d0cb99674ba34c21,BuybackBabyToken._transferFrom,0.0,"Not REE, there is swapping modification.",1.0,,,0.0,0.0,No RE ---  external call at the end
0x19b423e5131d8e4996a18e69d0cb99674ba34c21,DividendDistributor.distributeDividend,0.0,"It is not REE, the address is a reliable transfer with a gas limit.",,,1.0,1.0,1.0,--------
0x1a050d77003caee532df18d04d86b99ca15bf9e8,POOHMO.determinePID,0.0,"It is not REE, PlayerBook was hardcoded at the time of the statement.",,,1.0,1.0,0.0,RE -- getPlayerID can reenter
0x1a050d77003caee532df18d04d86b99ca15bf9e8,POOHMO.endRound,0.0,"It's not REE, flushDivs is assigned a value in the constructor.",,,1.0,0.0,1.0,No RE ---  sending eth to fixed address (admin)--------
0x1a9206cd9a4c59967ca728ca96b15287b2fd4c7c,CoinFlip.refundFlip,0.0,"Not REE, because there are restrictions on the transfer. The first judgment of the condition after the locking structure formed by flips[_flipId].completed seems to be uncontrollable. There is a require(msg.sender == flips[_flipId].owner || msg.sender == owner) protection.",1.0,,,0.0,0.0,No RE --- array issue
0x1b6df88f60b6b7c2b7f9b6beec4a6b3841a10d6c,Primacorp.fallback,0.0,"Not REE, transfer has a gas limit, and the address is trustworthy.",,1.0,1.0,1.0,1.0,---------- Reason for Reentrancy Vulnerability: allowance[msg.sender] =0 is set after the external call and if condition checks whether allowance[msg.sender] > 0 or not
0x1c1de57cc864072f7eab381c4c06b14a6963dd4b,ERC20dex.trade,0.0,"It is not REE, there is a require(msg.sender == trader) protection.",1.0,,,0.0,0.0,No RE --- array issue
0x1da73fc09ea07781482994036a0eecc7e6952dfb,TydoIco.refund,0.0,"It is not REE, transfer has a gas limit, and the address is trustworthy.",,1.0,1.0,1.0,1.0,--------
0x1e887e7115321b4ee5d58dd446ec09e12b45d81b,GFarm.POOL1_unstake,0.0,"Not REE, the token is modified in set_TOKEN, and this function is modified by onlyGoV.",,,1.0,1.0,1.0,--------
0x1f42f986f9ef31d6ef787565b211bce0eb877bcc,GameWave.startPayments,0.0,"It is not REE, transfer has a gas limit.",,1.0,,0.0,0.0,No RE --- send to fixed address
0x20c476bb4c7aa64f919278fb9c09e880583beb4c,X3ProfitMainFundTransfer.fallback,0.0,"It is not REE, ADDRESS_EIFP2_CONTRACT is hardcoded at declaration.",,,1.0,1.0,1.0,---------- Reason for RE: Variable isResend
0x214a8abb5fd89d3605c6cadb178f1748c36f6b8d,PAPE.openTrading,0.0,"Not REE, there is OnlyOwner modifier.",1.0,,,0.0,0.0,No RE --- onlyowner
0x2247fdc0e5de91ae589abfab8b99976d8e9f330b,BoomerangLiquidity.payout,1.0,"It is REE, participants are uncontrollable.",,,,1.0,1.0,--------
0x2268003d92ff03be6ca6da029f8d8127fd2f617e,ShortOrder.exerciseLong,1.0,"There is REE risk, tokenUser is uncontrollable.",,,,1.0,0.0,"
"
0x2268003d92ff03be6ca6da029f8d8127fd2f617e,ShortOrder.nonActivationShortWithdrawal,0.0,"Not REE, transfer has a gas limit.",,1.0,,1.0,0.0,"
"
0x2268003d92ff03be6ca6da029f8d8127fd2f617e,ShortOrder.nonActivationWithdrawal,0.0,"It's not REE, transfer has a gas limit.",,1.0,,1.0,0.0,"
"
0x2268003d92ff03be6ca6da029f8d8127fd2f617e,ShortOrder.tokenFulfillmentDeposit,1.0,"It is REE, the tokenUser address can be input by the function.",,,1.0,1.0,0.0,"
"
0x2463a3f13cea3ea308be5c23cc887fdf205653ea,ADAMPROJECT._transfer,0.0,"It is not REE, there is locktheSwap protection.",1.0,,,0.0,0.0,"
"
0x2463a3f13cea3ea308be5c23cc887fdf205653ea,ADAMPROJECT.swapBack,0.0,"It is not REE, there is locktheSwap protection.",1.0,,,0.0,0.0,No RE --- modifier
0x246fcdc18bf3781b4c5100b3a6decef8dbcc8a31,AIDOGEX._transfer,0.0,"Not REE, uniswapV2Router is assigned in the constructor.",,,1.0,0.0,0.0,dynamic No RE -- inSwapAndLiquify
0x25061388ba6886d98110f7355e4f2c5912ae53c8,DividendDistributor.distributeDividend,0.0,"Not REE, address-controlled transfer has a gas limit.",,,1.0,1.0,1.0,--------
0x2638a23a9118d5786b6a6529bf3c09c922d3cdad,Infernu.claimETH,0.0,"It is not REE, the _isWithdrawing variable lock.",1.0,,,0.0,0.0,dynamic No RE -- iswithdrawing
0x2767e2ad18b358be2b511963a1b236b48203618c,BabyPOOF._transferFrom,0.0,"It is not REE, there is swapping protection.",1.0,,,0.0,0.0,"
"
0x2767e2ad18b358be2b511963a1b236b48203618c,DividendDistributor.distributeDividend,0.0,"It is not REE, the controllable transfer address has a gas limit.",,,1.0,1.0,1.0,--------
0x284b0f2f49d072836db87dd25d0623cd2f622bb1,DesTokenSale.doPurchase,0.0,"It is not REE, the token is assigned a value in the constructor.",,,1.0,0.0,0.0,No RE ---  two transfer of diff types for multi call
0x28eeac83b9c843ef2fc6c78bcd860cab46aa88d0,DividendDistributor.distributeDividend,0.0,"It's not REE, the transfer has a gas limit.",,1.0,,1.0,1.0,--------
0x28eeac83b9c843ef2fc6c78bcd860cab46aa88d0,PepeBonk._transferFrom,0.0,"Not REE, there is swapping protection.",1.0,,,0.0,0.0,"
"
0x2934443c1749dcc0cdcabbd77098eea31d2ea6c3,xSNXCore.mint,0.0,"It is not REE, tradeAccounting is assigned a value in the constructor.",,,1.0,0.0,0.0,"
"
0x2980b7c0c8e1a2c0bdecff55cde9e3576aaf9eaf,PiZZa.reinvestEarnings,0.0,"Not REE, controllable transfer address has a gas limit.",,,1.0,0.0,1.0,---------- no UX: transfer() always return true
0x2980b7c0c8e1a2c0bdecff55cde9e3576aaf9eaf,PiZZa.withdraw,1.0,"It is REE, the resolveToken address is controllable, but the subsequent sender call is uncontrollable. The transfer has a gas limit.",,,,0.0,1.0,No RE --- transfer cannot reenter--------
0x299e52c5d34596c05a04b61514dd79808167015a,TreasureHunt.unlockTreasure,0.0,"It is not REE, DGX_TOKEN_ADDRESS is assigned a value in the constructor, and transfer has a gas limit.",,1.0,1.0,1.0,1.0,--------The contract has reentrancy vulnerability because of isActive variable. The attacker can reenter through transfer function; get more transfer done before isActive variable is set to false
0x29aa20fb9b23421e310bdb8a7cfb81d7fbb4a1b3,SharkPool.do_redemption,0.0,"Not REE, the address-controlled transfer has a gas limit.",,,1.0,1.0,1.0,--------
0x2aeee16d8412beabc5f38a6995ee5e4d32ab7f9d,RAGE._transfer,0.0,"It is not REE, there is lock the Swap protection.",1.0,,,0.0,0.0,"
"
0x2c125240e472e752bcfd1627ff7632b6c5265b2e,Bussiness.buy,0.0,"Not REE, transfer has a gas limit; erc721Address is assigned a value at declaration.",,1.0,1.0,1.0,0.0,"
"
0x2c125240e472e752bcfd1627ff7632b6c5265b2e,Bussiness.buyByUsdt,0.0,It is not REE; the erc721Address and usdtToken are hardcoded at the time of declaration.,,,1.0,1.0,0.0,"
"
0x2c125240e472e752bcfd1627ff7632b6c5265b2e,Bussiness.removePrice,0.0,"It is not REE, transfer has a gas limit; hbwalletToken is hardcoded during declaration.",,1.0,1.0,1.0,1.0,--------
0x2c125240e472e752bcfd1627ff7632b6c5265b2e,Bussiness.setPriceFeeHBWALLET,0.0,"It is not REE, erc721Address and hbwalletToken are hardcoded at declaration.",,1.0,1.0,1.0,0.0,"
"
0x2cc6ca9c3023a6a876fd54a03f68281c7aad0e8b,Escrow.fundICO,0.0,"""Not REE, if (msg.sender != addressSCICO || tx.origin != owner) protect.""",1.0,,,0.0,1.0,No RE ---  if (msg.sender != addressSCICO || tx.origin != owner) {--------
0x2cc6ca9c3023a6a876fd54a03f68281c7aad0e8b,ICO.finalize,0.0,"It is not REE, it has OnlyOwner modifier.",1.0,,,0.0,0.0,No RE --- onlyOwner
0x2cc6ca9c3023a6a876fd54a03f68281c7aad0e8b,Tokens.refundTokens,0.0,"It is not REE, there is protection in notTimeLocked.",1.0,,,0.0,0.0,No RE --- validate does not reenter
0x2cc6ca9c3023a6a876fd54a03f68281c7aad0e8b,Tokens.transfer,0.0,"It is not REE, there is protection in notTimeLocked.",1.0,,,0.0,0.0,No RE --- validate does not reenter
0x2cc6ca9c3023a6a876fd54a03f68281c7aad0e8b,Tokens.transferFrom,0.0,"It is not REE, there is protection in notTimeLocked.",1.0,,,0.0,0.0,No RE --- validate does not reenter
0x2cf5694906bdd80f33bac7cb80183f1c61bc5be2,PaymentProcessor.processPayment,0.0,"It is not REE, there is only Monetha protection.",1.0,,,0.0,0.0,No RE --- onlyMonetha
0x2d5df43d54ae164a912db8de092cf707b446f693,CA_BANK.Collect,1.0,Typical REE structure.,,,,1.0,1.0,--------
0x2e09a70dca6ab05505b26382003912783e588f9c,PhantomProject.swapAndLiquify,0.0,"It is not REE, there is lock the Swap protection.",1.0,,,0.0,1.0,No RE --- modifier ensures that function won't reenter--------
0x2e6d72d5948c0cb0b9ac1adc2034e16d02cdabda,MILADYXP._transfer,0.0,"Not REE, there is locktheSwap protection.",1.0,,,0.0,0.0,"
"
0x300af88747b3f913012753071f209b48b30ea1ac,BabyApe._transfer,0.0,"Not REE, there is locktheSwap protection.",1.0,,,0.0,0.0,"
"
0x300af88747b3f913012753071f209b48b30ea1ac,DividendDistributor.distributeDividend,0.0,"Not REE, the address is a reliable transfer with a gas limit.",,,1.0,1.0,1.0,--------
0x308af1c4759dcb9f2ac2accdcd301862702df40f,Escrow.cancelTokenTransaction,0.0,"It is not REE, a private function, called by the function modified by onlyAllowed.",1.0,,,1.0,1.0,---------- It does not have reentrancy vulnerability because its visibility is private; it cannot be called through any other public functions. Attacker can't reach the function
0x308af1c4759dcb9f2ac2accdcd301862702df40f,Escrow.cancelTransaction,0.0,"Not REE, a private function, called by a function modified by onlyAllowed.",1.0,,,1.0,0.0,"
"
0x308af1c4759dcb9f2ac2accdcd301862702df40f,Escrow.createTokenTransaction,0.0,"Not REE, with onlyAllow modification.",1.0,,,0.0,0.0,No RE --- modifier
0x308af1c4759dcb9f2ac2accdcd301862702df40f,Escrow.releaseFunds,0.0,"Not REE, a private function called by a function modified by onlyAllowed.",1.0,,,1.0,1.0,---------- Reason for RE: releaseFunds can be called by release function. reentrancy because of following lines: Transaction storage transaction = transactions[_tag]; require(transaction.status == transactionStatus.Pending); ........................................................................................ .............................Code Logic......................................... ........................................................................................ transaction.status = transactionStatus.PendingR1; -- Reason for UX: token.transfer returns boolean value
0x308af1c4759dcb9f2ac2accdcd301862702df40f,Escrow.userRecover,0.0,"It is not REE, base and eternal are assigned values in the constructor.",,,1.0,0.0,0.0,"
"
0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec,EthTokenToSmthSwaps.createSwap,1.0,"It is REE, _token in the function parameters.",,,,1.0,0.0,"
"
0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec,EthTokenToSmthSwaps.createSwapTarget,1.0,"It is REE, _token in the function parameters.",,,,1.0,0.0,"
"
0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec,EthTokenToSmthSwaps.refund,1.0,"It is REE, and the _token coming from the function parameters causes the swap variable to be uncontrollable.",,,,1.0,0.0,"
"
0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec,EthTokenToSmthSwaps.withdraw,1.0,It is the same as REE above.,,,,1.0,1.0,---------- Reason for RE: swaps[_ownerAddress][msg.sender].balance
0x30f85ebcfac9f6dd69503955e95ab7f55fa3fdec,EthTokenToSmthSwaps.withdrawNoMoney,1.0,It is the same as REE above.,,,,1.0,0.0,"
"
0x3114b3312417b27a83bfd934764eee363d1e9325,Dice.__callback,0.0,"It is not REE, there is a require(msg.sender == oraclize_cb); protection.",1.0,,,0.0,1.0,--------
0x31718bcf61910b6760ec5fc6aaa8a6a0110af902,PepFarmer.reapFarm,0.0,"Not REE, object hardcoded. Transfer has a gas limit.",,,1.0,1.0,1.0,--------
0x32ed067fb79b38b65e1fdd2bcc8c81078b866c3b,$BITCOINReflections._transferFrom,0.0,"Not REE, has swapping protection.",1.0,,,0.0,0.0,"
"
0x32ed067fb79b38b65e1fdd2bcc8c81078b866c3b,DividendDistributor.distributeDividend,0.0,"Not REE, the address is credible. Transfer has a gas limit.",,,1.0,1.0,1.0,--------
0x32fd0a9206c6ada63ceb2738449261e3a876bbf6,Town.claimExternalTokens,1.0,"It is REE, external calls are uncontrollable. There may just be no attack risk.",,,,1.0,1.0,--------
0x32fd0a9206c6ada63ceb2738449261e3a876bbf6,Town.claimFunds,0.0,"Not REE, transfer has a gas limit.",,1.0,,1.0,0.0,"
"
0x32fd0a9206c6ada63ceb2738449261e3a876bbf6,Town.getTownTokens,0.0,"Not REE, transfer has a gas limit, and the _token value is assigned in a trusted constructor.",,1.0,1.0,1.0,1.0,--------
0x32fd0a9206c6ada63ceb2738449261e3a876bbf6,Town.remuneration,0.0,"It is not REE, the _token is assigned a value in the constructor.",,,1.0,1.0,1.0,RE -- if (restOfTokens < amount) {--------
0x356598a62aed83950e724db6e62b10b1027e33e2,RuneLock._releaseTokens,1.0,"It is REE, the _tokenAddress external parameter is uncontrollable. There may just be no attack risk.",,,,1.0,1.0,--------
0x356598a62aed83950e724db6e62b10b1027e33e2,RuneLock.lockTokens,1.0,"It is REE, and _tokenAddress is in the function parameters.",,,,1.0,0.0,RE --beneficiaryToReleaseTime
0x37238583c041a2f51964f23fde2710c4fbd29e9e,BATMO.determinePID,0.0,It is not REE; PlayerBook was hardcoded in the statement.,,,1.0,1.0,0.0,RE -- getPlayerName -- can callback
0x37238583c041a2f51964f23fde2710c4fbd29e9e,BATMO.endRound,0.0,It is not REE; ObokContract is assigned a value in the constructor.,,,1.0,1.0,1.0,---------- RE: state var rID_
0x372bf2843c4e4e2f6f7fba9e2e6dbe6adf2b760f,HayReflections.distributeDividend,0.0,"Not REE, the address is controllable. Transfer has a gas limit.",,1.0,,1.0,1.0,--------
0x372bf2843c4e4e2f6f7fba9e2e6dbe6adf2b760f,hayr._transfer,0.0,"Not REE, there is locktheSwap protection.",1.0,,,0.0,0.0,"
"
0x3775876e537df71b60061151b39bcfb638f832f5,DividendDistributor.distributeDividend,0.0,"It is not REE, there is a gas keyword.",,1.0,,0.0,0.0,No RE --- if(shares[shareholder].amount == 0){ return; } -- array issue
0x37e343f2cc245754595f1ae3656b460c35d636fb,BalanceManager.systemWithdraw,0.0,"It is not REE, there is Onlyserver.",1.0,,,0.0,1.0,No RE --- modifier---------- Reason for RE: gameToken can callback and get extra tokens; state var.: balances[userId] -- Reason for UX: gameToken.transfer() returns boolean value
0x37e343f2cc245754595f1ae3656b460c35d636fb,BalanceManager.withdraw,0.0,"Not REE, gameToken is controllable. Transfer has a gas limit.",,,1.0,1.0,1.0,---------- Reason for RE: balances[userId]
0x380e0f015c0a830dc5d25e5f99570ad0be275350,Button.close,0.0,"It is not REE, send has a gas limit; the factory is hardcoded during declaration.",,1.0,1.0,0.0,1.0,No RE --- special case with selfdestruct instruction--------
0x38721079a72030ab1817fb9e1aaa86ae0d08356f,Investment.removeFromPool,1.0,"It is REE, msg.sender will experience reentrancy.",,,,1.0,0.0,"
"
0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215,LiquidityPool.migrateTokens,0.0,It is not REE; uniswapPair is hardcoded in the constructor.,,,1.0,1.0,0.0,"
"
0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215,LiquidityPool.reinvestRewards,0.0,It is not REE; minter and uniswapPair are hardcoded in the constructor.,,,1.0,0.0,0.0,No RE --- array issue
0x3f513977cd827428e0459fdef7217cd6272dc893,KittenSelfDrop2.fallback,0.0,It is not REE; kittenContract is assigned a value in the constructor.,,,1.0,1.0,1.0,"---------- Reason for reentrancy vuln:  1. require (participants[msg.sender] < dropNumber && kittensRemainingToDrop > basicReward); --> checked before external call 2. kittenContract.transfer(msg.sender; tokensIssued); participants[msg.sender] = dropNumber; kittensRemainingToDrop -= tokensIssued; kittensDroppedToTheWorld += tokensIssued; --> updated after external call transfer() -- Reason for UX: transfer function declared in ""contract KittenCoin"" returns boolean"
0x400e115f1be2b646139c298272a43b2cff2b127e,PiggY_BANK.Collect,1.0,Typical REE structure.,,,,1.0,1.0,---------- Reason for RE: State variable acc.balance
0x40da24a66f729d0bd0453681c5a6506bdc2a7a6a,CrwdTimelock.release,0.0,"Not REE, address controllable. Transfer has gas limit.",,,1.0,1.0,1.0,---------- Reason for RE: State variable balances[_beneficiary]-- Reason for no UX: transfer function defined in token contract always return true; no need to check the return value
0x41021442eab722c0a52c61738550faabfd0fca4e,Crowdsale.fallback,0.0,"Not REE, address is controllable. Transfer has a gas limit.",,,1.0,0.0,1.0,---------- Reason for no UX: tokenreward.transfer() does not return any value
0x42a4a749123469ca6a8b6ca494b1953076a26ef7,SendTokensContract.withdrawTokens,0.0,"Not REE, the address is controllable. Transfer has a gas limit.",,,1.0,1.0,1.0,---------- Reason for no UX: token.transfer() does not return any value
0x4470887011bbf1e196b62020266aa5ae1081bd70,Deposit.ClaimMTU,0.0,"It's not REE; transfer has a gas limit, and the source of tokenAddress is the getAddress function. Following the previous discussion, we can analyze the parent contract separately. In this function, external calls cannot be assigned value, which is considered uncontrollable.",,1.0,1.0,1.0,0.0,"
"
0x4470887011bbf1e196b62020266aa5ae1081bd70,Redeem.RedeemMTU,0.0,"It is not REE, transfer has a gas limit, RegistryAddress is assigned a value in the constructor of MoatFund, as above.",,1.0,1.0,1.0,1.0,---------- Reason for RE: state variable Redeemer[msg.sender]; withdrawVal is calulated based on Redeemer[msg.sender] -- Reason for UX: tokenFunction.transfer() returns boolean value
0x463f235748bc7862deaa04d85b4b16ac8fafef39,PrivateBank.CashOut,1.0,Typical REE structure.,,,,1.0,1.0,---------- Reason for RE: state var. balances[msg.sender]
0x465cd6299775dc459a23c80997d2664656be9780,SafeDif.distributeRef,0.0,"Not REE, transfer has a gas limit.",,1.0,,0.0,0.0,No RE --- array issue player_[_affID2].aff is updated and dependency on other
0x465cd6299775dc459a23c80997d2664656be9780,SafeDif.withdraw,0.0,"Not REE, send has a gas limit.",,1.0,,1.0,1.0,---------- Reason for RE: state var. player_[uid].plans[i].isClose
0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407,DecentralizedExchangeHotPotato.buy,0.0,"Not REE, transfer has a gas limit.",,1.0,,0.0,0.0,No RE --- dynamic No RE
0x46cefba4dd7512b2449e1ac4b730bfb7f77d1407,DecentralizedExchangeHotPotato.revoke,1.0,"It is REE, the orderBook is uncontrollable, so require(msg.sender == orderBook[_id].owner) does not provide protection (it only protects the msg sender themselves).",,,,1.0,1.0,---------- Reason for no UX : Issuer.transfer does not return any value; so no need to check
0x470142a1834438515b757118f322703aba6e1e05,PolicyPalNetworkAirdrop.signatureDropMultipleAmount,0.0,"Not REE, there is OnlyAdmin protection.",1.0,,,0.0,1.0,No RE --- onlyAdmin---------- Not UX because they have used assert -- Reason for no RE: modifier onlyOwner
0x470142a1834438515b757118f322703aba6e1e05,PolicyPalNetworkAirdrop.twitterDropMultipleAmount,0.0,"Not REE, only Admin protection.",1.0,,,0.0,1.0,"No RE --- onlyAdmin--------Reentranct contract because of the line ""twitterdrops[recipient] = true;"""
0x479cbe1f6a7fa4d7e304ae983803c46e85ced870,Slaughter3D.tryFinalizeStage,0.0,"Not REE, transfer has a gas limit.",,1.0,,1.0,0.0,"
"
0x4bb12d68c795462c12ec30ad82421218d9c32a7d,Crowdsale.safeWithdrawal,0.0,"Not REE, send has a gas limit.",,1.0,,0.0,0.0,"No RE --- if (fundingGoalReached && beneficiary == msg.sender) -- will be executed only if first if fails. It is like: ""else if"""
0x4e61ba9c25d43e802c6be8d160432e4989dea1fc,IOU.withdraw,0.0,"It is not REE, the token is hardcoded at the time of declaration.",,,1.0,0.0,1.0,No RE --- seem like multi call but calls are different---------- It does not have UX --> token.transfer does not return boolean; no need to check
0x4e73b32ed6c35f570686b89848e5f39f20ecc106,PRIVATE_ETH_CELL.Collect,1.0,Typical REE structure.,,,,1.0,1.0,--------Reason for RE: state var. balances[msg.sender]
0x4f0499f4da2d75d03fcc2dc2d97ffae976246809,VestingContractWT.transfer,0.0,"It is not REE, we_token is assigned a value in the constructor.",,,1.0,1.0,1.0,---------- Reason for RE: state vars. account_data[msg.sender].current_transferred and account_data[msg.sender].current_balance
0x5211475520dc4a13fee1cc7c2c0c1167998bcbb8,AuctionContract.closeAuction,0.0,"Not REE, use assert(msg.sender == winner); for protection.",1.0,,,1.0,1.0,No RE --- assert(msg.sender == winner) -- However state variable winner can be written by a public function. ---------- Reason for RE: state var. isActive -- Reason for UX:  auctioneer.createAuctionContract() can fail
0x530a9cceee0c45f58229ae5c256e414e6df957ad,ABIO_BaseICO.burnRestTokens,0.0,"It is not REE, abioToken is assigned a value in the constructor.",,,1.0,1.0,0.0,"
"
0x533411c7c401ee3a136ddc7a2fc95d6624c9e041,VestingContractWTTEST.transfer,0.0,"It's not REE, we_test_token is assigned a value in the constructor.",,,1.0,1.0,1.0,---------- Reason for RE: state vars. account_data[msg.sender].current_transferred and account_data[msg.sender].current_balance
0x561eac93c92360949ab1f1403323e6db345cbf31,BANK_SAFE.Collect,1.0,Typical REE structure.,,,,1.0,1.0,--------
0x57acbe7bf11b8a4584403cc900e230a18a7ab138,Locker.unlock,0.0,"Not REE, address is controllable. Transfer has gas limit.",,,1.0,0.0,1.0,No RE --- transfer to fixed address ---------- Reason for no RE: receiver is fixed and attacker cannot change the value of receiver
0x58ed44f46c279f30fd0a0724d3fed4bc18b11bb0,BoomerangLiquidity.payout,1.0,"It is REE, participants are uncontrollable.",,,,1.0,1.0,----------- participants[payoutOrder].etherAddress.call.value(payoutToSend).gas(1000000)(); --> Can fail; so UX is there
0x5c430fa24f782cf8156ca97208c42127b17b0494,HackDao.__callback,0.0,"It is not REE, there is if (msg.sender != oraclize_cbAddress()) throw;.",1.0,,,1.0,1.0,---------- Reason for RE: 		if (results[myid] == 2 OR results[myid] == 1) throw; //this game already run? results[myid] is getting set in the function
0x5f38c57b268664015de387229bc9d3822b53ec32,v1Migration.migrate,0.0,"It is not REE, cards are assigned values in the constructor.",,,1.0,1.0,0.0,RE -- mintCard()
0x60de9d9b062595cf10bc3fbf9ed5a6104befe882,WWW_WALLET.Collect,1.0,Typical REE structure.,,,,1.0,1.0,---------- Reason for RE: State var. acc.balance
0x61683dfbe07e98a4edbddc2f1f1a44a75fa74912,BDSM_Crowdsale.fallback,0.0,"It is not REE, sharesTokenAddress is assigned a value in the constructor.",,,1.0,1.0,1.0,---------- Reason for RE: State var. crowdsaleClosed
0x62500ad71aa50744bbd4917d1a64938897e952bf,C_bAnK.Collect,1.0,Typical REE structure.,,,,1.0,1.0,---------- Reason for RE: State variable acc.balance
0x627fa62ccbb1c1b04ffaecd72a53e37fc0e17839,TokenBank.WithdrawToHolder,0.0,"It's not REE, it has onlyOwner modifier.",1.0,,,0.0,1.0,No RE --- onlyOwner---------- No RE --> because of onlyOwner modifier
0x62b01d0aeb16656aff7a7632c3a61c8b069a8928,TopInvest125.pay,0.0,"Not REE, send has a gas limit.",,1.0,,1.0,0.0,"
"
0x62f49e904af170ea377f399aca76c13ff25a6f5e,TrustlessOTC.cancelTrade,1.0,"It is REE, the variable o is not reliable.",,,,0.0,1.0,No RE --- array issue--------
0x62f49e904af170ea377f399aca76c13ff25a6f5e,TrustlessOTC.take,1.0,"It is REE, offers are not trustworthy.",,,,1.0,1.0,---------- Reason for RE : o.active
0x644417f540bf96fd218287454501b2eb13c83295,Dividends.fallback,0.0,"It is not REE, the transfer has a gas limit, and tokenReward is assigned a value in the constructor.",,1.0,1.0,1.0,1.0,---------- Reason for RE: users[user]
0x652729577d5c5a13060f81c256aa79adb264f188,VNETTokenPreSale.fallback,0.0,"It is not REE, transfer has a gas limit; vnetToken is assigned a value in the constructor.",,1.0,1.0,1.0,1.0,---------- No UX: msg.sender.transfer() does not return any value; it throws exception on failing -- RE: State var. ratioNext
0x6cd171ef32b2ffa2b54481bea9d72692cd44f053,Crowdsale.fallback,0.0,"Not REE, the transfer has a gas limit; sharesTokenAddress is assigned a value in the constructor.",,1.0,1.0,1.0,1.0,--------Reason for RE: Event TokenFree(tokenFree); will have different values in two different invocations (one with reentrancy and one without reentrancy). Ref: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
0x6d84769b1e287a27f282a938c8110b22714dbf78,ABIO_BaseICO.burnRestTokens,0.0,"It is not REE; abioToken is assigned in the constructor of the sub-contract; however, from the perspective of ABIO_BaselCO, it is also trustworthy because it has not been assigned.",,,1.0,1.0,0.0,"
"
0x6e3c384480e71792948c29e9fc8d7b9c9d75ae8f,p_bank.Collect,1.0,"It is REE, msg.sender.call.value(_am)().",,,,1.0,1.0,--------
0x7183169973eda16209f66a602f2e27e1303bf414,BoomerangLiquidity.payout,1.0,"It is REE, participants are uncontrollable.",,,,1.0,1.0,---------- Reason for UX: participants[payoutOrder].etherAddress.call.value(payoutToSend).gas(1000000)();-- Reason for RE: Attacker can reenter through etherAddress.call.value() and before payoutOrder is updated. payoutToSend is calculated based on payoutOrder variable. That is used to send Ether.
0x71aaf9dc418e9dde76aee42e431fc203d9cfd0c2,VestingContractWTTEST.transfer,0.0,"It is not REE, we_test_token is assigned a value in the constructor.",,,1.0,1.0,1.0,---------- Reason for RE: 1. we_test_token.transfer(); 2. account_data[msg.sender].current_transferred and account_data[msg.sender].current_balance
0x72bf3030e276a96539143551bd8f91aff699bf7c,LotteryGameLogic.finalizeRound,0.0,"It is not REE, there is OnlyOwner modifier.",1.0,,,0.0,1.0,No RE --- onlyOwner---------- Reason for no RE: modifier onlyOwner
0x72f41244e09b3b2f09d9e2f5f1184fa8bd6b4a1e,EasySmart.withdraw,0.0,"Not REE, send has a gas limit.",,1.0,,1.0,1.0,---------- Reason for UX: sender.send()-- Reason for RE: player_[rId_][uid].plans[i].isClose = bClose;
0x730f8c40a08d02349a2d64e3193cf207a2a2dfe7,PG_Bank.Collect,1.0,"It is REE, msg.sender.call.value(_am)().",,,,1.0,1.0,---------- Reason for RE: State var. acc.balance
0x774853153c3cc175a3606c58d6f27f6b57e72fd3,c_BANK.Collect,1.0,"It is REE, msg.sender.call.value(_am)().",,,,1.0,1.0,---------- Reason for RE: State variable acc.balance
0x78e6d2bfe731e578a50a4129df89bb4950591d18,Swap.fallback,0.0,"Not REE, send has a gas limit; swapaddress is assigned a value in the constructor.",,1.0,1.0,1.0,1.0,---------- It stores true in the check[msg.sender] variable after it sends the the amount to the beneficiary which will cause reentrancy if the fallback function calls it again. -- Rentrancy vulnerability because of check[msg.sender] variable
0x79e784a77254aedbc6488ce0001abee487b1d88d,Y_WALLET.Collect,1.0,"It is REE, msg.sender.call.value(_am)().",,,,1.0,1.0,---------- Reason for RE --> state var. acc.balance
0x7fe180e63198e50057c3f2817d058e8904c650e3,Conference.refundTicket,0.0,"It's not REE, there is an if (msg.sender != organizer) { return; } protection.",1.0,,,1.0,1.0,---------- Reason for RE: State Variable registrantsPaid[recipient]
0x84cd9cf60bcb44f7bab8b75e6f03614c2c3b22b7,ESmart.pay,0.0,"It is not REE, send has a gas limit.",,1.0,,1.0,0.0,"
"
0x8a1190c9a21ccc195a943ec9ee434620461b46b2,HeroAuction.orderOnFightAuction,0.0,"It is not REE; fightAuction is assigned in setFightAuctionAddress, and masterRecruitment is assigned in setMasterRecruitmentAddress. Both functions are decorated with onlyLeader.",,,1.0,1.0,0.0,"
"
0x8a1190c9a21ccc195a943ec9ee434620461b46b2,HeroAuction.orderOnSaleAuction,0.0,"It is not REE; saleAuction is assigned in the setSaleAuctionAddress function, which is modified by onlyLeader.",,,1.0,1.0,0.0,RE -- order can reenter
0x8a1190c9a21ccc195a943ec9ee434620461b46b2,HeroFighting._fight,0.0,"It is not REE; from the perspective of the HeroFighting contract, there is no function call to the _fight function, as it is called by its subclass contracts. Therefore, simply analyzing the HeroFighting contract, the _fight function is safe.",1.0,,,1.0,0.0,"
"
0x8a1190c9a21ccc195a943ec9ee434620461b46b2,HeroLedger.collect,0.0,"It is not REE, erc20 is assigned a value in setERC20Address, and this function is protected by OnlyLeader.",,,1.0,1.0,1.0,---------- Reason for RE: erc20.transfer() is not defined in the contract; it can have external calls; state var. ownerIndexToERC20Balance[msg.sender]
0x8a1190c9a21ccc195a943ec9ee434620461b46b2,HeroLedger.withdrawERC20Balance,0.0,"Not REE, there is OnlyLeader modification.",1.0,,,0.0,1.0,No RE --- onlyLeader---------- Reason for RE: state var totalBalance and totalUsed
0x8c7777c45481dba411450c228cb692ac3d550344,ETH_VAULT.CashOut,1.0,"It is REE, msg.sender.call.value(_am)().",,,,1.0,1.0,---------- Reason for RE: State variable balances[msg.sender]
0x8c944c3f4029c14c22b6525ac3155482c2559541,BDSM_Presale.fallback,0.0,"It is not REE, transfer has gas; sharesTokenAddress is assigned a value in the constructor.",,1.0,1.0,1.0,1.0,--------
0x8e3e25958ad448aeb5982a01b63bcb91355d56a5,Swap.fallback,0.0,"It’s not REE, send has a gas limit; the swap address is assigned in the constructor.",,1.0,1.0,1.0,1.0,---------- It stores true in the check[msg.sender] variable after it sends the the amount to the beneficiary which will cause reentrancy if the fallback function calls it again.
0x91d7e5895f7a635ba8bdce9e2be544e5e527135f,Crowdsale.safeWithdrawal,0.0,"It's not REE, send has a gas limit; the beneficiary is assigned a value in the constructor.",,1.0,1.0,1.0,0.0,"
"
0x92579f2fa430b20bf6ce9d19938fe061aad992e2,DCY_preICO.bringBackTokens,0.0,"It is not REE, tokenReward is assigned a value in the constructor.",,,1.0,1.0,1.0,---------- It does not have UX because transfer function defined in token contract does not return any value
0x92579f2fa430b20bf6ce9d19938fe061aad992e2,DCY_preICO.fallback,0.0,"It is not REE, tokenReward is assigned a value in the constructor.",,,1.0,1.0,0.0,"
"
0x92579f2fa430b20bf6ce9d19938fe061aad992e2,DCY_preICO.safeWithdrawal,0.0,"Not REE, send has a gas limit.",,1.0,,0.0,0.0,"No RE --- if (fundingGoalReached && beneficiary == msg.sender) -- will be executed only if first if fails. It is like: ""else if"""
0x926e81009c2fa4475e1c798a8c43a4f598575c80,FoundersVesting.withdrawTokens,0.0,"Not REE, mntToken is assigned a value in the constructor.",,,1.0,0.0,1.0,No RE --- balanceOf cannot reenter---------- Reason for no UX: transfer function defined in token contract always return true; no need to check the return value-- Reason for no RE: transfer function defined in token contract does have any external calls involved
0x926e81009c2fa4475e1c798a8c43a4f598575c80,Goldmint.issueTokensInternal,0.0,It is not REE; mntToken is assigned a value in the constructor.,,,1.0,0.0,0.0,No RE --- issueTokens() cannot reenter
0x93c32845fae42c83a70e5f06214c8433665c2ab5,X_WALLET.Collect,1.0,"It is REE, msg.sender.call.value(_am)().",,,,1.0,1.0,--------
0x94554c78bd90dc7047f1a400dd3c5730991d9484,HoldPresaleContract.unlockTokens,0.0,"It's not REE, OppToken is assigned a value in the constructor.",,,1.0,0.0,1.0,No RE --- function transfer cannot reenter---------- Reason for no RE: OppToken.transfer() is defined inside the contract BasicToken. It does not have any exernal calls
0x950ad688ade27bcaa6e890e9d86ba5a9293f4d8c,Crowdsale.safeWithdrawal,0.0,"Not REE, send has a gas limit.",,1.0,,1.0,1.0,--------
0x967719548b8385be3c21ee96bdc57b9409b501cb,SellERC20BasicTokens.fallback,0.0,"It is not REE, transfer has a gas limit; and the token is assigned a value in the constructor.",,1.0,1.0,1.0,0.0,RE -- deposit
0x967719548b8385be3c21ee96bdc57b9409b501cb,SellERC20BasicTokens.sendToken,0.0,"It is not REE, there is require(msg.sender == wallet); protection.",1.0,,,0.0,1.0,--------RE is there because of variable deposit
0xa1e4608ff6b4b9324c6472eee2efebd20a20bbe8,KittenSelfDrop.fallback,0.0,"Not REE, kittenContract is assigned a value in the constructor.",,,1.0,1.0,1.0,---------- Reason for RE: state var. kittensRemainingToDrop
0xa27f262391913a5e21216c70de5358a1e887de25,VestingContractWTTEST.transfer,0.0,"It's not REE, we_test_token is assigned a value in the constructor.",,,1.0,1.0,1.0,---------- Reason for RE: state vars. account_data[msg.sender].current_transferred and account_data[msg.sender].current_balance
0xa5629861c9c345f50221996ef852fd9665eb1c05,IronHands.payout,1.0,"It is REE, participants are uncontrollable.",,,,1.0,1.0,RE -- payoutOrder---------- uint256 tokens = weak_hands.buy.value(investment).gas(1000000)(msg.sender); --> causes UX because the return value of the call is not checked -- Reason for no reentrancy: No require; if; assert statements based on state variables
0xab78561558d06ace60f206d9fcaac65bb1cfdee2,SIMPL_BANK.Collect,1.0,"It is REE, msg.sender.call.value(_am)().",,,,1.0,1.0,--------
0xac355d24591c01ad44f8da36ec7629d275a2c6e1,ShortOrder.exerciseLong,1.0,"It is indeed REE, with risks.",,,,1.0,0.0,"
"
0xac355d24591c01ad44f8da36ec7629d275a2c6e1,ShortOrder.nonActivationShortWithdrawal,0.0,"It's not REE, transfer has a gas limit.",,1.0,,1.0,0.0,"
"
0xac355d24591c01ad44f8da36ec7629d275a2c6e1,ShortOrder.nonActivationWithdrawal,0.0,"It's not REE, transfer has a gas limit.",,1.0,,1.0,0.0,"
"
0xac355d24591c01ad44f8da36ec7629d275a2c6e1,ShortOrder.tokenFulfillmentDeposit,1.0,It can be REE but it looks risk-free.,,,,1.0,0.0,RE -- orderRecord[msg.sender][orderHash].tokenDeposit = true;
0xaf7aea249098f2c2f50cc11d4000ccf798194373,ZTCrowdsale.refund,0.0,"It's not REE, send has a gas limit.",,1.0,,0.0,0.0,"No RE --- Dynamically on buggy, smartly written function"
0xb0ceaa9cc523332cbef9fc606221cc0bc2d0872d,Mattew.fallback,0.0,"Not REE, send has a gas limit.",,1.0,,1.0,1.0,"--------The reentrancy vulnerability occurs when a contract makes an external call before it has finished executing its own logic. In this function; the vulnerable portion is this part: ""  bool isSuccess = whale.send(stake);  ""    . The external call to whale.send(stake) allows the whale contract to execute arbitrary code; including calls back into the current contract. An attacker can create a malicious contract that calls this contract repeatedly before the state is updated; allowing the attacker to drain funds from the contract."
0xb48e28b7de69e921e37c9786f11a6f73274777ef,Crowdsale.fallback,0.0,"It's not REE, send has a gas limit; tokenReward is assigned a value in the constructor.",,1.0,1.0,1.0,1.0,---------- Reason for not RE: beneficiary and tokenReward will get the money if the attack is successful. These variables are set by owner. Owner is not malicious.
0xb7c5c5aa4d42967efe906e1b66cb8df9cebf04f7,keepMyEther.withdraw,1.0,It is REE.,,,,1.0,1.0,--------
0xb98de64d4dbe2956e80149e88ce9135bb05e9400,Bounty.getTokens,0.0,"Not REE, the token is assigned a value in the constructor.",,,1.0,1.0,1.0,Cross function RE---------- Reason for RE: 1. require(validPurchase(beneficiary)); and 2. participated[beneficiary] = true; -- Reason for UX: token.transfer() returns boolean
0xbaea5bc6568dcb1f1c5aa24223a47333a6b3a8f5,TrustlessOTC.cancelTrade,1.0,"It is indeed REE, there are risks.",,,,0.0,1.0,---------- Reason for UX: Token(o.tokenFrom).transfer(o.creator; o.amountFrom) returns boolean
0xbaea5bc6568dcb1f1c5aa24223a47333a6b3a8f5,TrustlessOTC.take,0.0,"It is not REE, there is a lock formed by require.",1.0,,,0.0,0.0,"
"
0xbaf51e761510c1a11bf48dd87c0307ac8a8c8a4f,ETH_VAULT.CashOut,1.0,"It is REE, msg.sender.call.value(_am)().",,,,1.0,1.0,---------- Reason for RE: State var. balances[msg.sender]
0xbd367c347fc8e0a9b2da08717bcc22bb3fd878eb,HoldPresaleContract.unlockTokens,0.0,"It is not REE, OppToken is assigned a value in the constructor.",,,1.0,0.0,1.0,no RE: transfer -- it is implemented and it cannot reenter---------- Reason for no RE: OppToken.Transfer() does not call any external functions
0xbe4041d55db380c5ae9d4a9b9703f1ed4e7e3888,MONEY_BOX.Collect,1.0,"It is REE, msg.sender.call.value(_am)().",,,,1.0,1.0,---------- Reason for RE: state var. acc.balance
0xc543afe640c8c7521beb6549be75f77b568f4590,GET111.pay,0.0,"It's not REE, send has a gas limit.",,1.0,,1.0,0.0,"
"
0xc7bd5dac314a67a375a0347d72797c2ea1f1a672,KlownGasDrop.claimGasDrop,0.0,"It is not REE, the currentTokenAddress is hardcoded at the time of declaration.",,,1.0,1.0,1.0,---------- Reason for reentrancy vuln: receivers[msg.sender] = true; is set after external call to transfer. transfer happens based on the value of receivers[msg.sender] -- Reason for UX: IERC20(currentTokenAddress).transfer(msg.sender; amountToClaim); returns oolean
0xc86dd185fc95031489b89eeaaa3fd47e11c065e9,OpportyBountyHold.unlockTokens,0.0,"It's not REE, the token is assigned a value in setToken, and this function is modified by OnlyOwner.",,,1.0,0.0,1.0,"No RE ---  -- token.transfer(msg.sender, holderList[msg.sender].tokens); -- it is implemented and it cannot reenter ---------- Reason for no UX: Function transfer() defined in contract BasicToken always return true; so no need to check for return value"
0xd012717342c0a7a24b840605fe7756f6094c9570,SafeDif.distributeRef,0.0,"It's not REE, transfer has a gas limit.",,1.0,,0.0,0.0,No RE --- array issue player_[_affID2].aff is updated and dependency on other
0xd012717342c0a7a24b840605fe7756f6094c9570,SafeDif.withdraw,0.0,"It's not REE, send has a gas limit.",,1.0,,1.0,1.0,---------- Reason for UX: sender.send() -- Reason for RE: player_[uid].plans[i].isClose = bClose;
0xd1265bfe57597840f89971b7e67538bac780f9ad,DesTokenSale.fallback,0.0,"Not REE, the token is assigned a value in the constructor.",,,1.0,0.0,0.0,"
"
0xd518db222f37f9109db8e86e2789186c7e340f12,D_BANK.Collect,1.0,"It is REE, msg.sender.call.value(_am)().",,,,1.0,1.0,---------- Reason for RE: State var. balances[msg.sender]
0xd5e5ab3438c14a6c823886baa24d8f41636b1d34,TokenERC20.fallback,0.0,"It’s not REE, send has a gas limit.",,1.0,,0.0,0.0,Dynamic No RE --         if (users[msg.sender].invested != 0) {
0xd5e5ab3438c14a6c823886baa24d8f41636b1d34,TokenERC20.investedbuy,0.0,"Not REE, send has a gas limit.",,1.0,,0.0,0.0,Dynamic No RE --         if (users[msg.sender].invested != 0) {
0xd5e5ab3438c14a6c823886baa24d8f41636b1d34,TokenERC20.withdrawcommissions,0.0,"Not REE, has onlyOwner modifier.",1.0,,,1.0,1.0,---------- Reason for RE: users[msg.sender].pot updated after external call; through modifier olyowner one can set the value of variable aipi to attacker's address
0xd67aa6a98e99f979f23bf0da772d113fe6dbe50a,Crowdsale.fallback,0.0,"""It's not REE, send has a gas limit; tokenReward is assigned a value in the constructor.""",,1.0,1.0,1.0,1.0,--------
0xd72d254737ab0a8de2ac43ba95557885ed13bbfd,MenloTokenTimelock.release,0.0,"It is not REE, the token is assigned a value in the constructor.",,,1.0,1.0,1.0,---------- Reason for RE: balance[msg.sender]-- Reason for UX: token.transfer() returns boolean value
0xd84b6aec4985e68ef5882de0b5d0b30992bb5057,EthTokenToSmthSwaps.createSwap,1.0,It is REE.,,,,1.0,0.0,"
"
0xd84b6aec4985e68ef5882de0b5d0b30992bb5057,EthTokenToSmthSwaps.createSwapTarget,1.0,It is REE.,,,,1.0,0.0,"
"
0xd84b6aec4985e68ef5882de0b5d0b30992bb5057,EthTokenToSmthSwaps.refund,1.0,It's REE.,,,,1.0,0.0,"
"
0xd84b6aec4985e68ef5882de0b5d0b30992bb5057,EthTokenToSmthSwaps.withdraw,1.0,It is REE.,,,,1.0,1.0,---------- Reason for RE: swaps[_ownerAddress][msg.sender].balance -- Reason for no UX: ERC20(swap.token).transfer() does not return any value
0xd84b6aec4985e68ef5882de0b5d0b30992bb5057,EthTokenToSmthSwaps.withdrawNoMoney,1.0,It is REE.,,,,1.0,1.0,---------- Reason for RE: swaps[msg.sender][participantAddress].balance
0xd84b6aec4985e68ef5882de0b5d0b30992bb5057,EthTokenToSmthSwaps.withdrawOther,1.0,It is REE.,,,,1.0,1.0,---------- Reason for no UX: function transfer() does not return any value -- Reason for RE: swaps[_ownerAddress][participantAddress]
0xd96d1947b7758271c4b0621d90808825121bf329,DomainAuction.refundBid,0.0,"It's not REE, send has a gas limit.",,1.0,,0.0,1.0,---------- Reason for RE: The event Refund will have two different values on different invocations. It might affect external entities. Ref: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3
0xdb8459034fc97eed3d43172909e1d353e9f4d282,URUNCrowdsale.buyTokens,0.0,"It is not REE, the token is assigned a value in the constructor.",,,1.0,1.0,0.0,RE -- require(TOKENS_SOLD<maxTokensToSaleInClosedPreSale);
0xdd654450e2ef8f672ef297ea3ff9aabea2e22840,VestingContractABX.transfer,0.0,"It is not REE, the abx_token is assigned a value in the constructor.",,,1.0,1.0,1.0,--------Reason for reentrancy vuln:  1. account_data[msg.sender].current_transferred += value; 2. account_data[msg.sender].current_balance -= value; --> Executed after external call require(value <= abx_token.balanceOf(this) && value <= account_data[msg.sender].current_balance && account_data[msg.sender].current_transferred + value <= account_data[msg.sender].current_limit); --> it checks above updated variables in require statement
0xde1fa94c7fa043fccf3938f47e9911ca584baed4,DailyGreed.fallback,0.0,"It is not REE, send has a gas limit.",,1.0,,0.0,1.0,Dynamic No RE--------The function does not have reentrancy vulnerability. There is no benefit to the attacker. Moreover the balance will get updated once the reentrant call finishes
0xe7e0bb725a6c1ed81b89042b1d37756b21db4958,BDSM_Crowdsale.fallback,0.0,"It is not REE, the transfer has a gas limit; and sharesTokenAddress is assigned a value in the constructor.",,1.0,1.0,1.0,1.0,--------
0xe85083dec29ca5287a00a29f667a8c5489cdf297,OpportyWhiteListHold.unlockTokens,0.0,"It is not REE; OppToken is assigned a value in setToken, and that function is modified by OnlyOwner.",,,1.0,1.0,1.0,---------- Reason for no RE: OppToken.transfer() is defined and it does not call any external function -- Reason for no UX: OppToken.transfer() always return true; no need to check
0xea9c15f733ee4cd9e24c97bdddd66077a757b474,BoomerangLiquidity.payout,1.0,"Not REE or is REE, participants are uncontrollable (according to loose standards, it is correct to mark here as 1, saying it is not REE is wrong, based on 0/1 marking).",,,,1.0,1.0,--------There is reentrancy bug. If the fallback function of the contract which is being paid by the line flmContract.call.value(investment).gas(1000000)() calls payout() again; it can keep getting money until balance <= 1. There is unchecked call return value because the success of flmContract.call.value(investment).gas(1000000)() is not being validated by checking the output. The code goes ahead even if the money transfer failed. This can lead to inconsistencies in the state of the contract.
0xebbe139afc4f0706cc928311b6748701b6549a31,Contagion.Count,0.0,"Not REE, only owner modification.",1.0,,,0.0,1.0,No RE --  modifier--------
0xec94d178d97bac527fdcd4b3d4bf41b57d640c5b,Crowdsale.devResWithdrawal,0.0,"Not REE, send has a gas limit.",,1.0,,1.0,0.0,"
"
0xf1add8bf553d0066be17768d6816f3730c476237,EasySmartolution.getOut,0.0,It is not REE; smartolution is assigned during the declaration.,,,1.0,0.0,0.0,"
"
0xf1add8bf553d0066be17768d6816f3730c476237,EasySmartolution.processPayment,1.0,It is REE.,,,,1.0,0.0,"
"
0xf847b0052b9d369401b0d71465f28392ea7e3304,Pandora.returnDeposit,0.0,"It is not REE, the transfer has a gas limit.",,1.0,,1.0,0.0,"
"
0xfbe2fff3145e08a21a9d9c8d5f20c01706939647,C_bank.Collect,1.0,"It is REE, msg.sender.call.value(_am)().",,,,1.0,1.0,---------- Reason for RE: State var. acc.balance
0xfc560a12fb91c7b743d070e5764b4404de2f4883,Crowdsale.safeWithdrawal,0.0,"It is not REE, send has a gas limit; tokenReward is assigned a value in the constructor.",,1.0,1.0,1.0,1.0,RE -- balanceOf[buyerId]---------- Reason for no RE: There is no benefit to attacker; funds are sent to beneficiary
0x0003ed19f80564745e84b4cc411a7b6be4f0cf31,NeverJeet.openTrading,0.0,"Not REE, onlyOwner modifier.",1.0,,,0.0,1.0,"
"
0x0030f75e27f6df16383f47ae11ae34abc21f5f2c,TYRANT.GoLive,0.0,"Not REE, onlyOwner modifier.",1.0,,,0.0,1.0,-- no RE: modifier onlyowner
0x0041fb383081576f9750c5a9b507180992e1c5da,GMI2.forceSwapAndSendDividends,0.0,"Not REE, onlyOwner modifier.",1.0,,,0.0,1.0,"
"
0x005d068a5dd27f3e49a047deac6785b426145bbc,ParasyteInu.openTrading,0.0,"Not REE, onlyOwner modifier.",1.0,,,0.0,1.0,-- No RE: modifier onlyonwer-- No UX: balanceOf does not fail
0x00a704f5721fe068a46221ca7293e76b39f92af6,BabyRyoshi.openTrading,0.0,"Not REE, onlyOwner modifier.",1.0,,,0.0,1.0,"
"
0x00b0e8d3d7a6275dea291111ff8480ea053cd719,RickAndMorty.openTrading,0.0,"Not REE, onlyOwner modifier.",1.0,,,0.0,1.0,"
"
0x00b25822e3b8f8720b327f2df8e7c6f96271c8dc,JINJAINU.OpenMarket,0.0,"Not REE, onlyOwner modifier.",1.0,,,0.0,1.0,-- No RE: modifier onlyowner
0x00d97facb316f12b64c7ac93405b2d45ed9aa358,KIRITOINU.openTrading,0.0,"Not REE, onlyOwner modifier.",1.0,,,0.0,1.0,-- No RE: modifier onlyonwer-- No UX: balanceOf does not fail
0x00e5b0e005ae310312942197e0898de60e30a3a3,SHIBUTT.openTrading,0.0,"Not REE, onlyOwner modifier.",1.0,,,0.0,1.0,"
"
0x00e76361d45707507db7bdeb7dd2c0f5c1c3fa6d,DekuInu.openTrading,0.0,"Not REE, onlyOwner modifier.",1.0,,,0.0,1.0,-- no UX: approve() always return true
0x01490172fd413bb9b74ca73c5df1e245ef14412a,SOTL.claimETHRewards,0.0,Not REE.,1.0,,,0.0,1.0,"
"
0x01490172fd413bb9b74ca73c5df1e245ef14412a,SOTL.claimTokenRewards,1.0,"It is indeed REE, with risks.",,,,0.0,1.0,"
"
0x01680af31961fb47ad92e32218a5d8cbd036f6ba,DEEPINU.openTrading,0.0,"Not REE, onlyOwner modifier.",1.0,,,0.0,1.0,"
"
0x018194f1e70185eb153bcab2f6d64070c605a318,LEET.swapAndLiquify,0.0,"It is not REE, lockTheswap modification.",1.0,,,0.0,1.0,-- No RE : marketingAddr is fixed; attacker won't get any benefits
0x01886cabb4a19a89fad686810f2ee60459452cf3,DividendTracker._compoundDividendOfUser,0.0,"It is not REE, _compoundDividendOfUser is a private function that can only be called by compoundAccount, and this function is modified by Onlyowner.",,,1.0,0.0,1.0,-- No reent: function is private and callable only by owner through other public function
0x01886cabb4a19a89fad686810f2ee60459452cf3,DividendTracker._withdrawDividendOfUser,0.0,"It is not REE, _withdrawDividendOfUser is a private function, only called by processAccount, and this function is marked with onlyowner.",,,1.0,0.0,1.0,-- No reent: function is private and callable only by owner through other public function
0x018a871f4403ecd7be46819789551aaba1331af0,$Jiraiya.openTrading,0.0,"It is not REE, only owner modification.",1.0,,,0.0,1.0,"
"
0x01911afa1a3d64d52451a22cb265fc34f596f425,BuyVote.buy,0.0,"It is not REE, the voteCoinContract is assigned a value at the declaration.",,,1.0,0.0,1.0,"
"
0x01aa9c6023ce74282aa2705d6cb89cea76a18be3,DOGETUITION.openTrading,0.0,"Not REE, only owner modified.",1.0,,,0.0,1.0,"
"
0x01b92e2c0d06325089c6fd53c98a214f5c75b2ac,MYSTIC.processActionProposal,0.0,"Not REE, there is a nonReentrant modifier.",1.0,,,0.0,1.0,-- No RE: modifier nonReentrant  UX: (bool success; bytes memory returnData) = proposal.applicant.call{value: proposal.tributeOffered}(action); return value not processed properly
0x01de5bce5c5ee4f92e8f4183f6f4e4f12f9a86cd,VaultWETH._claimCompoundDivs,0.0,"It is not REE, _claimCompoundDivs is a private function, and this function is called by claimCompoundDivs and claim, both of which have a nonReentrant modifier.",1.0,,,0.0,1.0,-- no RE: This is private function which is callable from nonReentrant functions
0x01de5bce5c5ee4f92e8f4183f6f4e4f12f9a86cd,VaultWETH.claim,0.0,"It is not REE, and has a nonReentrant modifier.",1.0,,,0.0,1.0,-- no RE: nonReentrant function
0x01e7e52aba28a0f61cc053c544efe943e5b43954,TwinsInu.openTrading,0.0,"Not REE, only owner modifies.",1.0,,,0.0,1.0,"
"
0x01f44890160c3963bfa8841aabbb4019245a9205,BABYCHAD.openTrading,0.0,"Not REE, only owner modification.",1.0,,,0.0,1.0,"
"
0x0208a9ffc97a6e96f050087ae1c9f7a2bdd3f5b0,HoshiKatachi.openTrading,0.0,"Not REE, only owner modification.",1.0,,,0.0,1.0,"
"
0x0224853bdff6b04ce259d87303b7523d4e16d656,PriceChecker._updatePrice,0.0,"It is not REE, _updatePrice is a private function that can only be called by the constructor and by updatePrice, which is protected by require(msg.sender == priceCheckerAddress);",1.0,,,0.0,1.0,"
"
0x024b77a5205733bc1cf283b0442be8ecab88803a,AKIHIRO.openTrading,0.0,"Not REE, only owner modifier.",1.0,,,0.0,1.0,"
"
0x025cd28d7ef83e1c2ffe511d5f9290d54ba5dcf0,ProductionUnitToken.exit,0.0,"It is not REE, the transfer has a gas limit, and the moonIncContract is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,"
"
0x02a0c000c375464509754deea7d07d06df901e3a,EthereumCate.startTrading,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x030d087bfb025268f129a1979bda8ed3a6191a02,Andy.swapAndLiquify,0.0,"It's not REE, locktheswap.",1.0,,,0.0,1.0,"
"
0x03766932d07fad2ea2e60454ccbbb5d88780b63e,STS.swapAndLiquify,0.0,"Not REE, lock the swap.",1.0,,,0.0,1.0,"
"
0x038b7537fd58d966404be0c7bcec64e6cbeb88a1,GohanInu.startTrading,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x039f7a065382b064c95f8409b7eff4a45cea3e23,Xlabs.swapAndLiquify,0.0,"It is not REE, lock the swap.",1.0,,,0.0,1.0,"
"
0x04797c1ae852a31665d8e512ddae33e6044ef39d,InstaDice.payoutPreviousRoll,0.0,Not REE.,,,,0.0,1.0,"
"
0x04797c1ae852a31665d8e512ddae33e6044ef39d,InstaDice.roll,0.0,Not REE.,,,,0.0,1.0,"
"
0x047b957bb18534b4e4add20c101cb5791f12d112,NEKOLAND.swapAndLiquify,0.0,"Not REE, lock the swap.",1.0,,,0.0,1.0,"
"
0x049658b3cc6ec345aaf2be7233a33da24ee82150,Bozu.GoLive,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x04e52df738e0c13bc58d6d75f964381f8d18b1b7,SminemToken.open,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x051bda85fbc58ace9d6060ba9488abe120ac072d,CRYPTOVATOR.launch,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x052f4e43d9d65ca35ce6d3438aa956fda91ef520,XYZProtocol._beforeTokenTransfer,0.0,"It is not REE, swapBack has nonReentrant protection.",1.0,,,0.0,1.0,"
"
0x05a4909d737d0a6433335504d25536e12f65a4e5,Hydra.swapBack,0.0,"Not REE, swapping.",1.0,,,0.0,1.0,No RE: amountETHMarketing is not updated after external call
0x05af72594440cf75c0fdcbbd9993fc26f62c7afc,TwelveHourAuction.sendProfitTTH,0.0,"It is not REE; TwelveHourToken is assigned in setTwelveHourToken, which has the onlyowner modifier.",,,1.0,0.0,1.0,-- no RE: money is being sent to fixed address
0x0654b7f747c9ee9f5fb5eba443e9fe64f1fa77ef,SAFX._sellTaxedTokens,0.0,"Not REE, swapping.",1.0,,,0.0,1.0,"
"
0x06a07a3911dab4507dd44cd97e30c3267d4a9c63,DERPNATION.takeLoan,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,"
"
0x06ef66ab59919e1c3b25ad4732a002f644fe0f8e,MonkeyScam.withdraw,0.0,"Not REE, transfer has a gas limit; MonkeyKingCorp is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,"
"
0x0719feee345bf34877d0a1f2c1c40fcdf0f1c3e8,charge.ControlSellAllTokens,0.0,"Not REE, only Auth.",1.0,,,0.0,1.0,"
"
0x07a6ebf8549dd5cfdf201f6de9e7487113434dd7,Multiplier.verify,0.0,"Not REE, send has a gas limit.",,1.0,,0.0,1.0,"
"
0x07c1c8c2bce6290daa554118b7d208041615ce54,RC.giveToken,0.0,It's not REE; transfer has a gas limit; the tokenSaleContract is assigned in the constructor.,,1.0,1.0,0.0,1.0,"
"
0x07f7ecb66d788ab01dc93b9b71a88401de7d0f2e,PoCGame.donateToWhale,0.0,"It is not REE, the whale is assigned a value in the constructor.",,,1.0,0.0,1.0,-- Reason for no RE: whale.call.value sends amount to whale contract. it does not depend on any state variable
0x07f86ba2f0e6c421a3ecb233068117e65228ac6b,Society.launch,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,-- No RE: modifier onlyowner
0x081d8a340d384cffca0c2dafbf45020d760d7576,SOLIDBLOCK.swapTokensForETH,0.0,"Not REE, lock the swap.",1.0,,,1.0,1.0,-- RE: ETHAmount.treasury
0x085e64546fe941bbfd1751b99365dab4b2f454fc,MetaMononokeInu.startTrading,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x0881c6bc48b80726ed97cb1c44586cdaf4f4be94,ZeroTax.swapAndLiquify,0.0,"Not REE, swapping.",1.0,,,0.0,1.0,-- no RE: modifier swaping
0x095c3f181cde64ff0d96ec14fba29210f2851fe2,CompliantCrowdsale.approveMint,0.0,"Not REE, only Validator.",1.0,,,0.0,1.0,"
"
0x0a16d08b57afe4e0e323eba83e0282b07c2ed1f1,Spitz.Launch,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x0a28dd8141394e6d680d20d54ffeb3544b576a78,Loan._userRefund,0.0,"Not REE, transfer has gas, shareholders are assigned in the subclass contract.",,1.0,1.0,0.0,1.0,"
"
0x0a28dd8141394e6d680d20d54ffeb3544b576a78,Loan.checkPayShareholder,0.0,"It is indeed not REE according to the result we discussed last time. However, this toShareHolder can be assigned any value in the subclass, and this code can keep the amount unchanged while continuously transferring to itself. Moreover, if everything is internal, there is also no possibility of reentrancy. If the subclass slither did not report it, then it is indeed not a threat.",,,1.0,1.0,1.0,"
"
0x0a5a0a14419f9db1da68cf2f550720e5df49d4fe,YZYVault.addTaxFee,0.0,"Not REE, only Yzy.",1.0,,,0.0,1.0,"
"
0x0a5a0a14419f9db1da68cf2f550720e5df49d4fe,YZYVault.emergencyWithdrawToken,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,"
"
0x0a5a0a14419f9db1da68cf2f550720e5df49d4fe,YZYVault.stakeLPToken,0.0,Not REE.,,,1.0,0.0,1.0,"
"
0x0ac31bc80e6905bc27f3cdcb66dc38945f2055e2,Nothing.mintNOTHING,1.0,It is REE.,,,,0.0,1.0,"
"
0x0b5ecbb411d8fe829e5eac253ee1f2dc05d8d1ae,KUNOICHIX.launch,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x0bc95951bb59d6fd063ce7ad5c3b3dcaace98132,ViVICO.refund,0.0,"Not REE, the transfer has a gas limit; tokenReward is assigned in the constructor.",,1.0,1.0,0.0,1.0,"
"
0x0bc95951bb59d6fd063ce7ad5c3b3dcaace98132,ViVICO.successful,0.0,"It is not REE, the transfer has a gas limit; tokenReward is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,"
"
0x0c2795fc4e1f57614eb78923dc78521ff0676fb8,BitChordCrowdsale.startOraclize,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,"
"
0x0c2795fc4e1f57614eb78923dc78521ff0676fb8,BitChordCrowdsale.update,0.0,"It is not REE, oraclize is assigned a value in the constructor.",,,1.0,0.0,1.0,"
"
0x0c6139206f995d160edb00422a5ac819bc94295e,ChainBot3000.depositOutput,0.0,"Not REE, transfer has a gas limit; UniswapContract is assigned a value in initUniswap, and that function is onlyOwner.",,1.0,1.0,0.0,1.0,-- Reason for not UX: UniswapContract.ethToTokenTransferOutput returns uint value; it does not return boolean. No need to check the value when function returns uint. -- Reason for not RE: State variables (deposits[_steamid]) changed after the external call has no impact on the execution of transfer function.
0x0c78003843b4a72b765938cb3b14aecb188dbc6a,Crowdsale.updatePrice,0.0,"It is not REE, oraclize is assigned in the modifier, this system does not consider such issues.",,,,0.0,1.0,"
"
0x0cb0a2136f2e80662eb5c50b96bfa3de85f335ce,IGLOO._payTreasury,0.0,"Not REE, swapping.",1.0,,,0.0,1.0,"
"
0x0d1c59da19c60092cc3a56ee6750bd162582f857,CUELauncherToken._doBurn,0.0,Not REE.,1.0,,,0.0,1.0,"
"
0x0d1c59da19c60092cc3a56ee6750bd162582f857,CUELauncherToken.v1AirdropETH,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,-- No UX: transfer always return True
0x0d2508ff66a445116029b153f5ca261145717cc1,UnicornToken._disperseEth,0.0,"Not REE, transfer has a gas limit; External is assigned a value in init, and this function is only called by the constructor.",,1.0,1.0,0.0,1.0,no RE -- m_EthReflectSvcAddress is fixed
0x0d2508ff66a445116029b153f5ca261145717cc1,UnicornToken.addLiquidity,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,-- no UX: approve() always return true
0x0d5a83d8b2dd05cbb7183824dc71b31d3e6d838e,SEISHI.swapForTokenomics,0.0,"Not REE, lock the swap.",1.0,,,0.0,1.0,"
"
0x0d75899cab4eec7b22b5bf3d4dd4d965ada8a8cb,FUEGO.swapForTokenomics,0.0,"It is not REE, lock the swap.",1.0,,,0.0,1.0,"
"
0x0d95bc0c758ae70141fc95345a7164a4c6e1df15,Lagarde.establishTrading,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x0dd1326b7b80107f002ba16dad7fe2dd22f00491,LetsBreakThings.checkBalanceSendEth,0.0,"It is not REE, transfer and send have a gas limit; require(creator == msg.sender) for protection.",1.0,1.0,,0.0,1.0,-- Reason for no RE: No state changes after external call
0x0de3539f225e3431d6a7bbd3495cc2caf19b334c,BabyKounotori.gm,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,-- no UX: approve() always return true
0x0e24224484c7e445438ae9ed9b03a0108ad798f2,ChipToken.swap,0.0,"Not REE, lock the swap.",1.0,,,0.0,1.0,"
"
0x0e2d791d78e6cc39c8dbeb7898b02221ac35c3f7,PumpToken.addLiquidity,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x0e30bc9512306534b85afd0c75065b455af55d45,COPIUM.swapAndLiquify,0.0,"Not REE, lockTheSwap.",1.0,,,0.0,1.0,"
"
0x0e33ca464b1c76a384039eb1b7e9dc3b0416b5ae,BinaryOption.closeSession,0.0,"Not REE, only Escrow.",1.0,,,0.0,1.0,-- no RE: modifier onlyEscrow
0x0e3ea79e194aef78b69209447f0f6c17ed96a5d6,Ownable.renounceOwnership,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x0e3ea79e194aef78b69209447f0f6c17ed96a5d6,Ownable.transferOwnership,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,"
"
0x0e82b29a77a53880dd4ee8326cfea9b4c68db638,DappIncubator.withdraw,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,-- UX: transfer() function
0x0eb65b4c3d3de340e1b15384f8f211784247a37a,KODAV3SecondaryMarketplace.adminRejectTokenBid,0.0,"Not REE, nonReentrant, onlyAdmin.",1.0,,,0.0,1.0,"
"
0x0efef0b34638addc8833ba729ae20016b5f24ffc,Escapable.escapeHatch,0.0,"Not REE, only Escape Hatch Caller or Owner.",1.0,,,0.0,1.0,-- UX: token.transfer(escapeHatchDestination; balance)
0x0f99d989df7017d7bb27bffb3f12c6b035863980,THEGAMEOFCHAD.launch,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,"
"
0x0ffaa8eeb2ee18c9174e4c5d6af6ce48199c6879,Sargasso.addContractTokens,0.0,It's not REE; v2Address is assigned a value in the constructor.,,,1.0,0.0,1.0,"
"
0x1056f5436dc817e28a24c509ff26f5912b837214,CompliantCrowdsaleHardcap._approveMint,0.0,It is not REE; the private function only has two function calls modified by onlyValidator.,1.0,,,0.0,1.0,"
"
0x105923fa70412c82452ff75f5e775fb0383ee2fc,Keetsu.swapAndLiquify,0.0,"Not REE, lockTheSwap.",1.0,,,0.0,1.0,"
"
0x108523415a8cd7cb8ef2d6b12177181f489ec210,Pepe.swapBack,0.0,"Not REE, swapping.",1.0,,,0.0,1.0,-- no RE: modifier swapping
0x1104080b3ca1f766a33c16aa890465d1a63e5078,RedKnightToken._swapAndLiquify,0.0,"It is not REE, the transfer has a gas limit; uniswapV2Router is assigned in the constructor.",,1.0,1.0,0.0,1.0,-- no RE: _swapping
0x11566f832f90155701384e42f0adcdc889767bbc,HexSaitama.startTrading,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,"
"
0x1190074795dad0e61b61270de48e108427f8f817,CoinMerge._disperseEth,0.0,"It's not REE, transfer has a gas limit; External is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,"
"
0x1190074795dad0e61b61270de48e108427f8f817,CoinMerge.addLiquidity,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x119995a900c86c6aaf68b917341b844c3786913c,GLITCH.swapAndLiquifyForEth,0.0,"Not REE, lockTheSwap.",1.0,,,0.0,1.0,"
"
0x11ce3c5ecfa4cc788eaa94157a63a1ca4863a90c,ShiryoMarket.acceptItemOffer,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,"
"
0x122ad2495b1af2a14c5c4b4ca59adfcd79c2dcb3,GameTime._swap,0.0,"Not REE, swapping.",1.0,,,0.0,1.0,-- NO RE: state var _swapping
0x125365069020439b830c9eac9dd402f8aa762569,RatScam.withdraw,0.0,"Not REE, transfer has a gas limit; RatKingCorp was assigned a value in the statement.",,1.0,1.0,0.0,1.0,"
"
0x126bf7880a9597e2760380d44d147c90cd75ee39,The_Disturbance.swapAndLiquify,0.0,"Not REE, lockTheSwap.",1.0,,,0.0,1.0,-- No RE: modifier lockTheSwap -- No UX: transfer() always return bool
0x12bafa32c73c6b7f0c00b36b3ba6d9416b163c59,FitCoin.addLiquidity,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,"
"
0x132e2b67e91bf0294536b16d772e8dee099fc40c,Brave3d.buyByAddress,0.0,"Not REE, p3dContract was assigned a value at the time of declaration.",,,1.0,0.0,1.0,no ether involved
0x132e2b67e91bf0294536b16d772e8dee099fc40c,Brave3d.buyByName,0.0,"It's not REE, p3dContract is assigned a value at declaration.",,,1.0,0.0,1.0,"
"
0x132e2b67e91bf0294536b16d772e8dee099fc40c,Brave3d.setName,0.0,"It is not REE, p3dContract is assigned a value upon declaration.",,,1.0,0.0,1.0,"
"
0x13763173527aab169f588fd663886f17740dfc65,HARAMADAN.addLiquidity,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,"
"
0x13c34380e14c47cdd089d466396e53f8a0a24442,PunkMonkeyDividendTracker._reinvestDividendOfUser,0.0,"It is not REE, PunkMonkeyContract, the uniswapV2Router is assigned in the constructor.",,,1.0,0.0,1.0,-- no RE: callable from onlyonwer function
0x13c34380e14c47cdd089d466396e53f8a0a24442,PunkMonkeyDividendTracker.process,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,"
"
0x13d8faf4a690f5ae52e2d2c52938d1167057b9af,BatchSwap.cancelSwapIntent,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,"
"
0x13ee0099f47a84bb4ab4cce741326b2976eda776,TradableErc20.createLiquidity,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,"
"
0x147aa9ada01b70c4c8c8b89b06afe767908aced7,PharaGoddess.withdrawFund,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,-- no RE: modifier onlyOwner
0x14c7f742d9a2fe6fe13fafbc1cb24be74ac5708d,CharityMiner.deposit,0.0,"It is not REE, transfer has a gas limit; p3d is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,-- Reason for no UX: p3d.buy.value() does not return boolean; transfer sends an exception on failing
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,Depot.exchangeEtherForSynthetix,0.0,"It is not REE, the transfer has a gas limit; synthetix and feePool are assigned values in the constructor.",,1.0,1.0,0.0,1.0,"
"
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,Depot.exchangeSynthsForSynthetix,0.0,"It is not REE, synthetix and feePool are assigned values in the constructor.",,,1.0,0.0,1.0,"
"
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,Depot.withdrawMyDepositedSynths,0.0,"Not REE, synth is assigned a value in the constructor.",,,1.0,0.0,1.0,"
"
0x15ed8dcd6d5d7c9e66a28cb70673389a5dc4fcf5,SynthetixEscrow.vest,0.0,It is not REE; synthetix is assigned a value in the constructor.,,,1.0,0.0,1.0,"
"
0x1963737af12d3649f6f319fb64af2aa29f7256b7,MessierAnonymity.sendRewardtoPool,0.0,"Not REE, a private function, called only by two functions modified by nonReentrant.",1.0,,,0.0,1.0,"
"
0x19f259affad4eab74ee306f709044b2c8145f692,Third_Degree_Burn.ReleaseLP,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,-- Function transfer always return True
0x1b1a4586fd99f7e044868ac8e5e91eac4863149b,yUSDT.withdraw,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,"
"
0x1ba35631c69a1363769d2b3e4a9d5c7020b3e520,yUSDC.withdraw,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,"
"
0x1bd367eeb05d9c7f8b5ba488df1878d9b983ebfd,Crowdsale.fallback,0.0,"It is not REE, send has a gas limit; tokenReward is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,-- Reason for no UX: tokenreward.transfer() does not return any value
0x1c3f78372a8c3e01970b85e1b26b885803011da3,yDAI.withdraw,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,"
"
0x1c57481dc2e2b987b2f012e9d3cc4cbbecd7c116,yTUSD.withdraw,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,"
"
0x1d86a854da490ff74dedc7abe281fb468f8c19ee,MultiVesting.clearAll,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,-- Reason for no RE: modifier onlyOwner
0x1d9fe29aec8852d7a32ac26b695c258840feba15,InterestFinal.payout,0.0,Not REE; (msg.sender == creator || msg.sender == Owner0 || msg.sender == Owner1).,1.0,,,0.0,1.0,"
"
0x1da73fc09ea07781482994036a0eecc7e6952dfb,TydoIco.buy,0.0,"It is not REE, the token is assigned a value in the constructor.",,,1.0,0.0,1.0,"
"
0x2268003d92ff03be6ca6da029f8d8127fd2f617e,ShortOrder.claimDonations,0.0,"Not REE, only Admin.",1.0,,,0.0,1.0,-- Reason for no RE: money is being sent to admin
0x23ed5bd2dbf560926312cad48653a027af0b6e11,yUSDC.withdraw,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,"
"
0x24a57f642948e36e8f0ce0a4b3b940cbfe14bd4c,ICO.buyTokens,0.0,"Not REE, if (msg.sender != owner) throw;.",1.0,,,0.0,1.0,-- No RE: state vars changed after external call has no impact on the execution of external call
0x25067272880fa0e49f1cebc988a2eed8485343a6,Wallet.sendTo,0.0,"Not REE, admin.",1.0,,,0.0,1.0,-- Reason for no RE: modifier admin
0x25ad23adf5da60190d5f44297ab7d7ab147ad9db,Sandwich._lockLiquidityForever,0.0,"It’s not REE, uniswapV2Pair is assigned a value in the constructor.",,,1.0,0.0,1.0,"
"
0x2628e13a3cbdc52ed96b4b8d6b1041d3ef3a409e,EasySmartolution.addParticipant,1.0,It is REE.,,,,0.0,1.0,-- Reason for no RE: No state changes after external call
0x26436e73fdd02adde8ae7ab61fa660d6f7926e6f,Crowdsale.buyTokens,0.0,"It is not REE, the transfer has a gas limit; the token is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,"
"
0x284b0f2f49d072836db87dd25d0623cd2f622bb1,DesTokenSale.finishPhase,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,-- Reason for no RE: onlyOwner modifier
0x287fda15f8f002e5df9f536f10bbfc0816960f36,EncryptedToken.fallback,0.0,"It's not REE, send has a gas limit.",,1.0,,0.0,1.0,"
"
0x28f1135e43e61ebf303c8f1f9beef4f6a00dcb34,XC.unlock,0.0,"It is not REE; xcPlugin is assigned values in init and setXCPlugin. One function is called by the constructor, and one function has onlyAdmin protection; the token is hardcoded in the init function.",,,1.0,0.0,1.0,-- Reason for not RE: state variable lockBalance gets updated after external call. However there is no dependency on that state variable.
0x2934443c1749dcc0cdcabbd77098eea31d2ea6c3,xSNXCore.mintWithSnx,0.0,"It is not REE, snxAddress is assigned a value in the constructor.",,,1.0,0.0,1.0,"
"
0x2934443c1749dcc0cdcabbd77098eea31d2ea6c3,xSNXCore.withdrawFees,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,"
"
0x2980b7c0c8e1a2c0bdecff55cde9e3576aaf9eaf,PiZZa.pullResolves,0.0,"It is not REE, resolveToken is assigned a value in the constructor.",,,1.0,0.0,1.0,-- no UX: transfer always returns true
0x2aa216f8126190fe5610b1b6c3c4835d1b07c8c8,BoomstarterPresale.buy,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,"
"
0x2daae64cc8516187c9d2ab209f3faa2f83b246e1,Moloch.sponsorProposal,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,"
"
0x2daae64cc8516187c9d2ab209f3faa2f83b246e1,Moloch.unwrapShares,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,"
"
0xd3efa0d59dccd79a8f2011f5adf527e78f1f68b4,EncryptedToken.fallback,0.0,"Not REE, send has a gas limit.",,1.0,,0.0,1.0,"
"
0x3085c9403871c00f7fd2e84dac1bdaa05f5f652e,PreICOProxyBuyer.claim,0.0,"Not REE, the crowdsale is assigned in setcrowdsale, which is a function for only owner.",,,1.0,0.0,1.0,"
"
0x30919c5c5c7727eea89b110d7258cbb36d541377,Crowdsale.safeWithdrawal,0.0,"It's not REE, send has a gas limit; tokenReward is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,"
"
0x35d7bbe9012b5a93ecdc5eef53ab9d143542abc7,DoublePoggerino.burnLiquidity,0.0,It is not REE; subclass contract assignment is fine from the perspective of the parent contract.,1.0,,,0.0,1.0,-- no UX: transfer() always return true
0x3775876e537df71b60061151b39bcfb638f832f5,Staking.harvest,0.0,"Not REE, nonReentrant.",1.0,,,0.0,1.0,"
"
0x38721079a72030ab1817fb9e1aaa86ae0d08356f,Investment.addToPool,0.0,Not REE.,,,1.0,0.0,1.0,Function transfer always return true
0x3a2fd07ec2ad6f355f93af695a7cf858f5967b78,MTVote.onTokenReceived,0.0,"Not REE, require(msg.sender == TVTokenAddress);.",1.0,,,0.0,1.0,No UX: TVToken(TVTokenAddress).transfer(wallet; _value); --> returns boolean and the return value is not checked Reentrancy vulnerability is not there because of the line --> require(msg.sender == TVTokenAddress); the function can be called by only one address ie                 TVTokenAddress. Constructor() is setting the address. We are assuming that the node deploying the contract is non-malicious
0x3ab4a46beae2a0b025eeed54db05819814ff287a,CloneFarmFarmer.hijackClones,0.0,"Not REE, send has a gas limit.",,1.0,,0.0,1.0,"
"
0x3c9bdc41ef0c823a43bd16fe2392a9217dc70215,LiquidityPool.addLiquidity,0.0,"It is not REE, pampToken and uniswapV2 are assigned values in the constructor.",,,1.0,0.0,1.0,"
"
0x44f2f79343ac7244c09e0189df05588524a86515,IOU.withdraw,0.0,"Not REE, the token is assigned a value during declaration.",,,1.0,0.0,1.0,-- No RE: no state changes after external call -- No UX: token.transfer() does not return any value; so no need to check
0x479cbe1f6a7fa4d7e304ae983803c46e85ced870,Slaughter3D.DivsToRefundpot,0.0,"It is not REE, SPASM_ and p3dContract are hardcoded at the declaration.",,,1.0,0.0,1.0,In the above code snippet of the contract the line 'SPASM_.disburse.value(base)();' makes an external contract call to the 'disburse' function of the 'SPASM_' contract and transfer the ether to it using '.value(base)'. This line does not check the return value of the external call. It's important to check the return values of the external calls. When transferring the  Ether ; to ensure that the call was successful. If the external call fails; it can lead to unexpected behavior in the contract. We need to check the return value and handle any potential errors or failures. Reason for not Reentrancy:- SPASM_.disburse.value(base)(); ; base depends upon dividends; dividends does not depend upon the state variables changed after external call (Refundpot; Jackpot)
0x47f8c173083af430f4507124b63db55296500baf,Deal.destroyCampaign,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,-- No RE --> because of onlyOwner modifier -- UX --> token.transfer() returns boolean
0x4c60e311d8fba04e313f7e7b3dec61b3028726d1,EtherWorldCup.pullRipCord,0.0,"It's not REE, it's Administrator.",1.0,,,0.0,1.0,"
"
0x4c60e311d8fba04e313f7e7b3dec61b3028726d1,EtherWorldCup.register,0.0,"It is not REE, but a lock constituted by playerRegistered[_customerAddress].",1.0,,,0.0,1.0,"
"
0x530a9cceee0c45f58229ae5c256e414e6df957ad,ABIO_BaseICO.fallback,0.0,Not REE.,1.0,,,0.0,1.0,"
"
0x575d8909d7fef2561ef8c2114d80b736fb77cbb6,ABChainNetContract_v5.rtbPaymentsProcessing,0.0,"It is not REE, the tokenAddress is assigned a value during declaration.",,,1.0,0.0,1.0,-- Reason for no RE: ABChainRTBtoken(tokenAddress).transfer is given and it does not have any external calls-- Reason for no UX: ABChainRTBtoken(tokenAddress).transfer always return true; no need to check
0x589fbf3d4168518b8b849b7eedfdb719407900ca,AirDropLight.transferDirect,0.0,"It is not REE, recipients[_recipient] constitute the lock.",1.0,,,0.0,1.0,"-- Reason for not RE: State variables grandTotalClaimed changed after the external call has no impact on the execution of transfer function. """
0x5b463c4e19358b4eaf010cf24244bf140541a63e,TokenERC20.sell,0.0,"Not REE, send has a gas limit.",,1.0,,0.0,1.0,"
"
0x62a03c868c959386b2df7f266e79bc711fb92398,BatchTransfer.batchTransfer,0.0,"Not REE, onlyOwnerOrAdmin.",1.0,,,0.0,1.0,-- Not reentrant because of modifier onlyOwnerOrAdmin-- Not UX because transfer function defined in token contract does not return any value
0x62b01d0aeb16656aff7a7632c3a61c8b069a8928,TopInvest125.fallback,0.0,"Not REE, send has a gas limit.",,1.0,,0.0,1.0,-- Reason for not RE: PROMO account will get benefit; not attacker
0x675c807fe3cf4fcc51b5c739b4bb910b0009ccb1,OurBank.payout,0.0,"Not REE, if (msg.sender == creator || msg.sender == Owner0 || msg.sender == Owner1).",1.0,,,0.0,1.0,-- Reason for no RE: no state var. changes after external call
0x6a3f85f8a86e7b3de0269c20e9ab066dd57b8e21,AccRegCenter.transfertoacc,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,-- Reason for no RE: Modifier onlyOwner
0x6d84769b1e287a27f282a938c8110b22714dbf78,ABIO_BaseICO.fallback,0.0,Not REE.,,,1.0,0.0,1.0,"-- No UX: abioToken.transfer does not return any value as per declaration in ""interface ABIO_Token"""
0x71d57fc11e9d85d8ce2b5acc9019af399bf0cbcb,LockToken.release,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,-- Reason for no RE: modifier onlyOwner -- Reason for UX: function token_reward.transfer() returns boolean value
0x7a5c92aa4deff4f784a7149e26ba96e77f3f0635,Contagion.Sort,0.0,"It's not REE, send has a gas limit.",,1.0,,0.0,1.0,In the above code snippet the line 'owner.send(feecounter)' address without checking the return value of the function 'send' function. This is a potential issue because the function 'send' it return a Boolean value indicating whether the transfer was successful or not. It failed to check  this return value could lead to unintended consequences if the transfer fails. i.e. if the owner contract does't have a fallback function. To counter or prevent we need to check the return value of the 'send' function and handle failure appropriately.
0x7d09edb07d23acb532a82be3da5c17d9d85806b4,PoCGame.donateToWhale,0.0,"Not REE, the whale is assigned a value in the constructor.",,,1.0,0.0,1.0,-- Reason for no RE: whale.call.value sends amount to whale contract. it does not depend on any state variable
0x7d7dde4b196a237879e448fc4b69b8647c124932,Utopium.Optin,0.0,"Not REE, if (msg.sender == owner).",1.0,,,0.0,1.0,"
"
0x7e433aee8090ee2c8ee3e6aaedfde1b76d776ace,LockToken.release,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,-- No RE --> because of onlyOwner modifier -- It has UX; as transfer can return false
0x82cc62a5441c4df93acf0d2cf63e25060289e847,zeroXWrapper.zeroXSwap,0.0,It’s not REE.,,,,0.0,1.0,Reentrancy Vulnerability :- The above contract function does not have reentrancy vulnerability as it calls 'forwarder' contract and emits the result of the call; but it doesn't make any additionally state changes or external calls that could be exploited by an attacker for reentrancy.
0x849019a489c3c26c7a7668e468be81a4d132781f,SimpleDeposit.RefundDeposit,0.0,"Not REE, send has a gas limit.",,1.0,,0.0,1.0,"
"
0x88355a32a8c5cc399aa09b9d21ebcba935ae5d2f,BankWallet.fund,0.0,"Not REE, onlyAuthorized.",1.0,,,0.0,1.0,-- Reason for no RE: No state changes after external call
0x887e4f25db63b079dffed24283f0470b0704b8e8,TheWarBlueNation.Sort,0.0,"Not REE, send has a gas limit.",,1.0,,0.0,1.0,Reason for not reentrancy:
0x8c73696a453f67ea5b7e5f2cd58ca0ad72ecaaeb,TokenLock.release,0.0,"Not REE, ownerOnly.",1.0,,,0.0,1.0,-- Reason for no RE: Modifier ownerOnly
0x91d7e5895f7a635ba8bdce9e2be544e5e527135f,Crowdsale.checkGoalReached,0.0,"It's not REE, tokenReward is assigned a value in the constructor.",,,1.0,0.0,1.0,"
"
0x950ad688ade27bcaa6e890e9d86ba5a9293f4d8c,Crowdsale.checkGoalReached,0.0,"It is not REE, tokenReward is assigned a value in the constructor.",,,1.0,0.0,1.0,"
"
0x969f99f3d3cb00d84634ec1ef2b8ba506955b1f7,WeSendReserve.release,0.0,"Not REE, isAuthorized.",1.0,,,0.0,1.0,-- Reason for UX: token.transfer returns boolean -- Reason for no RE: modifier isAuthorized
0x9accb8fe0d9df53ce0040bc78d1294e1f55dcc88,MyAdvancedToken8.sell,0.0,"It is not REE, send has a gas limit.",,1.0,,0.0,1.0,"
"
0x9d24335fd550568615bc81f8c0aa72aaa70ab93a,TheWarRedNation.Sort,0.0,"It's not REE, send has a gas limit.",,1.0,,0.0,1.0,"
"
0xa97e65fbb5d1f9698a78f55e3a3529a74417ae69,GOOGTokenSale.fallback,0.0,"Not REE, the tokenContract is assigned a value in the constructor.",,,1.0,0.0,1.0,-- Reason for no UX: require statements check the return value
0xa9b6e2381dee5dd4ea5d6e31e11b3c6f10d35afc,UserContract.Initiate,0.0,Not REE.,,,,0.0,1.0,-- No RE: No externall call in token.transfer() function (In contract Wrapped_Ether)
0xaa3f3485b5a009b34308707aa8e4c6f6c8e4dd49,IOU.withdraw,0.0,"Not REE, the token is hardcoded at the time of declaration.",,,1.0,0.0,1.0,-- Reason for no RE: No state changes after external call (one function from 1. msg.sender.transfer(eth_to_refund);     2. token.transfer(msg.sender; iou_to_withdraw); will be executed. Not both.)
0xac355d24591c01ad44f8da36ec7629d275a2c6e1,ShortOrder.claimDonations,0.0,"Not REE, only Admin.",1.0,,,0.0,1.0,The first call to admin.transfer() is a legit call and in case of any failure; the transaction will get revert. However; the second call Token(tokenUser[0]).transfer() is user defined and returns a bool value instead of reverting the transaction. Hence; any failure in this transaction will return normally with a false bool value which is not at all checked in the above code. Instead ; the state variables are changed without checking the Token(tokenUser[0]).transfer() return value. Hence; unchecked call return value bug is present. Secondly; the potential candidate for reentrancy bug is Token(tokenUser[0]).transfer().But; it is only calling admin address for the transaction to occur. This admin address is the owner of the contract as defined in the constructor of the class. This address is fixed and can not be changed by the attacker which prohibits the reentrancy bug.
0xacb8a40073d0a7e041b29381debcafc2b538cd7c,DepositContract.RefundDeposit,0.0,Not REE.,,,,0.0,1.0,-- Reason for No RE: State changes after external call does not affect the excution of add.send
0xad43e8ba48a974e6dc5a385d87fc8cd1fe94a408,Crowdsale.fallback,0.0,"Not REE, send has a gas limit, tokenReward is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,"
"
0xaf7aea249098f2c2f50cc11d4000ccf798194373,ZTCrowdsale.fallback,0.0,"Not REE, send has a gas limit; ztToken is assigned in the constructor.",,1.0,1.0,0.0,1.0,-- Reason for no RE: state vars changed after external call has no impact on the execution of external call
0xafb7ae966a9a7801beace4a7d5bbee91d860f616,Token.buyTokens,0.0,"It is not REE; the token is assigned in the tokenAddress function, which is marked with onlyowner.",,,1.0,0.0,1.0,"
"
0xafc36ac17c5d84504064f944b27292e795d03398,IOU.withdraw,0.0,"It is not REE, the token is hardcoded at the time of declaration.",,,1.0,0.0,1.0,"
"
0xb25cef763846fe25185de5cf970fdf2ac13fc16d,Crowdsale.fallback,0.0,"Not REE, send has gas limit; tokenReward is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,-- state changes after external call are not important becuase the variable soldTokensCounter is not used anywhere in the function inside if; require; or assert
0xb588530e3956d9787b0429244ca360f566ff3301,BaseUnilotGame.revoke,0.0,"Not REE, only Administrator.",1.0,,,0.0,1.0,-- Reason for no RE: modifier onlyAdministrator
0xb69a50f98a49f85fd2042813e1647b02dc43d71f,EbyteDistribution.fallback,0.0,"It is not REE, ebyteToken is assigned a value in the constructor.",,,1.0,0.0,1.0,-- Reason for UX: ebyteToken.transfer() returns boolean-- Reason for no RE: state variables changed after external call has no impact on external call
0xc4529ea3f838a7e27a673a87bfe844a5b8b1e4e2,InterestTest.payout,0.0,"Not REE, if ((msg.sender == creator || msg.sender == Owner0 || msg.sender == Owner1)).",1.0,,,0.0,1.0,"
"
0xc543afe640c8c7521beb6549be75f77b568f4590,GET111.fallback,0.0,"It is not REE, send has a gas limit; ADMIN is hardcoded at declaration.",,1.0,1.0,0.0,1.0,Not reentrant because money is sent to ADMIN. We are assuming that ADMIN is not malicious.
0xc601f6938c75c4ca03eaad570701d86e607771db,Contagion.Sort,0.0,"It's not REE, send has a gas limit.",,1.0,,0.0,1.0,Reason for not reentrancy: 1. Variable feecounter is local; 2. Function Sort is internal
0xc64fd3ff188c4f1f1e34bbff54f67d8c88175696,LockingContract.releaseTokens,0.0,"Not REE, require(msg.sender == owner || msg.sender == _beneficiary);",1.0,,,0.0,1.0,"
"
0xc67c1f88f31e724b137a057292e55cb42a5f3241,Crowdsale.fallback,0.0,"Not REE, send has a gas limit; tokenReward is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,-- Reason for no RE: state var. amountLeft has no impact on the execution of transfer
0xceffdb3f1aed635e94a0b565239d4353ae44c744,BancorBuyer.buy,0.0,It's not REE; transfers have a gas limit.,,1.0,,0.0,1.0,"
"
0xd1265bfe57597840f89971b7e67538bac780f9ad,DesTokenSale.finishPhase,0.0,"Not REE, only owner.",1.0,,,0.0,1.0,-- Reason for not reentrancy: onlyOwner modifier
0xd1a3ace46c98e028229974217201433e7163c4dd,HelpMeTokenPart1.fallback,0.0,"It's not REE, transfer has a gas limit.",,1.0,,0.0,1.0,Above function has Unchecked Call Return Value as the return value of thankyou() function is not checked.
0xd40c2daf2b55fbf5532ddeada3febe738f431dfe,EncryptedToken.fallback,0.0,"It's not REE, send has a gas limit.",,1.0,,0.0,1.0,Not reentrant because the function is fallback function and we are sending msg.value to owner; in the next reentrant call the attacker has to send money in order for owner to receive it
0xd89098a767a3fe39410d6fa7d72b6ebc5eaae247,LockingContract.releaseTokens,0.0,"It is not REE, require(msg.sender == owner || msg.sender == _beneficiary);.",1.0,,,0.0,1.0,-- Reason for no RE: stat var totalTokens which is changed after external call has no impact on the execution of the external call
0xdb8459034fc97eed3d43172909e1d353e9f4d282,URUNCrowdsale.manualTokenTransfer,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,Reason for UX: Token.transfer returns boolean value -- Reason for no RE: Modifier onlyOwner
0xde39859237f5ff14926b194c3ef72e3213d3c665,Dex.trade,1.0,It can be REE but looks risk-free.,,,,0.0,1.0,"
"
0xde39859237f5ff14926b194c3ef72e3213d3c665,Dex.tradeRoutes,1.0,"It can be REE, but it seems to have no risk.",,,,0.0,1.0,-- Reason for no RE: Calling the function twice using reentrancy vuln and calling the function twice using normal call has same impact
0xdef5dce5781220efda3f5235cc6e5dd5a08e22bd,SmcdCoin.fallback,0.0,"It's not REE, send has a gas limit.",,1.0,,0.0,1.0,"
"
0xe2a88ab6dc9da8e017c0a529d731558adc4183d5,Receiver.forward,0.0,It is not REE.,,,,0.0,1.0,"
"
0xe66888a40b5e6271006e2a0de47cfc70ca0ba4fa,AirdropController.airdropManually,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,-- No RE --> because of onlyOwner modifier -- UX --> token.transfer() returns boolean
0xebbe139afc4f0706cc928311b6748701b6549a31,Contagion.Sort,0.0,"It is not REE, send has a gas limit.",,1.0,,0.0,1.0,Reason for not reentrancy: 1. Variable feecounter is local; 2. Function Sort is internal
0xec8f9a0de90487e7aa172fe5291fd19ad7163aa1,BDSMAirdrop.tokensBack,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,-- No RE --> because of onlyOwner modifier-- No UX: transfer function throws exception on failing
0xec94d178d97bac527fdcd4b3d4bf41b57d640c5b,Crowdsale.fallback,0.0,"Not REE, send has a gas limit; tokenReward is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,No comments mentioned in the answer
0xecfe4b7afc47260cb590d3043d3f790a61bb7910,EbyteDistribution.fallback,0.0,It is not REE; ebyteToken is assigned a value in the constructor.,,,1.0,0.0,1.0,-- No RE: state changes after external call has no impact on execution of transfer function -- UX: ebyteToken.transfer() returns boolean value
0xf2d54d17d3dc3810a0d62042a0b381df122ed162,BeercoinICO.fallback,0.0,"It is not REE, beercoin was hardcoded in the statement.",,,1.0,0.0,1.0,-- Reason for no UX: beercoin.transfer() does not return any value
0xf796eb0a13b5a75e94f13fd14fb66b2b8007f69b,CoinByInsomniaTokenSale.buyTokens,0.0,"It's not REE, the tokenContract is assigned a value in the constructor.",,,1.0,0.0,1.0,"
"
0xfb0f7189b354660e649ae14261a9fe0e8febf369,CandyContract.collectBack,0.0,"Not REE, onlyOwner.",1.0,,,0.0,1.0,Reason for no RE: modifier onlyOwner
0xfcc74ab9a02d55b9b1d0c378547a6bcfad7597c9,WashCrowdsale.fallback,0.0,"Not REE, send has a gas limit; tokenReward is assigned a value in the constructor.",,1.0,1.0,0.0,1.0,-- It has unchecked call return value because of the line beneficiary.send(ethamount);
0xfcdd6d4f2cfb7cea900c4a57282cffcf3e41e068,Interestv3.payout,0.0,"It is not REE, if ((msg.sender == creator || msg.sender == Owner0 || msg.sender == Owner1)).",1.0,,,0.0,1.0,"
"
,,,nan,231.0,138.0,214.0,,,